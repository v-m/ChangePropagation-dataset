<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="LCR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="32633">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_9" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="((clazz.isPrimitive()) || (clazz.isEnum()))" to="((clazz.isPrimitive()) &amp;&amp; (clazz.isEnum()))" />
    <mutant id="mutant_49" viable="true" in="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" from="(ruleList != null) &amp;&amp; (!(ruleList.isEmpty()))" to="!(ruleList.isEmpty())" />
    <mutant id="mutant_8" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="((clazz.isPrimitive()) || (clazz.isEnum()))" to="(clazz.isEnum())" />
    <mutant id="mutant_48" viable="true" in="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()" from="((extendsFrom) != null) &amp;&amp; (!(extendsFrom.isEmpty()))" to="!(extendsFrom.isEmpty())" />
    <mutant id="mutant_5" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="((clazz.isPrimitive()) || (clazz.isEnum()))" to="(clazz.isPrimitive())" />
    <mutant id="mutant_4" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)" from="(actualClass != null) &amp;&amp; (actualClass.isArray())" to="(actualClass != null) || (actualClass.isArray())" />
    <mutant id="mutant_7" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="((clazz.isPrimitive()) || (clazz.isEnum()))" to="false" />
    <mutant id="mutant_6" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="((clazz.isPrimitive()) || (clazz.isEnum()))" to="true" />
    <mutant id="mutant_41" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) &amp;&amp; (property.containsChild(propertyName))" to="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) || (property.containsChild(propertyName))" />
    <mutant id="mutant_40" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) &amp;&amp; (property.containsChild(propertyName))" to="property.containsChild(propertyName)" />
    <mutant id="mutant_43" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) &amp;&amp; (property.containsChild(propertyName))" to="false" />
    <mutant id="mutant_42" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) &amp;&amp; (property.containsChild(propertyName))" to="true" />
    <mutant id="mutant_45" viable="true" in="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()" from="((extendsFrom) != null) &amp;&amp; (!(extendsFrom.isEmpty()))" to="true" />
    <mutant id="mutant_44" viable="true" in="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()" from="((extendsFrom) != null) &amp;&amp; (!(extendsFrom.isEmpty()))" to="((extendsFrom) != null) || (!(extendsFrom.isEmpty()))" />
    <mutant id="mutant_47" viable="true" in="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()" from="((extendsFrom) != null) &amp;&amp; (!(extendsFrom.isEmpty()))" to="(extendsFrom) != null" />
    <mutant id="mutant_46" viable="true" in="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()" from="((extendsFrom) != null) &amp;&amp; (!(extendsFrom.isEmpty()))" to="false" />
    <mutant id="mutant_50" viable="true" in="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" from="(ruleList != null) &amp;&amp; (!(ruleList.isEmpty()))" to="(ruleList != null) || (!(ruleList.isEmpty()))" />
    <mutant id="mutant_1" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)" from="(actualClass != null) &amp;&amp; (actualClass.isArray())" to="true" />
    <mutant id="mutant_0" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)" from="(actualClass != null) &amp;&amp; (actualClass.isArray())" to="actualClass != null" />
    <mutant id="mutant_3" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)" from="(actualClass != null) &amp;&amp; (actualClass.isArray())" to="actualClass.isArray()" />
    <mutant id="mutant_2" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)" from="(actualClass != null) &amp;&amp; (actualClass.isArray())" to="false" />
    <mutant id="mutant_38" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(property != null) &amp;&amp; (!(property.isEmpty()))" to="property != null" />
    <mutant id="mutant_37" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(property != null) &amp;&amp; (!(property.isEmpty()))" to="!(property.isEmpty())" />
    <mutant id="mutant_39" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)) &amp;&amp; (property.containsChild(propertyName))" to="com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(targetPd)" />
    <mutant id="mutant_30" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(innerProperty == null) || (innerProperty.isComplexType())" to="innerProperty == null" />
    <mutant id="mutant_32" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(innerProperty == null) || (innerProperty.isComplexType())" to="false" />
    <mutant id="mutant_31" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(innerProperty == null) || (innerProperty.isComplexType())" to="true" />
    <mutant id="mutant_34" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(property != null) &amp;&amp; (!(property.isEmpty()))" to="(property != null) || (!(property.isEmpty()))" />
    <mutant id="mutant_33" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(innerProperty == null) || (innerProperty.isComplexType())" to="innerProperty.isComplexType()" />
    <mutant id="mutant_36" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(property != null) &amp;&amp; (!(property.isEmpty()))" to="false" />
    <mutant id="mutant_35" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(property != null) &amp;&amp; (!(property.isEmpty()))" to="true" />
    <mutant id="mutant_27" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)" from="(Set.class.equals(ret)) || (Collection.class.equals(ret))" to="false" />
    <mutant id="mutant_26" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)" from="(Set.class.equals(ret)) || (Collection.class.equals(ret))" to="true" />
    <mutant id="mutant_29" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" from="(innerProperty == null) || (innerProperty.isComplexType())" to="(innerProperty == null) &amp;&amp; (innerProperty.isComplexType())" />
    <mutant id="mutant_28" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)" from="(Set.class.equals(ret)) || (Collection.class.equals(ret))" to="(Set.class.equals(ret)) &amp;&amp; (Collection.class.equals(ret))" />
    <mutant id="mutant_21" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)" from="(sourcePd != null) &amp;&amp; ((sourcePd.getReadMethod()) != null)" to="sourcePd != null" />
    <mutant id="mutant_20" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)" from="(sourcePd != null) &amp;&amp; ((sourcePd.getReadMethod()) != null)" to="(sourcePd.getReadMethod()) != null" />
    <mutant id="mutant_23" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)" from="(sourcePd != null) &amp;&amp; ((sourcePd.getReadMethod()) != null)" to="false" />
    <mutant id="mutant_22" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)" from="(sourcePd != null) &amp;&amp; ((sourcePd.getReadMethod()) != null)" to="true" />
    <mutant id="mutant_25" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)" from="(Set.class.equals(ret)) || (Collection.class.equals(ret))" to="Set.class.equals(ret)" />
    <mutant id="mutant_24" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)" from="(sourcePd != null) &amp;&amp; ((sourcePd.getReadMethod()) != null)" to="(sourcePd != null) || ((sourcePd.getReadMethod()) != null)" />
    <mutant id="mutant_16" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) || (SpojoUtils.defaultImmutableClasses.contains(clazz))" to="SpojoUtils.defaultImmutableClasses.contains(clazz)" />
    <mutant id="mutant_15" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) || (SpojoUtils.defaultImmutableClasses.contains(clazz))" to="((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))" />
    <mutant id="mutant_18" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) || (SpojoUtils.defaultImmutableClasses.contains(clazz))" to="true" />
    <mutant id="mutant_17" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) || (SpojoUtils.defaultImmutableClasses.contains(clazz))" to="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) &amp;&amp; (SpojoUtils.defaultImmutableClasses.contains(clazz))" />
    <mutant id="mutant_19" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz))) || (SpojoUtils.defaultImmutableClasses.contains(clazz))" to="false" />
    <mutant id="mutant_52" viable="true" in="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" from="(ruleList != null) &amp;&amp; (!(ruleList.isEmpty()))" to="false" />
    <mutant id="mutant_51" viable="true" in="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" from="(ruleList != null) &amp;&amp; (!(ruleList.isEmpty()))" to="true" />
    <mutant id="mutant_10" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz)))" to="(Number.class.isAssignableFrom(clazz))" />
    <mutant id="mutant_54" viable="true" in="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" from="(source != null) &amp;&amp; (target != null)" to="target != null" />
    <mutant id="mutant_53" viable="true" in="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" from="(ruleList != null) &amp;&amp; (!(ruleList.isEmpty()))" to="ruleList != null" />
    <mutant id="mutant_12" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz)))" to="true" />
    <mutant id="mutant_56" viable="true" in="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" from="(source != null) &amp;&amp; (target != null)" to="true" />
    <mutant id="mutant_11" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz)))" to="(((clazz.isPrimitive()) || (clazz.isEnum())) &amp;&amp; (Number.class.isAssignableFrom(clazz)))" />
    <mutant id="mutant_55" viable="true" in="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" from="(source != null) &amp;&amp; (target != null)" to="(source != null) || (target != null)" />
    <mutant id="mutant_14" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz)))" to="((clazz.isPrimitive()) || (clazz.isEnum()))" />
    <mutant id="mutant_58" viable="true" in="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" from="(source != null) &amp;&amp; (target != null)" to="source != null" />
    <mutant id="mutant_13" viable="true" in="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)" from="(((clazz.isPrimitive()) || (clazz.isEnum())) || (Number.class.isAssignableFrom(clazz)))" to="false" />
    <mutant id="mutant_57" viable="true" in="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" from="(source != null) &amp;&amp; (target != null)" to="false" />
  </mutants>
</mutation>
