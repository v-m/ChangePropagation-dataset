<?xml version="1.0" encoding="UTF-8"?>
<MutationGraphKFold>
  <dependencies>
    <graph>/home/vince/datasetSync/musco/graphs/g1/sonar/callgraph_cha.graphml</graph>
    <mutations>/home/vince/PropagationAnalysis-dataset/musco/sonar/mutations/main/ABS/</mutations>
  </dependencies>
  <config>
    <nbmut>288</nbmut>
    <kfold>10</kfold>
    <ksp>1</ksp>
    <init-weight>0.0</init-weight>
    <algo>dicho</algo>
  </config>
  <execution>
    <mutation-split>
      <k id="0">
        <mutant id="mutant_2847" />
        <mutant id="mutant_1937" />
        <mutant id="mutant_1558" />
        <mutant id="mutant_1120" />
        <mutant id="mutant_2540" />
        <mutant id="mutant_463" />
        <mutant id="mutant_607" />
        <mutant id="mutant_870" />
        <mutant id="mutant_2740" />
        <mutant id="mutant_2626" />
        <mutant id="mutant_178" />
        <mutant id="mutant_666" />
        <mutant id="mutant_966" />
        <mutant id="mutant_2873" />
        <mutant id="mutant_231" />
        <mutant id="mutant_241" />
        <mutant id="mutant_675" />
        <mutant id="mutant_1100" />
        <mutant id="mutant_971" />
        <mutant id="mutant_447" />
        <mutant id="mutant_2896" />
        <mutant id="mutant_256" />
        <mutant id="mutant_1599" />
        <mutant id="mutant_2479" />
        <mutant id="mutant_1958" />
        <mutant id="mutant_2719" />
        <mutant id="mutant_1045" />
        <mutant id="mutant_1895" />
      </k>
      <k id="1">
        <mutant id="mutant_2507" />
        <mutant id="mutant_1732" />
        <mutant id="mutant_460" />
        <mutant id="mutant_2851" />
        <mutant id="mutant_1158" />
        <mutant id="mutant_2168" />
        <mutant id="mutant_2195" />
        <mutant id="mutant_1031" />
        <mutant id="mutant_2096" />
        <mutant id="mutant_2223" />
        <mutant id="mutant_933" />
        <mutant id="mutant_1030" />
        <mutant id="mutant_1574" />
        <mutant id="mutant_74" />
        <mutant id="mutant_2853" />
        <mutant id="mutant_1099" />
        <mutant id="mutant_518" />
        <mutant id="mutant_1495" />
        <mutant id="mutant_1129" />
        <mutant id="mutant_230" />
        <mutant id="mutant_661" />
        <mutant id="mutant_61" />
        <mutant id="mutant_2637" />
        <mutant id="mutant_1914" />
        <mutant id="mutant_378" />
        <mutant id="mutant_369" />
        <mutant id="mutant_1698" />
        <mutant id="mutant_1271" />
      </k>
      <k id="2">
        <mutant id="mutant_1376" />
        <mutant id="mutant_2339" />
        <mutant id="mutant_779" />
        <mutant id="mutant_192" />
        <mutant id="mutant_1148" />
        <mutant id="mutant_2819" />
        <mutant id="mutant_427" />
        <mutant id="mutant_1275" />
        <mutant id="mutant_1241" />
        <mutant id="mutant_1216" />
        <mutant id="mutant_1202" />
        <mutant id="mutant_172" />
        <mutant id="mutant_2471" />
        <mutant id="mutant_334" />
        <mutant id="mutant_1716" />
        <mutant id="mutant_2612" />
        <mutant id="mutant_2156" />
        <mutant id="mutant_1949" />
        <mutant id="mutant_357" />
        <mutant id="mutant_1267" />
        <mutant id="mutant_2662" />
        <mutant id="mutant_1119" />
        <mutant id="mutant_1366" />
        <mutant id="mutant_2284" />
        <mutant id="mutant_2452" />
        <mutant id="mutant_589" />
        <mutant id="mutant_2166" />
        <mutant id="mutant_2785" />
      </k>
      <k id="3">
        <mutant id="mutant_189" />
        <mutant id="mutant_182" />
        <mutant id="mutant_638" />
        <mutant id="mutant_872" />
        <mutant id="mutant_2197" />
        <mutant id="mutant_2501" />
        <mutant id="mutant_1766" />
        <mutant id="mutant_1147" />
        <mutant id="mutant_2240" />
        <mutant id="mutant_671" />
        <mutant id="mutant_1860" />
        <mutant id="mutant_2332" />
        <mutant id="mutant_1938" />
        <mutant id="mutant_2866" />
        <mutant id="mutant_651" />
        <mutant id="mutant_2264" />
        <mutant id="mutant_2106" />
        <mutant id="mutant_2842" />
        <mutant id="mutant_1370" />
        <mutant id="mutant_1586" />
        <mutant id="mutant_2619" />
        <mutant id="mutant_2350" />
        <mutant id="mutant_1606" />
        <mutant id="mutant_526" />
        <mutant id="mutant_1943" />
        <mutant id="mutant_2502" />
        <mutant id="mutant_2220" />
        <mutant id="mutant_201" />
      </k>
      <k id="4">
        <mutant id="mutant_2340" />
        <mutant id="mutant_2810" />
        <mutant id="mutant_2788" />
        <mutant id="mutant_185" />
        <mutant id="mutant_762" />
        <mutant id="mutant_977" />
        <mutant id="mutant_832" />
        <mutant id="mutant_2549" />
        <mutant id="mutant_2844" />
        <mutant id="mutant_681" />
        <mutant id="mutant_209" />
        <mutant id="mutant_379" />
        <mutant id="mutant_901" />
        <mutant id="mutant_1417" />
        <mutant id="mutant_917" />
        <mutant id="mutant_621" />
        <mutant id="mutant_1931" />
        <mutant id="mutant_1142" />
        <mutant id="mutant_1082" />
        <mutant id="mutant_952" />
        <mutant id="mutant_161" />
        <mutant id="mutant_226" />
        <mutant id="mutant_1730" />
        <mutant id="mutant_1246" />
        <mutant id="mutant_1567" />
        <mutant id="mutant_508" />
        <mutant id="mutant_2012" />
        <mutant id="mutant_2347" />
      </k>
      <k id="5">
        <mutant id="mutant_1208" />
        <mutant id="mutant_434" />
        <mutant id="mutant_1016" />
        <mutant id="mutant_2715" />
        <mutant id="mutant_377" />
        <mutant id="mutant_206" />
        <mutant id="mutant_1891" />
        <mutant id="mutant_1247" />
        <mutant id="mutant_1137" />
        <mutant id="mutant_1622" />
        <mutant id="mutant_2509" />
        <mutant id="mutant_520" />
        <mutant id="mutant_788" />
        <mutant id="mutant_1901" />
        <mutant id="mutant_945" />
        <mutant id="mutant_2172" />
        <mutant id="mutant_631" />
        <mutant id="mutant_685" />
        <mutant id="mutant_167" />
        <mutant id="mutant_84" />
        <mutant id="mutant_2253" />
        <mutant id="mutant_1291" />
        <mutant id="mutant_2691" />
        <mutant id="mutant_1879" />
        <mutant id="mutant_1118" />
        <mutant id="mutant_1235" />
        <mutant id="mutant_352" />
        <mutant id="mutant_2317" />
      </k>
      <k id="6">
        <mutant id="mutant_2793" />
        <mutant id="mutant_1790" />
        <mutant id="mutant_326" />
        <mutant id="mutant_2599" />
        <mutant id="mutant_1273" />
        <mutant id="mutant_1947" />
        <mutant id="mutant_289" />
        <mutant id="mutant_2251" />
        <mutant id="mutant_441" />
        <mutant id="mutant_867" />
        <mutant id="mutant_1162" />
        <mutant id="mutant_823" />
        <mutant id="mutant_1411" />
        <mutant id="mutant_1733" />
        <mutant id="mutant_1710" />
        <mutant id="mutant_515" />
        <mutant id="mutant_124" />
        <mutant id="mutant_152" />
        <mutant id="mutant_2451" />
        <mutant id="mutant_2184" />
        <mutant id="mutant_732" />
        <mutant id="mutant_865" />
        <mutant id="mutant_67" />
        <mutant id="mutant_466" />
        <mutant id="mutant_2288" />
        <mutant id="mutant_2238" />
        <mutant id="mutant_414" />
        <mutant id="mutant_764" />
      </k>
      <k id="7">
        <mutant id="mutant_2232" />
        <mutant id="mutant_2834" />
        <mutant id="mutant_2182" />
        <mutant id="mutant_1956" />
        <mutant id="mutant_584" />
        <mutant id="mutant_1629" />
        <mutant id="mutant_2415" />
        <mutant id="mutant_2175" />
        <mutant id="mutant_348" />
        <mutant id="mutant_510" />
        <mutant id="mutant_723" />
        <mutant id="mutant_2364" />
        <mutant id="mutant_2470" />
        <mutant id="mutant_2102" />
        <mutant id="mutant_2561" />
        <mutant id="mutant_2515" />
        <mutant id="mutant_686" />
        <mutant id="mutant_2882" />
        <mutant id="mutant_1990" />
        <mutant id="mutant_1330" />
        <mutant id="mutant_1117" />
        <mutant id="mutant_455" />
        <mutant id="mutant_1883" />
        <mutant id="mutant_2048" />
        <mutant id="mutant_1416" />
        <mutant id="mutant_942" />
        <mutant id="mutant_1028" />
        <mutant id="mutant_344" />
      </k>
      <k id="8">
        <mutant id="mutant_134" />
        <mutant id="mutant_353" />
        <mutant id="mutant_222" />
        <mutant id="mutant_2808" />
        <mutant id="mutant_2797" />
        <mutant id="mutant_446" />
        <mutant id="mutant_2690" />
        <mutant id="mutant_2103" />
        <mutant id="mutant_1240" />
        <mutant id="mutant_2419" />
        <mutant id="mutant_1533" />
        <mutant id="mutant_114" />
        <mutant id="mutant_2522" />
        <mutant id="mutant_1988" />
        <mutant id="mutant_2506" />
        <mutant id="mutant_343" />
        <mutant id="mutant_207" />
        <mutant id="mutant_380" />
        <mutant id="mutant_2786" />
        <mutant id="mutant_341" />
        <mutant id="mutant_2346" />
        <mutant id="mutant_657" />
        <mutant id="mutant_2115" />
        <mutant id="mutant_422" />
        <mutant id="mutant_765" />
        <mutant id="mutant_454" />
        <mutant id="mutant_2668" />
        <mutant id="mutant_1249" />
      </k>
      <k id="9">
        <mutant id="mutant_627" />
        <mutant id="mutant_1707" />
        <mutant id="mutant_2823" />
        <mutant id="mutant_904" />
        <mutant id="mutant_2314" />
        <mutant id="mutant_1551" />
        <mutant id="mutant_168" />
        <mutant id="mutant_1723" />
        <mutant id="mutant_1712" />
        <mutant id="mutant_1939" />
        <mutant id="mutant_412" />
        <mutant id="mutant_443" />
        <mutant id="mutant_1595" />
        <mutant id="mutant_1577" />
        <mutant id="mutant_1965" />
        <mutant id="mutant_2160" />
        <mutant id="mutant_2631" />
        <mutant id="mutant_109" />
        <mutant id="mutant_879" />
        <mutant id="mutant_2000" />
        <mutant id="mutant_2534" />
        <mutant id="mutant_1248" />
        <mutant id="mutant_2313" />
        <mutant id="mutant_1854" />
        <mutant id="mutant_1568" />
        <mutant id="mutant_1245" />
        <mutant id="mutant_2575" />
        <mutant id="mutant_1221" />
        <mutant id="mutant_1149" />
        <mutant id="mutant_2207" />
        <mutant id="mutant_2582" />
        <mutant id="mutant_759" />
        <mutant id="mutant_514" />
        <mutant id="mutant_2838" />
        <mutant id="mutant_860" />
        <mutant id="mutant_2854" />
      </k>
    </mutation-split>
    <graph-mapping>
      <edge id="0" name="org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)&gt;org.sonar.core.cluster.NullQueue.enqueue(java.util.List)" />
      <edge id="1" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery()" />
      <edge id="2" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setComponentId(java.lang.Long)" />
      <edge id="3" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setIsLast(java.lang.Boolean)" />
      <edge id="4" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setStatus(java.lang.String)" />
      <edge id="5" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setVersion(java.lang.String)" />
      <edge id="6" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setCreatedAfter(java.lang.Long)" />
      <edge id="7" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setCreatedBefore(java.lang.Long)" />
      <edge id="8" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.setSort(org.sonar.core.component.db.SnapshotQuery$SORT_FIELD,org.sonar.core.component.db.SnapshotQuery$SORT_ORDER)" />
      <edge id="9" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getComponentId()" />
      <edge id="10" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getIsLast()" />
      <edge id="11" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getStatus()" />
      <edge id="12" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getVersion()" />
      <edge id="13" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getCreatedAfter()" />
      <edge id="14" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getCreatedBefore()" />
      <edge id="15" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getSortField()" />
      <edge id="16" name="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()&gt;org.sonar.core.component.db.SnapshotQuery.getSortOrder()" />
      <edge id="17" name="org.sonar.core.component.ComponentDto.getKey()&gt;org.sonar.core.component.ComponentDto.key()" />
      <edge id="18" name="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="19" name="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()&gt;org.sonar.core.component.ComponentDto.setId(java.lang.Long)" />
      <edge id="20" name="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()&gt;org.sonar.core.component.ComponentDto.hashCode()" />
      <edge id="21" name="org.sonar.core.component.ComponentDtoTest.is_root_project()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="22" name="org.sonar.core.component.ComponentDtoTest.is_root_project()&gt;org.sonar.core.component.ComponentDto.setModuleUuid(java.lang.String)" />
      <edge id="23" name="org.sonar.core.component.ComponentDtoTest.is_root_project()&gt;org.sonar.core.component.ComponentDto.isRootProject()" />
      <edge id="24" name="org.sonar.core.component.ComponentDtoTest.is_root_project()&gt;org.sonar.core.component.ComponentDto.setScope(java.lang.String)" />
      <edge id="25" name="org.sonar.core.component.ComponentDtoTest.is_root_project()&gt;org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)" />
      <edge id="26" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="27" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setId(java.lang.Long)" />
      <edge id="28" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setKey(java.lang.String)" />
      <edge id="29" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setDeprecatedKey(java.lang.String)" />
      <edge id="30" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setName(java.lang.String)" />
      <edge id="31" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setLongName(java.lang.String)" />
      <edge id="32" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)" />
      <edge id="33" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setScope(java.lang.String)" />
      <edge id="34" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setLanguage(java.lang.String)" />
      <edge id="35" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setDescription(java.lang.String)" />
      <edge id="36" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setPath(java.lang.String)" />
      <edge id="37" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setCopyResourceId(java.lang.Long)" />
      <edge id="38" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setParentProjectId(java.lang.Long)" />
      <edge id="39" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.setAuthorizationUpdatedAt(java.lang.Long)" />
      <edge id="40" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.getId()" />
      <edge id="41" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.key()" />
      <edge id="42" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.deprecatedKey()" />
      <edge id="43" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.name()" />
      <edge id="44" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.longName()" />
      <edge id="45" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.qualifier()" />
      <edge id="46" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.scope()" />
      <edge id="47" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.path()" />
      <edge id="48" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.language()" />
      <edge id="49" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.description()" />
      <edge id="50" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.parentProjectId()" />
      <edge id="51" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.getCopyResourceId()" />
      <edge id="52" name="org.sonar.core.component.ComponentDtoTest.setters_and_getters()&gt;org.sonar.core.component.ComponentDto.getAuthorizationUpdatedAt()" />
      <edge id="53" name="org.sonar.core.component.ComponentDtoTest.toString_does_not_fail_if_empty()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="54" name="org.sonar.core.component.ComponentDtoTest.toString_does_not_fail_if_empty()&gt;org.sonar.core.component.ComponentDto.toString()" />
      <edge id="55" name="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)&gt;org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,java.lang.String)" />
      <edge id="56" name="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String)" />
      <edge id="57" name="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,java.lang.String)" />
      <edge id="58" name="org.sonar.core.component.ComponentKeysTest.create_effective_key()&gt;org.sonar.core.component.ComponentKeys.createEffectiveKey(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)" />
      <edge id="59" name="org.sonar.core.component.ComponentKeysTest.create_effective_key()&gt;org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)" />
      <edge id="60" name="org.sonar.core.component.ComponentKeysTest.create_key_from_module_key_path_and_branch()&gt;org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="61" name="org.sonar.core.component.ComponentKeysTest.isValidBranchKey()&gt;org.sonar.core.component.ComponentKeys.isValidBranch(java.lang.String)" />
      <edge id="62" name="org.sonar.core.component.ComponentKeysTest.isValidModuleKey()&gt;org.sonar.core.component.ComponentKeys.isValidModuleKey(java.lang.String)" />
      <edge id="63" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto()" />
      <edge id="64" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.setId(java.lang.Long)" />
      <edge id="65" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.setComponentUuid(java.lang.String)" />
      <edge id="66" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.setType(java.lang.String)" />
      <edge id="67" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.setName(java.lang.String)" />
      <edge id="68" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.setHref(java.lang.String)" />
      <edge id="69" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.getId()" />
      <edge id="70" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.getComponentUuid()" />
      <edge id="71" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.getType()" />
      <edge id="72" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.getName()" />
      <edge id="73" name="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()&gt;org.sonar.core.component.ComponentLinkDto.getHref()" />
      <edge id="74" name="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)&gt;org.sonar.core.component.Module.configureModule()" />
      <edge id="75" name="org.sonar.core.component.Module.add(java.lang.Object[])&gt;org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)" />
      <edge id="76" name="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)&gt;org.sonar.core.platform.ComponentContainer.getPicoContainer()" />
      <edge id="77" name="org.sonar.core.component.ModuleTest$4()&gt;org.sonar.core.component.Module()" />
      <edge id="78" name="org.sonar.core.component.Module.configureModule()&gt;org.sonar.core.component.ModuleTest$4.configureModule()" />
      <edge id="79" name="org.sonar.core.component.ModuleTest$4.configureModule()&gt;org.sonar.core.component.Module.add(java.lang.Object[])" />
      <edge id="80" name="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()&gt;org.sonar.core.component.ModuleTest$4()" />
      <edge id="81" name="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()&gt;org.sonar.core.component.Module()" />
      <edge id="82" name="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()&gt;org.sonar.core.component.Module.add(java.lang.Object[])" />
      <edge id="83" name="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()&gt;org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)" />
      <edge id="84" name="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()&gt;org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)" />
      <edge id="85" name="org.sonar.core.component.ModuleTest$3()&gt;org.sonar.core.component.Module()" />
      <edge id="86" name="org.sonar.core.component.Module.configureModule()&gt;org.sonar.core.component.ModuleTest$3.configureModule()" />
      <edge id="87" name="org.sonar.core.component.ModuleTest$3.configureModule()&gt;org.sonar.core.component.Module.add(java.lang.Object[])" />
      <edge id="88" name="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()&gt;org.sonar.core.component.ModuleTest$3()" />
      <edge id="89" name="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()&gt;org.sonar.core.component.Module()" />
      <edge id="90" name="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()&gt;org.sonar.core.component.Module.add(java.lang.Object[])" />
      <edge id="91" name="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()&gt;org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)" />
      <edge id="92" name="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()&gt;org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)" />
      <edge id="93" name="org.sonar.core.component.ModuleTest$1()&gt;org.sonar.core.component.Module()" />
      <edge id="94" name="org.sonar.core.component.Module.configureModule()&gt;org.sonar.core.component.ModuleTest$1.configureModule()" />
      <edge id="95" name="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()&gt;org.sonar.core.component.ModuleTest$1()" />
      <edge id="96" name="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()&gt;org.sonar.core.component.Module()" />
      <edge id="97" name="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()&gt;org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)" />
      <edge id="98" name="org.sonar.core.component.ModuleTest$2()&gt;org.sonar.core.component.Module()" />
      <edge id="99" name="org.sonar.core.component.Module.configureModule()&gt;org.sonar.core.component.ModuleTest$2.configureModule()" />
      <edge id="100" name="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()&gt;org.sonar.core.component.ModuleTest$2()" />
      <edge id="101" name="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()&gt;org.sonar.core.component.Module()" />
      <edge id="102" name="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()&gt;org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)" />
      <edge id="103" name="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()&gt;org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)" />
      <edge id="104" name="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()&gt;org.sonar.core.component.SnapshotDto.getRootId()" />
      <edge id="105" name="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()&gt;org.sonar.core.component.SnapshotDto.getId()" />
      <edge id="106" name="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()&gt;org.sonar.core.component.SnapshotDto()" />
      <edge id="107" name="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()&gt;org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)" />
      <edge id="108" name="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()&gt;org.sonar.core.component.SnapshotDto.setId(java.lang.Long)" />
      <edge id="109" name="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()&gt;org.sonar.core.component.SnapshotDto.getRootIdOrSelf()" />
      <edge id="110" name="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()&gt;org.sonar.core.component.SnapshotDto()" />
      <edge id="111" name="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()&gt;org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)" />
      <edge id="112" name="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()&gt;org.sonar.core.component.SnapshotDto.setId(java.lang.Long)" />
      <edge id="113" name="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()&gt;org.sonar.core.component.SnapshotDto.getRootIdOrSelf()" />
      <edge id="114" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto()" />
      <edge id="115" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setId(java.lang.Long)" />
      <edge id="116" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setParentId(java.lang.Long)" />
      <edge id="117" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)" />
      <edge id="118" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setRootProjectId(java.lang.Long)" />
      <edge id="119" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setBuildDate(java.lang.Long)" />
      <edge id="120" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setComponentId(java.lang.Long)" />
      <edge id="121" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setLast(java.lang.Boolean)" />
      <edge id="122" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setScope(java.lang.String)" />
      <edge id="123" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setQualifier(java.lang.String)" />
      <edge id="124" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setVersion(java.lang.String)" />
      <edge id="125" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setPath(java.lang.String)" />
      <edge id="126" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setDepth(java.lang.Integer)" />
      <edge id="127" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setPeriodMode(int,java.lang.String)" />
      <edge id="128" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setPeriodParam(int,java.lang.String)" />
      <edge id="129" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.setPeriodDate(int,java.lang.Long)" />
      <edge id="130" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getId()" />
      <edge id="131" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getParentId()" />
      <edge id="132" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getRootId()" />
      <edge id="133" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getRootProjectId()" />
      <edge id="134" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getBuildDate()" />
      <edge id="135" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getComponentId()" />
      <edge id="136" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getLast()" />
      <edge id="137" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getScope()" />
      <edge id="138" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getQualifier()" />
      <edge id="139" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getVersion()" />
      <edge id="140" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getPath()" />
      <edge id="141" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getDepth()" />
      <edge id="142" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getPeriodMode(int)" />
      <edge id="143" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getPeriodModeParameter(int)" />
      <edge id="144" name="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()&gt;org.sonar.core.component.SnapshotDto.getPeriodDate(int)" />
      <edge id="145" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getId()" />
      <edge id="146" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getProjectKey()" />
      <edge id="147" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getUuid()" />
      <edge id="148" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getStatus()" />
      <edge id="149" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getCreatedAt()" />
      <edge id="150" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getStartedAt()" />
      <edge id="151" name="org.sonar.core.computation.db.AnalysisReportDto.toString()&gt;org.sonar.core.computation.db.AnalysisReportDto.getFinishedAt()" />
      <edge id="152" name="org.sonar.core.computation.db.AnalysisReportDto.newForTests(java.lang.Long)&gt;org.sonar.core.computation.db.AnalysisReportDto()" />
      <edge id="153" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.selectProjectSnapshots(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" />
      <edge id="154" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" />
      <edge id="155" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)" />
      <edge id="156" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.Filters.all()" />
      <edge id="157" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getDate()" />
      <edge id="158" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()" />
      <edge id="159" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="160" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="161" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setRootSnapshotId(java.lang.Long)" />
      <edge id="162" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)" />
      <edge id="163" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.selectProjectSnapshots(long,org.sonar.core.persistence.DbSession)" />
      <edge id="164" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.computation.dbcleaner.period.Filter.log()" />
      <edge id="165" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" />
      <edge id="166" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" />
      <edge id="167" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1.matches(java.lang.Object)&gt;org.sonar.core.purge.PurgeSnapshotQuery.getRootSnapshotId()" />
      <edge id="168" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1()" />
      <edge id="169" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()&gt;org.sonar.core.purge.PurgeSnapshotQuery.getRootSnapshotId()" />
      <edge id="170" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2.matches(java.lang.Object)&gt;org.sonar.core.purge.PurgeSnapshotQuery.getId()" />
      <edge id="171" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2()" />
      <edge id="172" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()&gt;org.sonar.core.purge.PurgeSnapshotQuery.getId()" />
      <edge id="173" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()&gt;org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" />
      <edge id="174" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$3()" />
      <edge id="175" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" />
      <edge id="176" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="177" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="178" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)" />
      <edge id="179" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()" />
      <edge id="180" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner(org.sonar.core.purge.PurgeDao)" />
      <edge id="181" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" />
      <edge id="182" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.Filter.log()" />
      <edge id="183" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="184" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()" />
      <edge id="185" name="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()&gt;org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()" />
      <edge id="186" name="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.filter(java.util.List)" />
      <edge id="187" name="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.filter(java.util.List)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getDate()" />
      <edge id="188" name="org.sonar.core.computation.dbcleaner.period.Filter.log()&gt;org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.log()" />
      <edge id="189" name="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()&gt;org.sonar.core.computation.dbcleaner.period.DeleteAllFilter(java.util.Date)" />
      <edge id="190" name="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()&gt;org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" />
      <edge id="191" name="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="192" name="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.Filters.getDateFromHours(org.sonar.api.config.Settings,java.lang.String)" />
      <edge id="193" name="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.Filters.getDateFromWeeks(org.sonar.api.config.Settings,java.lang.String)" />
      <edge id="194" name="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)" />
      <edge id="195" name="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)&gt;org.sonar.core.computation.dbcleaner.period.DeleteAllFilter(java.util.Date)" />
      <edge id="196" name="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getDate()" />
      <edge id="197" name="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)&gt;org.sonar.core.computation.dbcleaner.period.Interval()" />
      <edge id="198" name="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)&gt;org.sonar.core.computation.dbcleaner.period.Interval.add(org.sonar.core.purge.PurgeableSnapshotDto)" />
      <edge id="199" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)&gt;org.sonar.core.computation.dbcleaner.period.Interval.count()" />
      <edge id="200" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)&gt;org.sonar.core.computation.dbcleaner.period.Interval.get()" />
      <edge id="201" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getDate()" />
      <edge id="202" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="203" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" />
      <edge id="204" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.Interval.count()" />
      <edge id="205" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)" />
      <edge id="206" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)" />
      <edge id="207" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" />
      <edge id="208" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.Interval.count()" />
      <edge id="209" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()&gt;org.sonar.core.computation.dbcleaner.period.Interval.get()" />
      <edge id="210" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()&gt;org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()" />
      <edge id="211" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="212" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()&gt;org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" />
      <edge id="213" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()&gt;org.sonar.core.computation.dbcleaner.period.Interval.count()" />
      <edge id="214" name="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()&gt;org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)" />
      <edge id="215" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)&gt;org.sonar.core.purge.PurgeableSnapshotDto.isLast()" />
      <edge id="216" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)&gt;org.sonar.core.purge.PurgeableSnapshotDto.hasEvents()" />
      <edge id="217" name="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)" />
      <edge id="218" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" />
      <edge id="219" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)" />
      <edge id="220" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.Interval.count()" />
      <edge id="221" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.Interval.get()" />
      <edge id="222" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)" />
      <edge id="223" name="org.sonar.core.computation.dbcleaner.period.Filter.log()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter.log()" />
      <edge id="224" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1.apply(org.sonar.core.purge.PurgeableSnapshotDto)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()" />
      <edge id="225" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1()" />
      <edge id="226" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()" />
      <edge id="227" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)" />
      <edge id="228" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" />
      <edge id="229" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="230" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setLast(boolean)" />
      <edge id="231" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setHasEvents(boolean)" />
      <edge id="232" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)" />
      <edge id="233" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)" />
      <edge id="234" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()&gt;org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" />
      <edge id="235" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="236" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)" />
      <edge id="237" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()&gt;org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)" />
      <edge id="238" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()&gt;org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" />
      <edge id="239" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setLast(boolean)" />
      <edge id="240" name="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setHasEvents(boolean)" />
      <edge id="241" name="org.sonar.core.computation.dbcleaner.DataCleanerPropertiesTest.shouldGetExtensions()&gt;org.sonar.core.computation.dbcleaner.DataCleanerProperties.all()" />
      <edge id="242" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="243" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="244" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)" />
      <edge id="245" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="246" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="247" name="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)&gt;org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)" />
      <edge id="248" name="org.sonar.core.config.CorePropertyDefinitions.all()&gt;org.sonar.core.config.IssueExclusionProperties.all()" />
      <edge id="249" name="org.sonar.core.config.CorePropertyDefinitions.all()&gt;org.sonar.core.config.ExclusionProperties.all()" />
      <edge id="250" name="org.sonar.core.config.CorePropertyDefinitions.all()&gt;org.sonar.core.config.SecurityProperties.all()" />
      <edge id="251" name="org.sonar.core.config.CorePropertyDefinitions.all()&gt;org.sonar.core.config.DebtProperties.all()" />
      <edge id="252" name="org.sonar.core.config.CorePropertyDefinitions.all()&gt;org.sonar.core.computation.dbcleaner.DataCleanerProperties.all()" />
      <edge id="253" name="org.sonar.core.config.CorePropertyDefinitionsTest.all()&gt;org.sonar.core.config.CorePropertyDefinitions.all()" />
      <edge id="254" name="org.sonar.core.config.Logback.configure(java.io.File,java.util.Map)&gt;org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)" />
      <edge id="255" name="org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)&gt;org.sonar.core.config.Logback.configureContext(ch.qos.logback.classic.LoggerContext,java.util.Map)" />
      <edge id="256" name="org.sonar.core.config.Logback.configure(java.lang.String,java.util.Map)&gt;org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)" />
      <edge id="257" name="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="258" name="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()&gt;org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="259" name="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()&gt;org.sonar.core.dashboard.ActiveDashboardMapper.selectMaxOrderIndexForNullUser()" />
      <edge id="260" name="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="261" name="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)&gt;org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="262" name="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)&gt;org.sonar.core.dashboard.ActiveDashboardMapper.selectGlobalDashboardsForUserLogin(java.lang.String)" />
      <edge id="263" name="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="264" name="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)" />
      <edge id="265" name="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)&gt;org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="266" name="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)&gt;org.sonar.core.dashboard.ActiveDashboardMapper.selectProjectDashboardsForUserLogin(java.lang.String)" />
      <edge id="267" name="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="268" name="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)&gt;org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="269" name="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)&gt;org.sonar.core.dashboard.ActiveDashboardMapper.insert(org.sonar.core.dashboard.ActiveDashboardDto)" />
      <edge id="270" name="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="271" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="272" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()&gt;org.sonar.core.dashboard.ActiveDashboardDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="273" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="274" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetMaxOrderIndexForNullUser()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="275" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetMaxOrderIndexForNullUser()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()" />
      <edge id="276" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetZeroMaxOrderIndex()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="277" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetZeroMaxOrderIndex()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()" />
      <edge id="278" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="279" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.ActiveDashboardDto()" />
      <edge id="280" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.ActiveDashboardDto.setDashboardId(java.lang.Long)" />
      <edge id="281" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.ActiveDashboardDto.setUserId(java.lang.Long)" />
      <edge id="282" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.ActiveDashboardDto.setOrderIndex(java.lang.Integer)" />
      <edge id="283" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" />
      <edge id="284" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="285" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="286" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.dashboard.ActiveDashboardDto()" />
      <edge id="287" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.dashboard.ActiveDashboardDto.setDashboardId(java.lang.Long)" />
      <edge id="288" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.dashboard.ActiveDashboardDto.setOrderIndex(java.lang.Integer)" />
      <edge id="289" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" />
      <edge id="290" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="291" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_anonymous()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="292" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_anonymous()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)" />
      <edge id="293" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_user()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="294" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_user()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)" />
      <edge id="295" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_anonymous()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="296" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_anonymous()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)" />
      <edge id="297" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_user()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="298" name="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_user()&gt;org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)" />
      <edge id="299" name="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="300" name="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)&gt;org.sonar.core.dashboard.DashboardMapper.selectGlobalDashboard(java.lang.String)" />
      <edge id="301" name="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="302" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="303" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.DashboardMapper.insert(org.sonar.core.dashboard.DashboardDto)" />
      <edge id="304" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.DashboardDto.getWidgets()" />
      <edge id="305" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetDto.setDashboardId(java.lang.Long)" />
      <edge id="306" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.DashboardDto.getId()" />
      <edge id="307" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetMapper.insert(org.sonar.core.dashboard.WidgetDto)" />
      <edge id="308" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetDto.getWidgetProperties()" />
      <edge id="309" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetPropertyDto.setWidgetId(java.lang.Long)" />
      <edge id="310" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetDto.getId()" />
      <edge id="311" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.dashboard.WidgetPropertyMapper.insert(org.sonar.core.dashboard.WidgetPropertyDto)" />
      <edge id="312" name="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="313" name="org.sonar.core.dashboard.DashboardDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="314" name="org.sonar.core.dashboard.DashboardDaoTest.createDao()&gt;org.sonar.core.dashboard.DashboardDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="315" name="org.sonar.core.dashboard.DashboardDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="316" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="317" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto()" />
      <edge id="318" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setUserId(java.lang.Long)" />
      <edge id="319" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setName(java.lang.String)" />
      <edge id="320" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setDescription(java.lang.String)" />
      <edge id="321" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setColumnLayout(java.lang.String)" />
      <edge id="322" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setShared(boolean)" />
      <edge id="323" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.setGlobal(boolean)" />
      <edge id="324" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)" />
      <edge id="325" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)" />
      <edge id="326" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto()" />
      <edge id="327" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setWidgetKey(java.lang.String)" />
      <edge id="328" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setName(java.lang.String)" />
      <edge id="329" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setDescription(java.lang.String)" />
      <edge id="330" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setColumnIndex(java.lang.Integer)" />
      <edge id="331" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setRowIndex(java.lang.Integer)" />
      <edge id="332" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setConfigured(boolean)" />
      <edge id="333" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setCreatedAt(java.util.Date)" />
      <edge id="334" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.setUpdatedAt(java.util.Date)" />
      <edge id="335" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDto.addWidget(org.sonar.core.dashboard.WidgetDto)" />
      <edge id="336" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetPropertyDto()" />
      <edge id="337" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetPropertyDto.setPropertyKey(java.lang.String)" />
      <edge id="338" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetPropertyDto.setTextValue(java.lang.String)" />
      <edge id="339" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.WidgetDto.addWidgetProperty(org.sonar.core.dashboard.WidgetPropertyDto)" />
      <edge id="340" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" />
      <edge id="341" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="342" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="343" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto()" />
      <edge id="344" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setUserId(java.lang.Long)" />
      <edge id="345" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setName(java.lang.String)" />
      <edge id="346" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setDescription(java.lang.String)" />
      <edge id="347" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setColumnLayout(java.lang.String)" />
      <edge id="348" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setShared(boolean)" />
      <edge id="349" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.setGlobal(boolean)" />
      <edge id="350" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)" />
      <edge id="351" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)" />
      <edge id="352" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto()" />
      <edge id="353" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setWidgetKey(java.lang.String)" />
      <edge id="354" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setName(java.lang.String)" />
      <edge id="355" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setDescription(java.lang.String)" />
      <edge id="356" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setColumnIndex(java.lang.Integer)" />
      <edge id="357" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setRowIndex(java.lang.Integer)" />
      <edge id="358" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setConfigured(boolean)" />
      <edge id="359" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setCreatedAt(java.util.Date)" />
      <edge id="360" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.setUpdatedAt(java.util.Date)" />
      <edge id="361" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDto.addWidget(org.sonar.core.dashboard.WidgetDto)" />
      <edge id="362" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetPropertyDto()" />
      <edge id="363" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetPropertyDto.setPropertyKey(java.lang.String)" />
      <edge id="364" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetPropertyDto.setTextValue(java.lang.String)" />
      <edge id="365" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.WidgetDto.addWidgetProperty(org.sonar.core.dashboard.WidgetPropertyDto)" />
      <edge id="366" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" />
      <edge id="367" name="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="368" name="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="369" name="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()&gt;org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)" />
      <edge id="370" name="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()&gt;org.sonar.core.dashboard.DashboardDto.getId()" />
      <edge id="371" name="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()&gt;org.sonar.core.dashboard.DashboardDto.getUserId()" />
      <edge id="372" name="org.sonar.core.dashboard.DashboardDto()&gt;org.sonar.core.persistence.Dto()" />
      <edge id="373" name="org.sonar.core.persistence.Dto.getKey()&gt;org.sonar.core.dashboard.DashboardDto.getKey()" />
      <edge id="374" name="org.sonar.core.dashboard.WidgetPropertyDto.groupByWidgetId(java.util.Collection)&gt;org.sonar.core.dashboard.WidgetPropertyDto.getWidgetId()" />
      <edge id="375" name="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="376" name="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)&gt;org.sonar.core.duplication.DuplicationMapper.selectCandidates(int,java.lang.Integer,java.lang.String)" />
      <edge id="377" name="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="378" name="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="379" name="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="380" name="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)&gt;org.sonar.core.duplication.DuplicationMapper.batchInsert(org.sonar.core.duplication.DuplicationUnitDto)" />
      <edge id="381" name="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="382" name="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="383" name="org.sonar.core.duplication.DuplicationDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="384" name="org.sonar.core.duplication.DuplicationDaoTest.createDao()&gt;org.sonar.core.duplication.DuplicationDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="385" name="org.sonar.core.duplication.DuplicationDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="386" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="387" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)" />
      <edge id="388" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationUnitDto.getResourceKey()" />
      <edge id="389" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationUnitDto.getHash()" />
      <edge id="390" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationUnitDto.getIndexInFile()" />
      <edge id="391" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationUnitDto.getStartLine()" />
      <edge id="392" name="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()&gt;org.sonar.core.duplication.DuplicationUnitDto.getEndLine()" />
      <edge id="393" name="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="394" name="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()&gt;org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" />
      <edge id="395" name="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()&gt;org.sonar.core.duplication.DuplicationUnitDto(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer)" />
      <edge id="396" name="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="397" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto()" />
      <edge id="398" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setId(java.lang.Long)" />
      <edge id="399" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setName(java.lang.String)" />
      <edge id="400" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setCategory(java.lang.String)" />
      <edge id="401" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setDescription(java.lang.String)" />
      <edge id="402" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setData(java.lang.String)" />
      <edge id="403" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setDate(java.lang.Long)" />
      <edge id="404" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setComponentUuid(java.lang.String)" />
      <edge id="405" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setSnapshotId(java.lang.Long)" />
      <edge id="406" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.setCreatedAt(java.lang.Long)" />
      <edge id="407" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getId()" />
      <edge id="408" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getName()" />
      <edge id="409" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getCategory()" />
      <edge id="410" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getDescription()" />
      <edge id="411" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getData()" />
      <edge id="412" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getComponentUuid()" />
      <edge id="413" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getSnapshotId()" />
      <edge id="414" name="org.sonar.core.event.EventDtoTest.test_getters_and_setters()&gt;org.sonar.core.event.EventDto.getCreatedAt()" />
      <edge id="415" name="org.sonar.core.i18n.DefaultI18n(org.sonar.core.platform.PluginRepository,org.sonar.api.utils.System2)&gt;org.sonar.core.i18n.DefaultI18n$1()" />
      <edge id="416" name="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,java.util.Date,java.util.Date)&gt;org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" />
      <edge id="417" name="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="418" name="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="419" name="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="420" name="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="421" name="org.sonar.core.i18n.DefaultI18n.ageFromNow(java.util.Locale,java.util.Date)&gt;org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" />
      <edge id="422" name="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])&gt;org.sonar.core.i18n.DefaultI18n.formatMessage(java.lang.String,java.lang.Object[])" />
      <edge id="423" name="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.DefaultI18n.readInputStream(java.lang.String,java.io.InputStream)" />
      <edge id="424" name="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)&gt;org.sonar.core.i18n.DefaultI18n.initPlugin(java.lang.String)" />
      <edge id="425" name="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)&gt;org.sonar.core.platform.PluginRepository.getPluginInfos()" />
      <edge id="426" name="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="427" name="org.sonar.core.i18n.DefaultI18n.start()&gt;org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)" />
      <edge id="428" name="org.sonar.core.i18n.DefaultI18n.start()&gt;org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)" />
      <edge id="429" name="org.sonar.core.i18n.DefaultI18nTest.newPlugin(java.lang.String)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="430" name="org.sonar.core.i18n.DefaultI18nTest.before()&gt;org.sonar.core.i18n.DefaultI18nTest.newPlugin(java.lang.String)" />
      <edge id="431" name="org.sonar.core.i18n.DefaultI18nTest.before()&gt;org.sonar.core.platform.PluginRepository.getPluginInfos()" />
      <edge id="432" name="org.sonar.core.i18n.DefaultI18nTest.before()&gt;org.sonar.core.i18n.DefaultI18n(org.sonar.core.platform.PluginRepository,org.sonar.api.utils.System2)" />
      <edge id="433" name="org.sonar.core.i18n.DefaultI18nTest.before()&gt;org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)" />
      <edge id="434" name="org.sonar.core.i18n.DefaultI18nTest.fallback_to_default_locale()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="435" name="org.sonar.core.i18n.DefaultI18nTest.format_date()&gt;org.sonar.core.i18n.DefaultI18n.formatDate(java.util.Locale,java.util.Date)" />
      <edge id="436" name="org.sonar.core.i18n.DefaultI18nTest.format_date_time()&gt;org.sonar.core.i18n.DefaultI18n.formatDateTime(java.util.Locale,java.util.Date)" />
      <edge id="437" name="org.sonar.core.i18n.DefaultI18nTest.format_double()&gt;org.sonar.core.i18n.DefaultI18n.formatDouble(java.util.Locale,java.lang.Double)" />
      <edge id="438" name="org.sonar.core.i18n.DefaultI18nTest.format_integer()&gt;org.sonar.core.i18n.DefaultI18n.formatInteger(java.util.Locale,java.lang.Integer)" />
      <edge id="439" name="org.sonar.core.i18n.DefaultI18nTest.format_message_with_parameters()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="440" name="org.sonar.core.i18n.DefaultI18nTest.get_age_from_now()&gt;org.sonar.core.i18n.DefaultI18n.ageFromNow(java.util.Locale,java.util.Date)" />
      <edge id="441" name="org.sonar.core.i18n.DefaultI18nTest.get_age_with_dates()&gt;org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,java.util.Date,java.util.Date)" />
      <edge id="442" name="org.sonar.core.i18n.DefaultI18nTest.get_age_with_duration()&gt;org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" />
      <edge id="443" name="org.sonar.core.i18n.DefaultI18nTest.get_english_labels()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="444" name="org.sonar.core.i18n.DefaultI18nTest.get_english_labels_when_default_locale_is_not_english()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="445" name="org.sonar.core.i18n.DefaultI18nTest.get_french_label_if_swiss_country()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="446" name="org.sonar.core.i18n.DefaultI18nTest.get_labels_from_french_pack()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="447" name="org.sonar.core.i18n.DefaultI18nTest.introspect_all_available_properties()&gt;org.sonar.core.i18n.DefaultI18n.getPropertyKeys()" />
      <edge id="448" name="org.sonar.core.i18n.DefaultI18nTest.load_core_bundle()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="449" name="org.sonar.core.i18n.DefaultI18nTest.return_default_value_if_missing_key()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="450" name="org.sonar.core.i18n.DefaultI18nTest.return_null_if_file_not_found()&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="451" name="org.sonar.core.i18n.DefaultI18nTest.return_null_if_rule_not_internationalized()&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="452" name="org.sonar.core.i18n.DefaultI18nTest.use_default_locale_if_missing_value_in_localized_bundle()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="453" name="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)&gt;org.sonar.core.i18n.DurationLabel.message(java.lang.String)" />
      <edge id="454" name="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)&gt;org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)" />
      <edge id="455" name="org.sonar.core.i18n.DurationLabel.label(long)&gt;org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)" />
      <edge id="456" name="org.sonar.core.i18n.DurationLabel.message(java.lang.String)&gt;org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)" />
      <edge id="457" name="org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)&gt;org.sonar.core.i18n.DurationLabel$Result(java.lang.String,java.lang.Long)" />
      <edge id="458" name="org.sonar.core.i18n.DurationLabelTest.age_in_day()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="459" name="org.sonar.core.i18n.DurationLabelTest.age_in_day()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="460" name="org.sonar.core.i18n.DurationLabelTest.age_in_day()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="461" name="org.sonar.core.i18n.DurationLabelTest.age_in_day()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="462" name="org.sonar.core.i18n.DurationLabelTest.age_in_day()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="463" name="org.sonar.core.i18n.DurationLabelTest.age_in_days()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="464" name="org.sonar.core.i18n.DurationLabelTest.age_in_days()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="465" name="org.sonar.core.i18n.DurationLabelTest.age_in_days()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="466" name="org.sonar.core.i18n.DurationLabelTest.age_in_days()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="467" name="org.sonar.core.i18n.DurationLabelTest.age_in_days()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="468" name="org.sonar.core.i18n.DurationLabelTest.age_in_hour()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="469" name="org.sonar.core.i18n.DurationLabelTest.age_in_hour()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="470" name="org.sonar.core.i18n.DurationLabelTest.age_in_hour()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="471" name="org.sonar.core.i18n.DurationLabelTest.age_in_hour()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="472" name="org.sonar.core.i18n.DurationLabelTest.age_in_hour()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="473" name="org.sonar.core.i18n.DurationLabelTest.age_in_hours()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="474" name="org.sonar.core.i18n.DurationLabelTest.age_in_hours()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="475" name="org.sonar.core.i18n.DurationLabelTest.age_in_hours()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="476" name="org.sonar.core.i18n.DurationLabelTest.age_in_hours()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="477" name="org.sonar.core.i18n.DurationLabelTest.age_in_hours()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="478" name="org.sonar.core.i18n.DurationLabelTest.age_in_minute()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="479" name="org.sonar.core.i18n.DurationLabelTest.age_in_minute()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="480" name="org.sonar.core.i18n.DurationLabelTest.age_in_minute()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="481" name="org.sonar.core.i18n.DurationLabelTest.age_in_minute()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="482" name="org.sonar.core.i18n.DurationLabelTest.age_in_minute()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="483" name="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="484" name="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="485" name="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="486" name="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="487" name="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="488" name="org.sonar.core.i18n.DurationLabelTest.age_in_month()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="489" name="org.sonar.core.i18n.DurationLabelTest.age_in_month()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="490" name="org.sonar.core.i18n.DurationLabelTest.age_in_month()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="491" name="org.sonar.core.i18n.DurationLabelTest.age_in_month()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="492" name="org.sonar.core.i18n.DurationLabelTest.age_in_month()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="493" name="org.sonar.core.i18n.DurationLabelTest.age_in_months()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="494" name="org.sonar.core.i18n.DurationLabelTest.age_in_months()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="495" name="org.sonar.core.i18n.DurationLabelTest.age_in_months()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="496" name="org.sonar.core.i18n.DurationLabelTest.age_in_months()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="497" name="org.sonar.core.i18n.DurationLabelTest.age_in_months()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="498" name="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="499" name="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="500" name="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="501" name="org.sonar.core.i18n.DurationLabelTest.year_ago()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="502" name="org.sonar.core.i18n.DurationLabelTest.year_ago()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="503" name="org.sonar.core.i18n.DurationLabelTest.year_ago()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="504" name="org.sonar.core.i18n.DurationLabelTest.year_ago()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="505" name="org.sonar.core.i18n.DurationLabelTest.year_ago()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="506" name="org.sonar.core.i18n.DurationLabelTest.years_ago()&gt;org.sonar.core.i18n.DurationLabel.label(long)" />
      <edge id="507" name="org.sonar.core.i18n.DurationLabelTest.years_ago()&gt;org.sonar.core.i18n.DurationLabelTest.now()" />
      <edge id="508" name="org.sonar.core.i18n.DurationLabelTest.years_ago()&gt;org.sonar.core.i18n.DurationLabelTest.ago(long)" />
      <edge id="509" name="org.sonar.core.i18n.DurationLabelTest.years_ago()&gt;org.sonar.core.i18n.DurationLabel$Result.key()" />
      <edge id="510" name="org.sonar.core.i18n.DurationLabelTest.years_ago()&gt;org.sonar.core.i18n.DurationLabel$Result.value()" />
      <edge id="511" name="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)&gt;org.sonar.core.i18n.I18nClassloader(java.util.List)" />
      <edge id="512" name="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)&gt;org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)" />
      <edge id="513" name="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)&gt;org.sonar.core.platform.PluginRepository.getPluginInfos()" />
      <edge id="514" name="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)&gt;org.sonar.core.platform.PluginRepository.getPluginInstance(java.lang.String)" />
      <edge id="515" name="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="516" name="org.sonar.core.i18n.I18nClassloaderTest.newCheckstyleClassloader()&gt;org.sonar.core.i18n.I18nClassloaderTest.newClassLoader(java.lang.String[])" />
      <edge id="517" name="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()&gt;org.sonar.core.i18n.I18nClassloaderTest.newCheckstyleClassloader()" />
      <edge id="518" name="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()&gt;org.sonar.core.i18n.I18nClassloader(java.util.List)" />
      <edge id="519" name="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()&gt;org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)" />
      <edge id="520" name="org.sonar.core.i18n.I18nClassloaderTest.contain_its_own_classloader()&gt;org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)" />
      <edge id="521" name="org.sonar.core.i18n.I18nClassloaderTest.init()&gt;org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)" />
      <edge id="522" name="org.sonar.core.i18n.I18nClassloaderTest.override_toString()&gt;org.sonar.core.i18n.I18nClassloader.toString()" />
      <edge id="523" name="org.sonar.core.i18n.I18nClassloaderTest.return_null_if_resource_not_found()&gt;org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)" />
      <edge id="524" name="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="525" name="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.RuleI18nManager.lookUpDescriptionInFormerLocation(java.lang.String,java.lang.String)" />
      <edge id="526" name="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)&gt;org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)" />
      <edge id="527" name="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="528" name="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String,java.util.Locale)&gt;org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String)" />
      <edge id="529" name="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule)&gt;org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="530" name="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule,java.util.Locale)&gt;org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule)" />
      <edge id="531" name="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="532" name="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String,java.util.Locale)&gt;org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="533" name="org.sonar.core.i18n.RuleI18nManager.lookUpDescriptionInFormerLocation(java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="534" name="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="535" name="org.sonar.core.i18n.RuleI18nManagerTest.shoudlReturnNullIfMissingDescription()&gt;org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)" />
      <edge id="536" name="org.sonar.core.i18n.RuleI18nManagerTest.shoudlReturnNullIfMissingDescription()&gt;org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)" />
      <edge id="537" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldBeRuleKey()&gt;org.sonar.core.i18n.RuleI18nManager.isRuleProperty(java.lang.String)" />
      <edge id="538" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="539" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()&gt;org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)" />
      <edge id="540" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()&gt;org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)" />
      <edge id="541" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()&gt;org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" />
      <edge id="542" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()&gt;org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)" />
      <edge id="543" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()&gt;org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)" />
      <edge id="544" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()&gt;org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)" />
      <edge id="545" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()&gt;org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String,java.util.Locale)" />
      <edge id="546" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="547" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()&gt;org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)" />
      <edge id="548" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()&gt;org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String,java.util.Locale)" />
      <edge id="549" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()&gt;org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" />
      <edge id="550" name="org.sonar.core.i18n.RuleI18nManagerTest.shouldNotBeRuleKey()&gt;org.sonar.core.i18n.RuleI18nManager.isRuleProperty(java.lang.String)" />
      <edge id="551" name="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="552" name="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)&gt;org.sonar.core.issue.db.ActionPlanMapper.findByKeys(java.util.List)" />
      <edge id="553" name="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="554" name="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="555" name="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanMapper.findByNameAndProjectId(java.lang.String,java.lang.Long)" />
      <edge id="556" name="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="557" name="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="558" name="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanMapper.findOpenByProjectId(java.lang.Long)" />
      <edge id="559" name="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="560" name="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="561" name="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)&gt;org.sonar.core.issue.db.ActionPlanMapper.findByKey(java.lang.String)" />
      <edge id="562" name="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="563" name="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="564" name="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)&gt;org.sonar.core.issue.db.ActionPlanMapper.delete(java.lang.String)" />
      <edge id="565" name="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="566" name="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="567" name="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.issue.db.ActionPlanMapper.insert(org.sonar.core.issue.db.ActionPlanDto)" />
      <edge id="568" name="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="569" name="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="570" name="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.issue.db.ActionPlanMapper.update(org.sonar.core.issue.db.ActionPlanDto)" />
      <edge id="571" name="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="572" name="org.sonar.core.issue.db.ActionPlanDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="573" name="org.sonar.core.issue.db.ActionPlanDaoTest.createDao()&gt;org.sonar.core.issue.db.ActionPlanDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="574" name="org.sonar.core.issue.db.ActionPlanDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="575" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="576" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)" />
      <edge id="577" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="578" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="579" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()&gt;org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)" />
      <edge id="580" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()&gt;org.sonar.core.issue.db.ActionPlanDto.getKey()" />
      <edge id="581" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()&gt;org.sonar.core.issue.db.ActionPlanDto.getProjectKey()" />
      <edge id="582" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="583" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys()&gt;org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)" />
      <edge id="584" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="585" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="586" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="587" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()&gt;org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)" />
      <edge id="588" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="589" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_name_and_project_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="590" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_name_and_project_id()&gt;org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)" />
      <edge id="591" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_open_by_project_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="592" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_open_by_project_id()&gt;org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)" />
      <edge id="593" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto()" />
      <edge id="594" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)" />
      <edge id="595" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)" />
      <edge id="596" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)" />
      <edge id="597" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)" />
      <edge id="598" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)" />
      <edge id="599" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)" />
      <edge id="600" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)" />
      <edge id="601" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="602" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="603" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto()" />
      <edge id="604" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)" />
      <edge id="605" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)" />
      <edge id="606" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)" />
      <edge id="607" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)" />
      <edge id="608" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)" />
      <edge id="609" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)" />
      <edge id="610" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)" />
      <edge id="611" name="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="612" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan()" />
      <edge id="613" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)" />
      <edge id="614" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="615" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setProjectKey(java.lang.String)" />
      <edge id="616" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setDescription(java.lang.String)" />
      <edge id="617" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)" />
      <edge id="618" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)" />
      <edge id="619" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setUserLogin(java.lang.String)" />
      <edge id="620" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)" />
      <edge id="621" name="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()&gt;org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)" />
      <edge id="622" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto()" />
      <edge id="623" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)" />
      <edge id="624" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)" />
      <edge id="625" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)" />
      <edge id="626" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)" />
      <edge id="627" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)" />
      <edge id="628" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setDeadLine(java.util.Date)" />
      <edge id="629" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)" />
      <edge id="630" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setCreatedAt(java.util.Date)" />
      <edge id="631" name="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanDto.setUpdatedAt(java.util.Date)" />
      <edge id="632" name="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="633" name="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)&gt;org.sonar.core.issue.db.ActionPlanStatsMapper.findByProjectId(java.lang.Long)" />
      <edge id="634" name="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="635" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="636" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.createDao()&gt;org.sonar.core.issue.db.ActionPlanStatsDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="637" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="638" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="639" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()&gt;org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)" />
      <edge id="640" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()&gt;org.sonar.core.issue.db.ActionPlanStatsDto.getProjectKey()" />
      <edge id="641" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()&gt;org.sonar.core.issue.db.ActionPlanStatsDto.getTotalIssues()" />
      <edge id="642" name="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()&gt;org.sonar.core.issue.db.ActionPlanStatsDto.getUnresolvedIssues()" />
      <edge id="643" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" />
      <edge id="644" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="645" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setProjectKey(java.lang.String)" />
      <edge id="646" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setDescription(java.lang.String)" />
      <edge id="647" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)" />
      <edge id="648" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)" />
      <edge id="649" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setUserLogin(java.lang.String)" />
      <edge id="650" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)" />
      <edge id="651" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)" />
      <edge id="652" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.ActionPlanStats.setTotalIssues(int)" />
      <edge id="653" name="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()&gt;org.sonar.core.issue.ActionPlanStats.setUnresolvedIssues(int)" />
      <edge id="654" name="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="655" name="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="656" name="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeMapper.delete(java.lang.String)" />
      <edge id="657" name="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="658" name="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="659" name="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="660" name="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="661" name="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.issue.db.IssueChangeMapper.update(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="662" name="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="663" name="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="664" name="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="665" name="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeMapper.selectByIssuesAndType(java.util.List,java.lang.String)" />
      <edge id="666" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="667" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)" />
      <edge id="668" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()" />
      <edge id="669" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="670" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)" />
      <edge id="671" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.issue.db.IssueChangeDto.toComment()" />
      <edge id="672" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="673" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="674" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeMapper.selectByKeyAndType(java.lang.String,java.lang.String)" />
      <edge id="675" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto.toComment()" />
      <edge id="676" name="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="677" name="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="678" name="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)&gt;org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="679" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="680" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" />
      <edge id="681" name="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="682" name="org.sonar.core.issue.db.IssueChangeDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="683" name="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="684" name="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="685" name="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()&gt;org.sonar.core.issue.db.IssueChangeDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="686" name="org.sonar.core.issue.db.IssueChangeDaoTest.delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="687" name="org.sonar.core.issue.db.IssueChangeDaoTest.delete()&gt;org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" />
      <edge id="688" name="org.sonar.core.issue.db.IssueChangeDaoTest.delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="689" name="org.sonar.core.issue.db.IssueChangeDaoTest.delete_unknown_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="690" name="org.sonar.core.issue.db.IssueChangeDaoTest.delete_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" />
      <edge id="691" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="692" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="693" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="694" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="695" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="696" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)" />
      <edge id="697" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="698" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="699" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="700" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)" />
      <edge id="701" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="702" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="703" name="org.sonar.core.issue.db.IssueChangeDaoTest.insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="704" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comment_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="705" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comment_by_key()&gt;org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" />
      <edge id="706" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="707" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="708" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="709" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()&gt;org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="710" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="711" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_empty_input()&gt;org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="712" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="713" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="714" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="715" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()&gt;org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="716" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="717" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="718" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)" />
      <edge id="719" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getId()" />
      <edge id="720" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getKey()" />
      <edge id="721" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueKey()" />
      <edge id="722" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getUserLogin()" />
      <edge id="723" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeType()" />
      <edge id="724" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeData()" />
      <edge id="725" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()" />
      <edge id="726" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()&gt;org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()" />
      <edge id="727" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="728" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)" />
      <edge id="729" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.getId()" />
      <edge id="730" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_from_issue_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="731" name="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_from_issue_key()&gt;org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)" />
      <edge id="732" name="org.sonar.core.issue.db.IssueChangeDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="733" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="734" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="735" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="736" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="737" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="738" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="739" name="org.sonar.core.issue.db.IssueChangeDaoTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="740" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="741" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="742" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="743" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="744" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="745" name="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()&gt;org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="746" name="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="747" name="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="748" name="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="749" name="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="750" name="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)&gt;org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" />
      <edge id="751" name="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)" />
      <edge id="752" name="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="753" name="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="754" name="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)" />
      <edge id="755" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" />
      <edge id="756" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="757" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)" />
      <edge id="758" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="759" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="760" name="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)" />
      <edge id="761" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" />
      <edge id="762" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeData()" />
      <edge id="763" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeType()" />
      <edge id="764" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()" />
      <edge id="765" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()" />
      <edge id="766" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()" />
      <edge id="767" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueKey()" />
      <edge id="768" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.getUserLogin()" />
      <edge id="769" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment_with_created_at()&gt;org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" />
      <edge id="770" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment_with_created_at()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()" />
      <edge id="771" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" />
      <edge id="772" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeData()" />
      <edge id="773" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getChangeType()" />
      <edge id="774" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()" />
      <edge id="775" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()" />
      <edge id="776" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()" />
      <edge id="777" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueKey()" />
      <edge id="778" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.getUserLogin()" />
      <edge id="779" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff_with_created_at()&gt;org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" />
      <edge id="780" name="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff_with_created_at()&gt;org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()" />
      <edge id="781" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="782" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="783" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="784" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="785" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="786" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="787" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="788" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.toComment()" />
      <edge id="789" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="790" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="791" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="792" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="793" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="794" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="795" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()&gt;org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()" />
      <edge id="796" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="797" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="798" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="799" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="800" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="801" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)" />
      <edge id="802" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()&gt;org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()" />
      <edge id="803" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_string()&gt;org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" />
      <edge id="804" name="org.sonar.core.issue.db.IssueChangeDtoTest.to_string()&gt;org.sonar.core.issue.db.IssueChangeDto.toString()" />
      <edge id="805" name="org.sonar.core.issue.db.IssueChangeMapperTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="806" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="807" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="808" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="809" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="810" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)" />
      <edge id="811" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="812" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="813" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="814" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="815" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="816" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto()" />
      <edge id="817" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)" />
      <edge id="818" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)" />
      <edge id="819" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)" />
      <edge id="820" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)" />
      <edge id="821" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)" />
      <edge id="822" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)" />
      <edge id="823" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)" />
      <edge id="824" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)" />
      <edge id="825" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="826" name="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="827" name="org.sonar.core.issue.db.IssueChangeMapperTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="828" name="org.sonar.core.issue.db.IssueChangeMapperTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="829" name="org.sonar.core.issue.db.IssueChangeMapperTest.tearDown()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="830" name="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="831" name="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)&gt;org.sonar.core.issue.db.IssueDao.mapper(org.sonar.core.persistence.DbSession)" />
      <edge id="832" name="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)&gt;org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)" />
      <edge id="833" name="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="834" name="org.sonar.core.issue.db.IssueDao.mapper(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="835" name="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="836" name="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="837" name="org.sonar.core.issue.db.IssueDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="838" name="org.sonar.core.issue.db.IssueDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="839" name="org.sonar.core.issue.db.IssueDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="840" name="org.sonar.core.issue.db.IssueDaoTest.createDao()&gt;org.sonar.core.issue.db.IssueDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="841" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="842" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)" />
      <edge id="843" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.issue.db.IssueDto.getRuleRepo()" />
      <edge id="844" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.issue.db.IssueDto.getRule()" />
      <edge id="845" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.issue.db.IssueDto.getComponentKey()" />
      <edge id="846" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()&gt;org.sonar.core.issue.db.IssueDto.getProjectKey()" />
      <edge id="847" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="848" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)" />
      <edge id="849" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.issue.db.IssueDto.getRuleRepo()" />
      <edge id="850" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.issue.db.IssueDto.getRule()" />
      <edge id="851" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.issue.db.IssueDto.getComponentKey()" />
      <edge id="852" name="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()&gt;org.sonar.core.issue.db.IssueDto.getProjectKey()" />
      <edge id="853" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="854" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)" />
      <edge id="855" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getKee()" />
      <edge id="856" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getId()" />
      <edge id="857" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getRuleId()" />
      <edge id="858" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getSeverity()" />
      <edge id="859" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.isManualSeverity()" />
      <edge id="860" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getMessage()" />
      <edge id="861" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getLine()" />
      <edge id="862" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getEffortToFix()" />
      <edge id="863" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getStatus()" />
      <edge id="864" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getResolution()" />
      <edge id="865" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getChecksum()" />
      <edge id="866" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getAuthorLogin()" />
      <edge id="867" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getReporter()" />
      <edge id="868" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getAssignee()" />
      <edge id="869" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getIssueAttributes()" />
      <edge id="870" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getIssueCreationDate()" />
      <edge id="871" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getIssueUpdateDate()" />
      <edge id="872" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getIssueCloseDate()" />
      <edge id="873" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getCreatedAt()" />
      <edge id="874" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getUpdatedAt()" />
      <edge id="875" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getRuleRepo()" />
      <edge id="876" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getRule()" />
      <edge id="877" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getComponentUuid()" />
      <edge id="878" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getComponentKey()" />
      <edge id="879" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getModuleUuid()" />
      <edge id="880" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getModuleUuidPath()" />
      <edge id="881" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getProjectKey()" />
      <edge id="882" name="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()&gt;org.sonar.core.issue.db.IssueDto.getProjectUuid()" />
      <edge id="883" name="org.sonar.core.issue.db.IssueDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="884" name="org.sonar.core.issue.db.IssueDto.getKey()&gt;org.sonar.core.issue.db.IssueDto.getKee()" />
      <edge id="885" name="org.sonar.core.issue.db.IssueDto.toDefaultIssue()&gt;org.sonar.core.issue.db.IssueDto.getRuleKey()" />
      <edge id="886" name="org.sonar.core.issue.db.IssueDto.toDefaultIssue()&gt;org.sonar.core.issue.db.IssueDto.getTags()" />
      <edge id="887" name="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="888" name="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="889" name="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="890" name="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getId()" />
      <edge id="891" name="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="892" name="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.getKey()" />
      <edge id="893" name="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.uuid()" />
      <edge id="894" name="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.moduleUuid()" />
      <edge id="895" name="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.moduleUuidPath()" />
      <edge id="896" name="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.path()" />
      <edge id="897" name="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.getKey()" />
      <edge id="898" name="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)&gt;org.sonar.core.component.ComponentDto.uuid()" />
      <edge id="899" name="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getId()" />
      <edge id="900" name="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getRuleKey()" />
      <edge id="901" name="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getRepositoryKey()" />
      <edge id="902" name="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getLanguage()" />
      <edge id="903" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="904" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="905" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="906" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="907" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="908" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="909" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="910" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="911" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="912" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)" />
      <edge id="913" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="914" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="915" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="916" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="917" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)" />
      <edge id="918" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)" />
      <edge id="919" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="920" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)" />
      <edge id="921" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)" />
      <edge id="922" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)" />
      <edge id="923" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="924" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)" />
      <edge id="925" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="926" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="927" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="928" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)" />
      <edge id="929" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)" />
      <edge id="930" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)" />
      <edge id="931" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)" />
      <edge id="932" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setCreatedAt(long)" />
      <edge id="933" name="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="934" name="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)&gt;org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" />
      <edge id="935" name="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)&gt;org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" />
      <edge id="936" name="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)&gt;org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)" />
      <edge id="937" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="938" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="939" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="940" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="941" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="942" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="943" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="944" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="945" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="946" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="947" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)" />
      <edge id="948" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="949" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="950" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="951" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="952" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="953" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)" />
      <edge id="954" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)" />
      <edge id="955" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="956" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)" />
      <edge id="957" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)" />
      <edge id="958" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)" />
      <edge id="959" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="960" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)" />
      <edge id="961" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)" />
      <edge id="962" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)" />
      <edge id="963" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)" />
      <edge id="964" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)" />
      <edge id="965" name="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="966" name="org.sonar.core.issue.db.IssueDtoTest.set_data_check_maximal_length()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="967" name="org.sonar.core.issue.db.IssueDtoTest.set_data_check_maximal_length()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="968" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="969" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="970" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="971" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)" />
      <edge id="972" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setLanguage(java.lang.String)" />
      <edge id="973" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)" />
      <edge id="974" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="975" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="976" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)" />
      <edge id="977" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)" />
      <edge id="978" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)" />
      <edge id="979" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="980" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="981" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="982" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="983" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="984" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="985" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="986" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)" />
      <edge id="987" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="988" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="989" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="990" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="991" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)" />
      <edge id="992" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)" />
      <edge id="993" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)" />
      <edge id="994" name="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()&gt;org.sonar.core.issue.db.IssueDto.toDefaultIssue()" />
      <edge id="995" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="996" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="997" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)" />
      <edge id="998" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.rule.RuleDto()" />
      <edge id="999" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.rule.RuleDto.setId(java.lang.Integer)" />
      <edge id="1000" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.rule.RuleDto.setRuleKey(java.lang.String)" />
      <edge id="1001" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.rule.RuleDto.setRepositoryKey(java.lang.String)" />
      <edge id="1002" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.setLanguage(java.lang.String)" />
      <edge id="1003" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.getRuleId()" />
      <edge id="1004" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.getRuleRepo()" />
      <edge id="1005" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.getRule()" />
      <edge id="1006" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.getRuleKey()" />
      <edge id="1007" name="org.sonar.core.issue.db.IssueDtoTest.set_rule()&gt;org.sonar.core.issue.db.IssueDto.getLanguage()" />
      <edge id="1008" name="org.sonar.core.issue.db.IssueDtoTest.set_tags()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1009" name="org.sonar.core.issue.db.IssueDtoTest.set_tags()&gt;org.sonar.core.issue.db.IssueDto.getTags()" />
      <edge id="1010" name="org.sonar.core.issue.db.IssueDtoTest.set_tags()&gt;org.sonar.core.issue.db.IssueDto.getTagsString()" />
      <edge id="1011" name="org.sonar.core.issue.db.IssueDtoTest.set_tags()&gt;org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)" />
      <edge id="1012" name="org.sonar.core.issue.db.IssueDtoTest.set_tags()&gt;org.sonar.core.issue.db.IssueDto.setTagsString(java.lang.String)" />
      <edge id="1013" name="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1014" name="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1015" name="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterMapper.selectByUser(java.lang.String)" />
      <edge id="1016" name="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1017" name="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1018" name="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1019" name="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterMapper.selectFavoriteFiltersByUser(java.lang.String)" />
      <edge id="1020" name="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1021" name="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1022" name="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1023" name="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()&gt;org.sonar.core.issue.db.IssueFilterMapper.selectSharedFilters()" />
      <edge id="1024" name="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1025" name="org.sonar.core.issue.db.IssueFilterDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1026" name="org.sonar.core.issue.db.IssueFilterDao.selectById(long)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1027" name="org.sonar.core.issue.db.IssueFilterDao.selectById(long)&gt;org.sonar.core.issue.db.IssueFilterMapper.selectById(long)" />
      <edge id="1028" name="org.sonar.core.issue.db.IssueFilterDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1029" name="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1030" name="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1031" name="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)&gt;org.sonar.core.issue.db.IssueFilterMapper.selectProvidedFilterByName(java.lang.String)" />
      <edge id="1032" name="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1033" name="org.sonar.core.issue.db.IssueFilterDao.delete(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1034" name="org.sonar.core.issue.db.IssueFilterDao.delete(long)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1035" name="org.sonar.core.issue.db.IssueFilterDao.delete(long)&gt;org.sonar.core.issue.db.IssueFilterMapper.delete(long)" />
      <edge id="1036" name="org.sonar.core.issue.db.IssueFilterDao.delete(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1037" name="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1038" name="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1039" name="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.issue.db.IssueFilterMapper.insert(org.sonar.core.issue.db.IssueFilterDto)" />
      <edge id="1040" name="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1041" name="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1042" name="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1043" name="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.issue.db.IssueFilterMapper.update(org.sonar.core.issue.db.IssueFilterDto)" />
      <edge id="1044" name="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1045" name="org.sonar.core.issue.db.IssueFilterDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1046" name="org.sonar.core.issue.db.IssueFilterDaoTest.createDao()&gt;org.sonar.core.issue.db.IssueFilterDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="1047" name="org.sonar.core.issue.db.IssueFilterDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1048" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1049" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()&gt;org.sonar.core.issue.db.IssueFilterDao.delete(long)" />
      <edge id="1050" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1051" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1052" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto()" />
      <edge id="1053" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto.setName(java.lang.String)" />
      <edge id="1054" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto.setUserLogin(java.lang.String)" />
      <edge id="1055" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto.setShared(boolean)" />
      <edge id="1056" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto.setDescription(java.lang.String)" />
      <edge id="1057" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDto.setData(java.lang.String)" />
      <edge id="1058" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)" />
      <edge id="1059" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1060" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1061" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterDao.selectById(long)" />
      <edge id="1062" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterDto.getId()" />
      <edge id="1063" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterDto.getName()" />
      <edge id="1064" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterDto.isShared()" />
      <edge id="1065" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1066" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user()&gt;org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)" />
      <edge id="1067" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1068" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()&gt;org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)" />
      <edge id="1069" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()&gt;org.sonar.core.issue.db.IssueFilterDto.getId()" />
      <edge id="1070" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1071" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()&gt;org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)" />
      <edge id="1072" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()&gt;org.sonar.core.issue.db.IssueFilterDto.getName()" />
      <edge id="1073" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_shared()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1074" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_shared()&gt;org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()" />
      <edge id="1075" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1076" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto()" />
      <edge id="1077" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setId(java.lang.Long)" />
      <edge id="1078" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setName(java.lang.String)" />
      <edge id="1079" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setShared(boolean)" />
      <edge id="1080" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setDescription(java.lang.String)" />
      <edge id="1081" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setData(java.lang.String)" />
      <edge id="1082" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDto.setUserLogin(java.lang.String)" />
      <edge id="1083" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)" />
      <edge id="1084" name="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1085" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1086" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1087" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectByFilterId(long)" />
      <edge id="1088" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1089" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1090" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1091" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectById(long)" />
      <edge id="1092" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1093" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1094" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1095" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteMapper.delete(long)" />
      <edge id="1096" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1097" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1098" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1099" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)&gt;org.sonar.core.issue.db.IssueFilterFavouriteMapper.deleteByFilterId(long)" />
      <edge id="1100" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1101" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1102" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1103" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)&gt;org.sonar.core.issue.db.IssueFilterFavouriteMapper.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" />
      <edge id="1104" name="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1105" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1106" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.createDao()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="1107" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1108" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1109" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)" />
      <edge id="1110" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1111" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1112" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)" />
      <edge id="1113" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1114" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1115" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto()" />
      <edge id="1116" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.setUserLogin(java.lang.String)" />
      <edge id="1117" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.setIssueFilterId(java.lang.Long)" />
      <edge id="1118" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" />
      <edge id="1119" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1120" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1121" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)" />
      <edge id="1122" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getId()" />
      <edge id="1123" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getUserLogin()" />
      <edge id="1124" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getIssueFilterId()" />
      <edge id="1125" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getCreatedAt()" />
      <edge id="1126" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1127" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)" />
      <edge id="1128" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getId()" />
      <edge id="1129" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getUserLogin()" />
      <edge id="1130" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getIssueFilterId()" />
      <edge id="1131" name="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()&gt;org.sonar.core.issue.db.IssueFilterFavouriteDto.getCreatedAt()" />
      <edge id="1132" name="org.sonar.core.issue.db.IssueMapperTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1133" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1134" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="1135" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="1136" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1137" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1138" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1139" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="1140" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="1141" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="1142" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1143" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1144" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="1145" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="1146" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1147" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="1148" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="1149" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="1150" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="1151" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)" />
      <edge id="1152" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)" />
      <edge id="1153" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)" />
      <edge id="1154" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setCreatedAt(long)" />
      <edge id="1155" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="1156" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1157" name="org.sonar.core.issue.db.IssueMapperTest.insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1158" name="org.sonar.core.issue.db.IssueMapperTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1159" name="org.sonar.core.issue.db.IssueMapperTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="1160" name="org.sonar.core.issue.db.IssueMapperTest.tearDown()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1161" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1162" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1163" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="1164" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="1165" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1166" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1167" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1168" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="1169" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="1170" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="1171" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1172" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1173" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="1174" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="1175" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1176" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="1177" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="1178" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="1179" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="1180" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)" />
      <edge id="1181" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)" />
      <edge id="1182" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)" />
      <edge id="1183" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setCreatedAt(long)" />
      <edge id="1184" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="1185" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1186" name="org.sonar.core.issue.db.IssueMapperTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1187" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1188" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1189" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="1190" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="1191" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1192" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1193" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1194" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="1195" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="1196" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="1197" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1198" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1199" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="1200" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="1201" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1202" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="1203" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="1204" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="1205" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="1206" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)" />
      <edge id="1207" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)" />
      <edge id="1208" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)" />
      <edge id="1209" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setCreatedAt(long)" />
      <edge id="1210" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="1211" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)" />
      <edge id="1212" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.issue.db.IssueMapper.updateIfBeforeSelectedDate(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1213" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1214" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1215" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1216" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="1217" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)" />
      <edge id="1218" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1219" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1220" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1221" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)" />
      <edge id="1222" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)" />
      <edge id="1223" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="1224" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1225" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1226" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)" />
      <edge id="1227" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)" />
      <edge id="1228" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1229" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="1230" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)" />
      <edge id="1231" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)" />
      <edge id="1232" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)" />
      <edge id="1233" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)" />
      <edge id="1234" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)" />
      <edge id="1235" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)" />
      <edge id="1236" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setCreatedAt(long)" />
      <edge id="1237" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)" />
      <edge id="1238" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)" />
      <edge id="1239" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.issue.db.IssueMapper.updateIfBeforeSelectedDate(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1240" name="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1241" name="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1242" name="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)&gt;org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1243" name="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)&gt;org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1244" name="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1245" name="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)&gt;org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)" />
      <edge id="1246" name="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)&gt;org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" />
      <edge id="1247" name="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)&gt;org.sonar.core.issue.db.IssueStorage.doAfterSave()" />
      <edge id="1248" name="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" />
      <edge id="1249" name="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)" />
      <edge id="1250" name="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" />
      <edge id="1251" name="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1252" name="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)&gt;org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)" />
      <edge id="1253" name="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1254" name="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)" />
      <edge id="1255" name="org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)" />
      <edge id="1256" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1257" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1258" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1259" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1260" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1261" name="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1262" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)&gt;org.sonar.core.issue.db.IssueStorage(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" />
      <edge id="1263" name="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1264" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorage.rule(org.sonar.api.issue.Issue)" />
      <edge id="1265" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" />
      <edge id="1266" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1267" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1268" name="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1269" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" />
      <edge id="1270" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1271" name="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1272" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)&gt;org.sonar.core.issue.db.IssueStorage(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" />
      <edge id="1273" name="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1274" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorage.rule(org.sonar.api.issue.Issue)" />
      <edge id="1275" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)" />
      <edge id="1276" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1277" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1278" name="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1279" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" />
      <edge id="1280" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1281" name="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1282" name="org.sonar.core.issue.db.IssueStorageTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1283" name="org.sonar.core.issue.db.IssueStorageTest.after()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="1284" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" />
      <edge id="1285" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1286" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()" />
      <edge id="1287" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()&gt;org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1288" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1289" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" />
      <edge id="1290" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1291" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()" />
      <edge id="1292" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1293" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1294" name="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1295" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1296" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" />
      <edge id="1297" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1298" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()" />
      <edge id="1299" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1300" name="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1301" name="org.sonar.core.issue.db.IssueStorageTest.before()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1302" name="org.sonar.core.issue.db.IssueStorageTest.before()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1303" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="1304" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.component.ComponentDto.setId(java.lang.Long)" />
      <edge id="1305" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.component.ComponentDto.setUuid(java.lang.String)" />
      <edge id="1306" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)" />
      <edge id="1307" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1308" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()" />
      <edge id="1309" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1310" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1311" name="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1312" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1313" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="1314" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.component.ComponentDto.setId(java.lang.Long)" />
      <edge id="1315" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.component.ComponentDto.setUuid(java.lang.String)" />
      <edge id="1316" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)" />
      <edge id="1317" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1318" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()" />
      <edge id="1319" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1320" name="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1321" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolveAssignee(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1322" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolvePlan(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1323" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1324" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolveEffortToFix(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1325" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolveResolution(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1326" name="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolveStatus(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1327" name="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)&gt;org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)" />
      <edge id="1328" name="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)&gt;org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1329" name="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)&gt;org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1330" name="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)&gt;org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" />
      <edge id="1331" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveAssignee(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getAssignee()" />
      <edge id="1332" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveEffortToFix(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getEffortToFix()" />
      <edge id="1333" name="org.sonar.core.issue.db.UpdateConflictResolver.resolvePlan(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getActionPlanKey()" />
      <edge id="1334" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveResolution(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getResolution()" />
      <edge id="1335" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.isManualSeverity()" />
      <edge id="1336" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getSeverity()" />
      <edge id="1337" name="org.sonar.core.issue.db.UpdateConflictResolver.resolveStatus(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.db.IssueDto.getStatus()" />
      <edge id="1338" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1339" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1340" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1341" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1342" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)" />
      <edge id="1343" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.UpdateConflictResolver()" />
      <edge id="1344" name="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()&gt;org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1345" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1346" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1347" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1348" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)" />
      <edge id="1349" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)" />
      <edge id="1350" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)" />
      <edge id="1351" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1352" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)" />
      <edge id="1353" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1354" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1355" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)" />
      <edge id="1356" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)" />
      <edge id="1357" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)" />
      <edge id="1358" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.UpdateConflictResolver()" />
      <edge id="1359" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()&gt;org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1360" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)" />
      <edge id="1361" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto()" />
      <edge id="1362" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)" />
      <edge id="1363" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)" />
      <edge id="1364" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)" />
      <edge id="1365" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)" />
      <edge id="1366" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)" />
      <edge id="1367" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)" />
      <edge id="1368" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)" />
      <edge id="1369" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.UpdateConflictResolver()" />
      <edge id="1370" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)" />
      <edge id="1371" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)" />
      <edge id="1372" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.getKee()" />
      <edge id="1373" name="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()&gt;org.sonar.core.issue.db.IssueDto.getAssignee()" />
      <edge id="1374" name="org.sonar.core.issue.workflow.Function$Context.issue()&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.issue()" />
      <edge id="1375" name="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setAssignee(org.sonar.api.user.User)" />
      <edge id="1376" name="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setAssignee(org.sonar.api.user.User)&gt;org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1377" name="org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setCloseDate(boolean)" />
      <edge id="1378" name="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setCloseDate(boolean)&gt;org.sonar.core.issue.IssueUpdater.setCloseDate(org.sonar.api.issue.internal.DefaultIssue,java.util.Date,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1379" name="org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setLine(java.lang.Integer)" />
      <edge id="1380" name="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setLine(java.lang.Integer)&gt;org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" />
      <edge id="1381" name="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setResolution(java.lang.String)" />
      <edge id="1382" name="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setResolution(java.lang.String)&gt;org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1383" name="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext(org.sonar.core.issue.IssueUpdater,org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1384" name="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1385" name="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_be_end_of_life()&gt;org.sonar.core.issue.workflow.IsEndOfLife(boolean)" />
      <edge id="1386" name="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_be_end_of_life()&gt;org.sonar.core.issue.workflow.IsEndOfLife.matches(org.sonar.api.issue.Issue)" />
      <edge id="1387" name="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_not_be_end_of_life()&gt;org.sonar.core.issue.workflow.IsEndOfLife(boolean)" />
      <edge id="1388" name="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_not_be_end_of_life()&gt;org.sonar.core.issue.workflow.IsEndOfLife.matches(org.sonar.api.issue.Issue)" />
      <edge id="1389" name="org.sonar.core.issue.workflow.IsManualTest.should_match()&gt;org.sonar.core.issue.workflow.IsManual(boolean)" />
      <edge id="1390" name="org.sonar.core.issue.workflow.IsManualTest.should_match()&gt;org.sonar.core.issue.workflow.IsManual.matches(org.sonar.api.issue.Issue)" />
      <edge id="1391" name="org.sonar.core.issue.workflow.IsManualTest.should_match_dead()&gt;org.sonar.core.issue.workflow.IsManual(boolean)" />
      <edge id="1392" name="org.sonar.core.issue.workflow.IsManualTest.should_match_dead()&gt;org.sonar.core.issue.workflow.IsManual.matches(org.sonar.api.issue.Issue)" />
      <edge id="1393" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1394" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.State.transition(java.lang.String)" />
      <edge id="1395" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Transition.automatic()" />
      <edge id="1396" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1397" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Transition.functions()" />
      <edge id="1398" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1399" name="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Transition.to()" />
      <edge id="1400" name="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)" />
      <edge id="1401" name="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1402" name="org.sonar.core.issue.workflow.IssueWorkflow.statusKeys()&gt;org.sonar.core.issue.workflow.StateMachine.stateKeys()" />
      <edge id="1403" name="org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)&gt;org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)" />
      <edge id="1404" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)" />
      <edge id="1405" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1406" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1407" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1408" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])" />
      <edge id="1409" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.IsEndOfLife(boolean)" />
      <edge id="1410" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])" />
      <edge id="1411" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.SetEndOfLife()" />
      <edge id="1412" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.SetCloseDate(boolean)" />
      <edge id="1413" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.automatic()" />
      <edge id="1414" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1415" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.IsManual(boolean)" />
      <edge id="1416" name="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.SetResolution(java.lang.String)" />
      <edge id="1417" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)" />
      <edge id="1418" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1419" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1420" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1421" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])" />
      <edge id="1422" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.SetResolution(java.lang.String)" />
      <edge id="1423" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1424" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])" />
      <edge id="1425" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.IsManual(boolean)" />
      <edge id="1426" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.SetCloseDate(boolean)" />
      <edge id="1427" name="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.requiredProjectPermission(java.lang.String)" />
      <edge id="1428" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)" />
      <edge id="1429" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)" />
      <edge id="1430" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1431" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Transition.functions()" />
      <edge id="1432" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1433" name="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.workflow.Transition.to()" />
      <edge id="1434" name="org.sonar.core.issue.workflow.IssueWorkflow.start()&gt;org.sonar.core.issue.workflow.StateMachine.builder()" />
      <edge id="1435" name="org.sonar.core.issue.workflow.IssueWorkflow.start()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])" />
      <edge id="1436" name="org.sonar.core.issue.workflow.IssueWorkflow.start()&gt;org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" />
      <edge id="1437" name="org.sonar.core.issue.workflow.IssueWorkflow.start()&gt;org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" />
      <edge id="1438" name="org.sonar.core.issue.workflow.IssueWorkflow.start()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.build()" />
      <edge id="1439" name="org.sonar.core.issue.workflow.IssueWorkflowTest$1.apply(org.sonar.core.issue.workflow.Transition)&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1440" name="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)&gt;org.sonar.core.issue.workflow.IssueWorkflowTest$1()" />
      <edge id="1441" name="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1442" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_confirmed_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1443" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_confirmed_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1444" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_open_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1445" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_open_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1446" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_reopened_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1447" name="org.sonar.core.issue.workflow.IssueWorkflowTest.close_reopened_dead_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1448" name="org.sonar.core.issue.workflow.IssueWorkflowTest.do_automatic_transition()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1449" name="org.sonar.core.issue.workflow.IssueWorkflowTest.do_automatic_transition()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1450" name="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_on_automatic_trans()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1451" name="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_on_automatic_trans()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1452" name="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_when_listing_transitions()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1453" name="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_when_listing_transitions()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1454" name="org.sonar.core.issue.workflow.IssueWorkflowTest.flag_as_false_positive()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1455" name="org.sonar.core.issue.workflow.IssueWorkflowTest.flag_as_false_positive()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1456" name="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()&gt;org.sonar.core.issue.workflow.IssueWorkflow.machine()" />
      <edge id="1457" name="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1458" name="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()&gt;org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)" />
      <edge id="1459" name="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()&gt;org.sonar.core.issue.workflow.IssueWorkflow.stop()" />
      <edge id="1460" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_no_out_transition_from_status_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1461" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_no_out_transition_from_status_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1462" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1463" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1464" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()&gt;org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" />
      <edge id="1465" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1466" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1467" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()&gt;org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" />
      <edge id="1468" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1469" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1470" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()&gt;org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" />
      <edge id="1471" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1472" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1473" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()&gt;org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" />
      <edge id="1474" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1475" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1476" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()&gt;org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" />
      <edge id="1477" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_statuses()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1478" name="org.sonar.core.issue.workflow.IssueWorkflowTest.list_statuses()&gt;org.sonar.core.issue.workflow.IssueWorkflow.statusKeys()" />
      <edge id="1479" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_component_be_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1480" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_component_be_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1481" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_rule_be_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1482" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_rule_be_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1483" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1484" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1485" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()&gt;org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="1486" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1487" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1488" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1489" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" />
      <edge id="1490" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()&gt;org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="1491" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1492" name="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1493" name="org.sonar.core.issue.workflow.IssueWorkflowTest.wont_fix()&gt;org.sonar.core.issue.workflow.IssueWorkflow.start()" />
      <edge id="1494" name="org.sonar.core.issue.workflow.IssueWorkflowTest.wont_fix()&gt;org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1495" name="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1496" name="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)" />
      <edge id="1497" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="1498" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="1499" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="1500" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.issue.workflow.SetAssignee(org.sonar.api.user.User)" />
      <edge id="1501" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1502" name="org.sonar.core.issue.workflow.SetAssigneeTest.assign()&gt;org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)" />
      <edge id="1503" name="org.sonar.core.issue.workflow.SetAssigneeTest.unassign()&gt;org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1504" name="org.sonar.core.issue.workflow.SetAssigneeTest.unassign()&gt;org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)" />
      <edge id="1505" name="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1506" name="org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)" />
      <edge id="1507" name="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()&gt;org.sonar.core.issue.workflow.SetCloseDate(boolean)" />
      <edge id="1508" name="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()&gt;org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1509" name="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()&gt;org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)" />
      <edge id="1510" name="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1511" name="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.issue()" />
      <edge id="1512" name="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1513" name="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)" />
      <edge id="1514" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()&gt;org.sonar.core.issue.workflow.Function$Context.issue()" />
      <edge id="1515" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()&gt;org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1516" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()&gt;org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)" />
      <edge id="1517" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()&gt;org.sonar.core.issue.workflow.Function$Context.issue()" />
      <edge id="1518" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()&gt;org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1519" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1520" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()&gt;org.sonar.core.issue.workflow.Function$Context.issue()" />
      <edge id="1521" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()&gt;org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1522" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1523" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()&gt;org.sonar.core.issue.workflow.Function$Context.issue()" />
      <edge id="1524" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()&gt;org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1525" name="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1526" name="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1527" name="org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1528" name="org.sonar.core.issue.workflow.SetResolutionTest.execute()&gt;org.sonar.core.issue.workflow.SetResolution(java.lang.String)" />
      <edge id="1529" name="org.sonar.core.issue.workflow.SetResolutionTest.execute()&gt;org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)" />
      <edge id="1530" name="org.sonar.core.issue.workflow.SetResolutionTest.execute()&gt;org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" />
      <edge id="1531" name="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])&gt;org.sonar.core.issue.workflow.State.checkDuplications(org.sonar.core.issue.workflow.Transition[],java.lang.String)" />
      <edge id="1532" name="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.Transition.automatic()" />
      <edge id="1533" name="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)" />
      <edge id="1534" name="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.Transition.automatic()" />
      <edge id="1535" name="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)&gt;org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)" />
      <edge id="1536" name="org.sonar.core.issue.workflow.State.transition(java.lang.String)&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1537" name="org.sonar.core.issue.workflow.State.checkDuplications(org.sonar.core.issue.workflow.Transition[],java.lang.String)&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1538" name="org.sonar.core.issue.workflow.StateMachine$Builder.build()&gt;org.sonar.core.issue.workflow.StateMachine(org.sonar.core.issue.workflow.StateMachine$Builder)" />
      <edge id="1539" name="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)&gt;org.sonar.core.issue.workflow.Transition.from()" />
      <edge id="1540" name="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)&gt;org.sonar.core.issue.workflow.Transition.to()" />
      <edge id="1541" name="org.sonar.core.issue.workflow.StateMachine(org.sonar.core.issue.workflow.StateMachine$Builder)&gt;org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])" />
      <edge id="1542" name="org.sonar.core.issue.workflow.StateMachine.builder()&gt;org.sonar.core.issue.workflow.StateMachine$Builder()" />
      <edge id="1543" name="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()&gt;org.sonar.core.issue.workflow.StateMachine.builder()" />
      <edge id="1544" name="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])" />
      <edge id="1545" name="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.build()" />
      <edge id="1546" name="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()&gt;org.sonar.core.issue.workflow.StateMachine.stateKeys()" />
      <edge id="1547" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.StateMachine.builder()" />
      <edge id="1548" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])" />
      <edge id="1549" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)" />
      <edge id="1550" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1551" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1552" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1553" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1554" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.StateMachine$Builder.build()" />
      <edge id="1555" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)" />
      <edge id="1556" name="org.sonar.core.issue.workflow.StateMachineTest.stateKey()&gt;org.sonar.core.issue.workflow.State.transition(java.lang.String)" />
      <edge id="1557" name="org.sonar.core.issue.workflow.StateTest.key_should_be_set()&gt;org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])" />
      <edge id="1558" name="org.sonar.core.issue.workflow.StateTest.key_should_be_upper_case()&gt;org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])" />
      <edge id="1559" name="org.sonar.core.issue.workflow.StateTest.no_duplicated_out_transitions()&gt;org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])" />
      <edge id="1560" name="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()&gt;org.sonar.core.issue.workflow.Transition(org.sonar.core.issue.workflow.Transition$TransitionBuilder)" />
      <edge id="1561" name="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1562" name="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1563" name="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1564" name="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1565" name="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder(java.lang.String)" />
      <edge id="1566" name="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1567" name="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1568" name="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1569" name="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1570" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1571" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1572" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1573" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1574" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1575" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1576" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1577" name="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1578" name="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1579" name="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1580" name="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1581" name="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1582" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1583" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1584" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1585" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])" />
      <edge id="1586" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1587" name="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()&gt;org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)" />
      <edge id="1588" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1589" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1590" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1591" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.automatic()" />
      <edge id="1592" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1593" name="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()&gt;org.sonar.core.issue.workflow.Transition.automatic()" />
      <edge id="1594" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1595" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1596" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1597" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])" />
      <edge id="1598" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])" />
      <edge id="1599" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1600" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1601" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.from()" />
      <edge id="1602" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.to()" />
      <edge id="1603" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.conditions()" />
      <edge id="1604" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.functions()" />
      <edge id="1605" name="org.sonar.core.issue.workflow.TransitionTest.test_builder()&gt;org.sonar.core.issue.workflow.Transition.automatic()" />
      <edge id="1606" name="org.sonar.core.issue.workflow.TransitionTest.test_equals_and_hashCode()&gt;org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="1607" name="org.sonar.core.issue.workflow.TransitionTest.test_equals_and_hashCode()&gt;org.sonar.core.issue.workflow.Transition.hashCode()" />
      <edge id="1608" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" />
      <edge id="1609" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)" />
      <edge id="1610" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)" />
      <edge id="1611" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" />
      <edge id="1612" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.key()" />
      <edge id="1613" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.from()" />
      <edge id="1614" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.to()" />
      <edge id="1615" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.conditions()" />
      <edge id="1616" name="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()&gt;org.sonar.core.issue.workflow.Transition.functions()" />
      <edge id="1617" name="org.sonar.core.issue.workflow.TransitionTest.test_toString()&gt;org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="1618" name="org.sonar.core.issue.workflow.TransitionTest.test_toString()&gt;org.sonar.core.issue.workflow.Transition.toString()" />
      <edge id="1619" name="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.compare_plans_with_deadlines()&gt;org.sonar.core.issue.ActionPlanDeadlineComparator()" />
      <edge id="1620" name="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.end_with_plans_without_deadline()&gt;org.sonar.core.issue.ActionPlanDeadlineComparator()" />
      <edge id="1621" name="org.sonar.core.issue.ActionPlanStats()&gt;org.sonar.core.issue.DefaultActionPlan()" />
      <edge id="1622" name="org.sonar.core.issue.ActionPlanStats.isOpen()&gt;org.sonar.core.issue.DefaultActionPlan.status()" />
      <edge id="1623" name="org.sonar.core.issue.ActionPlanStats.overDue()&gt;org.sonar.core.issue.DefaultActionPlan.deadLine()" />
      <edge id="1624" name="org.sonar.core.issue.ActionPlanStats.overDue()&gt;org.sonar.core.issue.ActionPlanStats.isOpen()" />
      <edge id="1625" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" />
      <edge id="1626" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.ActionPlanStats()" />
      <edge id="1627" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="1628" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)" />
      <edge id="1629" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)" />
      <edge id="1630" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)" />
      <edge id="1631" name="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)" />
      <edge id="1632" name="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()&gt;org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" />
      <edge id="1633" name="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()&gt;org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)" />
      <edge id="1634" name="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()&gt;org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)" />
      <edge id="1635" name="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()&gt;org.sonar.core.issue.ActionPlanStats.overDue()" />
      <edge id="1636" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan()" />
      <edge id="1637" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="1638" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)" />
      <edge id="1639" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)" />
      <edge id="1640" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)" />
      <edge id="1641" name="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)&gt;org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)" />
      <edge id="1642" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder()" />
      <edge id="1643" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.componentKey(java.lang.String)" />
      <edge id="1644" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.projectKey(java.lang.String)" />
      <edge id="1645" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.message(java.lang.String)" />
      <edge id="1646" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.line(java.lang.Integer)" />
      <edge id="1647" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.effortToFix(java.lang.Double)" />
      <edge id="1648" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.ruleKey(org.sonar.api.rule.RuleKey)" />
      <edge id="1649" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.severity(java.lang.String)" />
      <edge id="1650" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.attribute(java.lang.String,java.lang.String)" />
      <edge id="1651" name="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()&gt;org.sonar.core.issue.DefaultIssueBuilder.build()" />
      <edge id="1652" name="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()&gt;org.sonar.core.issue.DefaultIssueBuilder()" />
      <edge id="1653" name="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()&gt;org.sonar.core.issue.DefaultIssueBuilder.componentKey(java.lang.String)" />
      <edge id="1654" name="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()&gt;org.sonar.core.issue.DefaultIssueBuilder.projectKey(java.lang.String)" />
      <edge id="1655" name="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()&gt;org.sonar.core.issue.DefaultIssueBuilder.ruleKey(org.sonar.api.rule.RuleKey)" />
      <edge id="1656" name="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()&gt;org.sonar.core.issue.DefaultIssueBuilder.build()" />
      <edge id="1657" name="org.sonar.core.issue.IssueFilterSerializerTest.should_deserialize()&gt;org.sonar.core.issue.IssueFilterSerializer.deserialize(java.lang.String)" />
      <edge id="1658" name="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_deserializing()&gt;org.sonar.core.issue.IssueFilterSerializer.deserialize(java.lang.String)" />
      <edge id="1659" name="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_serializing()&gt;org.sonar.core.issue.IssueFilterSerializer.serialize(java.util.Map)" />
      <edge id="1660" name="org.sonar.core.issue.IssueFilterSerializerTest.should_serialize()&gt;org.sonar.core.issue.IssueFilterSerializer.serialize(java.util.Map)" />
      <edge id="1661" name="org.sonar.core.issue.IssueUpdater.setPastEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1662" name="org.sonar.core.issue.IssueUpdater.setPastLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)&gt;org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" />
      <edge id="1663" name="org.sonar.core.issue.IssueUpdater.setPastMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1664" name="org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1665" name="org.sonar.core.issue.IssueUpdater.setPastSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1666" name="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater.setTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1667" name="org.sonar.core.issue.IssueUpdater.setTags(org.sonar.api.issue.internal.DefaultIssue,java.util.Collection,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater$1()" />
      <edge id="1668" name="org.sonar.core.issue.IssueUpdater.setTags(org.sonar.api.issue.internal.DefaultIssue,java.util.Collection,org.sonar.api.issue.internal.IssueChangeContext)&gt;org.sonar.core.issue.IssueUpdater$2()" />
      <edge id="1669" name="org.sonar.core.issue.IssueUpdaterTest.assign()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="1670" name="org.sonar.core.issue.IssueUpdaterTest.assign()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="1671" name="org.sonar.core.issue.IssueUpdaterTest.assign()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="1672" name="org.sonar.core.issue.IssueUpdaterTest.assign()&gt;org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1673" name="org.sonar.core.issue.IssueUpdaterTest.change_assignee()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="1674" name="org.sonar.core.issue.IssueUpdaterTest.change_assignee()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="1675" name="org.sonar.core.issue.IssueUpdaterTest.change_assignee()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="1676" name="org.sonar.core.issue.IssueUpdaterTest.change_assignee()&gt;org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1677" name="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="1678" name="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="1679" name="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="1680" name="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()&gt;org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1681" name="org.sonar.core.issue.IssueUpdaterTest.not_change_line()&gt;org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" />
      <edge id="1682" name="org.sonar.core.issue.IssueUpdaterTest.not_change_manual_severity()&gt;org.sonar.core.issue.IssueUpdater.setManualSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1683" name="org.sonar.core.issue.IssueUpdaterTest.not_change_resolution()&gt;org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1684" name="org.sonar.core.issue.IssueUpdaterTest.not_change_severity()&gt;org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1685" name="org.sonar.core.issue.IssueUpdaterTest.not_change_status()&gt;org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1686" name="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()&gt;org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" />
      <edge id="1687" name="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="1688" name="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()&gt;org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1689" name="org.sonar.core.issue.IssueUpdaterTest.not_revert_manual_severity()&gt;org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1690" name="org.sonar.core.issue.IssueUpdaterTest.not_set_effort_to_fix_if_unchanged()&gt;org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1691" name="org.sonar.core.issue.IssueUpdaterTest.not_set_past_project_if_no_change()&gt;org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1692" name="org.sonar.core.issue.IssueUpdaterTest.not_update_attribute()&gt;org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1693" name="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()&gt;org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" />
      <edge id="1694" name="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()&gt;org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)" />
      <edge id="1695" name="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()&gt;org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1696" name="org.sonar.core.issue.IssueUpdaterTest.plan_with_no_existing_plan()&gt;org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" />
      <edge id="1697" name="org.sonar.core.issue.IssueUpdaterTest.plan_with_no_existing_plan()&gt;org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1698" name="org.sonar.core.issue.IssueUpdaterTest.setUp()&gt;org.sonar.core.issue.IssueUpdater()" />
      <edge id="1699" name="org.sonar.core.issue.IssueUpdaterTest.set_author()&gt;org.sonar.core.issue.IssueUpdater.setAuthorLogin(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1700" name="org.sonar.core.issue.IssueUpdaterTest.set_effort_to_fix()&gt;org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1701" name="org.sonar.core.issue.IssueUpdaterTest.set_line()&gt;org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" />
      <edge id="1702" name="org.sonar.core.issue.IssueUpdaterTest.set_manual_severity()&gt;org.sonar.core.issue.IssueUpdater.setManualSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1703" name="org.sonar.core.issue.IssueUpdaterTest.set_message()&gt;org.sonar.core.issue.IssueUpdater.setMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1704" name="org.sonar.core.issue.IssueUpdaterTest.set_new_attribute_value()&gt;org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1705" name="org.sonar.core.issue.IssueUpdaterTest.set_past_effort()&gt;org.sonar.core.issue.IssueUpdater.setPastEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1706" name="org.sonar.core.issue.IssueUpdaterTest.set_past_line()&gt;org.sonar.core.issue.IssueUpdater.setPastLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" />
      <edge id="1707" name="org.sonar.core.issue.IssueUpdaterTest.set_past_message()&gt;org.sonar.core.issue.IssueUpdater.setPastMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1708" name="org.sonar.core.issue.IssueUpdaterTest.set_past_project()&gt;org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1709" name="org.sonar.core.issue.IssueUpdaterTest.set_past_severity()&gt;org.sonar.core.issue.IssueUpdater.setPastSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1710" name="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt()&gt;org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1711" name="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_with_null_new_value()&gt;org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1712" name="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_without_previous_value()&gt;org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1713" name="org.sonar.core.issue.IssueUpdaterTest.set_project()&gt;org.sonar.core.issue.IssueUpdater.setProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1714" name="org.sonar.core.issue.IssueUpdaterTest.set_resolution()&gt;org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1715" name="org.sonar.core.issue.IssueUpdaterTest.set_severity()&gt;org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1716" name="org.sonar.core.issue.IssueUpdaterTest.set_status()&gt;org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1717" name="org.sonar.core.issue.IssueUpdaterTest.unassign()&gt;org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1718" name="org.sonar.core.issue.IssueUpdaterTest.unplan()&gt;org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1719" name="org.sonar.core.issue.IssueUpdaterTest.unset_attribute()&gt;org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1720" name="org.sonar.core.issue.IssueUpdaterTest.update_severity()&gt;org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" />
      <edge id="1721" name="org.sonar.core.measure.db.MeasureDtoTest.fail_to_get_out_of_bounds_variation()&gt;org.sonar.core.measure.db.MeasureDto.getVariation(int)" />
      <edge id="1722" name="org.sonar.core.measure.db.MeasureDtoTest.fail_to_set_out_of_bounds_variation()&gt;org.sonar.core.measure.db.MeasureDto.setVariation(int,java.lang.Double)" />
      <edge id="1723" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setComponentKey(java.lang.String)" />
      <edge id="1724" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setMetricKey(java.lang.String)" />
      <edge id="1725" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setId(java.lang.Long)" />
      <edge id="1726" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setValue(java.lang.Double)" />
      <edge id="1727" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)" />
      <edge id="1728" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.setVariation(int,java.lang.Double)" />
      <edge id="1729" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.getId()" />
      <edge id="1730" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.getValue()" />
      <edge id="1731" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.getData()" />
      <edge id="1732" name="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.MeasureDto.getVariation(int)" />
      <edge id="1733" name="org.sonar.core.measure.db.MeasureDtoTest.text_value_under_4000_characters()&gt;org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)" />
      <edge id="1734" name="org.sonar.core.measure.db.MeasureDtoTest.text_value_under_4000_characters()&gt;org.sonar.core.measure.db.MeasureDto.getData()" />
      <edge id="1735" name="org.sonar.core.measure.db.MeasureDtoTest.value_with_text_over_4000_characters()&gt;org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)" />
      <edge id="1736" name="org.sonar.core.measure.db.MeasureDtoTest.value_with_text_over_4000_characters()&gt;org.sonar.core.measure.db.MeasureDto.getData()" />
      <edge id="1737" name="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1738" name="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)&gt;org.sonar.core.measure.db.MeasureFilterMapper.findSystemFilterByName(java.lang.String)" />
      <edge id="1739" name="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1740" name="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1741" name="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)&gt;org.sonar.core.measure.db.MeasureFilterMapper.insert(org.sonar.core.measure.db.MeasureFilterDto)" />
      <edge id="1742" name="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1743" name="org.sonar.core.measure.db.MeasureFilterDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1744" name="org.sonar.core.measure.db.MeasureFilterDaoTest.createDao()&gt;org.sonar.core.measure.db.MeasureFilterDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="1745" name="org.sonar.core.measure.db.MeasureFilterDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1746" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1747" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()&gt;org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)" />
      <edge id="1748" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()&gt;org.sonar.core.measure.db.MeasureFilterDto.getId()" />
      <edge id="1749" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()&gt;org.sonar.core.measure.db.MeasureFilterDto.getName()" />
      <edge id="1750" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1751" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto()" />
      <edge id="1752" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto.setName(java.lang.String)" />
      <edge id="1753" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto.setUserId(java.lang.Long)" />
      <edge id="1754" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto.setShared(java.lang.Boolean)" />
      <edge id="1755" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto.setDescription(java.lang.String)" />
      <edge id="1756" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDto.setData(java.lang.String)" />
      <edge id="1757" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)" />
      <edge id="1758" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="1759" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_not_find_filter()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1760" name="org.sonar.core.measure.db.MeasureFilterDaoTest.should_not_find_filter()&gt;org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)" />
      <edge id="1761" name="org.sonar.core.measure.db.PastMeasureDtoTest.get_value_throw_a_NPE_if_value_is_null()&gt;org.sonar.core.measure.db.PastMeasureDto()" />
      <edge id="1762" name="org.sonar.core.measure.db.PastMeasureDtoTest.get_value_throw_a_NPE_if_value_is_null()&gt;org.sonar.core.measure.db.PastMeasureDto.getValue()" />
      <edge id="1763" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto()" />
      <edge id="1764" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setId(java.lang.Long)" />
      <edge id="1765" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setValue(java.lang.Double)" />
      <edge id="1766" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setMetricId(java.lang.Integer)" />
      <edge id="1767" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setRuleId(java.lang.Integer)" />
      <edge id="1768" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setCharacteristicId(java.lang.Integer)" />
      <edge id="1769" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.setPersonId(java.lang.Integer)" />
      <edge id="1770" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getId()" />
      <edge id="1771" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.hasValue()" />
      <edge id="1772" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getValue()" />
      <edge id="1773" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getMetricId()" />
      <edge id="1774" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getRuleId()" />
      <edge id="1775" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getCharacteristicId()" />
      <edge id="1776" name="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()&gt;org.sonar.core.measure.db.PastMeasureDto.getPersonId()" />
      <edge id="1777" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto()" />
      <edge id="1778" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setId(java.lang.Integer)" />
      <edge id="1779" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setKey(java.lang.String)" />
      <edge id="1780" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setShortName(java.lang.String)" />
      <edge id="1781" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setDescription(java.lang.String)" />
      <edge id="1782" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setDomain(java.lang.String)" />
      <edge id="1783" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setValueType(java.lang.String)" />
      <edge id="1784" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setQualitative(boolean)" />
      <edge id="1785" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setUserManaged(boolean)" />
      <edge id="1786" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setWorstValue(java.lang.Double)" />
      <edge id="1787" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setBestValue(java.lang.Double)" />
      <edge id="1788" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setOptimizedBestValue(boolean)" />
      <edge id="1789" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setDirection(int)" />
      <edge id="1790" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setHidden(boolean)" />
      <edge id="1791" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setDeleteHistoricalData(boolean)" />
      <edge id="1792" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.setEnabled(boolean)" />
      <edge id="1793" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getId()" />
      <edge id="1794" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getKey()" />
      <edge id="1795" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getShortName()" />
      <edge id="1796" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getDescription()" />
      <edge id="1797" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getDomain()" />
      <edge id="1798" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getValueType()" />
      <edge id="1799" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isQualitative()" />
      <edge id="1800" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isUserManaged()" />
      <edge id="1801" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getWorstValue()" />
      <edge id="1802" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getBestValue()" />
      <edge id="1803" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isOptimizedBestValue()" />
      <edge id="1804" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.getDirection()" />
      <edge id="1805" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isHidden()" />
      <edge id="1806" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isDeleteHistoricalData()" />
      <edge id="1807" name="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()&gt;org.sonar.core.metric.db.MetricDto.isEnabled()" />
      <edge id="1808" name="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1809" name="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)&gt;org.sonar.core.notification.db.NotificationQueueMapper.findOldest(int)" />
      <edge id="1810" name="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1811" name="org.sonar.core.notification.db.NotificationQueueDao.count()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1812" name="org.sonar.core.notification.db.NotificationQueueDao.count()&gt;org.sonar.core.notification.db.NotificationQueueMapper.count()" />
      <edge id="1813" name="org.sonar.core.notification.db.NotificationQueueDao.count()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1814" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1815" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1816" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.notification.db.NotificationQueueMapper.delete(long)" />
      <edge id="1817" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.notification.db.NotificationQueueDto.getId()" />
      <edge id="1818" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1819" name="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1820" name="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1821" name="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="1822" name="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)&gt;org.sonar.core.notification.db.NotificationQueueMapper.insert(org.sonar.core.notification.db.NotificationQueueDto)" />
      <edge id="1823" name="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="1824" name="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1825" name="org.sonar.core.notification.db.NotificationQueueDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1826" name="org.sonar.core.notification.db.NotificationQueueDaoTest.createDao()&gt;org.sonar.core.notification.db.NotificationQueueDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="1827" name="org.sonar.core.notification.db.NotificationQueueDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1828" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)" />
      <edge id="1829" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDao.count()" />
      <edge id="1830" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" />
      <edge id="1831" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1832" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()&gt;org.sonar.core.notification.db.NotificationQueueDto()" />
      <edge id="1833" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()&gt;org.sonar.core.notification.db.NotificationQueueDto.setId(java.lang.Long)" />
      <edge id="1834" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()&gt;org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" />
      <edge id="1835" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="1836" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_findOldest()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1837" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_findOldest()&gt;org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)" />
      <edge id="1838" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)" />
      <edge id="1839" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" />
      <edge id="1840" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDao.count()" />
      <edge id="1841" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)" />
      <edge id="1842" name="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()&gt;org.sonar.core.notification.db.NotificationQueueDto.toNotification()" />
      <edge id="1843" name="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)&gt;org.sonar.core.notification.db.NotificationQueueDto()" />
      <edge id="1844" name="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)&gt;org.sonar.core.notification.db.NotificationQueueDto.setData(byte[])" />
      <edge id="1845" name="org.sonar.core.permission.GroupWithPermissionDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1846" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1847" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1848" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1849" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1850" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1851" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1852" name="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getPermission()" />
      <edge id="1853" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1854" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1855" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1856" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1857" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)" />
      <edge id="1858" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1859" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1860" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1861" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1862" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1863" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1864" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1865" name="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1866" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1867" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1868" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1869" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1870" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1871" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1872" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getPermission()" />
      <edge id="1873" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1874" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1875" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1876" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1877" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1878" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1879" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getDescription()" />
      <edge id="1880" name="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getPermission()" />
      <edge id="1881" name="org.sonar.core.permission.GroupWithPermissionDaoTest.setUp()&gt;org.sonar.core.permission.PermissionDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="1882" name="org.sonar.core.permission.GroupWithPermissionDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1883" name="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()&gt;org.sonar.core.permission.GroupWithPermission()" />
      <edge id="1884" name="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()&gt;org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)" />
      <edge id="1885" name="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()&gt;org.sonar.core.permission.GroupWithPermission.setDescription(java.lang.String)" />
      <edge id="1886" name="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)" />
      <edge id="1887" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto()" />
      <edge id="1888" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.setName(java.lang.String)" />
      <edge id="1889" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.setDescription(java.lang.String)" />
      <edge id="1890" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.setPermission(java.lang.String)" />
      <edge id="1891" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" />
      <edge id="1892" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.name()" />
      <edge id="1893" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.description()" />
      <edge id="1894" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission()" />
      <edge id="1895" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto()" />
      <edge id="1896" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.setName(java.lang.String)" />
      <edge id="1897" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.setPermission(java.lang.String)" />
      <edge id="1898" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" />
      <edge id="1899" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.name()" />
      <edge id="1900" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.description()" />
      <edge id="1901" name="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission()" />
      <edge id="1902" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="1903" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1904" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1905" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1906" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1907" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1908" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1909" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()&gt;org.sonar.core.permission.GroupWithPermissionDto.getPermission()" />
      <edge id="1910" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1911" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1912" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1913" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1914" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)" />
      <edge id="1915" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1916" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1917" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1918" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1919" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1920" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1921" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1922" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1923" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="1924" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="1925" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="1926" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="1927" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="1928" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.GroupWithPermissionDto.getName()" />
      <edge id="1929" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.GroupWithPermissionDto.getDescription()" />
      <edge id="1930" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()&gt;org.sonar.core.permission.GroupWithPermissionDto.getPermission()" />
      <edge id="1931" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.setUp()&gt;org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="1932" name="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="1933" name="org.sonar.core.permission.GroupWithPermissionTest.test_equals()&gt;org.sonar.core.permission.GroupWithPermission()" />
      <edge id="1934" name="org.sonar.core.permission.GroupWithPermissionTest.test_equals()&gt;org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)" />
      <edge id="1935" name="org.sonar.core.permission.GroupWithPermissionTest.test_equals()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)" />
      <edge id="1936" name="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.GroupWithPermission()" />
      <edge id="1937" name="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)" />
      <edge id="1938" name="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.GroupWithPermission.hashCode()" />
      <edge id="1939" name="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.GroupWithPermission()" />
      <edge id="1940" name="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)" />
      <edge id="1941" name="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)" />
      <edge id="1942" name="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.GroupWithPermission.name()" />
      <edge id="1943" name="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.GroupWithPermission.hasPermission()" />
      <edge id="1944" name="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1945" name="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1946" name="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionMapper.selectGroups(java.util.Map)" />
      <edge id="1947" name="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1948" name="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" />
      <edge id="1949" name="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="1950" name="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.permission.PermissionDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="1951" name="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.permission.PermissionMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)" />
      <edge id="1952" name="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="1953" name="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" />
      <edge id="1954" name="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" />
      <edge id="1955" name="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)" />
      <edge id="1956" name="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.getKeyPattern()" />
      <edge id="1957" name="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionFacade.checkAtMostOneMatchForComponentKey(java.lang.String,java.util.List)" />
      <edge id="1958" name="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="1959" name="org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="1960" name="org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="1961" name="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="1962" name="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="1963" name="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="1964" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="1965" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="1966" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="1967" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()" />
      <edge id="1968" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" />
      <edge id="1969" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateUserDto.getUserId()" />
      <edge id="1970" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateUserDto.getPermission()" />
      <edge id="1971" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()" />
      <edge id="1972" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.getGroupId()" />
      <edge id="1973" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" />
      <edge id="1974" name="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.getPermission()" />
      <edge id="1975" name="org.sonar.core.permission.PermissionFacade.checkAtMostOneMatchForComponentKey(java.lang.String,java.util.List)&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="1976" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto()" />
      <edge id="1977" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)" />
      <edge id="1978" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)" />
      <edge id="1979" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)" />
      <edge id="1980" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="1981" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="1982" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="1983" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="1984" name="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupDto.getId()" />
      <edge id="1985" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto()" />
      <edge id="1986" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setRole(java.lang.String)" />
      <edge id="1987" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)" />
      <edge id="1988" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)" />
      <edge id="1989" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="1990" name="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="1991" name="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="1992" name="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" />
      <edge id="1993" name="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="1994" name="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="1995" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto()" />
      <edge id="1996" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)" />
      <edge id="1997" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)" />
      <edge id="1998" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)" />
      <edge id="1999" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="2000" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="2001" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" />
      <edge id="2002" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2003" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2004" name="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.GroupDto.getId()" />
      <edge id="2005" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto()" />
      <edge id="2006" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setRole(java.lang.String)" />
      <edge id="2007" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)" />
      <edge id="2008" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)" />
      <edge id="2009" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="2010" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="2011" name="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" />
      <edge id="2012" name="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2013" name="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2014" name="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2015" name="org.sonar.core.permission.PermissionFacadeTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2016" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2017" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2018" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.user.RoleDao()" />
      <edge id="2019" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2020" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2021" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2022" name="org.sonar.core.permission.PermissionFacadeTest.setUp()&gt;org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)" />
      <edge id="2023" name="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2024" name="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()&gt;org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2025" name="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2026" name="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2027" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2028" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="2029" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="2030" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="2031" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2032" name="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()&gt;org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()" />
      <edge id="2033" name="org.sonar.core.permission.PermissionFacadeTest.should_count_component_permissions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2034" name="org.sonar.core.permission.PermissionFacadeTest.should_count_component_permissions()&gt;org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)" />
      <edge id="2035" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2036" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()&gt;org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2037" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2038" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2039" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2040" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()&gt;org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2041" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2042" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2043" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2044" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()&gt;org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2045" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2046" name="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2047" name="org.sonar.core.permission.PermissionFacadeTest.should_fail_on_unmatched_template()&gt;org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)" />
      <edge id="2048" name="org.sonar.core.permission.PermissionFacadeTest.should_fail_on_unmatched_template()&gt;org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2049" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2050" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2051" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2052" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2053" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2054" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2055" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2056" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2057" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2058" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()&gt;org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="2059" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2060" name="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2061" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2062" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="2063" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="2064" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="2065" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2066" name="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2067" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto()" />
      <edge id="2068" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)" />
      <edge id="2069" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.setKee(java.lang.String)" />
      <edge id="2070" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2071" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2072" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)" />
      <edge id="2073" name="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()&gt;org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2074" name="org.sonar.core.permission.PermissionFacadeTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2075" name="org.sonar.core.permission.PermissionQuery$Builder.build()&gt;org.sonar.core.permission.PermissionQuery$Builder.initMembership()" />
      <edge id="2076" name="org.sonar.core.permission.PermissionQuery$Builder.build()&gt;org.sonar.core.permission.PermissionQuery$Builder.initPageIndex()" />
      <edge id="2077" name="org.sonar.core.permission.PermissionQuery$Builder.build()&gt;org.sonar.core.permission.PermissionQuery$Builder.initPageSize()" />
      <edge id="2078" name="org.sonar.core.permission.PermissionQuery$Builder.build()&gt;org.sonar.core.permission.PermissionQuery(org.sonar.core.permission.PermissionQuery$Builder)" />
      <edge id="2079" name="org.sonar.core.permission.PermissionQuery(org.sonar.core.permission.PermissionQuery$Builder)&gt;org.sonar.core.permission.PermissionQuery.searchToSql(java.lang.String)" />
      <edge id="2080" name="org.sonar.core.permission.PermissionQuery.builder()&gt;org.sonar.core.permission.PermissionQuery$Builder()" />
      <edge id="2081" name="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="2082" name="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="2083" name="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2084" name="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()&gt;org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)" />
      <edge id="2085" name="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2086" name="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.selectList(java.lang.String)" />
      <edge id="2087" name="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2088" name="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2089" name="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectGroups(java.util.Map)" />
      <edge id="2090" name="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2091" name="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" />
      <edge id="2092" name="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2093" name="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2094" name="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)" />
      <edge id="2095" name="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2096" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.now()" />
      <edge id="2097" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto()" />
      <edge id="2098" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)" />
      <edge id="2099" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setKee(java.lang.String)" />
      <edge id="2100" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)" />
      <edge id="2101" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)" />
      <edge id="2102" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setKeyPattern(java.lang.String)" />
      <edge id="2103" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setCreatedAt(java.util.Date)" />
      <edge id="2104" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setUpdatedAt(java.util.Date)" />
      <edge id="2105" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2106" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2107" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.insert(org.sonar.core.permission.PermissionTemplateDto)" />
      <edge id="2108" name="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2109" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2110" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2111" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2112" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2113" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectByKey(java.lang.String)" />
      <edge id="2114" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectTemplateUsersPermissions(java.lang.String)" />
      <edge id="2115" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setUsersPermissions(java.util.List)" />
      <edge id="2116" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()" />
      <edge id="2117" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectTemplateGroupsPermissions(java.lang.String)" />
      <edge id="2118" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setGroupsByPermission(java.util.List)" />
      <edge id="2119" name="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()" />
      <edge id="2120" name="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2121" name="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="2122" name="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2123" name="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2124" name="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.selectByKey(java.lang.String)" />
      <edge id="2125" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto()" />
      <edge id="2126" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setTemplateId(java.lang.Long)" />
      <edge id="2127" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setPermission(java.lang.String)" />
      <edge id="2128" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setGroupId(java.lang.Long)" />
      <edge id="2129" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setCreatedAt(java.util.Date)" />
      <edge id="2130" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.now()" />
      <edge id="2131" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setUpdatedAt(java.util.Date)" />
      <edge id="2132" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2133" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2134" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.insertGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)" />
      <edge id="2135" name="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2136" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto()" />
      <edge id="2137" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setTemplateId(java.lang.Long)" />
      <edge id="2138" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setUserId(java.lang.Long)" />
      <edge id="2139" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setPermission(java.lang.String)" />
      <edge id="2140" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setCreatedAt(java.util.Date)" />
      <edge id="2141" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.now()" />
      <edge id="2142" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setUpdatedAt(java.util.Date)" />
      <edge id="2143" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2144" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2145" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.insertUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)" />
      <edge id="2146" name="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2147" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2148" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2149" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateMapper.deleteUsersPermissions(long)" />
      <edge id="2150" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateMapper.deleteGroupsPermissions(long)" />
      <edge id="2151" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.permission.PermissionTemplateMapper.delete(long)" />
      <edge id="2152" name="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2153" name="org.sonar.core.permission.PermissionTemplateDao.removeByGroup(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.permission.PermissionTemplateMapper.deleteByGroupId(long)" />
      <edge id="2154" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto()" />
      <edge id="2155" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setTemplateId(java.lang.Long)" />
      <edge id="2156" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setPermission(java.lang.String)" />
      <edge id="2157" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateGroupDto.setGroupId(java.lang.Long)" />
      <edge id="2158" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2159" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2160" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.deleteGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)" />
      <edge id="2161" name="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2162" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto()" />
      <edge id="2163" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setTemplateId(java.lang.Long)" />
      <edge id="2164" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setPermission(java.lang.String)" />
      <edge id="2165" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateUserDto.setUserId(java.lang.Long)" />
      <edge id="2166" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2167" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2168" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.deleteUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)" />
      <edge id="2169" name="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2170" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto()" />
      <edge id="2171" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setId(java.lang.Long)" />
      <edge id="2172" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)" />
      <edge id="2173" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)" />
      <edge id="2174" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setKeyPattern(java.lang.String)" />
      <edge id="2175" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDto.setUpdatedAt(java.util.Date)" />
      <edge id="2176" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.now()" />
      <edge id="2177" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2178" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2179" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.permission.PermissionTemplateMapper.update(org.sonar.core.permission.PermissionTemplateDto)" />
      <edge id="2180" name="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2181" name="org.sonar.core.permission.PermissionTemplateDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2182" name="org.sonar.core.permission.PermissionTemplateDaoTest.after()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2183" name="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2184" name="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()&gt;org.sonar.core.permission.PermissionTemplateDao.removeByGroup(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2185" name="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2186" name="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2187" name="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2188" name="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2189" name="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()&gt;org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2190" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2191" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()&gt;org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2192" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2193" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2194" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()&gt;org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2195" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2196" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2197" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()&gt;org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2198" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2199" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2200" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2201" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getId()" />
      <edge id="2202" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2203" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2204" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" />
      <edge id="2205" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2206" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2207" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()&gt;org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2208" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()&gt;org.sonar.core.permission.PermissionTemplateDto.getId()" />
      <edge id="2209" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2210" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2211" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()&gt;org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2212" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2213" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2214" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()&gt;org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2215" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2216" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2217" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()&gt;org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" />
      <edge id="2218" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2219" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_all_permission_templates()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2220" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_all_permission_templates()&gt;org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()" />
      <edge id="2221" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2222" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)" />
      <edge id="2223" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="2224" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getDescription()" />
      <edge id="2225" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()" />
      <edge id="2226" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()" />
      <edge id="2227" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2228" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)" />
      <edge id="2229" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="2230" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="2231" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getDescription()" />
      <edge id="2232" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()" />
      <edge id="2233" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()" />
      <edge id="2234" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2235" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)" />
      <edge id="2236" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.permission.PermissionTemplateDto.getId()" />
      <edge id="2237" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="2238" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="2239" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()&gt;org.sonar.core.permission.PermissionTemplateDto.getDescription()" />
      <edge id="2240" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="2241" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2242" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2243" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2244" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getName()" />
      <edge id="2245" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.permission.PermissionTemplateMapper.insert(org.sonar.core.permission.PermissionTemplateDto)" />
      <edge id="2246" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2247" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()&gt;org.sonar.core.permission.PermissionTemplateDto.getKee()" />
      <edge id="2248" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2249" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()&gt;org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2250" name="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="2251" name="org.sonar.core.permission.UserWithPermissionDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2252" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2253" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2254" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2255" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2256" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)" />
      <edge id="2257" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2258" name="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2259" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2260" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2261" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2262" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2263" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2264" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2265" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.getPermission()" />
      <edge id="2266" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2267" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2268" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2269" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2270" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2271" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2272" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2273" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.getPermission()" />
      <edge id="2274" name="org.sonar.core.permission.UserWithPermissionDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2275" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2276" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2277" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2278" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2279" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2280" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.UserWithPermissionDaoTest$1()" />
      <edge id="2281" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2282" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2283" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2284" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2285" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2286" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)" />
      <edge id="2287" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2288" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2289" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2290" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2291" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2292" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)" />
      <edge id="2293" name="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2294" name="org.sonar.core.permission.UserWithPermissionDaoTest.setUp()&gt;org.sonar.core.permission.PermissionDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="2295" name="org.sonar.core.permission.UserWithPermissionDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2296" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2297" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" />
      <edge id="2298" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2299" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2300" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2301" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2302" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2303" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2304" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2305" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2306" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2307" name="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2308" name="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()&gt;org.sonar.core.permission.UserWithPermission()" />
      <edge id="2309" name="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()&gt;org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)" />
      <edge id="2310" name="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()&gt;org.sonar.core.permission.UserWithPermission.setName(java.lang.String)" />
      <edge id="2311" name="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()&gt;org.sonar.core.permission.UserWithPermission.hasPermission(boolean)" />
      <edge id="2312" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto()" />
      <edge id="2313" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setName(java.lang.String)" />
      <edge id="2314" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setLogin(java.lang.String)" />
      <edge id="2315" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setPermission(java.lang.String)" />
      <edge id="2316" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" />
      <edge id="2317" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermission.name()" />
      <edge id="2318" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermission.login()" />
      <edge id="2319" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()&gt;org.sonar.core.permission.UserWithPermission.hasPermission()" />
      <edge id="2320" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto()" />
      <edge id="2321" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setName(java.lang.String)" />
      <edge id="2322" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setLogin(java.lang.String)" />
      <edge id="2323" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.setPermission(java.lang.String)" />
      <edge id="2324" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" />
      <edge id="2325" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermission.name()" />
      <edge id="2326" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermission.login()" />
      <edge id="2327" name="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()&gt;org.sonar.core.permission.UserWithPermission.hasPermission()" />
      <edge id="2328" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2329" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2330" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2331" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2332" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2333" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2334" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()&gt;org.sonar.core.permission.UserWithPermissionDto.getPermission()" />
      <edge id="2335" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2336" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2337" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2338" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2339" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)" />
      <edge id="2340" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2341" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2342" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2343" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2344" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2345" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2346" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2347" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2348" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2349" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()&gt;org.sonar.core.permission.UserWithPermissionDto.getPermission()" />
      <edge id="2350" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2351" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2352" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2353" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2354" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2355" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2356" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1()" />
      <edge id="2357" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()&gt;org.sonar.core.permission.UserWithPermissionDto.getLogin()" />
      <edge id="2358" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2359" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2360" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2361" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2362" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)" />
      <edge id="2363" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2364" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2365" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2366" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2367" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2368" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)" />
      <edge id="2369" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2370" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.setUp()&gt;org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2371" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2372" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2373" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" />
      <edge id="2374" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2375" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2376" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2377" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2378" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2379" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" />
      <edge id="2380" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery.builder()" />
      <edge id="2381" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)" />
      <edge id="2382" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.PermissionQuery$Builder.build()" />
      <edge id="2383" name="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.permission.UserWithPermissionDto.getName()" />
      <edge id="2384" name="org.sonar.core.permission.UserWithPermissionTest.test_equals()&gt;org.sonar.core.permission.UserWithPermission()" />
      <edge id="2385" name="org.sonar.core.permission.UserWithPermissionTest.test_equals()&gt;org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)" />
      <edge id="2386" name="org.sonar.core.permission.UserWithPermissionTest.test_equals()&gt;org.sonar.core.permission.UserWithPermission.setName(java.lang.String)" />
      <edge id="2387" name="org.sonar.core.permission.UserWithPermissionTest.test_equals()&gt;org.sonar.core.permission.UserWithPermission.hasPermission(boolean)" />
      <edge id="2388" name="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.UserWithPermission()" />
      <edge id="2389" name="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)" />
      <edge id="2390" name="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()&gt;org.sonar.core.permission.UserWithPermission.hashCode()" />
      <edge id="2391" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission()" />
      <edge id="2392" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.setName(java.lang.String)" />
      <edge id="2393" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)" />
      <edge id="2394" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.hasPermission(boolean)" />
      <edge id="2395" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.name()" />
      <edge id="2396" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.login()" />
      <edge id="2397" name="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()&gt;org.sonar.core.permission.UserWithPermission.hasPermission()" />
      <edge id="2398" name="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()" />
      <edge id="2399" name="org.sonar.core.persistence.dialect.Dialect.getScrollSingleRowFetchSize()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()" />
      <edge id="2400" name="org.sonar.core.persistence.dialect.Dialect.getActiveRecordDialectCode()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2401" name="org.sonar.core.persistence.dialect.Dialect.getDefaultDriverClassName()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2402" name="org.sonar.core.persistence.dialect.Dialect.getFalseSqlValue()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2403" name="org.sonar.core.persistence.dialect.Dialect.getId()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2404" name="org.sonar.core.persistence.dialect.Dialect.getTrueSqlValue()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2405" name="org.sonar.core.persistence.dialect.Dialect.getValidationQuery()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2406" name="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getConnectionInitStatements()" />
      <edge id="2407" name="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)" />
      <edge id="2408" name="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)" />
      <edge id="2409" name="org.sonar.core.persistence.dialect.DialectUtils$2.apply(org.sonar.core.persistence.dialect.Dialect)&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2410" name="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils.findDialect(com.google.common.base.Predicate)" />
      <edge id="2411" name="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils$2()" />
      <edge id="2412" name="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2413" name="org.sonar.core.persistence.dialect.DialectUtils$1.apply(org.sonar.core.persistence.dialect.Dialect)&gt;org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" />
      <edge id="2414" name="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils.findDialect(com.google.common.base.Predicate)" />
      <edge id="2415" name="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)&gt;org.sonar.core.persistence.dialect.DialectUtils$1()" />
      <edge id="2416" name="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)&gt;org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" />
      <edge id="2417" name="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindById()&gt;org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" />
      <edge id="2418" name="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindByJdbcUrl()&gt;org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" />
      <edge id="2419" name="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindNoMatch()&gt;org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" />
      <edge id="2420" name="org.sonar.core.persistence.dialect.H2()&gt;org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2421" name="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)&gt;org.sonar.core.persistence.dialect.H2.matchesJdbcURL(java.lang.String)" />
      <edge id="2422" name="org.sonar.core.persistence.dialect.Dialect.supportsMigration()&gt;org.sonar.core.persistence.dialect.H2.supportsMigration()" />
      <edge id="2423" name="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()&gt;org.sonar.core.persistence.dialect.H2.getHibernateDialectClass()" />
      <edge id="2424" name="org.sonar.core.persistence.dialect.H2Test.h2_does_not_supportMigration()&gt;org.sonar.core.persistence.dialect.H2.supportsMigration()" />
      <edge id="2425" name="org.sonar.core.persistence.dialect.H2Test.matchesJdbcURL()&gt;org.sonar.core.persistence.dialect.H2.matchesJdbcURL(java.lang.String)" />
      <edge id="2426" name="org.sonar.core.persistence.dialect.H2Test.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2427" name="org.sonar.core.persistence.dialect.H2Test.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2428" name="org.sonar.core.persistence.dialect.H2Test.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2429" name="org.sonar.core.persistence.dialect.H2Test.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2430" name="org.sonar.core.persistence.dialect.H2Test.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2431" name="org.sonar.core.persistence.dialect.H2Test.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2432" name="org.sonar.core.persistence.dialect.H2Test.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()" />
      <edge id="2433" name="org.sonar.core.persistence.dialect.MsSql()&gt;org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2434" name="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)&gt;org.sonar.core.persistence.dialect.MsSql.matchesJdbcURL(java.lang.String)" />
      <edge id="2435" name="org.sonar.core.persistence.dialect.Dialect.supportsMigration()&gt;org.sonar.core.persistence.dialect.MsSql.supportsMigration()" />
      <edge id="2436" name="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()&gt;org.sonar.core.persistence.dialect.MsSql.getHibernateDialectClass()" />
      <edge id="2437" name="org.sonar.core.persistence.dialect.MsSqlTest.matchesJdbcURL()&gt;org.sonar.core.persistence.dialect.MsSql.matchesJdbcURL(java.lang.String)" />
      <edge id="2438" name="org.sonar.core.persistence.dialect.MsSqlTest.msSql_does_supportMigration()&gt;org.sonar.core.persistence.dialect.MsSql.supportsMigration()" />
      <edge id="2439" name="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2440" name="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2441" name="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2442" name="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2443" name="org.sonar.core.persistence.dialect.MsSqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2444" name="org.sonar.core.persistence.dialect.MsSqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2445" name="org.sonar.core.persistence.dialect.MySql()&gt;org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2446" name="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)&gt;org.sonar.core.persistence.dialect.MySql.matchesJdbcURL(java.lang.String)" />
      <edge id="2447" name="org.sonar.core.persistence.dialect.Dialect.supportsMigration()&gt;org.sonar.core.persistence.dialect.MySql.supportsMigration()" />
      <edge id="2448" name="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()&gt;org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()" />
      <edge id="2449" name="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()&gt;org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()" />
      <edge id="2450" name="org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()&gt;org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()" />
      <edge id="2451" name="org.sonar.core.persistence.dialect.Dialect.getScrollSingleRowFetchSize()&gt;org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()" />
      <edge id="2452" name="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()&gt;org.sonar.core.persistence.dialect.MySql.getHibernateDialectClass()" />
      <edge id="2453" name="org.sonar.core.persistence.dialect.MySqlTest.matchesJdbcURL()&gt;org.sonar.core.persistence.dialect.MySql.matchesJdbcURL(java.lang.String)" />
      <edge id="2454" name="org.sonar.core.persistence.dialect.MySqlTest.mysql_does_supportMigration()&gt;org.sonar.core.persistence.dialect.MySql.supportsMigration()" />
      <edge id="2455" name="org.sonar.core.persistence.dialect.MySqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2456" name="org.sonar.core.persistence.dialect.MySqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2457" name="org.sonar.core.persistence.dialect.MySqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2458" name="org.sonar.core.persistence.dialect.MySqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2459" name="org.sonar.core.persistence.dialect.MySqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2460" name="org.sonar.core.persistence.dialect.MySqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2461" name="org.sonar.core.persistence.dialect.MySqlTest.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()" />
      <edge id="2462" name="org.sonar.core.persistence.dialect.MySqlTest.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()" />
      <edge id="2463" name="org.sonar.core.persistence.dialect.Oracle()&gt;org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2464" name="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)&gt;org.sonar.core.persistence.dialect.Oracle.matchesJdbcURL(java.lang.String)" />
      <edge id="2465" name="org.sonar.core.persistence.dialect.Dialect.supportsMigration()&gt;org.sonar.core.persistence.dialect.Oracle.supportsMigration()" />
      <edge id="2466" name="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()&gt;org.sonar.core.persistence.dialect.Oracle.getHibernateDialectClass()" />
      <edge id="2467" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.OracleSequenceGenerator()" />
      <edge id="2468" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.OracleSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)" />
      <edge id="2469" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.Oracle$Oracle10gWithDecimalDialect()" />
      <edge id="2470" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.OracleSequenceGenerator()" />
      <edge id="2471" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.OracleSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)" />
      <edge id="2472" name="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.Oracle$Oracle10gWithDecimalDialect()" />
      <edge id="2473" name="org.sonar.core.persistence.dialect.OracleTest.matchesJdbcURL()&gt;org.sonar.core.persistence.dialect.Oracle.matchesJdbcURL(java.lang.String)" />
      <edge id="2474" name="org.sonar.core.persistence.dialect.OracleTest.oracle_does_supportMigration()&gt;org.sonar.core.persistence.dialect.Oracle.supportsMigration()" />
      <edge id="2475" name="org.sonar.core.persistence.dialect.OracleTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2476" name="org.sonar.core.persistence.dialect.OracleTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2477" name="org.sonar.core.persistence.dialect.OracleTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2478" name="org.sonar.core.persistence.dialect.OracleTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2479" name="org.sonar.core.persistence.dialect.OracleTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2480" name="org.sonar.core.persistence.dialect.OracleTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2481" name="org.sonar.core.persistence.dialect.OracleTest.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()" />
      <edge id="2482" name="org.sonar.core.persistence.dialect.OracleTest.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()" />
      <edge id="2483" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator()" />
      <edge id="2484" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)" />
      <edge id="2485" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()&gt;org.sonar.core.persistence.dialect.PostgreSql$PostgreSQLWithDecimalDialect()" />
      <edge id="2486" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator()" />
      <edge id="2487" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)" />
      <edge id="2488" name="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()&gt;org.sonar.core.persistence.dialect.PostgreSql$PostgreSQLWithDecimalDialect()" />
      <edge id="2489" name="org.sonar.core.persistence.dialect.PostgreSql()&gt;org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="2490" name="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)&gt;org.sonar.core.persistence.dialect.PostgreSql.matchesJdbcURL(java.lang.String)" />
      <edge id="2491" name="org.sonar.core.persistence.dialect.Dialect.supportsMigration()&gt;org.sonar.core.persistence.dialect.PostgreSql.supportsMigration()" />
      <edge id="2492" name="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()&gt;org.sonar.core.persistence.dialect.PostgreSql.getHibernateDialectClass()" />
      <edge id="2493" name="org.sonar.core.persistence.dialect.AbstractDialect.getConnectionInitStatements()&gt;org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()" />
      <edge id="2494" name="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()&gt;org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()" />
      <edge id="2495" name="org.sonar.core.persistence.dialect.PostgreSqlTest.matchesJdbcURL()&gt;org.sonar.core.persistence.dialect.PostgreSql.matchesJdbcURL(java.lang.String)" />
      <edge id="2496" name="org.sonar.core.persistence.dialect.PostgreSqlTest.postgres_does_supportMigration()&gt;org.sonar.core.persistence.dialect.PostgreSql.supportsMigration()" />
      <edge id="2497" name="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getId()" />
      <edge id="2498" name="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()" />
      <edge id="2499" name="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()" />
      <edge id="2500" name="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()" />
      <edge id="2501" name="org.sonar.core.persistence.dialect.PostgreSqlTest.should_set_connection_properties()&gt;org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()" />
      <edge id="2502" name="org.sonar.core.persistence.dialect.PostgreSqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()" />
      <edge id="2503" name="org.sonar.core.persistence.dialect.PostgreSqlTest.testBooleanSqlValues()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()" />
      <edge id="2504" name="org.sonar.core.persistence.dialect.PostgreSqlTest.testFetchSizeForScrolling()&gt;org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()" />
      <edge id="2505" name="org.sonar.core.persistence.migration.v45.Rule.equals(java.lang.Object)&gt;org.sonar.core.persistence.migration.v45.Rule.getRepositoryKey()" />
      <edge id="2506" name="org.sonar.core.persistence.migration.v45.Rule.equals(java.lang.Object)&gt;org.sonar.core.persistence.migration.v45.Rule.getRuleKey()" />
      <edge id="2507" name="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_return_result()&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2508" name="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_throw_declared_exception()&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2509" name="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_wrap_undeclared_exception()&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2510" name="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection()&gt;org.sonar.core.persistence.profiling.ProfilingConnectionHandler(java.sql.Connection)" />
      <edge id="2511" name="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.profiling.ProfilingConnectionHandler(java.sql.Connection)" />
      <edge id="2512" name="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.delegate_to_underlying_datasource()&gt;org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)" />
      <edge id="2513" name="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()&gt;org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)" />
      <edge id="2514" name="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()&gt;org.sonar.core.persistence.profiling.ProfiledDataSource.getUrl()" />
      <edge id="2515" name="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()&gt;org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection()" />
      <edge id="2516" name="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2517" name="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler(java.sql.PreparedStatement,java.lang.String)" />
      <edge id="2518" name="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;org.sonar.core.persistence.profiling.ProfilingStatementHandler(java.sql.Statement)" />
      <edge id="2519" name="org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2520" name="org.sonar.core.persistence.profiling.ProfilingStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" />
      <edge id="2521" name="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2522" name="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()&gt;org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()" />
      <edge id="2523" name="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2524" name="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2525" name="org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2526" name="org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)&gt;org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)" />
      <edge id="2527" name="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" />
      <edge id="2528" name="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2529" name="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2530" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" />
      <edge id="2531" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)" />
      <edge id="2532" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2533" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2534" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="2535" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" />
      <edge id="2536" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)" />
      <edge id="2537" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2538" name="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2539" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" />
      <edge id="2540" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)" />
      <edge id="2541" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2542" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2543" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])" />
      <edge id="2544" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" />
      <edge id="2545" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2546" name="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2547" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.AbstractDaoTestCase.loadOrchestratorSettings(org.sonar.api.config.Settings)" />
      <edge id="2548" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2549" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.H2Database(java.lang.String,boolean)" />
      <edge id="2550" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)" />
      <edge id="2551" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2552" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)" />
      <edge id="2553" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.config.Logback()" />
      <edge id="2554" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.cluster.NullQueue()" />
      <edge id="2555" name="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()&gt;org.sonar.core.persistence.MyBatis.start()" />
      <edge id="2556" name="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()&gt;org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" />
      <edge id="2557" name="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2558" name="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()&gt;org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()" />
      <edge id="2559" name="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)" />
      <edge id="2560" name="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)&gt;org.sonar.core.persistence.DbSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)" />
      <edge id="2561" name="org.sonar.core.persistence.DbSession.selectList(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.selectList(java.lang.String)" />
      <edge id="2562" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2563" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)&gt;org.sonar.core.persistence.DbSession.selectList(java.lang.String)" />
      <edge id="2564" name="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)" />
      <edge id="2565" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2566" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object)" />
      <edge id="2567" name="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)" />
      <edge id="2568" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2569" name="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)" />
      <edge id="2570" name="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)&gt;org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)" />
      <edge id="2571" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2572" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)&gt;org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)" />
      <edge id="2573" name="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)" />
      <edge id="2574" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2575" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)&gt;org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)" />
      <edge id="2576" name="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)" />
      <edge id="2577" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2578" name="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.String)" />
      <edge id="2579" name="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)&gt;org.sonar.core.persistence.BatchSession.getMapper(java.lang.Class)" />
      <edge id="2580" name="org.sonar.core.persistence.BatchSession.getMapper(java.lang.Class)&gt;org.sonar.core.persistence.DbSession.getConfiguration()" />
      <edge id="2581" name="org.sonar.core.persistence.DbSession.selectOne(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)" />
      <edge id="2582" name="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2583" name="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)&gt;org.sonar.core.persistence.DbSession.selectOne(java.lang.String)" />
      <edge id="2584" name="org.sonar.core.persistence.DbSession.selectOne(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)" />
      <edge id="2585" name="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2586" name="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.DbSession.selectOne(java.lang.String,java.lang.Object)" />
      <edge id="2587" name="org.sonar.core.persistence.DbSession.delete(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.delete(java.lang.String)" />
      <edge id="2588" name="org.sonar.core.persistence.BatchSession.delete(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2589" name="org.sonar.core.persistence.BatchSession.delete(java.lang.String)&gt;org.sonar.core.persistence.DbSession.delete(java.lang.String)" />
      <edge id="2590" name="org.sonar.core.persistence.DbSession.delete(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)" />
      <edge id="2591" name="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2592" name="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.DbSession.delete(java.lang.String,java.lang.Object)" />
      <edge id="2593" name="org.sonar.core.persistence.DbSession.insert(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.insert(java.lang.String)" />
      <edge id="2594" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)" />
      <edge id="2595" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2596" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String)&gt;org.sonar.core.persistence.DbSession.insert(java.lang.String)" />
      <edge id="2597" name="org.sonar.core.persistence.DbSession.insert(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)" />
      <edge id="2598" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)" />
      <edge id="2599" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2600" name="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.DbSession.insert(java.lang.String,java.lang.Object)" />
      <edge id="2601" name="org.sonar.core.persistence.DbSession.update(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.update(java.lang.String)" />
      <edge id="2602" name="org.sonar.core.persistence.BatchSession.update(java.lang.String)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2603" name="org.sonar.core.persistence.BatchSession.update(java.lang.String)&gt;org.sonar.core.persistence.DbSession.update(java.lang.String)" />
      <edge id="2604" name="org.sonar.core.persistence.DbSession.update(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)" />
      <edge id="2605" name="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2606" name="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)&gt;org.sonar.core.persistence.DbSession.update(java.lang.String,java.lang.Object)" />
      <edge id="2607" name="org.sonar.core.persistence.DbSession.flushStatements()&gt;org.sonar.core.persistence.BatchSession.flushStatements()" />
      <edge id="2608" name="org.sonar.core.persistence.BatchSession.flushStatements()&gt;org.sonar.core.persistence.DbSession.flushStatements()" />
      <edge id="2609" name="org.sonar.core.persistence.BatchSession.flushStatements()&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2610" name="org.sonar.core.persistence.BatchSession.increment()&gt;org.sonar.core.persistence.BatchSession.commit()" />
      <edge id="2611" name="org.sonar.core.persistence.DbSession.commit()&gt;org.sonar.core.persistence.BatchSession.commit()" />
      <edge id="2612" name="org.sonar.core.persistence.BatchSession.commit()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="2613" name="org.sonar.core.persistence.BatchSession.commit()&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2614" name="org.sonar.core.persistence.DbSession.commit(boolean)&gt;org.sonar.core.persistence.BatchSession.commit(boolean)" />
      <edge id="2615" name="org.sonar.core.persistence.BatchSession.commit(boolean)&gt;org.sonar.core.persistence.DbSession.commit(boolean)" />
      <edge id="2616" name="org.sonar.core.persistence.BatchSession.commit(boolean)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2617" name="org.sonar.core.persistence.DbSession.enqueue(org.sonar.core.cluster.ClusterAction)&gt;org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)" />
      <edge id="2618" name="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)&gt;org.sonar.core.persistence.BatchSession.increment()" />
      <edge id="2619" name="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)&gt;org.sonar.core.persistence.DbSession.enqueue(org.sonar.core.cluster.ClusterAction)" />
      <edge id="2620" name="org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)&gt;org.sonar.core.persistence.DbSession.getConfiguration()" />
      <edge id="2621" name="org.sonar.core.persistence.DbSession.rollback()&gt;org.sonar.core.persistence.BatchSession.rollback()" />
      <edge id="2622" name="org.sonar.core.persistence.BatchSession.rollback()&gt;org.sonar.core.persistence.DbSession.rollback()" />
      <edge id="2623" name="org.sonar.core.persistence.BatchSession.rollback()&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2624" name="org.sonar.core.persistence.DbSession.rollback(boolean)&gt;org.sonar.core.persistence.BatchSession.rollback(boolean)" />
      <edge id="2625" name="org.sonar.core.persistence.BatchSession.rollback(boolean)&gt;org.sonar.core.persistence.DbSession.rollback(boolean)" />
      <edge id="2626" name="org.sonar.core.persistence.BatchSession.rollback(boolean)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2627" name="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2628" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2629" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2630" name="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2631" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2632" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2633" name="org.sonar.core.persistence.DbSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2634" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.BatchSession.reset()" />
      <edge id="2635" name="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)&gt;org.sonar.core.persistence.DbSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)" />
      <edge id="2636" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()&gt;org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)" />
      <edge id="2637" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()&gt;org.sonar.core.persistence.BatchSession.insert(java.lang.String)" />
      <edge id="2638" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2639" name="org.sonar.core.cluster.ClusterAction.call()&gt;org.sonar.core.persistence.BatchSessionTest$1.call()" />
      <edge id="2640" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()&gt;org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)" />
      <edge id="2641" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()&gt;org.sonar.core.persistence.BatchSessionTest$1()" />
      <edge id="2642" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()&gt;org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)" />
      <edge id="2643" name="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2644" name="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()&gt;org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)" />
      <edge id="2645" name="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()&gt;org.sonar.core.persistence.BatchSession.insert(java.lang.String)" />
      <edge id="2646" name="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2647" name="org.sonar.core.persistence.DaoUtilsTest$1.apply(java.util.List)&gt;org.sonar.core.persistence.DaoUtilsTest$1$1()" />
      <edge id="2648" name="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="2649" name="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()&gt;org.sonar.core.persistence.DaoUtilsTest$1()" />
      <edge id="2650" name="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()&gt;org.sonar.core.persistence.DaoUtilsTest$1$1()" />
      <edge id="2651" name="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs_on_empty_list()&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="2652" name="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs_on_empty_list()&gt;org.sonar.core.persistence.DaoUtilsTest$2()" />
      <edge id="2653" name="org.sonar.core.persistence.DaoUtilsTest.list_all_dao_classes()&gt;org.sonar.core.persistence.DaoUtils.getDaoClasses()" />
      <edge id="2654" name="org.sonar.core.persistence.DaoUtilsTest.repeatCondition()&gt;org.sonar.core.persistence.DaoUtils.repeatCondition(java.lang.String,int,java.lang.String)" />
      <edge id="2655" name="org.sonar.core.persistence.DatabaseCommands$1(org.dbunit.dataset.datatype.DefaultDataTypeFactory)&gt;org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" />
      <edge id="2656" name="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)&gt;org.sonar.core.persistence.DatabaseCommands$1.resetSequenceSql(java.lang.String,int)" />
      <edge id="2657" name="org.sonar.core.persistence.DatabaseCommands$2(org.dbunit.dataset.datatype.DefaultDataTypeFactory)&gt;org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" />
      <edge id="2658" name="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)&gt;org.sonar.core.persistence.DatabaseCommands$2.resetSequenceSql(java.lang.String,int)" />
      <edge id="2659" name="org.sonar.core.persistence.DatabaseCommands$3(org.dbunit.dataset.datatype.DefaultDataTypeFactory)&gt;org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" />
      <edge id="2660" name="org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()&gt;org.sonar.core.persistence.DatabaseCommands$3.useLoginAsSchema()" />
      <edge id="2661" name="org.sonar.core.persistence.DatabaseCommands.truncateSql(java.lang.String)&gt;org.sonar.core.persistence.DatabaseCommands$3.truncateSql(java.lang.String)" />
      <edge id="2662" name="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)&gt;org.sonar.core.persistence.DatabaseCommands$3.resetSequenceSql(java.lang.String,int)" />
      <edge id="2663" name="org.sonar.core.persistence.DatabaseCommands$4(org.dbunit.dataset.datatype.DefaultDataTypeFactory)&gt;org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" />
      <edge id="2664" name="org.sonar.core.persistence.DatabaseCommands.shouldTruncate(java.sql.Connection,java.lang.String)&gt;org.sonar.core.persistence.DatabaseCommands$4.shouldTruncate(java.sql.Connection,java.lang.String)" />
      <edge id="2665" name="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)&gt;org.sonar.core.persistence.DatabaseCommands$4.resetSequenceSql(java.lang.String,int)" />
      <edge id="2666" name="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)&gt;org.sonar.core.persistence.DatabaseCommands$4.resetPrimaryKeys(javax.sql.DataSource)" />
      <edge id="2667" name="org.sonar.core.persistence.DatabaseCommands$5(org.dbunit.dataset.datatype.DefaultDataTypeFactory)&gt;org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" />
      <edge id="2668" name="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)&gt;org.sonar.core.persistence.DatabaseCommands$5.resetSequenceSql(java.lang.String,int)" />
      <edge id="2669" name="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)&gt;org.sonar.core.persistence.DatabaseCommands$5.resetPrimaryKeys(javax.sql.DataSource)" />
      <edge id="2670" name="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2671" name="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)&gt;org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" />
      <edge id="2672" name="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)&gt;org.sonar.core.persistence.DatabaseCommands.shouldTruncate(java.sql.Connection,java.lang.String)" />
      <edge id="2673" name="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)&gt;org.sonar.core.persistence.DatabaseCommands.truncateSql(java.lang.String)" />
      <edge id="2674" name="org.sonar.core.persistence.DatabaseUtilsTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2675" name="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Connection)&gt;org.sonar.core.persistence.DatabaseUtilsTest.selectDual()" />
      <edge id="2676" name="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getDatabase()" />
      <edge id="2677" name="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2678" name="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2679" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getConnection()" />
      <edge id="2680" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()&gt;org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Connection)" />
      <edge id="2681" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)" />
      <edge id="2682" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getConnection()" />
      <edge id="2683" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtilsTest.selectDual()" />
      <edge id="2684" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.ResultSet)" />
      <edge id="2685" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Statement)" />
      <edge id="2686" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Statement)" />
      <edge id="2687" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.ResultSet)" />
      <edge id="2688" name="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)" />
      <edge id="2689" name="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_connection_errors()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)" />
      <edge id="2690" name="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_resulset_errors()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.ResultSet)" />
      <edge id="2691" name="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_statement_errors()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Statement)" />
      <edge id="2692" name="org.sonar.core.persistence.DatabaseUtilsTest.should_support_null_connection()&gt;org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)" />
      <edge id="2693" name="org.sonar.core.persistence.DatabaseVersion.getVersion()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2694" name="org.sonar.core.persistence.DatabaseVersion.getVersion()&gt;org.sonar.core.persistence.SchemaMigrationMapper.selectVersions()" />
      <edge id="2695" name="org.sonar.core.persistence.DatabaseVersion.getVersion()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2696" name="org.sonar.core.persistence.DatabaseVersion.getStatus()&gt;org.sonar.core.persistence.DatabaseVersion.getStatus(java.lang.Integer,int)" />
      <edge id="2697" name="org.sonar.core.persistence.DatabaseVersion.getStatus()&gt;org.sonar.core.persistence.DatabaseVersion.getVersion()" />
      <edge id="2698" name="org.sonar.core.persistence.DatabaseVersionTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2699" name="org.sonar.core.persistence.DatabaseVersionTest.getStatus()&gt;org.sonar.core.persistence.DatabaseVersion.getStatus(java.lang.Integer,int)" />
      <edge id="2700" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2701" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion()&gt;org.sonar.core.persistence.DatabaseVersion(org.sonar.core.persistence.MyBatis)" />
      <edge id="2702" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2703" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion()&gt;org.sonar.core.persistence.DatabaseVersion.getVersion()" />
      <edge id="2704" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2705" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()&gt;org.sonar.core.persistence.DatabaseVersion(org.sonar.core.persistence.MyBatis)" />
      <edge id="2706" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2707" name="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()&gt;org.sonar.core.persistence.DatabaseVersion.getVersion()" />
      <edge id="2708" name="org.sonar.core.persistence.DbSession.commit()&gt;org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)" />
      <edge id="2709" name="org.sonar.core.persistence.DbSession.commit(boolean)&gt;org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)" />
      <edge id="2710" name="org.sonar.core.persistence.DbTester.countRowsOfTable(java.lang.String)&gt;org.sonar.core.persistence.DbTester.countSql(java.lang.String)" />
      <edge id="2711" name="org.sonar.core.persistence.DbTester.countSql(java.lang.String)&gt;org.sonar.core.persistence.DbTester.openConnection()" />
      <edge id="2712" name="org.sonar.core.persistence.DbTester.openConnection()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2713" name="org.sonar.core.persistence.DbTester.getHashMap(java.sql.ResultSet)&gt;org.sonar.core.persistence.DbTester.doClobFree(java.sql.Clob)" />
      <edge id="2714" name="org.sonar.core.persistence.DbTester.select(java.lang.String)&gt;org.sonar.core.persistence.DbTester.openConnection()" />
      <edge id="2715" name="org.sonar.core.persistence.DbTester.select(java.lang.String)&gt;org.sonar.core.persistence.DbTester.getHashMap(java.sql.ResultSet)" />
      <edge id="2716" name="org.sonar.core.persistence.DbTester.selectFirst(java.lang.String)&gt;org.sonar.core.persistence.DbTester.select(java.lang.String)" />
      <edge id="2717" name="org.sonar.core.persistence.DbTester.dbUnitConnection()&gt;org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()" />
      <edge id="2718" name="org.sonar.core.persistence.DbTester.dbUnitConnection()&gt;org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2719" name="org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)&gt;org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2720" name="org.sonar.core.persistence.DbTester.dialect()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2721" name="org.sonar.core.persistence.DbTester.assertColumnDefinition(java.lang.String,java.lang.String,int,java.lang.Integer)&gt;org.sonar.core.persistence.DbTester.openConnection()" />
      <edge id="2722" name="org.sonar.core.persistence.DbTester.assertColumnDefinition(java.lang.String,java.lang.String,int,java.lang.Integer)&gt;org.sonar.core.persistence.DbTester.getColumnIndex(java.sql.ResultSet,java.lang.String)" />
      <edge id="2723" name="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="2724" name="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.DbTester.dbUnitConnection()" />
      <edge id="2725" name="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)" />
      <edge id="2726" name="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2727" name="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.core.persistence.DbTester.closeQuietly(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2728" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.DbTester.loadOrchestratorSettings(org.sonar.api.config.Settings)" />
      <edge id="2729" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2730" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.H2Database(java.lang.String,boolean)" />
      <edge id="2731" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2732" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2733" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.H2Database.executeScript(java.lang.String)" />
      <edge id="2734" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)" />
      <edge id="2735" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2736" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()" />
      <edge id="2737" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)" />
      <edge id="2738" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.config.Logback()" />
      <edge id="2739" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.cluster.NullQueue()" />
      <edge id="2740" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.MyBatis.start()" />
      <edge id="2741" name="org.sonar.core.persistence.DbTester.before()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="2742" name="org.sonar.core.persistence.DbTester.executeUpdateSql(java.lang.String)&gt;org.sonar.core.persistence.DbTester.openConnection()" />
      <edge id="2743" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])&gt;org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)" />
      <edge id="2744" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])&gt;org.sonar.core.persistence.DbTester.dbUnitConnection()" />
      <edge id="2745" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])&gt;org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2746" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])&gt;org.sonar.core.persistence.DbTester.closeQuietly(org.dbunit.database.IDatabaseConnection)" />
      <edge id="2747" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])&gt;org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" />
      <edge id="2748" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2749" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])" />
      <edge id="2750" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])&gt;org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" />
      <edge id="2751" name="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])&gt;org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="2752" name="org.sonar.core.persistence.DbTester.truncateTables()&gt;org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" />
      <edge id="2753" name="org.sonar.core.persistence.DbTester.truncateTables()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2754" name="org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)&gt;org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)" />
      <edge id="2755" name="org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)&gt;org.sonar.core.persistence.DdlUtils.newScriptRunner(java.sql.Connection)" />
      <edge id="2756" name="org.sonar.core.persistence.DdlUtilsTest.shouldCreateSchema()&gt;org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)" />
      <edge id="2757" name="org.sonar.core.persistence.DdlUtilsTest.shouldCreateSchema()&gt;org.sonar.core.persistence.DdlUtilsTest.countTables(java.sql.Connection)" />
      <edge id="2758" name="org.sonar.core.persistence.DdlUtilsTest.shouldSupportOnlyH2()&gt;org.sonar.core.persistence.DdlUtils.supportsDialect(java.lang.String)" />
      <edge id="2759" name="org.sonar.core.persistence.Database.getHibernateProperties()&gt;org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()" />
      <edge id="2760" name="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()&gt;org.sonar.core.persistence.DefaultDatabase.getDialect()" />
      <edge id="2761" name="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()&gt;org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" />
      <edge id="2762" name="org.sonar.core.persistence.Database.getDataSource()&gt;org.sonar.core.persistence.DefaultDatabase.getDataSource()" />
      <edge id="2763" name="org.sonar.core.persistence.Database.getDialect()&gt;org.sonar.core.persistence.DefaultDatabase.getDialect()" />
      <edge id="2764" name="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperties(java.util.Properties)&gt;org.sonar.core.persistence.DefaultDatabase.completeDefaultProperty(java.util.Properties,java.lang.String,java.lang.String)" />
      <edge id="2765" name="org.sonar.core.persistence.DefaultDatabase.initDatasource()&gt;org.sonar.core.persistence.DefaultDatabase.extractCommonsDbcpProperties(java.util.Properties)" />
      <edge id="2766" name="org.sonar.core.persistence.DefaultDatabase.initDatasource()&gt;org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()" />
      <edge id="2767" name="org.sonar.core.persistence.DefaultDatabase.initDatasource()&gt;org.sonar.core.persistence.dialect.Dialect.getValidationQuery()" />
      <edge id="2768" name="org.sonar.core.persistence.DefaultDatabase.initDatasource()&gt;org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)" />
      <edge id="2769" name="org.sonar.core.persistence.DefaultDatabase.initSettings()&gt;org.sonar.core.persistence.DefaultDatabase.completeProperties(org.sonar.api.config.Settings,java.util.Properties,java.lang.String)" />
      <edge id="2770" name="org.sonar.core.persistence.DefaultDatabase.initSettings()&gt;org.sonar.core.persistence.DefaultDatabase.completeDefaultProperties(java.util.Properties)" />
      <edge id="2771" name="org.sonar.core.persistence.DefaultDatabase.initSettings()&gt;org.sonar.core.persistence.DefaultDatabase.doCompleteProperties(java.util.Properties)" />
      <edge id="2772" name="org.sonar.core.persistence.DefaultDatabase.initSettings()&gt;org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" />
      <edge id="2773" name="org.sonar.core.persistence.DefaultDatabase.initSettings()&gt;org.sonar.core.persistence.dialect.Dialect.getDefaultDriverClassName()" />
      <edge id="2774" name="org.sonar.core.persistence.DefaultDatabase.start()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2775" name="org.sonar.core.persistence.DefaultDatabase.start()&gt;org.sonar.core.persistence.DefaultDatabase.initDatasource()" />
      <edge id="2776" name="org.sonar.core.persistence.DefaultDatabase.start()&gt;org.sonar.core.persistence.DefaultDatabase.checkConnection()" />
      <edge id="2777" name="org.sonar.core.persistence.DefaultDatabase.start()&gt;org.sonar.core.persistence.DefaultDatabase.doAfterStart()" />
      <edge id="2778" name="org.sonar.core.persistence.DefaultDatabaseTest$1(org.sonar.api.config.Settings)&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2779" name="org.sonar.core.persistence.DefaultDatabase.doCompleteProperties(java.util.Properties)&gt;org.sonar.core.persistence.DefaultDatabaseTest$1.doCompleteProperties(java.util.Properties)" />
      <edge id="2780" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()&gt;org.sonar.core.persistence.DefaultDatabaseTest$1(org.sonar.api.config.Settings)" />
      <edge id="2781" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2782" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2783" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()&gt;org.sonar.core.persistence.DefaultDatabase.getProperties()" />
      <edge id="2784" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldExtractCommonsDbcpProperties()&gt;org.sonar.core.persistence.DefaultDatabase.extractCommonsDbcpProperties(java.util.Properties)" />
      <edge id="2785" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2786" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2787" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()&gt;org.sonar.core.persistence.DefaultDatabase.getProperties()" />
      <edge id="2788" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2789" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2790" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()&gt;org.sonar.core.persistence.DefaultDatabase.getDialect()" />
      <edge id="2791" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2792" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2793" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2794" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()&gt;org.sonar.core.persistence.DefaultDatabase.getProperties()" />
      <edge id="2795" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()&gt;org.sonar.core.persistence.DefaultDatabase.toString()" />
      <edge id="2796" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2797" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2798" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()&gt;org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()" />
      <edge id="2799" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2800" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.DefaultDatabase.start()" />
      <edge id="2801" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.DefaultDatabase.stop()" />
      <edge id="2802" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.DefaultDatabase.getDialect()" />
      <edge id="2803" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2804" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()&gt;org.sonar.core.persistence.DefaultDatabase.getDataSource()" />
      <edge id="2805" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()&gt;org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)" />
      <edge id="2806" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()&gt;org.sonar.core.persistence.DefaultDatabase.initSettings()" />
      <edge id="2807" name="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()&gt;org.sonar.core.persistence.DefaultDatabase.getProperties()" />
      <edge id="2808" name="org.sonar.core.persistence.Database.getHibernateProperties()&gt;org.sonar.core.persistence.H2Database.getHibernateProperties()" />
      <edge id="2809" name="org.sonar.core.persistence.Database.getDataSource()&gt;org.sonar.core.persistence.H2Database.getDataSource()" />
      <edge id="2810" name="org.sonar.core.persistence.Database.getDialect()&gt;org.sonar.core.persistence.H2Database.getDialect()" />
      <edge id="2811" name="org.sonar.core.persistence.H2Database.getDialect()&gt;org.sonar.core.persistence.dialect.H2()" />
      <edge id="2812" name="org.sonar.core.persistence.H2Database.createSchema()&gt;org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)" />
      <edge id="2813" name="org.sonar.core.persistence.H2Database.executeScript(java.lang.String)&gt;org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)" />
      <edge id="2814" name="org.sonar.core.persistence.H2Database.start()&gt;org.sonar.core.persistence.H2Database.startDatabase()" />
      <edge id="2815" name="org.sonar.core.persistence.H2Database.start()&gt;org.sonar.core.persistence.H2Database.createSchema()" />
      <edge id="2816" name="org.sonar.core.persistence.H2DatabaseTest.shouldExecuteDdlAtStartup()&gt;org.sonar.core.persistence.H2Database.getDataSource()" />
      <edge id="2817" name="org.sonar.core.persistence.H2DatabaseTest.shouldExecuteDdlAtStartup()&gt;org.sonar.core.persistence.DdlUtilsTest.countTables(java.sql.Connection)" />
      <edge id="2818" name="org.sonar.core.persistence.H2DatabaseTest.startDb()&gt;org.sonar.core.persistence.H2Database.start()" />
      <edge id="2819" name="org.sonar.core.persistence.H2DatabaseTest.stopDb()&gt;org.sonar.core.persistence.H2Database.stop()" />
      <edge id="2820" name="org.sonar.core.persistence.IsAliveMapperTest.isAlive_works_for_current_vendors()&gt;org.sonar.core.persistence.IsAliveMapper.isAlive()" />
      <edge id="2821" name="org.sonar.core.persistence.IsAliveMapperTest.setUp()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="2822" name="org.sonar.core.persistence.IsAliveMapperTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2823" name="org.sonar.core.persistence.IsAliveMapperTest.setUp()&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="2824" name="org.sonar.core.persistence.IsAliveMapperTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="2825" name="org.sonar.core.persistence.MyBatis.openSession()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2826" name="org.sonar.core.persistence.MyBatis.openBatchSession()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2827" name="org.sonar.core.persistence.MyBatis.openSession(boolean)&gt;org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)" />
      <edge id="2828" name="org.sonar.core.persistence.MyBatis.openSession(boolean)&gt;org.sonar.core.persistence.DbSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)" />
      <edge id="2829" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.MyBatis.createTransactionFactory()" />
      <edge id="2830" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="2831" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="2832" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.dialect.Dialect.getId()" />
      <edge id="2833" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.dialect.Dialect.getTrueSqlValue()" />
      <edge id="2834" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.dialect.Dialect.getFalseSqlValue()" />
      <edge id="2835" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()" />
      <edge id="2836" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.MyBatis.loadAlias(org.apache.ibatis.session.Configuration,java.lang.String,java.lang.Class)" />
      <edge id="2837" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)" />
      <edge id="2838" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)" />
      <edge id="2839" name="org.sonar.core.persistence.MyBatis.start()&gt;org.sonar.core.persistence.MyBatis.loadMappers(org.apache.ibatis.session.Configuration,java.lang.Class[])" />
      <edge id="2840" name="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)&gt;org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)" />
      <edge id="2841" name="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)&gt;org.sonar.core.config.Logback.setLoggerLevel(java.lang.String,ch.qos.logback.classic.Level)" />
      <edge id="2842" name="org.sonar.core.persistence.MyBatis.loadMappers(org.apache.ibatis.session.Configuration,java.lang.Class[])&gt;org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)" />
      <edge id="2843" name="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()&gt;org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)" />
      <edge id="2844" name="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()&gt;org.sonar.core.persistence.MyBatis.start()" />
      <edge id="2845" name="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()&gt;org.sonar.core.persistence.MyBatis.getSessionFactory()" />
      <edge id="2846" name="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()&gt;org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)" />
      <edge id="2847" name="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()&gt;org.sonar.core.persistence.MyBatis.start()" />
      <edge id="2848" name="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()&gt;org.sonar.core.persistence.MyBatis.openBatchSession()" />
      <edge id="2849" name="org.sonar.core.persistence.MyBatisTest.start()&gt;org.sonar.core.persistence.H2Database(java.lang.String,boolean)" />
      <edge id="2850" name="org.sonar.core.persistence.MyBatisTest.start()&gt;org.sonar.core.persistence.H2Database.start()" />
      <edge id="2851" name="org.sonar.core.persistence.MyBatisTest.stop()&gt;org.sonar.core.persistence.H2Database.stop()" />
      <edge id="2852" name="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2853" name="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreMapper.acquire(java.lang.String,java.lang.Long,java.lang.Long)" />
      <edge id="2854" name="org.sonar.core.persistence.SemaphoreDao.lockedSince(org.sonar.core.persistence.SemaphoreDto)&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2855" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2856" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2857" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="2858" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" />
      <edge id="2859" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2860" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)&gt;org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" />
      <edge id="2861" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)&gt;org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="2862" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)&gt;org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)" />
      <edge id="2863" name="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)&gt;org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" />
      <edge id="2864" name="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2865" name="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2866" name="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2867" name="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2868" name="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)&gt;org.sonar.core.persistence.SemaphoreDao.lockedSince(org.sonar.core.persistence.SemaphoreDto)" />
      <edge id="2869" name="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2870" name="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreMapper.selectSemaphore(java.lang.String)" />
      <edge id="2871" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDto()" />
      <edge id="2872" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDto.setName(java.lang.String)" />
      <edge id="2873" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDto.setCreatedAt(java.lang.Long)" />
      <edge id="2874" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDto.setUpdatedAt(java.lang.Long)" />
      <edge id="2875" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDto.setLockedAt(java.lang.Long)" />
      <edge id="2876" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2877" name="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.persistence.SemaphoreMapper.initialize(org.sonar.core.persistence.SemaphoreDto)" />
      <edge id="2878" name="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2879" name="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2880" name="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreMapper.release(java.lang.String)" />
      <edge id="2881" name="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="2882" name="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)&gt;org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="2883" name="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)&gt;org.sonar.core.persistence.SemaphoreMapper.update(java.lang.String,java.lang.Long)" />
      <edge id="2884" name="org.sonar.core.persistence.SemaphoreDaoTest$Runner.run()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2885" name="org.sonar.core.persistence.SemaphoreDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2886" name="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2887" name="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="2888" name="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="2889" name="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="2890" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2891" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2892" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2893" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2894" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2895" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2896" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2897" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2898" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2899" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2900" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2901" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2902" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2903" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2904" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2905" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2906" name="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2907" name="org.sonar.core.persistence.SemaphoreDaoTest.before()&gt;org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2908" name="org.sonar.core.persistence.SemaphoreDaoTest.before()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2909" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2910" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2911" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2912" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2913" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2914" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2915" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2916" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2917" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2918" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2919" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2920" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2921" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2922" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2923" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2924" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2925" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2926" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2927" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2928" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2929" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2930" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2931" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" />
      <edge id="2932" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2933" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2934" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2935" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2936" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2937" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2938" name="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2939" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2940" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2941" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2942" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2943" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2944" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2945" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2946" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2947" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="2948" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" />
      <edge id="2949" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2950" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2951" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)" />
      <edge id="2952" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2953" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2954" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2955" name="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_update_null_semaphore()&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2956" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2957" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2958" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2959" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()&gt;org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2960" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2961" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2962" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2963" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2964" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2965" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="2966" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="2967" name="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2968" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" />
      <edge id="2969" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" />
      <edge id="2970" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDto.getName()" />
      <edge id="2971" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDto.getCreatedAt()" />
      <edge id="2972" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()" />
      <edge id="2973" name="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()&gt;org.sonar.core.persistence.SemaphoreDto.getLockedAt()" />
      <edge id="2974" name="org.sonar.core.persistence.SemaphoreDaoTest.test_concurrent_locks()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2975" name="org.sonar.core.persistence.SemaphoreDaoTest.test_concurrent_locks()&gt;org.sonar.core.persistence.SemaphoreDaoTest$Runner(org.sonar.core.persistence.SemaphoreDao,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CyclicBarrier,java.util.concurrent.CountDownLatch)" />
      <edge id="2976" name="org.sonar.core.persistence.SemaphoreUpdater$1.run()&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2977" name="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)&gt;org.sonar.core.persistence.SemaphoreUpdater$1()" />
      <edge id="2978" name="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2979" name="org.sonar.core.persistence.SemaphoreUpdaterTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="2980" name="org.sonar.core.persistence.SemaphoreUpdaterTest.before()&gt;org.sonar.core.persistence.SemaphoreUpdater(org.sonar.core.persistence.SemaphoreDao)" />
      <edge id="2981" name="org.sonar.core.persistence.SemaphoreUpdaterTest.shouldNotFailWhenCancelNotExistingSemaphore()&gt;org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)" />
      <edge id="2982" name="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()&gt;org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)" />
      <edge id="2983" name="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()&gt;org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)" />
      <edge id="2984" name="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2985" name="org.sonar.core.persistence.SemaphoreUpdaterTest.testScheduleUpdate()&gt;org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)" />
      <edge id="2986" name="org.sonar.core.persistence.SemaphoreUpdaterTest.testScheduleUpdate()&gt;org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" />
      <edge id="2987" name="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" />
      <edge id="2988" name="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2989" name="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)&gt;org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)" />
      <edge id="2990" name="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)" />
      <edge id="2991" name="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2992" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" />
      <edge id="2993" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoresImpl(org.sonar.core.persistence.SemaphoreDao,org.sonar.core.persistence.SemaphoreUpdater)" />
      <edge id="2994" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)" />
      <edge id="2995" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String)" />
      <edge id="2996" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" />
      <edge id="2997" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)" />
      <edge id="2998" name="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()&gt;org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" />
      <edge id="2999" name="org.sonar.core.platform.ComponentContainer()&gt;org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)" />
      <edge id="3000" name="org.sonar.core.platform.ComponentContainer()&gt;org.sonar.core.platform.ComponentContainer.createPicoContainer()" />
      <edge id="3001" name="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)&gt;org.sonar.core.platform.ComponentKeys()" />
      <edge id="3002" name="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3003" name="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)&gt;org.sonar.core.platform.ComponentKeys()" />
      <edge id="3004" name="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3005" name="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)&gt;org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)" />
      <edge id="3006" name="org.sonar.core.platform.ComponentContainer.createPicoContainer()&gt;org.sonar.core.platform.ComponentContainer$1(org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="3007" name="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])&gt;org.sonar.core.platform.ComponentContainer.addPicoAdapter(org.picocontainer.ComponentAdapter)" />
      <edge id="3008" name="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3009" name="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3010" name="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" />
      <edge id="3011" name="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)&gt;org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)" />
      <edge id="3012" name="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)&gt;org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" />
      <edge id="3013" name="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" />
      <edge id="3014" name="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)&gt;org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)" />
      <edge id="3015" name="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)&gt;org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" />
      <edge id="3016" name="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)&gt;org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)" />
      <edge id="3017" name="org.sonar.core.platform.ComponentContainer.addSingletons(java.util.Collection)&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3018" name="org.sonar.core.platform.ComponentContainer.createChild()&gt;org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" />
      <edge id="3019" name="org.sonar.core.platform.ComponentContainer.startComponents()&gt;org.sonar.core.platform.ComponentContainer.doBeforeStart()" />
      <edge id="3020" name="org.sonar.core.platform.ComponentContainer.startComponents()&gt;org.sonar.core.platform.ComponentContainer.doAfterStart()" />
      <edge id="3021" name="org.sonar.core.platform.ComponentContainer.startComponents()&gt;org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)" />
      <edge id="3022" name="org.sonar.core.platform.ComponentContainer.stopComponents()&gt;org.sonar.core.platform.ComponentContainer.stopComponents(boolean)" />
      <edge id="3023" name="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)&gt;org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)" />
      <edge id="3024" name="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)&gt;org.sonar.core.platform.ComponentContainer.removeChild()" />
      <edge id="3025" name="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)&gt;org.sonar.core.platform.PluginInfo.getName()" />
      <edge id="3026" name="org.sonar.core.platform.ComponentContainer.execute()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3027" name="org.sonar.core.platform.ComponentContainer.execute()&gt;org.sonar.core.platform.ComponentContainer.stopComponents(boolean)" />
      <edge id="3028" name="org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider.provide()&gt;org.sonar.core.platform.ComponentContainerTest$SimpleComponent()" />
      <edge id="3029" name="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3030" name="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3031" name="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()&gt;org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" />
      <edge id="3032" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3033" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3034" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3035" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3036" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()&gt;org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" />
      <edge id="3037" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3038" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()&gt;org.sonar.core.platform.ComponentContainer.getComponentByKey(java.lang.Object)" />
      <edge id="3039" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3040" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()&gt;org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" />
      <edge id="3041" name="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3042" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3043" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer.createChild()" />
      <edge id="3044" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3045" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3046" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3047" name="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()&gt;org.sonar.core.platform.ComponentContainer.stopComponents()" />
      <edge id="3048" name="org.sonar.core.platform.ComponentContainerTest.shouldRegisterItself()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3049" name="org.sonar.core.platform.ComponentContainerTest.shouldRegisterItself()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3050" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3051" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()&gt;org.sonar.core.platform.ComponentContainerTest$StartableCloseableComponent()" />
      <edge id="3052" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3053" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3054" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3055" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()&gt;org.sonar.core.platform.ComponentContainerTest$CloseableComponent()" />
      <edge id="3056" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3057" name="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3058" name="org.sonar.core.platform.ComponentContainerTest.should_execute_components()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3059" name="org.sonar.core.platform.ComponentContainerTest.should_execute_components()&gt;org.sonar.core.platform.ComponentContainerTest$StartableComponent()" />
      <edge id="3060" name="org.sonar.core.platform.ComponentContainerTest.should_execute_components()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3061" name="org.sonar.core.platform.ComponentContainerTest.should_execute_components()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3062" name="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3063" name="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3064" name="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3065" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3066" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3067" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3068" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3069" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.doBeforeStart()" />
      <edge id="3070" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.doAfterStart()" />
      <edge id="3071" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()&gt;org.sonar.core.platform.ComponentContainer.stopComponents()" />
      <edge id="3072" name="org.sonar.core.platform.ComponentContainerTest$1()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3073" name="org.sonar.core.platform.ComponentContainer.doAfterStart()&gt;org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()" />
      <edge id="3074" name="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" />
      <edge id="3075" name="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3076" name="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3077" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainerTest$StartableComponent()" />
      <edge id="3078" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainerTest$1()" />
      <edge id="3079" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3080" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" />
      <edge id="3081" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3082" name="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3083" name="org.sonar.core.platform.ComponentContainerTest$2()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3084" name="org.sonar.core.platform.ComponentContainer.doAfterStart()&gt;org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()" />
      <edge id="3085" name="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" />
      <edge id="3086" name="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3087" name="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3088" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainerTest$StartableComponent()" />
      <edge id="3089" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainerTest$UnstartableComponent()" />
      <edge id="3090" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainerTest$2()" />
      <edge id="3091" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3092" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" />
      <edge id="3093" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3094" name="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3095" name="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3096" name="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3097" name="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3098" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3099" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3100" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.createChild()" />
      <edge id="3101" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" />
      <edge id="3102" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.getParent()" />
      <edge id="3103" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.getChild()" />
      <edge id="3104" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3105" name="org.sonar.core.platform.ComponentContainerTest.testChild()&gt;org.sonar.core.platform.ComponentContainer.stopComponents()" />
      <edge id="3106" name="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3107" name="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()&gt;org.sonar.core.platform.ComponentContainer.startComponents()" />
      <edge id="3108" name="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()&gt;org.sonar.core.platform.ComponentContainer.createChild()" />
      <edge id="3109" name="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()&gt;org.sonar.core.platform.ComponentContainer.getChild()" />
      <edge id="3110" name="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()&gt;org.sonar.core.platform.ComponentContainer.removeChild()" />
      <edge id="3111" name="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3112" name="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3113" name="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()&gt;org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider()" />
      <edge id="3114" name="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3115" name="org.sonar.core.platform.ComponentContainerTest.test_add_class()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3116" name="org.sonar.core.platform.ComponentContainerTest.test_add_class()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3117" name="org.sonar.core.platform.ComponentContainerTest.test_add_class()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3118" name="org.sonar.core.platform.ComponentContainerTest.test_add_collection()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3119" name="org.sonar.core.platform.ComponentContainerTest.test_add_collection()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3120" name="org.sonar.core.platform.ComponentContainerTest.test_add_collection()&gt;org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)" />
      <edge id="3121" name="org.sonar.core.platform.ComponentContainerTest.test_start_failure()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3122" name="org.sonar.core.platform.ComponentContainerTest.test_start_failure()&gt;org.sonar.core.platform.ComponentContainerTest$StartableComponent()" />
      <edge id="3123" name="org.sonar.core.platform.ComponentContainerTest.test_start_failure()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3124" name="org.sonar.core.platform.ComponentContainerTest.test_start_failure()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3125" name="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()&gt;org.sonar.core.platform.ComponentContainer()" />
      <edge id="3126" name="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()&gt;org.sonar.core.platform.ComponentContainerTest$StartableComponent()" />
      <edge id="3127" name="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()&gt;org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" />
      <edge id="3128" name="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()&gt;org.sonar.core.platform.ComponentContainer.execute()" />
      <edge id="3129" name="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object,org.sonar.api.utils.log.Logger)" />
      <edge id="3130" name="org.sonar.core.platform.ComponentKeysTest.generate_key_of_class()&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" />
      <edge id="3131" name="org.sonar.core.platform.ComponentKeysTest.generate_key_of_object()&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" />
      <edge id="3132" name="org.sonar.core.platform.ComponentKeysTest.generate_key_of_object()&gt;org.sonar.core.platform.ComponentKeysTest$FakeComponent()" />
      <edge id="3133" name="org.sonar.core.platform.ComponentKeysTest.should_generate_unique_key_when_toString_is_not_overridden()&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" />
      <edge id="3134" name="org.sonar.core.platform.ComponentKeysTest.should_generate_unique_key_when_toString_is_not_overridden()&gt;org.sonar.core.platform.ComponentKeysTest$WrongToStringImpl()" />
      <edge id="3135" name="org.sonar.core.platform.ComponentKeysTest.should_log_warning_if_toString_is_not_overridden()&gt;org.sonar.core.platform.ComponentKeys.of(java.lang.Object,org.sonar.api.utils.log.Logger)" />
      <edge id="3136" name="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)&gt;org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)" />
      <edge id="3137" name="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)&gt;org.sonar.core.platform.ComponentContainer.createPicoContainer()" />
      <edge id="3138" name="org.sonar.core.platform.PicoUtilsTest.shouldNotSanitizeOtherExceptions()&gt;org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)" />
      <edge id="3139" name="org.sonar.core.platform.PicoUtilsTest.shouldPropagateInitialUncheckedException()&gt;org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)" />
      <edge id="3140" name="org.sonar.core.platform.PicoUtilsTest.shouldPropagateInitialUncheckedException()&gt;org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)" />
      <edge id="3141" name="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException()&gt;org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)" />
      <edge id="3142" name="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException()&gt;org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)" />
      <edge id="3143" name="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException_no_wrapper_message()&gt;org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)" />
      <edge id="3144" name="org.sonar.core.platform.PicoUtilsTest.shouldThrowUncheckedExceptionWhenPropagatingCheckedException()&gt;org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)" />
      <edge id="3145" name="org.sonar.core.platform.PicoUtilsTest.shouldThrowUncheckedExceptionWhenPropagatingCheckedException()&gt;org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)" />
      <edge id="3146" name="org.sonar.core.platform.PluginClassloaderFactory.build(java.util.Collection,org.sonar.classloader.ClassloaderBuilder)&gt;org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()" />
      <edge id="3147" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.baseClassloader()" />
      <edge id="3148" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.apiMask()" />
      <edge id="3149" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()" />
      <edge id="3150" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()" />
      <edge id="3151" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.getFiles()" />
      <edge id="3152" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.fileToUrl(java.io.File)" />
      <edge id="3153" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()" />
      <edge id="3154" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.extractCompatibilityModeJar()" />
      <edge id="3155" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)" />
      <edge id="3156" name="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.build(java.util.Collection,org.sonar.classloader.ClassloaderBuilder)" />
      <edge id="3157" name="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()" />
      <edge id="3158" name="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderDef.getExportMask()" />
      <edge id="3159" name="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef(java.lang.String)" />
      <edge id="3160" name="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)" />
      <edge id="3161" name="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.getExportMask()" />
      <edge id="3162" name="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)" />
      <edge id="3163" name="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.fakePluginJar(java.lang.String)" />
      <edge id="3164" name="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef(java.lang.String)" />
      <edge id="3165" name="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)" />
      <edge id="3166" name="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.getExportMask()" />
      <edge id="3167" name="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()&gt;org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)" />
      <edge id="3168" name="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.fakePluginJar(java.lang.String)" />
      <edge id="3169" name="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" />
      <edge id="3170" name="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" />
      <edge id="3171" name="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()&gt;org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" />
      <edge id="3172" name="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)" />
      <edge id="3173" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" />
      <edge id="3174" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()&gt;org.sonar.core.platform.PluginClassloaderDef.setCompatibilityMode(boolean)" />
      <edge id="3175" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()&gt;org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" />
      <edge id="3176" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)" />
      <edge id="3177" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" />
      <edge id="3178" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()&gt;org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" />
      <edge id="3179" name="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()&gt;org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)" />
      <edge id="3180" name="org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin(java.lang.String,org.sonar.updatecenter.common.Version)" />
      <edge id="3181" name="org.sonar.core.platform.PluginInfo$JarToPluginInfo.apply(java.io.File)&gt;org.sonar.core.platform.PluginInfo.create(java.io.File)" />
      <edge id="3182" name="org.sonar.core.platform.PluginInfo.create(java.io.File)&gt;org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" />
      <edge id="3183" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3184" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3185" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setName(java.lang.String)" />
      <edge id="3186" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)" />
      <edge id="3187" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3188" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setDescription(java.lang.String)" />
      <edge id="3189" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setLicense(java.lang.String)" />
      <edge id="3190" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setOrganizationName(java.lang.String)" />
      <edge id="3191" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setOrganizationUrl(java.lang.String)" />
      <edge id="3192" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3193" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setHomepageUrl(java.lang.String)" />
      <edge id="3194" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setIssueTrackerUrl(java.lang.String)" />
      <edge id="3195" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setUseChildFirstClassLoader(boolean)" />
      <edge id="3196" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)" />
      <edge id="3197" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.setImplementationBuild(java.lang.String)" />
      <edge id="3198" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo.addRequiredPlugin(org.sonar.core.platform.PluginInfo$RequiredPlugin)" />
      <edge id="3199" name="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)" />
      <edge id="3200" name="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3201" name="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)&gt;org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3202" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" />
      <edge id="3203" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getBasePlugin()" />
      <edge id="3204" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getDescription()" />
      <edge id="3205" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getHomepageUrl()" />
      <edge id="3206" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getImplementationBuild()" />
      <edge id="3207" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getIssueTrackerUrl()" />
      <edge id="3208" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getLicense()" />
      <edge id="3209" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getOrganizationName()" />
      <edge id="3210" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getOrganizationUrl()" />
      <edge id="3211" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getMinimalSqVersion()" />
      <edge id="3212" name="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()&gt;org.sonar.core.platform.PluginInfo.getRequiredPlugins()" />
      <edge id="3213" name="org.sonar.core.platform.PluginInfoTest.create_from_file()&gt;org.sonar.core.platform.PluginInfo.create(java.io.File)" />
      <edge id="3214" name="org.sonar.core.platform.PluginInfoTest.create_from_file()&gt;org.sonar.core.platform.PluginInfo.getName()" />
      <edge id="3215" name="org.sonar.core.platform.PluginInfoTest.create_from_file()&gt;org.sonar.core.platform.PluginInfo.getMinimalSqVersion()" />
      <edge id="3216" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" />
      <edge id="3217" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3218" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getName()" />
      <edge id="3219" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getVersion()" />
      <edge id="3220" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getJarFile()" />
      <edge id="3221" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getMainClass()" />
      <edge id="3222" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getBasePlugin()" />
      <edge id="3223" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getDescription()" />
      <edge id="3224" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getHomepageUrl()" />
      <edge id="3225" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getImplementationBuild()" />
      <edge id="3226" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getIssueTrackerUrl()" />
      <edge id="3227" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getLicense()" />
      <edge id="3228" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getOrganizationName()" />
      <edge id="3229" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getOrganizationUrl()" />
      <edge id="3230" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getMinimalSqVersion()" />
      <edge id="3231" name="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()&gt;org.sonar.core.platform.PluginInfo.getRequiredPlugins()" />
      <edge id="3232" name="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3233" name="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()&gt;org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)" />
      <edge id="3234" name="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()&gt;org.sonar.core.platform.PluginInfo.getBasePlugin()" />
      <edge id="3235" name="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)" />
      <edge id="3236" name="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.getKey()" />
      <edge id="3237" name="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.getMinimalVersion()" />
      <edge id="3238" name="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.toString()" />
      <edge id="3239" name="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()&gt;org.sonar.core.platform.PluginInfo$RequiredPlugin.equals(java.lang.Object)" />
      <edge id="3240" name="org.sonar.core.platform.PluginInfoTest.test_comparison()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3241" name="org.sonar.core.platform.PluginInfoTest.test_comparison()&gt;org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3242" name="org.sonar.core.platform.PluginInfoTest.test_compatibility_with_sq_version()&gt;org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)" />
      <edge id="3243" name="org.sonar.core.platform.PluginInfoTest.test_compatibility_with_sq_version()&gt;org.sonar.core.platform.PluginInfo.isCompatibleWith(java.lang.String)" />
      <edge id="3244" name="org.sonar.core.platform.PluginInfoTest.test_equals()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3245" name="org.sonar.core.platform.PluginInfoTest.test_equals()&gt;org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3246" name="org.sonar.core.platform.PluginInfoTest.test_equals()&gt;org.sonar.core.platform.PluginInfo.equals(java.lang.Object)" />
      <edge id="3247" name="org.sonar.core.platform.PluginInfoTest.test_equals()&gt;org.sonar.core.platform.PluginInfo.hashCode()" />
      <edge id="3248" name="org.sonar.core.platform.PluginInfoTest.test_toString()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3249" name="org.sonar.core.platform.PluginInfoTest.test_toString()&gt;org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3250" name="org.sonar.core.platform.PluginInfoTest.test_toString()&gt;org.sonar.core.platform.PluginInfo.toString()" />
      <edge id="3251" name="org.sonar.core.platform.PluginInfoTest.test_toString()&gt;org.sonar.core.platform.PluginInfo.setImplementationBuild(java.lang.String)" />
      <edge id="3252" name="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)&gt;org.sonar.core.platform.ExplodedPlugin(java.lang.String,java.io.File,java.util.Collection)" />
      <edge id="3253" name="org.sonar.core.platform.PluginJarExploderTest$1()&gt;org.sonar.core.platform.PluginJarExploder()" />
      <edge id="3254" name="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3255" name="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginJarExploder.newLibFilter()" />
      <edge id="3256" name="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)" />
      <edge id="3257" name="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3258" name="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3259" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploderTest.getFile(java.lang.String)" />
      <edge id="3260" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3261" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3262" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploderTest$1()" />
      <edge id="3263" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploder()" />
      <edge id="3264" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploder.newLibFilter()" />
      <edge id="3265" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)" />
      <edge id="3266" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3267" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3268" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3269" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getKey()" />
      <edge id="3270" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getLibs()" />
      <edge id="3271" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getMain()" />
      <edge id="3272" name="org.sonar.core.platform.PluginJarExploderTest$2()&gt;org.sonar.core.platform.PluginJarExploder()" />
      <edge id="3273" name="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3274" name="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)" />
      <edge id="3275" name="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3276" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3277" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3278" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginJarExploderTest$2()" />
      <edge id="3279" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginJarExploder()" />
      <edge id="3280" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)" />
      <edge id="3281" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3282" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3283" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getKey()" />
      <edge id="3284" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getLibs()" />
      <edge id="3285" name="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()&gt;org.sonar.core.platform.ExplodedPlugin.getMain()" />
      <edge id="3286" name="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3287" name="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getBasePlugin()" />
      <edge id="3288" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)" />
      <edge id="3289" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef(java.lang.String)" />
      <edge id="3290" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3291" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)" />
      <edge id="3292" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.ExplodedPlugin.getMain()" />
      <edge id="3293" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.ExplodedPlugin.getLibs()" />
      <edge id="3294" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)" />
      <edge id="3295" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3296" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getMainClass()" />
      <edge id="3297" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.getExportMask()" />
      <edge id="3298" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getBasePlugin()" />
      <edge id="3299" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.setSelfFirstStrategy(boolean)" />
      <edge id="3300" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.isUseChildFirstClassLoader()" />
      <edge id="3301" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getMinimalSqVersion()" />
      <edge id="3302" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.setCompatibilityMode(boolean)" />
      <edge id="3303" name="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)&gt;org.sonar.core.platform.PluginInfo.getName()" />
      <edge id="3304" name="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()" />
      <edge id="3305" name="org.sonar.core.platform.PluginLoader.load(java.util.Map)&gt;org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" />
      <edge id="3306" name="org.sonar.core.platform.PluginLoader.load(java.util.Map)&gt;org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" />
      <edge id="3307" name="org.sonar.core.platform.PluginLoader.load(java.util.Map)&gt;org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)" />
      <edge id="3308" name="org.sonar.core.platform.PluginLoader.unload(java.util.Collection)&gt;org.sonar.core.platform.PluginClassloaderFactory.baseClassloader()" />
      <edge id="3309" name="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder()&gt;org.sonar.core.platform.PluginJarExploder()" />
      <edge id="3310" name="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)" />
      <edge id="3311" name="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.ExplodedPlugin(java.lang.String,java.io.File,java.util.Collection)" />
      <edge id="3312" name="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3313" name="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3314" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3315" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3316" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)" />
      <edge id="3317" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3318" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" />
      <edge id="3319" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()" />
      <edge id="3320" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()" />
      <edge id="3321" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getFiles()" />
      <edge id="3322" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()" />
      <edge id="3323" name="org.sonar.core.platform.PluginLoaderTest.define_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()" />
      <edge id="3324" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3325" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3326" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)" />
      <edge id="3327" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)" />
      <edge id="3328" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" />
      <edge id="3329" name="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()&gt;org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()" />
      <edge id="3330" name="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()&gt;org.sonar.core.platform.PluginClassloaderDef(java.lang.String)" />
      <edge id="3331" name="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()&gt;org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)" />
      <edge id="3332" name="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()&gt;org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)" />
      <edge id="3333" name="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()&gt;org.sonar.core.platform.PluginClassloaderDef(java.lang.String)" />
      <edge id="3334" name="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()&gt;org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)" />
      <edge id="3335" name="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()&gt;org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)" />
      <edge id="3336" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo(java.lang.String)" />
      <edge id="3337" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)" />
      <edge id="3338" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)" />
      <edge id="3339" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo.setUseChildFirstClassLoader(boolean)" />
      <edge id="3340" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)" />
      <edge id="3341" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" />
      <edge id="3342" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3343" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()" />
      <edge id="3344" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()" />
      <edge id="3345" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getFiles()" />
      <edge id="3346" name="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()&gt;org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()" />
      <edge id="3347" name="org.sonar.core.plugins.RemotePlugin.marshal()&gt;org.sonar.core.plugins.RemotePluginFile.getFilename()" />
      <edge id="3348" name="org.sonar.core.plugins.RemotePlugin.marshal()&gt;org.sonar.core.plugins.RemotePluginFile.getHash()" />
      <edge id="3349" name="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.plugins.RemotePlugin(java.lang.String)" />
      <edge id="3350" name="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getKey()" />
      <edge id="3351" name="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.plugins.RemotePlugin.setFile(java.io.File)" />
      <edge id="3352" name="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)&gt;org.sonar.core.platform.PluginInfo.getNonNullJarFile()" />
      <edge id="3353" name="org.sonar.core.plugins.RemotePlugin.setFile(java.io.File)&gt;org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)" />
      <edge id="3354" name="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)&gt;org.sonar.core.plugins.RemotePluginFile(java.lang.String,java.lang.String)" />
      <edge id="3355" name="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)&gt;org.sonar.core.plugins.RemotePlugin(java.lang.String)" />
      <edge id="3356" name="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)&gt;org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)" />
      <edge id="3357" name="org.sonar.core.plugins.RemotePluginTest.shouldEqual()&gt;org.sonar.core.plugins.RemotePlugin(java.lang.String)" />
      <edge id="3358" name="org.sonar.core.plugins.RemotePluginTest.shouldEqual()&gt;org.sonar.core.plugins.RemotePlugin.equals(java.lang.Object)" />
      <edge id="3359" name="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()&gt;org.sonar.core.plugins.RemotePlugin(java.lang.String)" />
      <edge id="3360" name="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()&gt;org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)" />
      <edge id="3361" name="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()&gt;org.sonar.core.plugins.RemotePlugin.marshal()" />
      <edge id="3362" name="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()&gt;org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)" />
      <edge id="3363" name="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()&gt;org.sonar.core.plugins.RemotePlugin.getKey()" />
      <edge id="3364" name="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()&gt;org.sonar.core.plugins.RemotePlugin.file()" />
      <edge id="3365" name="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()&gt;org.sonar.core.plugins.RemotePluginFile.getFilename()" />
      <edge id="3366" name="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()&gt;org.sonar.core.plugins.RemotePluginFile.getHash()" />
      <edge id="3367" name="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3368" name="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)&gt;org.sonar.core.persistence.DbSession.getConnection()" />
      <edge id="3369" name="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)&gt;org.sonar.core.persistence.DaoUtils.repeatCondition(java.lang.String,int,java.lang.String)" />
      <edge id="3370" name="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3371" name="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3372" name="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.findNotificationSubscribers(java.lang.String,java.lang.String)" />
      <edge id="3373" name="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3374" name="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3375" name="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.findUsersForNotification(java.lang.String,java.lang.String)" />
      <edge id="3376" name="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3377" name="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="3378" name="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.properties.PropertiesMapper.selectByQuery(org.sonar.core.properties.PropertyQuery)" />
      <edge id="3379" name="org.sonar.core.properties.PropertiesDao.selectEnabledDescendantModuleProperties(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.selectDescendantModuleProperties(java.lang.String,java.lang.String,boolean)" />
      <edge id="3380" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3381" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()&gt;org.sonar.core.properties.PropertiesDao.selectGlobalProperties(org.apache.ibatis.session.SqlSession)" />
      <edge id="3382" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3383" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperties(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.selectGlobalProperties()" />
      <edge id="3384" name="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3385" name="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)&gt;org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="3386" name="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3387" name="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="3388" name="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.selectProjectProperties(java.lang.String)" />
      <edge id="3389" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3390" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)" />
      <edge id="3391" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3392" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3393" name="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3394" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3395" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)" />
      <edge id="3396" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3397" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3398" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3399" name="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3400" name="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3401" name="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.deleteAllProperties(java.lang.String)" />
      <edge id="3402" name="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3403" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3404" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()&gt;org.sonar.core.properties.PropertiesMapper.deleteGlobalProperties()" />
      <edge id="3405" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3406" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3407" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)&gt;org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="3408" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3409" name="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.deleteGlobalProperty(java.lang.String)" />
      <edge id="3410" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3411" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)&gt;org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="3412" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3413" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.deleteProjectProperties(java.lang.String,java.lang.String)" />
      <edge id="3414" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3415" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)&gt;org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3416" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3417" name="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.deleteProjectProperty(java.lang.String,java.lang.Long)" />
      <edge id="3418" name="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3419" name="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)&gt;org.sonar.core.properties.PropertiesMapper.renamePropertyKey(java.lang.String,java.lang.String)" />
      <edge id="3420" name="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3421" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3422" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="3423" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.properties.PropertiesMapper.deleteGlobalProperty(java.lang.String)" />
      <edge id="3424" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.properties.PropertiesMapper.insert(org.sonar.core.properties.PropertyDto)" />
      <edge id="3425" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3426" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3427" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.properties.PropertyDto.setValue(java.lang.String)" />
      <edge id="3428" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="3429" name="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3430" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3431" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)&gt;org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="3432" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3433" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)" />
      <edge id="3434" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3435" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertyDto.setValue(java.lang.String)" />
      <edge id="3436" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.update(org.sonar.core.properties.PropertyDto)" />
      <edge id="3437" name="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.insert(org.sonar.core.properties.PropertyDto)" />
      <edge id="3438" name="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3439" name="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="3440" name="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3441" name="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.properties.PropertiesMapper.updateProperties(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="3442" name="org.sonar.core.properties.PropertiesDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3443" name="org.sonar.core.properties.PropertiesDaoTest.findById(java.util.List,int)&gt;org.sonar.core.properties.PropertyDto.getId()" />
      <edge id="3444" name="org.sonar.core.properties.PropertiesDaoTest.createDao()&gt;org.sonar.core.properties.PropertiesDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="3445" name="org.sonar.core.properties.PropertiesDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3446" name="org.sonar.core.properties.PropertiesDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3447" name="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3448" name="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()&gt;org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)" />
      <edge id="3449" name="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3450" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3451" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()&gt;org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()" />
      <edge id="3452" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3453" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3454" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()&gt;org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)" />
      <edge id="3455" name="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3456" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3457" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()&gt;org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)" />
      <edge id="3458" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3459" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3460" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()&gt;org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)" />
      <edge id="3461" name="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3462" name="org.sonar.core.properties.PropertiesDaoTest.findNotificationSubscribers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3463" name="org.sonar.core.properties.PropertiesDaoTest.findNotificationSubscribers()&gt;org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="3464" name="org.sonar.core.properties.PropertiesDaoTest.hasNotificationSubscribers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3465" name="org.sonar.core.properties.PropertiesDaoTest.hasNotificationSubscribers()&gt;org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)" />
      <edge id="3466" name="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3467" name="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()&gt;org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" />
      <edge id="3468" name="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3469" name="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3470" name="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()&gt;org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" />
      <edge id="3471" name="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3472" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3473" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()&gt;org.sonar.core.properties.PropertiesDao.selectGlobalProperties()" />
      <edge id="3474" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()&gt;org.sonar.core.properties.PropertiesDaoTest.findById(java.util.List,int)" />
      <edge id="3475" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()&gt;org.sonar.core.properties.PropertyDto.getKey()" />
      <edge id="3476" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3477" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3478" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()&gt;org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" />
      <edge id="3479" name="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3480" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3481" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()&gt;org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)" />
      <edge id="3482" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()&gt;org.sonar.core.properties.PropertyDto.getKey()" />
      <edge id="3483" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3484" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3485" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()&gt;org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" />
      <edge id="3486" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()&gt;org.sonar.core.properties.PropertyDto.getKey()" />
      <edge id="3487" name="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3488" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3489" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="3490" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyQuery.builder()" />
      <edge id="3491" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyQuery$Builder.setKey(java.lang.String)" />
      <edge id="3492" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyQuery$Builder.setComponentId(java.lang.Long)" />
      <edge id="3493" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyQuery$Builder.setUserId(java.lang.Integer)" />
      <edge id="3494" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyQuery$Builder.build()" />
      <edge id="3495" name="org.sonar.core.properties.PropertiesDaoTest.select_by_query()&gt;org.sonar.core.properties.PropertyDto.getValue()" />
      <edge id="3496" name="org.sonar.core.properties.PropertiesDaoTest.select_module_properties_tree()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3497" name="org.sonar.core.properties.PropertiesDaoTest.select_module_properties_tree()&gt;org.sonar.core.properties.PropertiesDao.selectEnabledDescendantModuleProperties(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="3498" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3499" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)" />
      <edge id="3500" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3501" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3502" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertyDto.setValue(java.lang.String)" />
      <edge id="3503" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3504" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)" />
      <edge id="3505" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3506" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3507" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)" />
      <edge id="3508" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3509" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3510" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertyDto.setValue(java.lang.String)" />
      <edge id="3511" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3512" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)" />
      <edge id="3513" name="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3514" name="org.sonar.core.properties.PropertiesDaoTest.shouldFindUsersForNotification()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3515" name="org.sonar.core.properties.PropertiesDaoTest.shouldFindUsersForNotification()&gt;org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="3516" name="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_an_empty_key()&gt;org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" />
      <edge id="3517" name="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3518" name="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()&gt;org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" />
      <edge id="3519" name="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3520" name="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_with_empty_key()&gt;org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" />
      <edge id="3521" name="org.sonar.core.properties.PropertiesDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="3522" name="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3523" name="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()&gt;org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" />
      <edge id="3524" name="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3525" name="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3526" name="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()&gt;org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="3527" name="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3528" name="org.sonar.core.properties.PropertyDtoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3529" name="org.sonar.core.properties.PropertyDtoTest.testEquals()&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3530" name="org.sonar.core.properties.PropertyDtoTest.testEquals()&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3531" name="org.sonar.core.properties.PropertyDtoTest.testEquals()&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3532" name="org.sonar.core.properties.PropertyDtoTest.testHashCode()&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3533" name="org.sonar.core.properties.PropertyDtoTest.testHashCode()&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3534" name="org.sonar.core.properties.PropertyDtoTest.testHashCode()&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3535" name="org.sonar.core.properties.PropertyDtoTest.testHashCode()&gt;org.sonar.core.properties.PropertyDto.hashCode()" />
      <edge id="3536" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto()" />
      <edge id="3537" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto.setKey(java.lang.String)" />
      <edge id="3538" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto.setValue(java.lang.String)" />
      <edge id="3539" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)" />
      <edge id="3540" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)" />
      <edge id="3541" name="org.sonar.core.properties.PropertyDtoTest.testToString()&gt;org.sonar.core.properties.PropertyDto.toString()" />
      <edge id="3542" name="org.sonar.core.properties.PropertyQuery$Builder.build()&gt;org.sonar.core.properties.PropertyQuery(org.sonar.core.properties.PropertyQuery$Builder)" />
      <edge id="3543" name="org.sonar.core.properties.PropertyQuery.builder()&gt;org.sonar.core.properties.PropertyQuery$Builder()" />
      <edge id="3544" name="org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction.apply(org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3545" name="org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction.apply(org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.IdUuidPair.getUuid()" />
      <edge id="3546" name="org.sonar.core.purge.IdUuidPairs.ids(java.util.List)&gt;org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction()" />
      <edge id="3547" name="org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)&gt;org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction()" />
      <edge id="3548" name="org.sonar.core.purge.IdUuidPairsTest.extract_ids()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3549" name="org.sonar.core.purge.IdUuidPairsTest.extract_ids()&gt;org.sonar.core.purge.IdUuidPairs.ids(java.util.List)" />
      <edge id="3550" name="org.sonar.core.purge.IdUuidPairsTest.extract_uuids()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3551" name="org.sonar.core.purge.IdUuidPairsTest.extract_uuids()&gt;org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)" />
      <edge id="3552" name="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3553" name="org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3554" name="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3555" name="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)&gt;org.sonar.core.purge.PurgeMapper.deleteFileSourcesByProjectUuid(java.lang.String)" />
      <edge id="3556" name="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3557" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.IdUuidPairs.ids(java.util.List)" />
      <edge id="3558" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)" />
      <edge id="3559" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" />
      <edge id="3560" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.selectSnapshotIdsByResource(java.util.List)" />
      <edge id="3561" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3562" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceLinks(java.util.List)" />
      <edge id="3563" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3564" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceProperties(java.util.List)" />
      <edge id="3565" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceIndex(java.util.List)" />
      <edge id="3566" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceGroupRoles(java.util.List)" />
      <edge id="3567" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceUserRoles(java.util.List)" />
      <edge id="3568" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceManualMeasures(java.util.List)" />
      <edge id="3569" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteComponentIssueChanges(java.util.List)" />
      <edge id="3570" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteComponentIssues(java.util.List)" />
      <edge id="3571" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceActionPlans(java.util.List)" />
      <edge id="3572" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteComponentEvents(java.util.List)" />
      <edge id="3573" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteResource(java.util.List)" />
      <edge id="3574" name="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteAuthors(java.util.List)" />
      <edge id="3575" name="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3576" name="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteSnapshotDuplications(java.util.List)" />
      <edge id="3577" name="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3578" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)" />
      <edge id="3579" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3580" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteSnapshotEvents(java.util.List)" />
      <edge id="3581" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3582" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteSnapshotMeasures(java.util.List)" />
      <edge id="3583" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteSnapshot(java.util.List)" />
      <edge id="3584" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" />
      <edge id="3585" name="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3586" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)" />
      <edge id="3587" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3588" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.selectMetricIdsWithoutHistoricalData()" />
      <edge id="3589" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.deleteSnapshotWastedMeasures(java.util.List,java.util.List)" />
      <edge id="3590" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3591" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)&gt;org.sonar.core.purge.PurgeMapper.updatePurgeStatusToOne(long)" />
      <edge id="3592" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" />
      <edge id="3593" name="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3594" name="org.sonar.core.purge.PurgeCommandsTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3595" name="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIdUuids()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3596" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3597" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3598" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3599" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3600" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3601" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3602" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)" />
      <edge id="3603" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3604" name="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3605" name="org.sonar.core.purge.PurgeCommandsTest.prepare()&gt;org.sonar.core.purge.PurgeProfiler()" />
      <edge id="3606" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3607" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3608" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3609" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3610" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" />
      <edge id="3611" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3612" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" />
      <edge id="3613" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3614" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3615" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3616" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3617" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3618" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3619" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)" />
      <edge id="3620" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3621" name="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3622" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3623" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3624" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3625" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3626" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3627" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3628" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)" />
      <edge id="3629" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3630" name="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3631" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3632" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3633" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3634" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" />
      <edge id="3635" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIdUuids()" />
      <edge id="3636" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3637" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3638" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3639" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3640" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" />
      <edge id="3641" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIds()" />
      <edge id="3642" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3643" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3644" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="3645" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3646" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" />
      <edge id="3647" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIds()" />
      <edge id="3648" name="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3649" name="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int,org.sonar.api.utils.System2)" />
      <edge id="3650" name="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()&gt;org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)" />
      <edge id="3651" name="org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3652" name="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()&gt;org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)" />
      <edge id="3653" name="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3654" name="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()&gt;org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()" />
      <edge id="3655" name="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()&gt;org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)" />
      <edge id="3656" name="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3657" name="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()&gt;org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()" />
      <edge id="3658" name="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()&gt;org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)" />
      <edge id="3659" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3660" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3661" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()" />
      <edge id="3662" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3663" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3664" name="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()&gt;org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)" />
      <edge id="3665" name="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3666" name="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)" />
      <edge id="3667" name="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setStatus(java.lang.String[])" />
      <edge id="3668" name="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)" />
      <edge id="3669" name="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3670" name="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3671" name="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3672" name="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)" />
      <edge id="3673" name="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.purge.PurgeMapper.selectPurgeableFileUuids(java.lang.Long)" />
      <edge id="3674" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3675" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)&gt;org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" />
      <edge id="3676" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3677" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)" />
      <edge id="3678" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithEvents(long)" />
      <edge id="3679" name="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithoutEvents(long)" />
      <edge id="3680" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" />
      <edge id="3681" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)" />
      <edge id="3682" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3683" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeDao.deleteFileSources(java.lang.String,org.sonar.core.purge.PurgeCommands)" />
      <edge id="3684" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.IdUuidPair.getUuid()" />
      <edge id="3685" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3686" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" />
      <edge id="3687" name="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3688" name="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3689" name="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="3690" name="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3691" name="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3692" name="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3693" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3694" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3695" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="3696" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3697" name="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="3698" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" />
      <edge id="3699" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="3700" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3701" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)" />
      <edge id="3702" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setStatus(java.lang.String[])" />
      <edge id="3703" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setRootProjectId(java.lang.Long)" />
      <edge id="3704" name="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3705" name="org.sonar.core.purge.PurgeDao.deleteFileSources(java.lang.String,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)" />
      <edge id="3706" name="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()" />
      <edge id="3707" name="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.deleteOldClosedIssueChanges(java.lang.String,java.lang.Long)" />
      <edge id="3708" name="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeConfiguration.rootProjectIdUuid()" />
      <edge id="3709" name="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.IdUuidPair.getUuid()" />
      <edge id="3710" name="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.deleteOldClosedIssues(java.lang.String,java.lang.Long)" />
      <edge id="3711" name="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeMapper.selectProjectIdUuidsByRootId(long)" />
      <edge id="3712" name="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3713" name="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" />
      <edge id="3714" name="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeMapper.selectComponentIdUuidsByRootId(long)" />
      <edge id="3715" name="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" />
      <edge id="3716" name="org.sonar.core.purge.PurgeDao$1.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3717" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="3718" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao$1()" />
      <edge id="3719" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3720" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" />
      <edge id="3721" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeListener.onComponentDisabling(java.lang.String)" />
      <edge id="3722" name="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.IdUuidPair.getUuid()" />
      <edge id="3723" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3724" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.deleteResourceIndex(java.util.List)" />
      <edge id="3725" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.setSnapshotIsLastToFalse(long)" />
      <edge id="3726" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.deleteFileSourcesByUuid(java.lang.String)" />
      <edge id="3727" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.IdUuidPair.getUuid()" />
      <edge id="3728" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.disableResource(long)" />
      <edge id="3729" name="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)&gt;org.sonar.core.purge.PurgeMapper.resolveResourceIssuesNotAlreadyResolved(java.lang.String,java.lang.Long)" />
      <edge id="3730" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="3731" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeProfiler)" />
      <edge id="3732" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3733" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeConfiguration.rootProjectIdUuid()" />
      <edge id="3734" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.IdUuidPair.getId()" />
      <edge id="3735" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.resource.ResourceDto.getLongName()" />
      <edge id="3736" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="3737" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" />
      <edge id="3738" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" />
      <edge id="3739" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()" />
      <edge id="3740" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" />
      <edge id="3741" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)&gt;org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" />
      <edge id="3742" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3743" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3744" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)" />
      <edge id="3745" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="3746" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)" />
      <edge id="3747" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setNotPurged(java.lang.Boolean)" />
      <edge id="3748" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setScopes(java.lang.String[])" />
      <edge id="3749" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setRootSnapshotId(java.lang.Long)" />
      <edge id="3750" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3751" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3752" name="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)&gt;org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)" />
      <edge id="3753" name="org.sonar.core.purge.PurgeDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3754" name="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3755" name="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3756" name="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int,org.sonar.api.utils.System2)" />
      <edge id="3757" name="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3758" name="org.sonar.core.purge.PurgeDaoTest.getById(java.util.List,long)&gt;org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()" />
      <edge id="3759" name="org.sonar.core.purge.PurgeDaoTest.after()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3760" name="org.sonar.core.purge.PurgeDaoTest.before()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3761" name="org.sonar.core.purge.PurgeDaoTest.before()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3762" name="org.sonar.core.purge.PurgeDaoTest.before()&gt;org.sonar.core.purge.PurgeDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao,org.sonar.core.purge.PurgeProfiler,org.sonar.api.utils.System2)" />
      <edge id="3763" name="org.sonar.core.purge.PurgeDaoTest.before()&gt;org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="3764" name="org.sonar.core.purge.PurgeDaoTest.before()&gt;org.sonar.core.purge.PurgeProfiler()" />
      <edge id="3765" name="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3766" name="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3767" name="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()&gt;org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)" />
      <edge id="3768" name="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3769" name="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3770" name="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3771" name="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()&gt;org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)" />
      <edge id="3772" name="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="3773" name="org.sonar.core.purge.PurgeDaoTest.select_purgeable_file_uuids_and_only_them()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3774" name="org.sonar.core.purge.PurgeDaoTest.select_purgeable_file_uuids_and_only_them()&gt;org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)" />
      <edge id="3775" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3776" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3777" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()&gt;org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()" />
      <edge id="3778" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3779" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3780" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3781" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3782" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3783" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3784" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3785" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" />
      <edge id="3786" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.purge.PurgeSnapshotQuery.create()" />
      <edge id="3787" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)" />
      <edge id="3788" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)" />
      <edge id="3789" name="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3790" name="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3791" name="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()&gt;org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)" />
      <edge id="3792" name="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()&gt;org.sonar.core.purge.PurgeDaoTest.getById(java.util.List,long)" />
      <edge id="3793" name="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()&gt;org.sonar.core.purge.PurgeableSnapshotDto.isLast()" />
      <edge id="3794" name="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()&gt;org.sonar.core.purge.PurgeableSnapshotDto.hasEvents()" />
      <edge id="3795" name="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3796" name="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3797" name="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" />
      <edge id="3798" name="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3799" name="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3800" name="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3801" name="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3802" name="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()&gt;org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()" />
      <edge id="3803" name="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3804" name="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3805" name="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()&gt;org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)" />
      <edge id="3806" name="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()&gt;org.sonar.core.purge.IdUuidPair(long,java.lang.String)" />
      <edge id="3807" name="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()&gt;org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" />
      <edge id="3808" name="org.sonar.core.purge.PurgeDaoTest.should_purge_project()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3809" name="org.sonar.core.purge.PurgeDaoTest.should_purge_project()&gt;org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" />
      <edge id="3810" name="org.sonar.core.purge.PurgeDaoTest.should_purge_project()&gt;org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()" />
      <edge id="3811" name="org.sonar.core.purge.PurgeDaoTest.should_purge_project()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3812" name="org.sonar.core.purge.PurgeProfiler()&gt;org.sonar.core.purge.PurgeProfiler(org.sonar.core.purge.PurgeProfiler$Clock)" />
      <edge id="3813" name="org.sonar.core.purge.PurgeProfiler()&gt;org.sonar.core.purge.PurgeProfiler$Clock()" />
      <edge id="3814" name="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)&gt;org.sonar.core.purge.PurgeProfiler$1()" />
      <edge id="3815" name="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)&gt;org.sonar.core.purge.PurgeProfiler.truncateList(java.util.List)" />
      <edge id="3816" name="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)&gt;org.sonar.core.purge.PurgeProfiler$Clock.now()" />
      <edge id="3817" name="org.sonar.core.purge.PurgeProfiler.stop()&gt;org.sonar.core.purge.PurgeProfiler$Clock.now()" />
      <edge id="3818" name="org.sonar.core.purge.PurgeProfilerTest$MockedClock()&gt;org.sonar.core.purge.PurgeProfiler$Clock()" />
      <edge id="3819" name="org.sonar.core.purge.PurgeProfiler$Clock.now()&gt;org.sonar.core.purge.PurgeProfilerTest$MockedClock.now()" />
      <edge id="3820" name="org.sonar.core.purge.PurgeProfilerTest.prepare()&gt;org.sonar.core.purge.PurgeProfilerTest$MockedClock()" />
      <edge id="3821" name="org.sonar.core.purge.PurgeProfilerTest.prepare()&gt;org.sonar.core.purge.PurgeProfiler(org.sonar.core.purge.PurgeProfiler$Clock)" />
      <edge id="3822" name="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3823" name="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()&gt;org.sonar.core.purge.PurgeProfilerTest$MockedClock.sleep(long)" />
      <edge id="3824" name="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3825" name="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()&gt;org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)" />
      <edge id="3826" name="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()&gt;org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" />
      <edge id="3827" name="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()&gt;org.sonar.core.purge.PurgeProfilerTest$MockedClock.sleep(long)" />
      <edge id="3828" name="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()&gt;org.sonar.core.purge.PurgeProfiler.stop()" />
      <edge id="3829" name="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()&gt;org.sonar.core.purge.PurgeProfiler.reset()" />
      <edge id="3830" name="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()&gt;org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)" />
      <edge id="3831" name="org.sonar.core.purge.PurgeSnapshotQuery.create()&gt;org.sonar.core.purge.PurgeSnapshotQuery()" />
      <edge id="3832" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="3833" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="3834" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()&gt;org.sonar.core.purge.PurgeableSnapshotDto.equals(java.lang.Object)" />
      <edge id="3835" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="3836" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="3837" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()&gt;org.sonar.core.purge.PurgeableSnapshotDto.hashCode()" />
      <edge id="3838" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()&gt;org.sonar.core.purge.PurgeableSnapshotDto()" />
      <edge id="3839" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()&gt;org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)" />
      <edge id="3840" name="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()&gt;org.sonar.core.purge.PurgeableSnapshotDto.toString()" />
      <edge id="3841" name="org.sonar.core.purge.PurgeListener.onComponentDisabling(java.lang.String)&gt;org.sonar.core.purge.PurgeListener$1.onComponentDisabling(java.lang.String)" />
      <edge id="3842" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)" />
      <edge id="3843" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3844" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3845" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationMapper.selectProjects(java.util.Map,org.apache.ibatis.session.RowBounds)" />
      <edge id="3846" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3847" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3848" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3849" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)" />
      <edge id="3850" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3851" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3852" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.projectSearch(java.lang.String)" />
      <edge id="3853" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3854" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.getName()" />
      <edge id="3855" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3856" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3857" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3858" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3859" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)" />
      <edge id="3860" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3861" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)" />
      <edge id="3862" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3863" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3864" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.membership(java.lang.String)" />
      <edge id="3865" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3866" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.setUp()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="3867" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3868" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3869" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)" />
      <edge id="3870" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3871" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3872" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3873" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.getName()" />
      <edge id="3874" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation()" />
      <edge id="3875" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.setId(java.lang.Long)" />
      <edge id="3876" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.setName(java.lang.String)" />
      <edge id="3877" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.setMember(boolean)" />
      <edge id="3878" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto()" />
      <edge id="3879" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setId(java.lang.Long)" />
      <edge id="3880" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setName(java.lang.String)" />
      <edge id="3881" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setGateId(java.lang.String)" />
      <edge id="3882" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" />
      <edge id="3883" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.id()" />
      <edge id="3884" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.name()" />
      <edge id="3885" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.isMember()" />
      <edge id="3886" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto()" />
      <edge id="3887" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setId(java.lang.Long)" />
      <edge id="3888" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setName(java.lang.String)" />
      <edge id="3889" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setGateId(java.lang.String)" />
      <edge id="3890" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" />
      <edge id="3891" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.id()" />
      <edge id="3892" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.name()" />
      <edge id="3893" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociation.isMember()" />
      <edge id="3894" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initMembership()" />
      <edge id="3895" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageIndex()" />
      <edge id="3896" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageSize()" />
      <edge id="3897" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder)" />
      <edge id="3898" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder)&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.projectSearchToSql(java.lang.String)" />
      <edge id="3899" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder()" />
      <edge id="3900" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3901" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3902" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.membership(java.lang.String)" />
      <edge id="3903" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3904" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" />
      <edge id="3905" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)" />
      <edge id="3906" name="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()&gt;org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" />
      <edge id="3907" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3908" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3909" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3910" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3911" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectForQualityGate(long)" />
      <edge id="3912" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3913" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3914" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3915" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3916" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectById(long)" />
      <edge id="3917" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3918" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="3919" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3920" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3921" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.delete(long)" />
      <edge id="3922" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()" />
      <edge id="3923" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3924" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)" />
      <edge id="3925" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3926" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3927" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.deleteConditionsWithInvalidMetrics()" />
      <edge id="3928" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3929" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="3930" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3931" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3932" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)" />
      <edge id="3933" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setCreatedAt(java.util.Date)" />
      <edge id="3934" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3935" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="3936" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3937" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3938" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionMapper.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)" />
      <edge id="3939" name="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setUpdatedAt(java.util.Date)" />
      <edge id="3940" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="3941" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.createDao()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="3942" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="3943" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3944" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()" />
      <edge id="3945" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="3946" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3947" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)" />
      <edge id="3948" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto()" />
      <edge id="3949" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setId(long)" />
      <edge id="3950" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3951" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3952" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto()" />
      <edge id="3953" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setQualityGateId(long)" />
      <edge id="3954" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setMetricId(long)" />
      <edge id="3955" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setOperator(java.lang.String)" />
      <edge id="3956" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setWarningThreshold(java.lang.String)" />
      <edge id="3957" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setErrorThreshold(java.lang.String)" />
      <edge id="3958" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setPeriod(java.lang.Integer)" />
      <edge id="3959" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)" />
      <edge id="3960" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3961" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()" />
      <edge id="3962" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3963" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)" />
      <edge id="3964" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()" />
      <edge id="3965" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getMetricId()" />
      <edge id="3966" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperator()" />
      <edge id="3967" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getPeriod()" />
      <edge id="3968" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getQualityGateId()" />
      <edge id="3969" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getWarningThreshold()" />
      <edge id="3970" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getErrorThreshold()" />
      <edge id="3971" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectForQualityGate()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3972" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectForQualityGate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)" />
      <edge id="3973" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="3974" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)" />
      <edge id="3975" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto()" />
      <edge id="3976" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setId(long)" />
      <edge id="3977" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setMetricId(long)" />
      <edge id="3978" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setOperator(java.lang.String)" />
      <edge id="3979" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setPeriod(java.lang.Integer)" />
      <edge id="3980" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setWarningThreshold(java.lang.String)" />
      <edge id="3981" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.setErrorThreshold(java.lang.String)" />
      <edge id="3982" name="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="3983" name="org.sonar.core.qualitygate.db.QualityGateConditionDto.isOperatorAllowed(java.lang.String,org.sonar.api.measures.Metric$ValueType)&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperatorsForType(org.sonar.api.measures.Metric$ValueType)" />
      <edge id="3984" name="org.sonar.core.qualitygate.db.QualityGateConditionDtoTest.should_validate_operators_for_metric_type()&gt;org.sonar.core.qualitygate.db.QualityGateConditionDto.isOperatorAllowed(java.lang.String,org.sonar.api.measures.Metric$ValueType)" />
      <edge id="3985" name="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3986" name="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)" />
      <edge id="3987" name="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3988" name="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3989" name="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.selectAll()" />
      <edge id="3990" name="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3991" name="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="3992" name="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3993" name="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3994" name="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.selectById(long)" />
      <edge id="3995" name="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="3996" name="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="3997" name="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="3998" name="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="3999" name="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.selectByName(java.lang.String)" />
      <edge id="4000" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4001" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4002" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4003" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="4004" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.delete(long)" />
      <edge id="4005" name="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDto.getId()" />
      <edge id="4006" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4007" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4008" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4009" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="4010" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.insert(org.sonar.core.qualitygate.db.QualityGateDto)" />
      <edge id="4011" name="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDto.setCreatedAt(java.util.Date)" />
      <edge id="4012" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4013" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4014" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4015" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="4016" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateMapper.update(org.sonar.core.qualitygate.db.QualityGateDto)" />
      <edge id="4017" name="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualitygate.db.QualityGateDto.setUpdatedAt(java.util.Date)" />
      <edge id="4018" name="org.sonar.core.qualitygate.db.QualityGateDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4019" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.createDao()&gt;org.sonar.core.qualitygate.db.QualityGateDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4020" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4021" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4022" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)" />
      <edge id="4023" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateDto()" />
      <edge id="4024" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()&gt;org.sonar.core.qualitygate.db.QualityGateDto.setId(java.lang.Long)" />
      <edge id="4025" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="4026" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4027" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateDto()" />
      <edge id="4028" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateDto.setName(java.lang.String)" />
      <edge id="4029" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)" />
      <edge id="4030" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="4031" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()&gt;org.sonar.core.qualitygate.db.QualityGateDto.getId()" />
      <edge id="4032" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4033" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectAll()" />
      <edge id="4034" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()&gt;org.sonar.core.qualitygate.db.QualityGateDto.getName()" />
      <edge id="4035" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4036" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)" />
      <edge id="4037" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()&gt;org.sonar.core.qualitygate.db.QualityGateDto.getName()" />
      <edge id="4038" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4039" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()&gt;org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)" />
      <edge id="4040" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()&gt;org.sonar.core.qualitygate.db.QualityGateDto.getName()" />
      <edge id="4041" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4042" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)" />
      <edge id="4043" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateDto()" />
      <edge id="4044" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateDto.setId(java.lang.Long)" />
      <edge id="4045" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.qualitygate.db.QualityGateDto.setName(java.lang.String)" />
      <edge id="4046" name="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" />
      <edge id="4047" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4048" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4049" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)&gt;org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectByProfileKey(java.lang.String)" />
      <edge id="4050" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4051" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4052" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4053" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)&gt;org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectParamsByProfileKey(java.lang.String)" />
      <edge id="4054" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4055" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualityprofile.db.ActiveRuleMapper.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto)" />
      <edge id="4056" name="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleParamDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.qualityprofile.db.ActiveRuleMapper.insertParameter(org.sonar.core.qualityprofile.db.ActiveRuleParamDto)" />
      <edge id="4057" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4058" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.before()&gt;org.sonar.core.qualityprofile.db.ActiveRuleDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4059" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.before()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4060" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4061" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4062" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4063" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto()" />
      <edge id="4064" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setActiveRuleId(java.lang.Integer)" />
      <edge id="4065" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setRulesParameterId(java.lang.Integer)" />
      <edge id="4066" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)" />
      <edge id="4067" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setValue(java.lang.String)" />
      <edge id="4068" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleParamDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4069" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4070" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4071" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4072" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_by_profile()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4073" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_by_profile()&gt;org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)" />
      <edge id="4074" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_params_by_profile_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4075" name="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_params_by_profile_id()&gt;org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)" />
      <edge id="4076" name="org.sonar.core.qualityprofile.db.ActiveRuleDto()&gt;org.sonar.core.persistence.Dto()" />
      <edge id="4077" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.getSeverityString()&gt;org.sonar.core.rule.SeverityUtil.getSeverityFromOrdinal(int)" />
      <edge id="4078" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4079" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getId()" />
      <edge id="4080" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleDto()" />
      <edge id="4081" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleDto.setProfileId(java.lang.Integer)" />
      <edge id="4082" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleDto.setRuleId(java.lang.Integer)" />
      <edge id="4083" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)" />
      <edge id="4084" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4085" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getKee()" />
      <edge id="4086" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getKey()" />
      <edge id="4087" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()" />
      <edge id="4088" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()" />
      <edge id="4089" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.setSeverity(java.lang.String)&gt;org.sonar.core.rule.SeverityUtil.getOrdinalFromSeverity(java.lang.String)" />
      <edge id="4090" name="org.sonar.core.persistence.Dto.getKey()&gt;org.sonar.core.qualityprofile.db.ActiveRuleDto.getKey()" />
      <edge id="4091" name="org.sonar.core.qualityprofile.db.ActiveRuleDto.getKey()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4092" name="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4093" name="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4094" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)" />
      <edge id="4095" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.equals(java.lang.Object)" />
      <edge id="4096" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.hashCode()" />
      <edge id="4097" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4098" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()" />
      <edge id="4099" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()" />
      <edge id="4100" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.toString()" />
      <edge id="4101" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)" />
      <edge id="4102" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()" />
      <edge id="4103" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()" />
      <edge id="4104" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse_fail_when_less_than_three_colons()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)" />
      <edge id="4105" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.profile_must_not_be_null()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4106" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4107" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()" />
      <edge id="4108" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()" />
      <edge id="4109" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.toString()" />
      <edge id="4110" name="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_must_not_be_null()&gt;org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" />
      <edge id="4111" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.groupByKey(java.util.Collection)&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.getKey()" />
      <edge id="4112" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)&gt;org.sonar.core.rule.RuleParamDto.getId()" />
      <edge id="4113" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto()" />
      <edge id="4114" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)" />
      <edge id="4115" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)&gt;org.sonar.core.rule.RuleParamDto.getName()" />
      <edge id="4116" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setRulesParameterId(java.lang.Integer)" />
      <edge id="4117" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.groupByKey(java.util.Collection)" />
      <edge id="4118" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto()" />
      <edge id="4119" name="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()&gt;org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)" />
      <edge id="4120" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4121" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4122" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjects(java.lang.String,java.lang.String)" />
      <edge id="4123" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4124" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4125" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4126" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectAll()" />
      <edge id="4127" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4128" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4129" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectAll()" />
      <edge id="4130" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4131" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4132" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByLanguage(java.lang.String)" />
      <edge id="4133" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4134" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4135" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectChildren(java.lang.String)" />
      <edge id="4136" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4137" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4138" name="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()" />
      <edge id="4139" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)" />
      <edge id="4140" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4141" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDeselectedProjects(java.lang.String,java.lang.String)" />
      <edge id="4142" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)" />
      <edge id="4143" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4144" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjectAssociations(java.lang.String,java.lang.String)" />
      <edge id="4145" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4146" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="4147" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4148" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4149" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjects(java.lang.String,java.lang.String)" />
      <edge id="4150" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)" />
      <edge id="4151" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4152" name="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectSelectedProjects(java.lang.String,java.lang.String)" />
      <edge id="4153" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4154" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4155" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjectsByProfile()" />
      <edge id="4156" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProfileKey()" />
      <edge id="4157" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProjectCount()" />
      <edge id="4158" name="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4159" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4160" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)" />
      <edge id="4161" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4162" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4163" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectById(java.lang.Integer)" />
      <edge id="4164" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4165" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByKey(java.lang.String)" />
      <edge id="4166" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4167" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="4168" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4169" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4170" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByNameAndLanguage(java.lang.String,java.lang.String)" />
      <edge id="4171" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4172" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectAndLanguage(java.lang.String,java.lang.String)" />
      <edge id="4173" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4174" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4175" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectIdAndLanguage(java.lang.Long,java.lang.String)" />
      <edge id="4176" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4177" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4178" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="4179" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4180" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4181" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDefaultProfile(java.lang.String)" />
      <edge id="4182" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getNonNullByKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4183" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4184" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="4185" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4186" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4187" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParent(java.lang.String)" />
      <edge id="4188" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4189" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)" />
      <edge id="4190" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4191" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4192" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParentById(int)" />
      <edge id="4193" name="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4194" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4195" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)" />
      <edge id="4196" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4197" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4198" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4199" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.delete(int)" />
      <edge id="4200" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4201" name="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4202" name="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteAllProjectProfileAssociation(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4203" name="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteAllProjectProfileAssociation(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteAllProjectProfileAssociation(java.lang.String)" />
      <edge id="4204" name="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4205" name="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteProjectProfileAssociation(java.lang.String,java.lang.String)" />
      <edge id="4206" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4207" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.delete(int)" />
      <edge id="4208" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4209" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)" />
      <edge id="4210" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)" />
      <edge id="4211" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4212" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4213" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)" />
      <edge id="4214" name="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4215" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4216" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4217" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4218" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" />
      <edge id="4219" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4220" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4221" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4222" name="org.sonar.core.qualityprofile.db.QualityProfileDao.insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.insertProjectProfileAssociation(java.lang.String,java.lang.String)" />
      <edge id="4223" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4224" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4225" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4226" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" />
      <edge id="4227" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4228" name="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4229" name="org.sonar.core.qualityprofile.db.QualityProfileDao.updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" />
      <edge id="4230" name="org.sonar.core.qualityprofile.db.QualityProfileDao.updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.qualityprofile.db.QualityProfileMapper.updateProjectProfileAssociation(java.lang.String,java.lang.String)" />
      <edge id="4231" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4232" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.after()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4233" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4234" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)" />
      <edge id="4235" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects_by_profile()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4236" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects_by_profile()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" />
      <edge id="4237" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4238" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4239" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="4240" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()&gt;org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)" />
      <edge id="4241" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4242" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)" />
      <edge id="4243" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4244" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4245" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4246" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4247" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)" />
      <edge id="4248" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4249" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4250" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()" />
      <edge id="4251" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()" />
      <edge id="4252" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4253" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4254" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()" />
      <edge id="4255" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4256" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4257" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)" />
      <edge id="4258" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4259" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4260" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4261" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4262" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4263" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4264" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4265" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()" />
      <edge id="4266" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()" />
      <edge id="4267" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4268" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4269" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)" />
      <edge id="4270" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4271" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4272" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()" />
      <edge id="4273" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()" />
      <edge id="4274" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4275" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)" />
      <edge id="4276" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4277" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getName()" />
      <edge id="4278" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()" />
      <edge id="4279" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()" />
      <edge id="4280" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4281" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)" />
      <edge id="4282" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()" />
      <edge id="4283" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4284" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)" />
      <edge id="4285" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4286" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4287" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)" />
      <edge id="4288" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setName(java.lang.String)" />
      <edge id="4289" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setLanguage(java.lang.String)" />
      <edge id="4290" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4291" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4292" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4293" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)" />
      <edge id="4294" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4295" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4296" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="4297" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getId()" />
      <edge id="4298" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_projects()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4299" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_projects()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)" />
      <edge id="4300" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4301" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto()" />
      <edge id="4302" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setId(java.lang.Integer)" />
      <edge id="4303" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setName(java.lang.String)" />
      <edge id="4304" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setLanguage(java.lang.String)" />
      <edge id="4305" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setParentKee(java.lang.String)" />
      <edge id="4306" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setDefault(boolean)" />
      <edge id="4307" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" />
      <edge id="4308" name="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4309" name="org.sonar.core.qualityprofile.db.QualityProfileDto()&gt;org.sonar.core.persistence.Dto()" />
      <edge id="4310" name="org.sonar.core.persistence.Dto.getKey()&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()" />
      <edge id="4311" name="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto()" />
      <edge id="4312" name="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setKee(java.lang.String)" />
      <edge id="4313" name="org.sonar.core.qualityprofile.db.QualityProfileDto.setKey(java.lang.String)&gt;org.sonar.core.qualityprofile.db.QualityProfileDto.setKee(java.lang.String)" />
      <edge id="4314" name="org.sonar.core.qualityprofile.db.QualityProfileDto.setRulesUpdatedAtAsDate(java.util.Date)&gt;org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)" />
      <edge id="4315" name="org.sonar.core.resource.DefaultResourceTypesTest.projects_should_be_available_for_global_widgets()&gt;org.sonar.core.resource.DefaultResourceTypes.get()" />
      <edge id="4316" name="org.sonar.core.resource.DefaultResourceTypesTest.provide_types()&gt;org.sonar.core.resource.DefaultResourceTypes.get()" />
      <edge id="4317" name="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4318" name="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)&gt;org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4319" name="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4320" name="org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)" />
      <edge id="4321" name="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4322" name="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.resource.ResourceMapper.selectResourceIds(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4323" name="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4324" name="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4325" name="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.resource.ResourceMapper.selectResources(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4326" name="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4327" name="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.selectResources(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4328" name="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4329" name="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)&gt;org.sonar.core.resource.ResourceDao.toComponents(java.util.List)" />
      <edge id="4330" name="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)&gt;org.sonar.core.resource.ResourceMapper.selectGhostsProjects(java.util.Collection)" />
      <edge id="4331" name="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4332" name="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4333" name="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)&gt;org.sonar.core.resource.ResourceDao.toComponents(java.util.List)" />
      <edge id="4334" name="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)&gt;org.sonar.core.resource.ResourceMapper.selectProjectsByQualifiers(java.util.Collection)" />
      <edge id="4335" name="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4336" name="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4337" name="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)&gt;org.sonar.core.resource.ResourceDao.toComponents(java.util.List)" />
      <edge id="4338" name="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)&gt;org.sonar.core.resource.ResourceMapper.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" />
      <edge id="4339" name="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4340" name="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4341" name="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)&gt;org.sonar.core.resource.ResourceMapper.selectProvisionedProjects(java.util.Collection)" />
      <edge id="4342" name="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4343" name="org.sonar.core.resource.ResourceDao$1.apply(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" />
      <edge id="4344" name="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)&gt;org.sonar.core.resource.ResourceDao$1()" />
      <edge id="4345" name="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)&gt;org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" />
      <edge id="4346" name="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4347" name="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" />
      <edge id="4348" name="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)&gt;org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4349" name="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4350" name="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)&gt;org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)" />
      <edge id="4351" name="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)&gt;org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" />
      <edge id="4352" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto()" />
      <edge id="4353" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setId(java.lang.Long)" />
      <edge id="4354" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4355" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setKey(java.lang.String)" />
      <edge id="4356" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4357" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setPath(java.lang.String)" />
      <edge id="4358" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getPath()" />
      <edge id="4359" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setLongName(java.lang.String)" />
      <edge id="4360" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getLongName()" />
      <edge id="4361" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setName(java.lang.String)" />
      <edge id="4362" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getName()" />
      <edge id="4363" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)" />
      <edge id="4364" name="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getQualifier()" />
      <edge id="4365" name="org.sonar.core.resource.ResourceDao.getLastSnapshot(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceKey(java.lang.String)" />
      <edge id="4366" name="org.sonar.core.resource.ResourceDao.getLastSnapshotByResourceUuid(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceUuid(java.lang.String)" />
      <edge id="4367" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4368" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4369" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="4370" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.getScope()" />
      <edge id="4371" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)" />
      <edge id="4372" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)" />
      <edge id="4373" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)" />
      <edge id="4374" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.setCreatedAt(java.util.Date)" />
      <edge id="4375" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceDto.setAuthorizationUpdatedAt(java.lang.Long)" />
      <edge id="4376" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceMapper.insert(org.sonar.core.resource.ResourceDto)" />
      <edge id="4377" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.resource.ResourceMapper.update(org.sonar.core.resource.ResourceDto)" />
      <edge id="4378" name="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4379" name="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4380" name="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceDto.getRootId()" />
      <edge id="4381" name="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="4382" name="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4383" name="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)&gt;org.sonar.core.resource.ResourceMapper.selectResourceByUuid(java.lang.String)" />
      <edge id="4384" name="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4385" name="org.sonar.core.resource.ResourceDao.getResource(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4386" name="org.sonar.core.resource.ResourceDao.getResource(long)&gt;org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4387" name="org.sonar.core.resource.ResourceDao.getResource(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4388" name="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.selectResource(long)" />
      <edge id="4389" name="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4390" name="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="4391" name="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4392" name="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery,org.apache.ibatis.session.SqlSession)" />
      <edge id="4393" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4394" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)&gt;org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="4395" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)&gt;org.sonar.core.resource.ResourceDto.getRootId()" />
      <edge id="4396" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4397" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4398" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)&gt;org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4399" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4400" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)" />
      <edge id="4401" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4402" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)" />
      <edge id="4403" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getRootId()" />
      <edge id="4404" name="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="4405" name="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4406" name="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)&gt;org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="4407" name="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4408" name="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4409" name="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.resource.ResourceMapper.selectProvisionedProject(java.lang.String)" />
      <edge id="4410" name="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)&gt;org.sonar.core.resource.ResourceMapper.selectDescendantProjects(long)" />
      <edge id="4411" name="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)&gt;org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)" />
      <edge id="4412" name="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4413" name="org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.insert(org.sonar.core.resource.ResourceDto)" />
      <edge id="4414" name="org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.resource.ResourceMapper.updateAuthorizationDate(java.lang.Long,java.lang.Long)" />
      <edge id="4415" name="org.sonar.core.resource.ResourceDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4416" name="org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)&gt;org.sonar.core.resource.ResourceDaoTest$1()" />
      <edge id="4417" name="org.sonar.core.resource.ResourceDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4418" name="org.sonar.core.resource.ResourceDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4419" name="org.sonar.core.resource.ResourceDaoTest.createDao()&gt;org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="4420" name="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4421" name="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()&gt;org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" />
      <edge id="4422" name="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4423" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4424" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()&gt;org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)" />
      <edge id="4425" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4426" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4427" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()&gt;org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)" />
      <edge id="4428" name="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4429" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4430" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()&gt;org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4431" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4432" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4433" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4434" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4435" name="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceQuery.setQualifiers(java.lang.String[])" />
      <edge id="4436" name="org.sonar.core.resource.ResourceDaoTest.getResource_not_found()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4437" name="org.sonar.core.resource.ResourceDaoTest.getResource_not_found()&gt;org.sonar.core.resource.ResourceDao.getResource(long)" />
      <edge id="4438" name="org.sonar.core.resource.ResourceDaoTest.getResources_all()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4439" name="org.sonar.core.resource.ResourceDaoTest.getResources_all()&gt;org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4440" name="org.sonar.core.resource.ResourceDaoTest.getResources_all()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4441" name="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4442" name="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()&gt;org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4443" name="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4444" name="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()&gt;org.sonar.core.resource.ResourceQuery.setExcludeDisabled(boolean)" />
      <edge id="4445" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4446" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4447" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)" />
      <edge id="4448" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4449" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4450" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()&gt;org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4451" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4452" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" />
      <edge id="4453" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceQuery.create()" />
      <edge id="4454" name="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()&gt;org.sonar.core.resource.ResourceQuery.setQualifiers(java.lang.String[])" />
      <edge id="4455" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4456" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.resource.ResourceDao.getLastSnapshotByResourceUuid(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="4457" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.component.SnapshotDto.getId()" />
      <edge id="4458" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.component.SnapshotDto.getPeriodMode(int)" />
      <edge id="4459" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.component.SnapshotDto.getPeriodModeParameter(int)" />
      <edge id="4460" name="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()&gt;org.sonar.core.component.SnapshotDto.getPeriodDate(int)" />
      <edge id="4461" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4462" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDao.getResource(long)" />
      <edge id="4463" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="4464" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getProjectUuid()" />
      <edge id="4465" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getPath()" />
      <edge id="4466" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getName()" />
      <edge id="4467" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getLongName()" />
      <edge id="4468" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getScope()" />
      <edge id="4469" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getDescription()" />
      <edge id="4470" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getLanguage()" />
      <edge id="4471" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.isEnabled()" />
      <edge id="4472" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()" />
      <edge id="4473" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()&gt;org.sonar.core.resource.ResourceDto.getCreatedAt()" />
      <edge id="4474" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4475" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDao.getResource(java.lang.String)" />
      <edge id="4476" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="4477" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getProjectUuid()" />
      <edge id="4478" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getPath()" />
      <edge id="4479" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getName()" />
      <edge id="4480" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getLongName()" />
      <edge id="4481" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getScope()" />
      <edge id="4482" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getDescription()" />
      <edge id="4483" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getLanguage()" />
      <edge id="4484" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.isEnabled()" />
      <edge id="4485" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()" />
      <edge id="4486" name="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()&gt;org.sonar.core.resource.ResourceDto.getCreatedAt()" />
      <edge id="4487" name="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4488" name="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()&gt;org.sonar.core.resource.ResourceDao.getResource(long)" />
      <edge id="4489" name="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()&gt;org.sonar.core.resource.ResourceDto.getPath()" />
      <edge id="4490" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4491" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.resource.ResourceDao.getResource(long)" />
      <edge id="4492" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="4493" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.resource.ResourceDto.getProjectUuid()" />
      <edge id="4494" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.resource.ResourceDto.getModuleUuid()" />
      <edge id="4495" name="org.sonar.core.resource.ResourceDaoTest.get_uuid()&gt;org.sonar.core.resource.ResourceDto.getModuleUuidPath()" />
      <edge id="4496" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4497" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="4498" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.setKey(java.lang.String)" />
      <edge id="4499" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.setScope(java.lang.String)" />
      <edge id="4500" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="4501" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" />
      <edge id="4502" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="4503" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.getProjectUuid()" />
      <edge id="4504" name="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()&gt;org.sonar.core.resource.ResourceDto.getModuleUuidPath()" />
      <edge id="4505" name="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4506" name="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_id()&gt;org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4507" name="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4508" name="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_key()&gt;org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)" />
      <edge id="4509" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4510" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="4511" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)" />
      <edge id="4512" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)" />
      <edge id="4513" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setModuleUuid(java.lang.String)" />
      <edge id="4514" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)" />
      <edge id="4515" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setKey(java.lang.String)" />
      <edge id="4516" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)" />
      <edge id="4517" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setScope(java.lang.String)" />
      <edge id="4518" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="4519" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)" />
      <edge id="4520" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="4521" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)" />
      <edge id="4522" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.setPath(java.lang.String)" />
      <edge id="4523" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" />
      <edge id="4524" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4525" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4526" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDao.getResource(long)" />
      <edge id="4527" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.getCreatedAt()" />
      <edge id="4528" name="org.sonar.core.resource.ResourceDaoTest.should_insert()&gt;org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()" />
      <edge id="4529" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4530" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="4531" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)" />
      <edge id="4532" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setKey(java.lang.String)" />
      <edge id="4533" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)" />
      <edge id="4534" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setScope(java.lang.String)" />
      <edge id="4535" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="4536" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)" />
      <edge id="4537" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="4538" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)" />
      <edge id="4539" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4540" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="4541" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4542" name="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()&gt;org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" />
      <edge id="4543" name="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4544" name="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)" />
      <edge id="4545" name="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)" />
      <edge id="4546" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4547" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)" />
      <edge id="4548" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()&gt;org.sonar.core.component.ComponentDto.getId()" />
      <edge id="4549" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" />
      <edge id="4550" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4551" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()&gt;org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" />
      <edge id="4552" name="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()&gt;org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)" />
      <edge id="4553" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4554" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()&gt;org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)" />
      <edge id="4555" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4556" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4557" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)" />
      <edge id="4558" name="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4559" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4560" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="4561" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setKey(java.lang.String)" />
      <edge id="4562" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)" />
      <edge id="4563" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setScope(java.lang.String)" />
      <edge id="4564" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="4565" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="4566" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)" />
      <edge id="4567" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)" />
      <edge id="4568" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setDescription(java.lang.String)" />
      <edge id="4569" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setPath(java.lang.String)" />
      <edge id="4570" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.setId(java.lang.Long)" />
      <edge id="4571" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" />
      <edge id="4572" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4573" name="org.sonar.core.resource.ResourceDaoTest.should_update()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4574" name="org.sonar.core.resource.ResourceDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4575" name="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_do_not_include_self()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4576" name="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_do_not_include_self()&gt;org.sonar.core.resource.ResourceDao.getDescendantProjects(long)" />
      <edge id="4577" name="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_id_not_found()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4578" name="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_id_not_found()&gt;org.sonar.core.resource.ResourceDao.getDescendantProjects(long)" />
      <edge id="4579" name="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4580" name="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()&gt;org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)" />
      <edge id="4581" name="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4582" name="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4583" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4584" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4585" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4586" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4587" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" />
      <edge id="4588" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4589" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.nameToKey(java.lang.String)" />
      <edge id="4590" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4591" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4592" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4593" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceIndexerMapper.selectResourceToIndex(long)" />
      <edge id="4594" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceDto.getRootId()" />
      <edge id="4595" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4596" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4597" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceDto.getName()" />
      <edge id="4598" name="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.resource.ResourceDto.getQualifier()" />
      <edge id="4599" name="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerMapper.selectMasterIndexByResourceId(long)" />
      <edge id="4600" name="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.getKey()" />
      <edge id="4601" name="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)" />
      <edge id="4602" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4603" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)&gt;org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)" />
      <edge id="4604" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4605" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4606" name="org.sonar.core.resource.ResourceIndexerDao$1.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4607" name="org.sonar.core.resource.ResourceIndexerDao$1.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4608" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4609" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4610" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" />
      <edge id="4611" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.resource.ResourceIndexerQuery.create()" />
      <edge id="4612" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.resource.ResourceIndexerDao$1()" />
      <edge id="4613" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4614" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4615" name="org.sonar.core.resource.ResourceIndexerDao.indexProjects()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4616" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.nameToKey(java.lang.String)" />
      <edge id="4617" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceDto.getName()" />
      <edge id="4618" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4619" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4620" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceDto.getQualifier()" />
      <edge id="4621" name="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceDto.getRootId()" />
      <edge id="4622" name="org.sonar.core.resource.ResourceIndexerDao$2.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4623" name="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)" />
      <edge id="4624" name="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4625" name="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)&gt;org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4626" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerQuery.create()" />
      <edge id="4627" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerQuery.setNonIndexedOnly(boolean)" />
      <edge id="4628" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerQuery.setQualifiers(java.lang.String[])" />
      <edge id="4629" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerQuery.setScopes(java.lang.String[])" />
      <edge id="4630" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerQuery.setRootProjectId(long)" />
      <edge id="4631" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao$2()" />
      <edge id="4632" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4633" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerDao$3()" />
      <edge id="4634" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)" />
      <edge id="4635" name="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4636" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4637" name="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" />
      <edge id="4638" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto()" />
      <edge id="4639" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setResourceId(long)" />
      <edge id="4640" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setQualifier(java.lang.String)" />
      <edge id="4641" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setRootProjectId(long)" />
      <edge id="4642" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setNameSize(int)" />
      <edge id="4643" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setPosition(int)" />
      <edge id="4644" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexDto.setKey(java.lang.String)" />
      <edge id="4645" name="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)&gt;org.sonar.core.resource.ResourceIndexerMapper.insert(org.sonar.core.resource.ResourceIndexDto)" />
      <edge id="4646" name="org.sonar.core.resource.ResourceIndexerDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4647" name="org.sonar.core.resource.ResourceIndexerDaoTest.createDao()&gt;org.sonar.core.resource.ResourceIndexerDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4648" name="org.sonar.core.resource.ResourceIndexerDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4649" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4650" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()&gt;org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" />
      <edge id="4651" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4652" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4653" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()&gt;org.sonar.core.resource.ResourceIndexerDao.indexProjects()" />
      <edge id="4654" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4655" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4656" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4657" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4658" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4659" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4660" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4661" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4662" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()&gt;org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" />
      <edge id="4663" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getConnection()" />
      <edge id="4664" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4665" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4666" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4667" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4668" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4669" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4670" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4671" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4672" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4673" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4674" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()&gt;org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" />
      <edge id="4675" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4676" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4677" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()&gt;org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" />
      <edge id="4678" name="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4679" name="org.sonar.core.resource.ResourceIndexerQuery.create()&gt;org.sonar.core.resource.ResourceIndexerQuery()" />
      <edge id="4680" name="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4681" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4682" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4683" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)" />
      <edge id="4684" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)" />
      <edge id="4685" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4686" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4687" name="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProject(long)" />
      <edge id="4688" name="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4689" name="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.selectDescendantProjects(long)" />
      <edge id="4690" name="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4691" name="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4692" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4693" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" />
      <edge id="4694" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4695" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4696" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4697" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4698" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4699" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProjectResources(long)" />
      <edge id="4700" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="4701" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4702" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)" />
      <edge id="4703" name="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4704" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)" />
      <edge id="4705" name="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)" />
      <edge id="4706" name="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4707" name="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.setKey(java.lang.String)" />
      <edge id="4708" name="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.getDeprecatedKey()" />
      <edge id="4709" name="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)" />
      <edge id="4710" name="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.update(org.sonar.core.resource.ResourceDto)" />
      <edge id="4711" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4712" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4713" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)" />
      <edge id="4714" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProject(long)" />
      <edge id="4715" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.resource.ResourceDto.getKey()" />
      <edge id="4716" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProjectResources(long)" />
      <edge id="4717" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" />
      <edge id="4718" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4719" name="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4720" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4721" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.createDao()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4722" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4723" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4724" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" />
      <edge id="4725" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4726" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4727" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" />
      <edge id="4728" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4729" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldCheckModuleKeysBeforeRenaming()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4730" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldCheckModuleKeysBeforeRenaming()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" />
      <edge id="4731" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldFailBulkUpdateKeyIfKeyAlreadyExist()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4732" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldFailBulkUpdateKeyIfKeyAlreadyExist()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" />
      <edge id="4733" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4734" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" />
      <edge id="4735" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4736" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4737" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateKey()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" />
      <edge id="4738" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4739" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()&gt;org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" />
      <edge id="4740" name="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4741" name="org.sonar.core.resource.ResourceQuery.create()&gt;org.sonar.core.resource.ResourceQuery()" />
      <edge id="4742" name="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="4743" name="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()&gt;org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)" />
      <edge id="4744" name="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4745" name="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.rule.RuleDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="4746" name="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.rule.RuleMapper.selectEnablesAndNonManual()" />
      <edge id="4747" name="org.sonar.core.rule.RuleDao.selectParameters()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="4748" name="org.sonar.core.rule.RuleDao.selectParameters()&gt;org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)" />
      <edge id="4749" name="org.sonar.core.rule.RuleDao.selectParameters()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4750" name="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.rule.RuleDao.getMapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="4751" name="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.rule.RuleMapper.selectAllParams()" />
      <edge id="4752" name="org.sonar.core.rule.RuleDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4753" name="org.sonar.core.rule.RuleDaoTest.createDao()&gt;org.sonar.core.rule.RuleDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4754" name="org.sonar.core.rule.RuleDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4755" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4756" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()" />
      <edge id="4757" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getId()" />
      <edge id="4758" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getName()" />
      <edge id="4759" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDescription()" />
      <edge id="4760" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDescriptionFormat()" />
      <edge id="4761" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getStatus()" />
      <edge id="4762" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getRepositoryKey()" />
      <edge id="4763" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getNoteData()" />
      <edge id="4764" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getSubCharacteristicId()" />
      <edge id="4765" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDefaultSubCharacteristicId()" />
      <edge id="4766" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getRemediationFunction()" />
      <edge id="4767" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDefaultRemediationFunction()" />
      <edge id="4768" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getRemediationCoefficient()" />
      <edge id="4769" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDefaultRemediationCoefficient()" />
      <edge id="4770" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getRemediationOffset()" />
      <edge id="4771" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getDefaultRemediationOffset()" />
      <edge id="4772" name="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()&gt;org.sonar.core.rule.RuleDto.getEffortToFixDescription()" />
      <edge id="4773" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4774" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleDao.selectParameters()" />
      <edge id="4775" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleParamDto.getId()" />
      <edge id="4776" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleParamDto.getName()" />
      <edge id="4777" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleParamDto.getDescription()" />
      <edge id="4778" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleParamDto.getType()" />
      <edge id="4779" name="org.sonar.core.rule.RuleDaoTest.select_parameters()&gt;org.sonar.core.rule.RuleParamDto.getDefaultValue()" />
      <edge id="4780" name="org.sonar.core.rule.RuleDto()&gt;org.sonar.core.persistence.Dto()" />
      <edge id="4781" name="org.sonar.core.rule.RuleDto.equals(java.lang.Object)&gt;org.sonar.core.rule.RuleDto.getRepositoryKey()" />
      <edge id="4782" name="org.sonar.core.rule.RuleDto.equals(java.lang.Object)&gt;org.sonar.core.rule.RuleDto.getRuleKey()" />
      <edge id="4783" name="org.sonar.core.rule.RuleDto.getSeverityString()&gt;org.sonar.core.rule.SeverityUtil.getSeverityFromOrdinal(int)" />
      <edge id="4784" name="org.sonar.core.persistence.Dto.getKey()&gt;org.sonar.core.rule.RuleDto.getKey()" />
      <edge id="4785" name="org.sonar.core.rule.RuleDto.getKey()&gt;org.sonar.core.rule.RuleDto.getRepositoryKey()" />
      <edge id="4786" name="org.sonar.core.rule.RuleDto.getKey()&gt;org.sonar.core.rule.RuleDto.getRuleKey()" />
      <edge id="4787" name="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)&gt;org.sonar.core.rule.RuleDto()" />
      <edge id="4788" name="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)&gt;org.sonar.core.rule.RuleDto.setRepositoryKey(java.lang.String)" />
      <edge id="4789" name="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)&gt;org.sonar.core.rule.RuleDto.setRuleKey(java.lang.String)" />
      <edge id="4790" name="org.sonar.core.rule.RuleDto.setSeverity(java.lang.String)&gt;org.sonar.core.rule.RuleDto.setSeverity(java.lang.Integer)" />
      <edge id="4791" name="org.sonar.core.rule.RuleDto.setSeverity(java.lang.String)&gt;org.sonar.core.rule.SeverityUtil.getOrdinalFromSeverity(java.lang.String)" />
      <edge id="4792" name="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleParamDto()" />
      <edge id="4793" name="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleParamDto.setRuleId(java.lang.Integer)" />
      <edge id="4794" name="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)&gt;org.sonar.core.rule.RuleDto.getId()" />
      <edge id="4795" name="org.sonar.core.source.db.FileSourceDto.decodeTestData(byte[])&gt;org.sonar.core.source.db.FileSourceDto.decodeTestData(java.io.InputStream)" />
      <edge id="4796" name="org.sonar.core.source.db.FileSourceDto.getTestData()&gt;org.sonar.core.source.db.FileSourceDto.decodeTestData(byte[])" />
      <edge id="4797" name="org.sonar.core.source.db.FileSourceDto.setSourceData(org.sonar.server.source.db.FileSourceDb$Data)&gt;org.sonar.core.source.db.FileSourceDto.encodeSourceData(org.sonar.server.source.db.FileSourceDb$Data)" />
      <edge id="4798" name="org.sonar.core.source.db.FileSourceDto.setTestData(java.util.List)&gt;org.sonar.core.source.db.FileSourceDto.encodeTestData(java.util.List)" />
      <edge id="4799" name="org.sonar.core.source.db.FileSourceDto.decodeSourceData(byte[])&gt;org.sonar.core.source.db.FileSourceDto.decodeSourceData(java.io.InputStream)" />
      <edge id="4800" name="org.sonar.core.source.db.FileSourceDto.getSourceData()&gt;org.sonar.core.source.db.FileSourceDto.decodeSourceData(byte[])" />
      <edge id="4801" name="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()&gt;org.sonar.core.source.db.FileSourceDto()" />
      <edge id="4802" name="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()&gt;org.sonar.core.source.db.FileSourceDto.setTestData(java.util.List)" />
      <edge id="4803" name="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()&gt;org.sonar.core.source.db.FileSourceDto.getTestData()" />
      <edge id="4804" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4805" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder(org.apache.ibatis.session.SqlSession)" />
      <edge id="4806" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4807" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectMaxCharacteristicOrder()" />
      <edge id="4808" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4809" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics(org.apache.ibatis.session.SqlSession)" />
      <edge id="4810" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4811" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristics()" />
      <edge id="4812" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4813" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection,org.apache.ibatis.session.SqlSession)" />
      <edge id="4814" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4815" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByIds(java.util.List)" />
      <edge id="4816" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4817" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int,org.apache.ibatis.session.SqlSession)" />
      <edge id="4818" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4819" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByParentId(int)" />
      <edge id="4820" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4821" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)" />
      <edge id="4822" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4823" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledCharacteristics()" />
      <edge id="4824" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4825" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics(org.apache.ibatis.session.SqlSession)" />
      <edge id="4826" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4827" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics(org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledRootCharacteristics()" />
      <edge id="4828" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4829" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int,org.apache.ibatis.session.SqlSession)" />
      <edge id="4830" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4831" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectById(int)" />
      <edge id="4832" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4833" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="4834" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4835" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByKey(java.lang.String)" />
      <edge id="4836" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4837" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="4838" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4839" name="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByName(java.lang.String)" />
      <edge id="4840" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4841" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.technicaldebt.db.CharacteristicDto,org.sonar.core.technicaldebt.db.CharacteristicDto[])&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="4842" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4843" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4844" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4845" name="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)" />
      <edge id="4846" name="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4847" name="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4848" name="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4849" name="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.technicaldebt.db.CharacteristicMapper.update(org.sonar.core.technicaldebt.db.CharacteristicDto)" />
      <edge id="4850" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="4851" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="4852" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4853" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4854" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto()" />
      <edge id="4855" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)" />
      <edge id="4856" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)" />
      <edge id="4857" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)" />
      <edge id="4858" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)" />
      <edge id="4859" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)" />
      <edge id="4860" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)" />
      <edge id="4861" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4862" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.technicaldebt.db.CharacteristicDto,org.sonar.core.technicaldebt.db.CharacteristicDto[])" />
      <edge id="4863" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto()" />
      <edge id="4864" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)" />
      <edge id="4865" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)" />
      <edge id="4866" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)" />
      <edge id="4867" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)" />
      <edge id="4868" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)" />
      <edge id="4869" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="4870" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()&gt;org.sonar.core.persistence.DbTester.countRowsOfTable(java.lang.String)" />
      <edge id="4871" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_id()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4872" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_id()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)" />
      <edge id="4873" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4874" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)" />
      <edge id="4875" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getId()" />
      <edge id="4876" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()" />
      <edge id="4877" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_name()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4878" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_name()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)" />
      <edge id="4879" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4880" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()" />
      <edge id="4881" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics_by_ids()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4882" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics_by_ids()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)" />
      <edge id="4883" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4884" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()" />
      <edge id="4885" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getId()" />
      <edge id="4886" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()" />
      <edge id="4887" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getName()" />
      <edge id="4888" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()" />
      <edge id="4889" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getOrder()" />
      <edge id="4890" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.isEnabled()" />
      <edge id="4891" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getCreatedAt()" />
      <edge id="4892" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getUpdatedAt()" />
      <edge id="4893" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4894" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()" />
      <edge id="4895" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getId()" />
      <edge id="4896" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()" />
      <edge id="4897" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4898" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()" />
      <edge id="4899" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()" />
      <edge id="4900" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4901" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()" />
      <edge id="4902" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order_when_characteristics_are_all_disabled()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4903" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order_when_characteristics_are_all_disabled()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()" />
      <edge id="4904" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_sub_characteristics_by_parent_id()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4905" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_sub_characteristics_by_parent_id()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)" />
      <edge id="4906" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="4907" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="4908" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto()" />
      <edge id="4909" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setId(java.lang.Integer)" />
      <edge id="4910" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)" />
      <edge id="4911" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)" />
      <edge id="4912" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)" />
      <edge id="4913" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)" />
      <edge id="4914" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)" />
      <edge id="4915" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)" />
      <edge id="4916" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)" />
      <edge id="4917" name="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="4918" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto()" />
      <edge id="4919" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)" />
      <edge id="4920" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)" />
      <edge id="4921" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)" />
      <edge id="4922" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setParentId(java.lang.Integer)" />
      <edge id="4923" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)" />
      <edge id="4924" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)" />
      <edge id="4925" name="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)" />
      <edge id="4926" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto()" />
      <edge id="4927" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setId(java.lang.Integer)" />
      <edge id="4928" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setParentId(java.lang.Integer)" />
      <edge id="4929" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)" />
      <edge id="4930" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)" />
      <edge id="4931" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)" />
      <edge id="4932" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)" />
      <edge id="4933" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)" />
      <edge id="4934" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)" />
      <edge id="4935" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.toCharacteristic(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)" />
      <edge id="4936" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" />
      <edge id="4937" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getId()" />
      <edge id="4938" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()" />
      <edge id="4939" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()" />
      <edge id="4940" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getName()" />
      <edge id="4941" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getOrder()" />
      <edge id="4942" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.isEnabled()" />
      <edge id="4943" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getCreatedAt()" />
      <edge id="4944" name="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()&gt;org.sonar.core.technicaldebt.db.CharacteristicDto.getUpdatedAt()" />
      <edge id="4945" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.toDefaultCharacteristic(org.sonar.api.batch.debt.internal.DefaultDebtCharacteristic,org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)" />
      <edge id="4946" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()" />
      <edge id="4947" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$1()" />
      <edge id="4948" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()" />
      <edge id="4949" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$3()" />
      <edge id="4950" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()" />
      <edge id="4951" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$2()" />
      <edge id="4952" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.characteristic_by_id()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)" />
      <edge id="4953" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristic_by_key()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)" />
      <edge id="4954" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristics()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()" />
      <edge id="4955" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_id_always_return_null()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsById(java.lang.Integer)" />
      <edge id="4956" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_rule_key_always_return_null()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsByRule(org.sonar.api.rule.RuleKey)" />
      <edge id="4957" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirements_always_return_empty_list()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirements()" />
      <edge id="4958" name="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.setUp()&gt;org.sonar.core.technicaldebt.DefaultTechnicalDebtModel(org.sonar.api.batch.debt.DebtModel)" />
      <edge id="4959" name="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4960" name="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)&gt;org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="4961" name="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4962" name="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.template.LoadedTemplateMapper.countByTypeAndKey(java.lang.String,java.lang.String)" />
      <edge id="4963" name="org.sonar.core.template.LoadedTemplateDao.delete(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="4964" name="org.sonar.core.template.LoadedTemplateDao.delete(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)&gt;org.sonar.core.template.LoadedTemplateMapper.delete(java.lang.String,java.lang.String)" />
      <edge id="4965" name="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="4966" name="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)&gt;org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="4967" name="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="4968" name="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.template.LoadedTemplateMapper.insert(org.sonar.core.template.LoadedTemplateDto)" />
      <edge id="4969" name="org.sonar.core.template.LoadedTemplateDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="4970" name="org.sonar.core.template.LoadedTemplateDaoTest.createDao()&gt;org.sonar.core.template.LoadedTemplateDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="4971" name="org.sonar.core.template.LoadedTemplateDaoTest.createDao()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="4972" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldCountByTypeAndKey()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4973" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldCountByTypeAndKey()&gt;org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)" />
      <edge id="4974" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="4975" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()&gt;org.sonar.core.template.LoadedTemplateDto(java.lang.String,java.lang.String)" />
      <edge id="4976" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()&gt;org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)" />
      <edge id="4977" name="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="4978" name="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.findByDays(java.lang.String)" />
      <edge id="4979" name="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.findByDate(java.lang.String)" />
      <edge id="4980" name="org.sonar.core.timemachine.Periods.abbreviation(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)" />
      <edge id="4981" name="org.sonar.core.timemachine.Periods.abbreviation(int)&gt;org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)" />
      <edge id="4982" name="org.sonar.core.timemachine.Periods.abbreviation(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getMode()" />
      <edge id="4983" name="org.sonar.core.timemachine.Periods.abbreviation(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getParam()" />
      <edge id="4984" name="org.sonar.core.timemachine.Periods.abbreviation(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getDate()" />
      <edge id="4985" name="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)" />
      <edge id="4986" name="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)&gt;org.sonar.core.timemachine.Periods.convertDate(java.util.Date)" />
      <edge id="4987" name="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)&gt;org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)" />
      <edge id="4988" name="org.sonar.core.timemachine.Periods.label(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)" />
      <edge id="4989" name="org.sonar.core.timemachine.Periods.label(int)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)" />
      <edge id="4990" name="org.sonar.core.timemachine.Periods.label(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getMode()" />
      <edge id="4991" name="org.sonar.core.timemachine.Periods.label(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getParam()" />
      <edge id="4992" name="org.sonar.core.timemachine.Periods.label(int)&gt;org.sonar.core.timemachine.Periods$PeriodParameters.getDate()" />
      <edge id="4993" name="org.sonar.core.timemachine.Periods.label(java.lang.String,boolean,java.lang.Object[])&gt;org.sonar.core.timemachine.Periods.getLocale()" />
      <edge id="4994" name="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)" />
      <edge id="4995" name="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,boolean,java.lang.Object[])" />
      <edge id="4996" name="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)" />
      <edge id="4997" name="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)&gt;org.sonar.core.timemachine.Periods.convertDate(java.util.Date)" />
      <edge id="4998" name="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)&gt;org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)" />
      <edge id="4999" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_date()&gt;org.sonar.core.timemachine.Periods.abbreviation(int)" />
      <edge id="5000" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_duration_in_days()&gt;org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5001" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_with_date()&gt;org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5002" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_without_date()&gt;org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5003" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_version()&gt;org.sonar.core.timemachine.Periods.abbreviation(int)" />
      <edge id="5004" name="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_snapshot_version()&gt;org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5005" name="org.sonar.core.timemachine.PeriodsTest.before()&gt;org.sonar.core.timemachine.Periods(org.sonar.api.config.Settings,org.sonar.api.i18n.I18n)" />
      <edge id="5006" name="org.sonar.core.timemachine.PeriodsTest.label_of_date()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5007" name="org.sonar.core.timemachine.PeriodsTest.label_of_duration_in_days()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5008" name="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_with_date()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5009" name="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_without_date()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5010" name="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5011" name="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version_with_param_and_date()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5012" name="org.sonar.core.timemachine.PeriodsTest.label_of_snapshot_version()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5013" name="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForLabel()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5014" name="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForSnapshotLabel()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5015" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeDays()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5016" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModePreviousAnalysis()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5017" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeVersion()&gt;org.sonar.core.timemachine.Periods.label(int)" />
      <edge id="5018" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModeDate()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5019" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNotNull()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5020" name="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNull()&gt;org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" />
      <edge id="5021" name="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5022" name="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)&gt;org.sonar.core.user.AuthorMapper.countDeveloperLogins(long)" />
      <edge id="5023" name="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5024" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5025" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)&gt;org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)" />
      <edge id="5026" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5027" name="org.sonar.core.user.AuthorDao$1.apply(java.util.List)&gt;org.sonar.core.user.AuthorMapper.selectScmAccountsByDeveloperUuids(java.util.Collection)" />
      <edge id="5028" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="5029" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)&gt;org.sonar.core.user.AuthorDao$1()" />
      <edge id="5030" name="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)&gt;org.sonar.core.user.AuthorMapper.selectScmAccountsByDeveloperUuids(java.util.Collection)" />
      <edge id="5031" name="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5032" name="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)&gt;org.sonar.core.user.AuthorMapper.selectByLogin(java.lang.String)" />
      <edge id="5033" name="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5034" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5035" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)&gt;org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" />
      <edge id="5036" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5037" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorDto()" />
      <edge id="5038" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorDto.setLogin(java.lang.String)" />
      <edge id="5039" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorDto.setPersonId(java.lang.Long)" />
      <edge id="5040" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorDto.setCreatedAt(java.util.Date)" />
      <edge id="5041" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorDto.setUpdatedAt(java.util.Date)" />
      <edge id="5042" name="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.AuthorMapper.insert(org.sonar.core.user.AuthorDto)" />
      <edge id="5043" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5044" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getModuleUuidPath()" />
      <edge id="5045" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)" />
      <edge id="5046" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getUuid()" />
      <edge id="5047" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="5048" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" />
      <edge id="5049" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.resource.ResourceDto.getId()" />
      <edge id="5050" name="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5051" name="org.sonar.core.user.AuthorDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="5052" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5053" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" />
      <edge id="5054" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="5055" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="5056" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="5057" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)" />
      <edge id="5058" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)" />
      <edge id="5059" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)" />
      <edge id="5060" name="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5061" name="org.sonar.core.user.AuthorDaoTest.countDeveloperLogins()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5062" name="org.sonar.core.user.AuthorDaoTest.countDeveloperLogins()&gt;org.sonar.core.user.AuthorDao.countDeveloperLogins(long)" />
      <edge id="5063" name="org.sonar.core.user.AuthorDaoTest.setUp()&gt;org.sonar.core.user.AuthorDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao)" />
      <edge id="5064" name="org.sonar.core.user.AuthorDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="5065" name="org.sonar.core.user.AuthorDaoTest.setUp()&gt;org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="5066" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5067" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()&gt;org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)" />
      <edge id="5068" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5069" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5070" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="5071" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="5072" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="5073" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)" />
      <edge id="5074" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)" />
      <edge id="5075" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)" />
      <edge id="5076" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" />
      <edge id="5077" name="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5078" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5079" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.resource.ResourceDto()" />
      <edge id="5080" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.resource.ResourceDto.setName(java.lang.String)" />
      <edge id="5081" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)" />
      <edge id="5082" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" />
      <edge id="5083" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5084" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5085" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()&gt;org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)" />
      <edge id="5086" name="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5087" name="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5088" name="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()&gt;org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)" />
      <edge id="5089" name="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()&gt;org.sonar.core.user.AuthorDto.getId()" />
      <edge id="5090" name="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()&gt;org.sonar.core.user.AuthorDto.getPersonId()" />
      <edge id="5091" name="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()&gt;org.sonar.core.user.AuthorDto.getLogin()" />
      <edge id="5092" name="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5093" name="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)" />
      <edge id="5094" name="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5095" name="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5096" name="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForAnonymous(java.lang.String,java.util.Collection)" />
      <edge id="5097" name="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForUser(java.lang.Integer,java.lang.String,java.util.Collection)" />
      <edge id="5098" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="5099" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationDao$1()" />
      <edge id="5100" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5101" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForAnonymous(java.lang.String,java.util.Collection)" />
      <edge id="5102" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForUser(java.lang.Integer,java.lang.String,java.util.Collection)" />
      <edge id="5103" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5104" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="5105" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5106" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5107" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)" />
      <edge id="5108" name="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5109" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5110" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForAnonymous(java.lang.String,java.util.Collection)" />
      <edge id="5111" name="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)&gt;org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForUser(java.lang.Integer,java.lang.String,java.util.Collection)" />
      <edge id="5112" name="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5113" name="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5114" name="org.sonar.core.user.AuthorizationDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="5115" name="org.sonar.core.user.AuthorizationDaoTest.anonymous_should_be_authorized()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5116" name="org.sonar.core.user.AuthorizationDaoTest.anonymous_should_be_authorized()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5117" name="org.sonar.core.user.AuthorizationDaoTest.group_should_be_authorized()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5118" name="org.sonar.core.user.AuthorizationDaoTest.group_should_be_authorized()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5119" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_anonymous()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5120" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" />
      <edge id="5121" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5122" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_group()&gt;org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" />
      <edge id="5123" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5124" name="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_user()&gt;org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" />
      <edge id="5125" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_anonymous()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5126" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5127" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5128" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_group()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5129" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5130" name="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_user()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5131" name="org.sonar.core.user.AuthorizationDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="5132" name="org.sonar.core.user.AuthorizationDaoTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5133" name="org.sonar.core.user.AuthorizationDaoTest.setUp()&gt;org.sonar.core.user.AuthorizationDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="5134" name="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_anonymous()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5135" name="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" />
      <edge id="5136" name="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_group_anyone()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5137" name="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_group_anyone()&gt;org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" />
      <edge id="5138" name="org.sonar.core.user.AuthorizationDaoTest.should_return_group_global_permissions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5139" name="org.sonar.core.user.AuthorizationDaoTest.should_return_group_global_permissions()&gt;org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" />
      <edge id="5140" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_anonymous()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5141" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5142" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5143" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_group()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5144" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5145" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_user()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5146" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5147" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" />
      <edge id="5148" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5149" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5150" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" />
      <edge id="5151" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5152" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5153" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" />
      <edge id="5154" name="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()&gt;org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" />
      <edge id="5155" name="org.sonar.core.user.AuthorizationDaoTest.should_return_user_global_permissions()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5156" name="org.sonar.core.user.AuthorizationDaoTest.should_return_user_global_permissions()&gt;org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" />
      <edge id="5157" name="org.sonar.core.user.AuthorizationDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="5158" name="org.sonar.core.user.AuthorizationDaoTest.user_should_be_authorized()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5159" name="org.sonar.core.user.AuthorizationDaoTest.user_should_be_authorized()&gt;org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" />
      <edge id="5160" name="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5161" name="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)&gt;org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)" />
      <edge id="5162" name="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)&gt;org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" />
      <edge id="5163" name="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)&gt;org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)" />
      <edge id="5164" name="org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)&gt;org.sonar.core.user.UserDto.toUser()" />
      <edge id="5165" name="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5166" name="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)&gt;org.sonar.core.user.UserDto.toUser()" />
      <edge id="5167" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.UserDto()" />
      <edge id="5168" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.UserDto.setLogin(java.lang.String)" />
      <edge id="5169" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.UserDto.setName(java.lang.String)" />
      <edge id="5170" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.UserDto.setEmail(java.lang.String)" />
      <edge id="5171" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5172" name="org.sonar.core.user.DefaultUserFinderTest.findByLogin()&gt;org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)" />
      <edge id="5173" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.UserDto()" />
      <edge id="5174" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.UserDto.setLogin(java.lang.String)" />
      <edge id="5175" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.UserDto.setName(java.lang.String)" />
      <edge id="5176" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.UserDto.setEmail(java.lang.String)" />
      <edge id="5177" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" />
      <edge id="5178" name="org.sonar.core.user.DefaultUserFinderTest.findByLogins()&gt;org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)" />
      <edge id="5179" name="org.sonar.core.user.DefaultUserFinderTest.findByQuery()&gt;org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)" />
      <edge id="5180" name="org.sonar.core.user.DefaultUserFinderTest.findByQuery()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5181" name="org.sonar.core.user.DefaultUserTest.test_email()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="5182" name="org.sonar.core.user.DefaultUserTest.test_email()&gt;org.sonar.core.user.DefaultUser.email()" />
      <edge id="5183" name="org.sonar.core.user.DefaultUserTest.test_email()&gt;org.sonar.core.user.DefaultUser.setEmail(java.lang.String)" />
      <edge id="5184" name="org.sonar.core.user.DefaultUserTest.test_object_methods()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="5185" name="org.sonar.core.user.DefaultUserTest.test_object_methods()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="5186" name="org.sonar.core.user.DefaultUserTest.test_object_methods()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="5187" name="org.sonar.core.user.DefaultUserTest.test_object_methods()&gt;org.sonar.core.user.DefaultUser.hashCode()" />
      <edge id="5188" name="org.sonar.core.user.DefaultUserTest.test_object_methods()&gt;org.sonar.core.user.DefaultUser.toString()" />
      <edge id="5189" name="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserDto.getEmail()" />
      <edge id="5190" name="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5191" name="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserDto.getName()" />
      <edge id="5192" name="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserDto.getId()" />
      <edge id="5193" name="org.sonar.core.user.DeprecatedUserFinder.findById(int)&gt;org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" />
      <edge id="5194" name="org.sonar.core.user.DeprecatedUserFinder.findById(int)&gt;org.sonar.core.user.UserDao.getUser(long)" />
      <edge id="5195" name="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)&gt;org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" />
      <edge id="5196" name="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5197" name="org.sonar.core.user.DeprecatedUserFinderTest.init()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5198" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()&gt;org.sonar.core.user.DeprecatedUserFinder(org.sonar.core.user.UserDao)" />
      <edge id="5199" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()&gt;org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="5200" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="5201" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()&gt;org.sonar.core.user.DeprecatedUserFinder.findById(int)" />
      <edge id="5202" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()&gt;org.sonar.core.user.DeprecatedUserFinder(org.sonar.core.user.UserDao)" />
      <edge id="5203" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()&gt;org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="5204" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="5205" name="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()&gt;org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)" />
      <edge id="5206" name="org.sonar.core.user.GroupDto()&gt;org.sonar.core.persistence.Dto()" />
      <edge id="5207" name="org.sonar.core.persistence.Dto.getKey()&gt;org.sonar.core.user.GroupDto.getKey()" />
      <edge id="5208" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto()" />
      <edge id="5209" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.setId(java.lang.Long)" />
      <edge id="5210" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.setName(java.lang.String)" />
      <edge id="5211" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.setDescription(java.lang.String)" />
      <edge id="5212" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.getKey()" />
      <edge id="5213" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.getName()" />
      <edge id="5214" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.getId()" />
      <edge id="5215" name="org.sonar.core.user.GroupDtoTest.getter_and_setter()&gt;org.sonar.core.user.GroupDto.getDescription()" />
      <edge id="5216" name="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5217" name="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)&gt;org.sonar.core.user.GroupMembershipMapper.selectGroupsByLogins(java.util.List)" />
      <edge id="5218" name="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)&gt;org.sonar.core.user.LoginGroup.login()" />
      <edge id="5219" name="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)&gt;org.sonar.core.user.LoginGroup.groupName()" />
      <edge id="5220" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="5221" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipDao$2()" />
      <edge id="5222" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5223" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipMapper.selectGroupsByLogins(java.util.List)" />
      <edge id="5224" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.LoginGroup.login()" />
      <edge id="5225" name="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.LoginGroup.groupName()" />
      <edge id="5226" name="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5227" name="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)&gt;org.sonar.core.user.GroupMembershipMapper.countGroups(java.util.Map)" />
      <edge id="5228" name="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)&gt;org.sonar.core.user.UserMembershipQuery.groupId()" />
      <edge id="5229" name="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5230" name="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)&gt;org.sonar.core.user.GroupMembershipMapper.countMembers(java.util.Map)" />
      <edge id="5231" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5232" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)&gt;org.sonar.core.user.GroupMembershipMapper.selectGroups(java.util.Map,org.apache.ibatis.session.RowBounds)" />
      <edge id="5233" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" />
      <edge id="5234" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5235" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" />
      <edge id="5236" name="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5237" name="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)&gt;org.sonar.core.user.UserMembershipQuery.groupId()" />
      <edge id="5238" name="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5239" name="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)&gt;org.sonar.core.user.GroupMembershipMapper.selectMembers(java.util.Map,org.apache.ibatis.session.RowBounds)" />
      <edge id="5240" name="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5241" name="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)&gt;org.sonar.core.user.GroupMembershipMapper.countUsersByGroup(java.util.List)" />
      <edge id="5242" name="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)&gt;org.sonar.core.user.GroupUserCount.groupName()" />
      <edge id="5243" name="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)&gt;org.sonar.core.user.GroupUserCount.userCount()" />
      <edge id="5244" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)" />
      <edge id="5245" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipDao$1()" />
      <edge id="5246" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5247" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupMembershipMapper.countUsersByGroup(java.util.List)" />
      <edge id="5248" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupUserCount.groupName()" />
      <edge id="5249" name="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)&gt;org.sonar.core.user.GroupUserCount.userCount()" />
      <edge id="5250" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5251" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5252" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5253" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5254" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5255" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5256" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups_by_login()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5257" name="org.sonar.core.user.GroupMembershipDaoTest.count_groups_by_login()&gt;org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="5258" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5259" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)" />
      <edge id="5260" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5261" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5262" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5263" name="org.sonar.core.user.GroupMembershipDaoTest.count_members()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5264" name="org.sonar.core.user.GroupMembershipDaoTest.count_users_by_group()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5265" name="org.sonar.core.user.GroupMembershipDaoTest.count_users_by_group()&gt;org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" />
      <edge id="5266" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5267" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5268" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5269" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5270" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5271" name="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()&gt;org.sonar.core.user.UserMembershipDto.getName()" />
      <edge id="5272" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5273" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5274" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5275" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5276" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.groupSearch(java.lang.String)" />
      <edge id="5277" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5278" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()&gt;org.sonar.core.user.GroupMembershipDto.getName()" />
      <edge id="5279" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5280" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5281" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5282" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5283" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.groupSearch(java.lang.String)" />
      <edge id="5284" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5285" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipDto.getName()" />
      <edge id="5286" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5287" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5288" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5289" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5290" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.user.UserMembershipQuery$Builder.memberSearch(java.lang.String)" />
      <edge id="5291" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5292" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5293" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5294" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5295" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5296" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.UserMembershipQuery$Builder.memberSearch(java.lang.String)" />
      <edge id="5297" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5298" name="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()&gt;org.sonar.core.user.UserMembershipDto.getName()" />
      <edge id="5299" name="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5300" name="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5301" name="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5302" name="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5303" name="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5304" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5305" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5306" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5307" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5308" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5309" name="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5310" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5311" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5312" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5313" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5314" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5315" name="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5316" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5317" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5318" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5319" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5320" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5321" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipDto.getId()" />
      <edge id="5322" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipDto.getName()" />
      <edge id="5323" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipDto.getDescription()" />
      <edge id="5324" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()&gt;org.sonar.core.user.GroupMembershipDto.getUserId()" />
      <edge id="5325" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5326" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5327" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5328" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5329" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5330" name="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5331" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5332" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5333" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5334" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5335" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5336" name="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5337" name="org.sonar.core.user.GroupMembershipDaoTest.setUp()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="5338" name="org.sonar.core.user.GroupMembershipDaoTest.setUp()&gt;org.sonar.core.user.GroupMembershipDao(org.sonar.core.persistence.MyBatis)" />
      <edge id="5339" name="org.sonar.core.user.GroupMembershipDaoTest.setUp()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="5340" name="org.sonar.core.user.GroupMembershipDaoTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5341" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5342" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" />
      <edge id="5343" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5344" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5345" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5346" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()&gt;org.sonar.core.user.GroupMembershipDto.getName()" />
      <edge id="5347" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5348" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" />
      <edge id="5349" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5350" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5351" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5352" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()&gt;org.sonar.core.user.GroupMembershipDto.getName()" />
      <edge id="5353" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5354" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" />
      <edge id="5355" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.user.UserMembershipQuery.builder()" />
      <edge id="5356" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)" />
      <edge id="5357" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.user.UserMembershipQuery$Builder.build()" />
      <edge id="5358" name="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()&gt;org.sonar.core.user.UserMembershipDto.getName()" />
      <edge id="5359" name="org.sonar.core.user.GroupMembershipDaoTest.tearDown()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5360" name="org.sonar.core.user.GroupMembershipDto.toGroupMembership()&gt;org.sonar.core.user.GroupMembership()" />
      <edge id="5361" name="org.sonar.core.user.GroupMembershipDto.toGroupMembership()&gt;org.sonar.core.user.GroupMembership.setId(java.lang.Long)" />
      <edge id="5362" name="org.sonar.core.user.GroupMembershipDto.toGroupMembership()&gt;org.sonar.core.user.GroupMembership.setName(java.lang.String)" />
      <edge id="5363" name="org.sonar.core.user.GroupMembershipDto.toGroupMembership()&gt;org.sonar.core.user.GroupMembership.setDescription(java.lang.String)" />
      <edge id="5364" name="org.sonar.core.user.GroupMembershipDto.toGroupMembership()&gt;org.sonar.core.user.GroupMembership.setMember(boolean)" />
      <edge id="5365" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto()" />
      <edge id="5366" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setId(java.lang.Long)" />
      <edge id="5367" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setName(java.lang.String)" />
      <edge id="5368" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setDescription(java.lang.String)" />
      <edge id="5369" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setUserId(java.lang.Long)" />
      <edge id="5370" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.toGroupMembership()" />
      <edge id="5371" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembership.id()" />
      <edge id="5372" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembership.name()" />
      <edge id="5373" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembership.description()" />
      <edge id="5374" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()&gt;org.sonar.core.user.GroupMembership.isMember()" />
      <edge id="5375" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto()" />
      <edge id="5376" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setId(java.lang.Long)" />
      <edge id="5377" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setName(java.lang.String)" />
      <edge id="5378" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setDescription(java.lang.String)" />
      <edge id="5379" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.setUserId(java.lang.Long)" />
      <edge id="5380" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembershipDto.toGroupMembership()" />
      <edge id="5381" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembership.id()" />
      <edge id="5382" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembership.name()" />
      <edge id="5383" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembership.description()" />
      <edge id="5384" name="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()&gt;org.sonar.core.user.GroupMembership.isMember()" />
      <edge id="5385" name="org.sonar.core.user.GroupMembershipQuery$Builder.build()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.initMembership()" />
      <edge id="5386" name="org.sonar.core.user.GroupMembershipQuery$Builder.build()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.initPageIndex()" />
      <edge id="5387" name="org.sonar.core.user.GroupMembershipQuery$Builder.build()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.initPageSize()" />
      <edge id="5388" name="org.sonar.core.user.GroupMembershipQuery$Builder.build()&gt;org.sonar.core.user.GroupMembershipQuery(org.sonar.core.user.GroupMembershipQuery$Builder)" />
      <edge id="5389" name="org.sonar.core.user.GroupMembershipQuery(org.sonar.core.user.GroupMembershipQuery$Builder)&gt;org.sonar.core.user.GroupMembershipQuery.groupSearchToSql(java.lang.String)" />
      <edge id="5390" name="org.sonar.core.user.GroupMembershipQuery.builder()&gt;org.sonar.core.user.GroupMembershipQuery$Builder()" />
      <edge id="5391" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5392" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5393" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)" />
      <edge id="5394" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5395" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()&gt;org.sonar.core.user.GroupMembershipQuery.builder()" />
      <edge id="5396" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)" />
      <edge id="5397" name="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()&gt;org.sonar.core.user.GroupMembershipQuery$Builder.build()" />
      <edge id="5398" name="org.sonar.core.user.GroupMembershipTest.test_equals()&gt;org.sonar.core.user.GroupMembership()" />
      <edge id="5399" name="org.sonar.core.user.GroupMembershipTest.test_equals()&gt;org.sonar.core.user.GroupMembership.setName(java.lang.String)" />
      <edge id="5400" name="org.sonar.core.user.GroupMembershipTest.test_equals()&gt;org.sonar.core.user.GroupMembership.setId(java.lang.Long)" />
      <edge id="5401" name="org.sonar.core.user.GroupMembershipTest.test_equals()&gt;org.sonar.core.user.GroupMembership.setMember(boolean)" />
      <edge id="5402" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership()" />
      <edge id="5403" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.setId(java.lang.Long)" />
      <edge id="5404" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.setName(java.lang.String)" />
      <edge id="5405" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.setMember(boolean)" />
      <edge id="5406" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.id()" />
      <edge id="5407" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.name()" />
      <edge id="5408" name="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()&gt;org.sonar.core.user.GroupMembership.isMember()" />
      <edge id="5409" name="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5410" name="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleMapper.countResourceGroupRoles(java.lang.Long)" />
      <edge id="5411" name="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5412" name="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)&gt;org.sonar.core.user.RoleMapper.countResourceUserRoles(java.lang.Long)" />
      <edge id="5413" name="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5414" name="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.user.RoleMapper.selectGroupPermissions(java.lang.String,java.lang.Long,java.lang.Boolean)" />
      <edge id="5415" name="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5416" name="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)&gt;org.sonar.core.user.RoleMapper.selectUserPermissions(java.lang.String,java.lang.Long)" />
      <edge id="5417" name="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5418" name="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.deleteGroupRole(org.sonar.core.user.GroupRoleDto)" />
      <edge id="5419" name="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5420" name="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)&gt;org.sonar.core.user.RoleMapper.deleteGroupRolesByGroupId(long)" />
      <edge id="5421" name="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5422" name="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.deleteGroupRolesByResourceId(java.lang.Long)" />
      <edge id="5423" name="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5424" name="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.deleteUserRole(org.sonar.core.user.UserRoleDto)" />
      <edge id="5425" name="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5426" name="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.deleteUserRolesByResourceId(java.lang.Long)" />
      <edge id="5427" name="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5428" name="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.insertGroupRole(org.sonar.core.user.GroupRoleDto)" />
      <edge id="5429" name="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)" />
      <edge id="5430" name="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.RoleMapper.insertUserRole(org.sonar.core.user.UserRoleDto)" />
      <edge id="5431" name="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5432" name="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()&gt;org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)" />
      <edge id="5433" name="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5434" name="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="5435" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5436" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.user.GroupRoleDto()" />
      <edge id="5437" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)" />
      <edge id="5438" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)" />
      <edge id="5439" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="5440" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5441" name="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="5442" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5443" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.user.UserRoleDto()" />
      <edge id="5444" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)" />
      <edge id="5445" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.user.UserRoleDto.setRole(java.lang.String)" />
      <edge id="5446" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="5447" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5448" name="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="5449" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5450" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.user.GroupRoleDto()" />
      <edge id="5451" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)" />
      <edge id="5452" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)" />
      <edge id="5453" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)" />
      <edge id="5454" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="5455" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5456" name="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="5457" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5458" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.user.UserRoleDto()" />
      <edge id="5459" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)" />
      <edge id="5460" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.user.UserRoleDto.setRole(java.lang.String)" />
      <edge id="5461" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)" />
      <edge id="5462" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" />
      <edge id="5463" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5464" name="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()&gt;org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" />
      <edge id="5465" name="org.sonar.core.user.RoleDaoTest.retrieve_global_group_permissions()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5466" name="org.sonar.core.user.RoleDaoTest.retrieve_global_group_permissions()&gt;org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="5467" name="org.sonar.core.user.RoleDaoTest.retrieve_global_user_permissions()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5468" name="org.sonar.core.user.RoleDaoTest.retrieve_global_user_permissions()&gt;org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="5469" name="org.sonar.core.user.RoleDaoTest.retrieve_resource_group_permissions()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5470" name="org.sonar.core.user.RoleDaoTest.retrieve_resource_group_permissions()&gt;org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="5471" name="org.sonar.core.user.RoleDaoTest.retrieve_resource_user_permissions()&gt;org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" />
      <edge id="5472" name="org.sonar.core.user.RoleDaoTest.retrieve_resource_user_permissions()&gt;org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" />
      <edge id="5473" name="org.sonar.core.user.RoleDaoTest.setUp()&gt;org.sonar.core.persistence.DbTester.truncateTables()" />
      <edge id="5474" name="org.sonar.core.user.RoleDaoTest.setUp()&gt;org.sonar.core.persistence.DbTester.myBatis()" />
      <edge id="5475" name="org.sonar.core.user.RoleDaoTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5476" name="org.sonar.core.user.RoleDaoTest.setUp()&gt;org.sonar.core.user.RoleDao()" />
      <edge id="5477" name="org.sonar.core.user.RoleDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="5478" name="org.sonar.core.user.RoleMapperTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="5479" name="org.sonar.core.user.RoleMapperTest.closeSession()&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5480" name="org.sonar.core.user.RoleMapperTest.count_roles()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5481" name="org.sonar.core.user.RoleMapperTest.count_roles()&gt;org.sonar.core.user.RoleMapper.countResourceGroupRoles(java.lang.Long)" />
      <edge id="5482" name="org.sonar.core.user.RoleMapperTest.count_roles()&gt;org.sonar.core.user.RoleMapper.countResourceUserRoles(java.lang.Long)" />
      <edge id="5483" name="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5484" name="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()&gt;org.sonar.core.user.RoleMapper.deleteGroupRolesByResourceId(java.lang.Long)" />
      <edge id="5485" name="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()&gt;org.sonar.core.user.RoleMapper.deleteUserRolesByResourceId(java.lang.Long)" />
      <edge id="5486" name="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="5487" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5488" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.RoleMapper.insertGroupRole(org.sonar.core.user.GroupRoleDto)" />
      <edge id="5489" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.GroupRoleDto()" />
      <edge id="5490" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)" />
      <edge id="5491" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)" />
      <edge id="5492" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)" />
      <edge id="5493" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.RoleMapper.insertUserRole(org.sonar.core.user.UserRoleDto)" />
      <edge id="5494" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.UserRoleDto()" />
      <edge id="5495" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.UserRoleDto.setRole(java.lang.String)" />
      <edge id="5496" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)" />
      <edge id="5497" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)" />
      <edge id="5498" name="org.sonar.core.user.RoleMapperTest.insert_roles()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="5499" name="org.sonar.core.user.RoleMapperTest.openSession()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="5500" name="org.sonar.core.user.RoleMapperTest.openSession()&gt;org.sonar.core.persistence.MyBatis.openSession()" />
      <edge id="5501" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5502" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.selectUserByLogin(java.lang.String)" />
      <edge id="5503" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.removeUserFromGroups(long)" />
      <edge id="5504" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserDto.getId()" />
      <edge id="5505" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUserActiveDashboards(long)" />
      <edge id="5506" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUnsharedUserDashboards(long)" />
      <edge id="5507" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUnsharedUserIssueFilters(java.lang.String)" />
      <edge id="5508" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5509" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUserIssueFilterFavourites(java.lang.String)" />
      <edge id="5510" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUnsharedUserMeasureFilters(long)" />
      <edge id="5511" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUserMeasureFilterFavourites(long)" />
      <edge id="5512" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUserProperties(long)" />
      <edge id="5513" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deleteUserRoles(long)" />
      <edge id="5514" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserMapper.deactivateUser(long,long)" />
      <edge id="5515" name="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5516" name="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5517" name="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)&gt;org.sonar.core.user.UserMapper.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5518" name="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5519" name="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5520" name="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)&gt;org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)" />
      <edge id="5521" name="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5522" name="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5523" name="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)&gt;org.sonar.core.user.UserMapper.selectUsersByLogins(java.util.List)" />
      <edge id="5524" name="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5525" name="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)&gt;org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)" />
      <edge id="5526" name="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5527" name="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5528" name="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)&gt;org.sonar.core.user.UserMapper.selectGroupByName(java.lang.String)" />
      <edge id="5529" name="org.sonar.core.user.UserDao.getUser(long)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5530" name="org.sonar.core.user.UserDao.getUser(long)&gt;org.sonar.core.user.UserDao.getUser(long,org.apache.ibatis.session.SqlSession)" />
      <edge id="5531" name="org.sonar.core.user.UserDao.getUser(long)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5532" name="org.sonar.core.user.UserDao.getUser(long,org.apache.ibatis.session.SqlSession)&gt;org.sonar.core.user.UserMapper.selectUser(long)" />
      <edge id="5533" name="org.sonar.core.user.UserDao.insert(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserMapper.insert(org.sonar.core.user.UserDto)" />
      <edge id="5534" name="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5535" name="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)" />
      <edge id="5536" name="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)&gt;org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)" />
      <edge id="5537" name="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" />
      <edge id="5538" name="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)&gt;org.sonar.core.user.UserMapper.selectUserByLogin(java.lang.String)" />
      <edge id="5539" name="org.sonar.core.user.UserDao.update(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)&gt;org.sonar.core.user.UserMapper.update(org.sonar.core.user.UserDto)" />
      <edge id="5540" name="org.sonar.core.user.UserDaoTest()&gt;org.sonar.core.persistence.AbstractDaoTestCase()" />
      <edge id="5541" name="org.sonar.core.user.UserDaoTest.deactivate_missing_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5542" name="org.sonar.core.user.UserDaoTest.deactivate_missing_user()&gt;org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" />
      <edge id="5543" name="org.sonar.core.user.UserDaoTest.deactivate_missing_user()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5544" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5545" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" />
      <edge id="5546" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5547" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.user.UserDao.getUser(long)" />
      <edge id="5548" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.user.UserDto.isActive()" />
      <edge id="5549" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.user.UserDto.getUpdatedAt()" />
      <edge id="5550" name="org.sonar.core.user.UserDaoTest.deactivate_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" />
      <edge id="5551" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto()" />
      <edge id="5552" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setId(java.lang.Long)" />
      <edge id="5553" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setLogin(java.lang.String)" />
      <edge id="5554" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setName(java.lang.String)" />
      <edge id="5555" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setEmail(java.lang.String)" />
      <edge id="5556" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setScmAccounts(java.lang.String)" />
      <edge id="5557" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setActive(boolean)" />
      <edge id="5558" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setSalt(java.lang.String)" />
      <edge id="5559" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setCryptedPassword(java.lang.String)" />
      <edge id="5560" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setCreatedAt(java.lang.Long)" />
      <edge id="5561" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.setUpdatedAt(java.lang.Long)" />
      <edge id="5562" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDao.insert(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)" />
      <edge id="5563" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5564" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5565" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getId()" />
      <edge id="5566" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5567" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getName()" />
      <edge id="5568" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getEmail()" />
      <edge id="5569" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.isActive()" />
      <edge id="5570" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getScmAccounts()" />
      <edge id="5571" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getSalt()" />
      <edge id="5572" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getCryptedPassword()" />
      <edge id="5573" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getCreatedAt()" />
      <edge id="5574" name="org.sonar.core.user.UserDaoTest.insert_user()&gt;org.sonar.core.user.UserDto.getUpdatedAt()" />
      <edge id="5575" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5576" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)" />
      <edge id="5577" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.user.GroupDto.getId()" />
      <edge id="5578" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.user.GroupDto.getName()" />
      <edge id="5579" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.user.GroupDto.getDescription()" />
      <edge id="5580" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.persistence.Dto.getCreatedAt()" />
      <edge id="5581" name="org.sonar.core.user.UserDaoTest.selectGroupByName()&gt;org.sonar.core.persistence.Dto.getUpdatedAt()" />
      <edge id="5582" name="org.sonar.core.user.UserDaoTest.selectGroupByName_not_found()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5583" name="org.sonar.core.user.UserDaoTest.selectGroupByName_not_found()&gt;org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)" />
      <edge id="5584" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5585" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()&gt;org.sonar.core.user.UserDao.getUser(long)" />
      <edge id="5586" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5587" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5588" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_not_found()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5589" name="org.sonar.core.user.UserDaoTest.selectUserByLogin_not_found()&gt;org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" />
      <edge id="5590" name="org.sonar.core.user.UserDaoTest.selectUsersByLogins()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5591" name="org.sonar.core.user.UserDaoTest.selectUsersByLogins()&gt;org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" />
      <edge id="5592" name="org.sonar.core.user.UserDaoTest.selectUsersByLogins_empty_logins()&gt;org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" />
      <edge id="5593" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_all()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5594" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_all()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5595" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_escape_special_characters_in_like()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5596" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_escape_special_characters_in_like()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5597" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5598" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5599" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()&gt;org.sonar.core.user.UserDto.getName()" />
      <edge id="5600" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5601" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5602" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()&gt;org.sonar.core.user.UserDto.getName()" />
      <edge id="5603" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5604" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5605" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5606" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5607" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()&gt;org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" />
      <edge id="5608" name="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5609" name="org.sonar.core.user.UserDaoTest.setUp()&gt;org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()" />
      <edge id="5610" name="org.sonar.core.user.UserDaoTest.setUp()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5611" name="org.sonar.core.user.UserDaoTest.setUp()&gt;org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)" />
      <edge id="5612" name="org.sonar.core.user.UserDaoTest.tearDown()&gt;org.sonar.core.persistence.DbSession.close()" />
      <edge id="5613" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" />
      <edge id="5614" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto()" />
      <edge id="5615" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setId(java.lang.Long)" />
      <edge id="5616" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setLogin(java.lang.String)" />
      <edge id="5617" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setName(java.lang.String)" />
      <edge id="5618" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setEmail(java.lang.String)" />
      <edge id="5619" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setScmAccounts(java.lang.String)" />
      <edge id="5620" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setActive(boolean)" />
      <edge id="5621" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setSalt(java.lang.String)" />
      <edge id="5622" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setCryptedPassword(java.lang.String)" />
      <edge id="5623" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.setUpdatedAt(java.lang.Long)" />
      <edge id="5624" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDao.update(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)" />
      <edge id="5625" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.persistence.DbSession.commit()" />
      <edge id="5626" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDao.getUser(long)" />
      <edge id="5627" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getId()" />
      <edge id="5628" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getLogin()" />
      <edge id="5629" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getName()" />
      <edge id="5630" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getEmail()" />
      <edge id="5631" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.isActive()" />
      <edge id="5632" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getScmAccounts()" />
      <edge id="5633" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getSalt()" />
      <edge id="5634" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getCryptedPassword()" />
      <edge id="5635" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getCreatedAt()" />
      <edge id="5636" name="org.sonar.core.user.UserDaoTest.update_user()&gt;org.sonar.core.user.UserDto.getUpdatedAt()" />
      <edge id="5637" name="org.sonar.core.user.UserDto.getScmAccountsAsList()&gt;org.sonar.core.user.UserDto.decodeScmAccounts(java.lang.String)" />
      <edge id="5638" name="org.sonar.core.user.UserDto.toUser()&gt;org.sonar.core.user.DefaultUser()" />
      <edge id="5639" name="org.sonar.core.user.UserDto.toUser()&gt;org.sonar.core.user.DefaultUser.setLogin(java.lang.String)" />
      <edge id="5640" name="org.sonar.core.user.UserDto.toUser()&gt;org.sonar.core.user.DefaultUser.setName(java.lang.String)" />
      <edge id="5641" name="org.sonar.core.user.UserDto.toUser()&gt;org.sonar.core.user.DefaultUser.setEmail(java.lang.String)" />
      <edge id="5642" name="org.sonar.core.user.UserDto.toUser()&gt;org.sonar.core.user.DefaultUser.setActive(boolean)" />
      <edge id="5643" name="org.sonar.core.user.UserDto.setScmAccounts(java.util.List)&gt;org.sonar.core.user.UserDto.encodeScmAccounts(java.util.List)" />
      <edge id="5644" name="org.sonar.core.user.UserDtoTest.decode_scm_accounts()&gt;org.sonar.core.user.UserDto.decodeScmAccounts(java.lang.String)" />
      <edge id="5645" name="org.sonar.core.user.UserDtoTest.encode_scm_accounts()&gt;org.sonar.core.user.UserDto.encodeScmAccounts(java.util.List)" />
      <edge id="5646" name="org.sonar.core.user.UserMembershipQuery$Builder.build()&gt;org.sonar.core.user.UserMembershipQuery$Builder.initMembership()" />
      <edge id="5647" name="org.sonar.core.user.UserMembershipQuery$Builder.build()&gt;org.sonar.core.user.UserMembershipQuery$Builder.initPageIndex()" />
      <edge id="5648" name="org.sonar.core.user.UserMembershipQuery$Builder.build()&gt;org.sonar.core.user.UserMembershipQuery$Builder.initPageSize()" />
      <edge id="5649" name="org.sonar.core.user.UserMembershipQuery$Builder.build()&gt;org.sonar.core.user.UserMembershipQuery(org.sonar.core.user.UserMembershipQuery$Builder)" />
      <edge id="5650" name="org.sonar.core.user.UserMembershipQuery(org.sonar.core.user.UserMembershipQuery$Builder)&gt;org.sonar.core.user.UserMembershipQuery.memberSearchToSql(java.lang.String)" />
      <edge id="5651" name="org.sonar.core.user.UserMembershipQuery.builder()&gt;org.sonar.core.user.UserMembershipQuery$Builder()" />
      <edge id="5652" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier.getInput()&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)" />
      <edge id="5653" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier.getInput()&gt;org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)" />
      <edge id="5654" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)" />
      <edge id="5655" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initUserAgent(java.lang.String)" />
      <edge id="5656" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)" />
      <edge id="5657" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.Integer)" />
      <edge id="5658" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)" />
      <edge id="5659" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String)" />
      <edge id="5660" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)" />
      <edge id="5661" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)" />
      <edge id="5662" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)" />
      <edge id="5663" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)" />
      <edge id="5664" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.propagateProxySystemProperties(java.util.Map)" />
      <edge id="5665" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.requiresProxyAuthentication(java.util.Map)" />
      <edge id="5666" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.registerProxyCredentials(java.util.Map)" />
      <edge id="5667" name="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.registerProxyCredentials(java.util.Map)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$ProxyAuthenticator(java.lang.String,java.lang.String)" />
      <edge id="5668" name="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)" />
      <edge id="5669" name="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)" />
      <edge id="5670" name="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings)&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings,java.lang.Integer)" />
      <edge id="5671" name="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings,java.lang.Integer)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)" />
      <edge id="5672" name="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)" />
      <edge id="5673" name="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)" />
      <edge id="5674" name="org.sonar.core.util.DefaultHttpDownloader.readBytes(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)" />
      <edge id="5675" name="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)" />
      <edge id="5676" name="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)" />
      <edge id="5677" name="org.sonar.core.util.DefaultHttpDownloader.description(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)" />
      <edge id="5678" name="org.sonar.core.util.DefaultHttpDownloader.downloadPlainText(java.net.URI,java.lang.String)&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5679" name="org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI)" />
      <edge id="5680" name="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)" />
      <edge id="5681" name="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)&gt;org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)" />
      <edge id="5682" name="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)&gt;org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)" />
      <edge id="5683" name="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)" />
      <edge id="5684" name="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)&gt;org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)" />
      <edge id="5685" name="org.sonar.core.util.DefaultHttpDownloaderTest.downloadBytes()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5686" name="org.sonar.core.util.DefaultHttpDownloaderTest.downloadBytes()&gt;org.sonar.core.util.DefaultHttpDownloader.readBytes(java.net.URI)" />
      <edge id="5687" name="org.sonar.core.util.DefaultHttpDownloaderTest.downloadToFile()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5688" name="org.sonar.core.util.DefaultHttpDownloaderTest.downloadToFile()&gt;org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)" />
      <edge id="5689" name="org.sonar.core.util.DefaultHttpDownloaderTest.followRedirect()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5690" name="org.sonar.core.util.DefaultHttpDownloaderTest.followRedirect()&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5691" name="org.sonar.core.util.DefaultHttpDownloaderTest.readGzipString()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5692" name="org.sonar.core.util.DefaultHttpDownloaderTest.readGzipString()&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5693" name="org.sonar.core.util.DefaultHttpDownloaderTest.readString()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5694" name="org.sonar.core.util.DefaultHttpDownloaderTest.readString()&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5695" name="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithDefaultTimeout()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5696" name="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithDefaultTimeout()&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5697" name="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()&gt;org.sonar.core.util.DefaultHttpDownloaderTest$2()" />
      <edge id="5698" name="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)" />
      <edge id="5699" name="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()&gt;org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" />
      <edge id="5700" name="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetDirectProxySynthesis()&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)" />
      <edge id="5701" name="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetProxySynthesis()&gt;org.sonar.core.util.FakeProxy()" />
      <edge id="5702" name="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetProxySynthesis()&gt;org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)" />
      <edge id="5703" name="org.sonar.core.util.DefaultHttpDownloaderTest.shouldNotCreateFileIfFailToDownload()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5704" name="org.sonar.core.util.DefaultHttpDownloaderTest.shouldNotCreateFileIfFailToDownload()&gt;org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)" />
      <edge id="5705" name="org.sonar.core.util.DefaultHttpDownloaderTest.startServer()&gt;org.sonar.core.util.DefaultHttpDownloaderTest$1()" />
      <edge id="5706" name="org.sonar.core.util.DefaultHttpDownloaderTest.supported_schemes()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5707" name="org.sonar.core.util.DefaultHttpDownloaderTest.supported_schemes()&gt;org.sonar.core.util.DefaultHttpDownloader.getSupportedSchemes()" />
      <edge id="5708" name="org.sonar.core.util.DefaultHttpDownloaderTest.uri_description()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" />
      <edge id="5709" name="org.sonar.core.util.DefaultHttpDownloaderTest.uri_description()&gt;org.sonar.core.util.DefaultHttpDownloader.description(java.net.URI)" />
      <edge id="5710" name="org.sonar.core.util.DefaultHttpDownloaderTest.userAgentIsSonarVersion()&gt;org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings)" />
      <edge id="5711" name="org.sonar.core.util.DefaultHttpDownloaderTest.userAgentIsSonarVersion()&gt;org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)" />
      <edge id="5712" name="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)&gt;org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)" />
      <edge id="5713" name="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)&gt;org.sonar.core.util.HttpsTrust.createHostnameVerifier()" />
      <edge id="5714" name="org.sonar.core.util.HttpsTrust.createHostnameVerifier()&gt;org.sonar.core.util.HttpsTrust$1()" />
      <edge id="5715" name="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)&gt;org.sonar.core.util.HttpsTrust$Ssl.newFactory(javax.net.ssl.TrustManager[])" />
      <edge id="5716" name="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)&gt;org.sonar.core.util.HttpsTrust$AlwaysTrustManager()" />
      <edge id="5717" name="org.sonar.core.util.HttpsTrustTest.failOnError()&gt;org.sonar.core.util.HttpsTrust$Ssl.newFactory(javax.net.ssl.TrustManager[])" />
      <edge id="5718" name="org.sonar.core.util.HttpsTrustTest.failOnError()&gt;org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)" />
      <edge id="5719" name="org.sonar.core.util.HttpsTrustTest.singleHostnameVerifier()&gt;org.sonar.core.util.HttpsTrustTest.newHttpsConnection()" />
      <edge id="5720" name="org.sonar.core.util.HttpsTrustTest.singleHostnameVerifier()&gt;org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)" />
      <edge id="5721" name="org.sonar.core.util.HttpsTrustTest.singleSslFactory()&gt;org.sonar.core.util.HttpsTrustTest.newHttpsConnection()" />
      <edge id="5722" name="org.sonar.core.util.HttpsTrustTest.singleSslFactory()&gt;org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)" />
      <edge id="5723" name="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()&gt;org.sonar.core.util.HttpsTrust$AlwaysTrustManager()" />
      <edge id="5724" name="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()&gt;org.sonar.core.util.HttpsTrust$AlwaysTrustManager.getAcceptedIssuers()" />
      <edge id="5725" name="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()&gt;org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)" />
      <edge id="5726" name="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()&gt;org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)" />
      <edge id="5727" name="org.sonar.core.util.HttpsTrustTest.trustAllCerts()&gt;org.sonar.core.util.HttpsTrustTest.newHttpsConnection()" />
      <edge id="5728" name="org.sonar.core.util.HttpsTrustTest.trustAllCerts()&gt;org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)" />
      <edge id="5729" name="org.sonar.core.util.HttpsTrustTest.trustAllHosts()&gt;org.sonar.core.util.HttpsTrustTest.newHttpsConnection()" />
      <edge id="5730" name="org.sonar.core.util.HttpsTrustTest.trustAllHosts()&gt;org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)" />
      <edge id="5731" name="org.sonar.core.util.MultiSets$NonNullOrdering.compare(T,T)&gt;org.sonar.core.util.MultiSets$NonNullOrdering.doCompare(T,T)" />
      <edge id="5732" name="org.sonar.core.util.MultiSets$1()&gt;org.sonar.core.util.MultiSets$NonNullOrdering()" />
      <edge id="5733" name="org.sonar.core.util.MultiSets$NonNullOrdering.doCompare(T,T)&gt;org.sonar.core.util.MultiSets$1.doCompare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry)" />
      <edge id="5734" name="org.sonar.core.util.MultiSetsTest.order_with_highest_count_first()&gt;org.sonar.core.util.MultiSetsTest.add(com.google.common.collect.Multiset,java.lang.String,int)" />
      <edge id="5735" name="org.sonar.core.util.MultiSetsTest.order_with_highest_count_first()&gt;org.sonar.core.util.MultiSets.listOrderedByHighestCounts(com.google.common.collect.Multiset)" />
      <edge id="5736" name="org.sonar.core.util.NonNullInputFunction.apply(F)&gt;org.sonar.core.util.NonNullInputFunction.doApply(F)" />
      <edge id="5737" name="org.sonar.core.util.NonNullInputFunctionTest$TestFunction()&gt;org.sonar.core.util.NonNullInputFunction()" />
      <edge id="5738" name="org.sonar.core.util.NonNullInputFunction.doApply(F)&gt;org.sonar.core.util.NonNullInputFunctionTest$TestFunction.doApply(java.lang.String)" />
      <edge id="5739" name="org.sonar.core.util.NonNullInputFunctionTest.apply()&gt;org.sonar.core.util.NonNullInputFunction.apply(F)" />
      <edge id="5740" name="org.sonar.core.util.NonNullInputFunctionTest.fail_if_null_input()&gt;org.sonar.core.util.NonNullInputFunction.apply(F)" />
      <edge id="5741" name="org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)&gt;org.sonar.core.UtcDateUtils.newFormat()" />
      <edge id="5742" name="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)&gt;org.sonar.core.UtcDateUtils.newFormat()" />
      <edge id="5743" name="org.sonar.core.UtcDateUtilsTest.fail_if_bad_format()&gt;org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)" />
      <edge id="5744" name="org.sonar.core.UtcDateUtilsTest.parse_then_format()&gt;org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)" />
      <edge id="5745" name="org.sonar.core.UtcDateUtilsTest.parse_then_format()&gt;org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)" />
      <edge id="5746" name="org.sonar.jpa.session.DatabaseConnector.createEntityManager()&gt;org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManager()" />
      <edge id="5747" name="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()&gt;org.sonar.core.persistence.Database.getHibernateProperties()" />
      <edge id="5748" name="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()&gt;org.sonar.jpa.session.AbstractDatabaseConnector.logHibernateSettings(java.util.Properties)" />
      <edge id="5749" name="org.sonar.jpa.session.DatabaseConnector.getDialect()&gt;org.sonar.jpa.session.AbstractDatabaseConnector.getDialect()" />
      <edge id="5750" name="org.sonar.jpa.session.AbstractDatabaseConnector.getDialect()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="5751" name="org.sonar.jpa.session.AbstractDatabaseConnector.start()&gt;org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()" />
      <edge id="5752" name="org.sonar.jpa.session.DatabaseSessionTest()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase()" />
      <edge id="5753" name="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithMultipleResults()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5754" name="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithNoResults()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5755" name="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoCriterias()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5756" name="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoResults()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5757" name="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithOneResult()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5758" name="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithTwoResults()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5759" name="org.sonar.jpa.session.DefaultDatabaseConnector(org.sonar.core.persistence.Database)&gt;org.sonar.jpa.session.AbstractDatabaseConnector(org.sonar.core.persistence.Database)" />
      <edge id="5760" name="org.sonar.jpa.session.DatabaseConnector.getConnection()&gt;org.sonar.jpa.session.DefaultDatabaseConnector.getConnection()" />
      <edge id="5761" name="org.sonar.jpa.session.DefaultDatabaseConnector.getConnection()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="5762" name="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()&gt;org.sonar.jpa.session.CustomHibernateConnectionProvider.setDatasourceForConfig(javax.sql.DataSource)" />
      <edge id="5763" name="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="5764" name="org.sonar.jpa.session.AbstractDatabaseConnector.start()&gt;org.sonar.jpa.session.DefaultDatabaseConnector.start()" />
      <edge id="5765" name="org.sonar.jpa.session.DefaultDatabaseConnector.start()&gt;org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()" />
      <edge id="5766" name="org.sonar.jpa.session.DefaultDatabaseConnector.start()&gt;org.sonar.jpa.session.AbstractDatabaseConnector.start()" />
      <edge id="5767" name="org.sonar.jpa.session.JpaDatabaseSession.getEntity(java.lang.Class,java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5768" name="org.sonar.jpa.session.JpaDatabaseSession.getEntity(java.lang.Class,java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5769" name="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(java.lang.Class,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)" />
      <edge id="5770" name="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(java.lang.Class,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" />
      <edge id="5771" name="org.sonar.jpa.session.JpaDatabaseSession.reattach(java.lang.Class,java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5772" name="org.sonar.jpa.session.JpaDatabaseSession.reattach(java.lang.Class,java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5773" name="org.sonar.jpa.session.JpaDatabaseSession.save(T)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5774" name="org.sonar.jpa.session.JpaDatabaseSession.save(T)&gt;org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)" />
      <edge id="5775" name="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class)&gt;org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" />
      <edge id="5776" name="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" />
      <edge id="5777" name="org.sonar.jpa.session.JpaDatabaseSession.contains(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5778" name="org.sonar.jpa.session.JpaDatabaseSession.contains(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5779" name="org.sonar.jpa.session.JpaDatabaseSession.merge(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5780" name="org.sonar.jpa.session.JpaDatabaseSession.merge(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5781" name="org.sonar.jpa.session.JpaDatabaseSession.saveWithoutFlush(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5782" name="org.sonar.jpa.session.JpaDatabaseSession.saveWithoutFlush(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)" />
      <edge id="5783" name="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()&gt;org.sonar.jpa.session.DatabaseConnector.createEntityManager()" />
      <edge id="5784" name="org.sonar.jpa.session.JpaDatabaseSession.createNativeQuery(java.lang.String)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5785" name="org.sonar.jpa.session.JpaDatabaseSession.createNativeQuery(java.lang.String)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5786" name="org.sonar.jpa.session.JpaDatabaseSession.createQuery(java.lang.String)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5787" name="org.sonar.jpa.session.JpaDatabaseSession.createQuery(java.lang.String)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5788" name="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5789" name="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.buildCriteriasHQL(java.lang.StringBuilder,java.util.Map)" />
      <edge id="5790" name="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5791" name="org.sonar.jpa.session.JpaDatabaseSession.commit()&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5792" name="org.sonar.jpa.session.JpaDatabaseSession.commitAndClose()&gt;org.sonar.jpa.session.JpaDatabaseSession.commit()" />
      <edge id="5793" name="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5794" name="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)&gt;org.sonar.jpa.session.JpaDatabaseSession.commit()" />
      <edge id="5795" name="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5796" name="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5797" name="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.commit()" />
      <edge id="5798" name="org.sonar.jpa.session.JpaDatabaseSession.removeWithoutFlush(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5799" name="org.sonar.jpa.session.JpaDatabaseSession.removeWithoutFlush(java.lang.Object)&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5800" name="org.sonar.jpa.session.JpaDatabaseSession.rollback()&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5801" name="org.sonar.jpa.session.JpaDatabaseSession.save(java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" />
      <edge id="5802" name="org.sonar.jpa.session.JpaDatabaseSession.save(java.lang.Object[])&gt;org.sonar.jpa.session.JpaDatabaseSession.save(T)" />
      <edge id="5803" name="org.sonar.jpa.session.JpaDatabaseSession.start()&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5804" name="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()&gt;org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" />
      <edge id="5805" name="org.sonar.jpa.session.JpaDatabaseSession.stop()&gt;org.sonar.jpa.session.JpaDatabaseSession.commitAndClose()" />
      <edge id="5806" name="org.sonar.jpa.session.JpaDatabaseSessionTest.setUp()&gt;org.sonar.jpa.session.JpaDatabaseSession(org.sonar.jpa.session.DatabaseConnector)" />
      <edge id="5807" name="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldBuildCriteriasHQL()&gt;org.sonar.jpa.session.JpaDatabaseSession.buildCriteriasHQL(java.lang.StringBuilder,java.util.Map)" />
      <edge id="5808" name="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnDefaultValue()&gt;org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)" />
      <edge id="5809" name="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnSingleResult()&gt;org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)" />
      <edge id="5810" name="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldThrowNonUniqueResultException()&gt;org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)" />
      <edge id="5811" name="org.sonar.jpa.test.AbstractDbUnitTestCase.getHQLCount(java.lang.Class)&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()" />
      <edge id="5812" name="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()&gt;org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()" />
      <edge id="5813" name="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5814" name="org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5815" name="org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)" />
      <edge id="5816" name="org.sonar.jpa.session.DatabaseSessionFactory.getSession()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase$1.getSession()" />
      <edge id="5817" name="org.sonar.jpa.session.DatabaseSessionFactory.clear()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase$1.clear()" />
      <edge id="5818" name="org.sonar.jpa.test.AbstractDbUnitTestCase.getSessionFactory()&gt;org.sonar.jpa.test.AbstractDbUnitTestCase$1()" />
      <edge id="5819" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()" />
      <edge id="5820" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)" />
      <edge id="5821" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5822" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)" />
      <edge id="5823" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" />
      <edge id="5824" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()" />
      <edge id="5825" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)" />
      <edge id="5826" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5827" name="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)" />
      <edge id="5828" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)" />
      <edge id="5829" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()" />
      <edge id="5830" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5831" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)" />
      <edge id="5832" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])" />
      <edge id="5833" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" />
      <edge id="5834" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="5835" name="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])&gt;org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)" />
      <edge id="5836" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.H2Database(java.lang.String,boolean)" />
      <edge id="5837" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)" />
      <edge id="5838" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.Database.getDialect()" />
      <edge id="5839" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)" />
      <edge id="5840" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.config.Logback()" />
      <edge id="5841" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.cluster.NullQueue()" />
      <edge id="5842" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.MyBatis.start()" />
      <edge id="5843" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.MyBatis.openSession(boolean)" />
      <edge id="5844" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.core.persistence.SchemaMigrationMapper.insert(java.lang.String)" />
      <edge id="5845" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.jpa.session.DefaultDatabaseConnector(org.sonar.core.persistence.Database)" />
      <edge id="5846" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()&gt;org.sonar.jpa.session.DefaultDatabaseConnector.start()" />
      <edge id="5847" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()&gt;org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" />
      <edge id="5848" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()&gt;org.sonar.core.persistence.Database.getDataSource()" />
      <edge id="5849" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()&gt;org.sonar.jpa.session.JpaDatabaseSession(org.sonar.jpa.session.DatabaseConnector)" />
      <edge id="5850" name="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()&gt;org.sonar.jpa.session.JpaDatabaseSession.start()" />
      <edge id="5851" name="org.sonar.jpa.test.AbstractDbUnitTestCase.stopDbUnit()&gt;org.sonar.jpa.session.JpaDatabaseSession.rollback()" />
    </graph-mapping>
    <weights learning-time="191">
      <k id="0">
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.875</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.984375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.3854167</weight>
        <weight id="417">0.8486328</weight>
        <weight id="421">0.8229167</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.8229167</weight>
        <weight id="441">0.4010417</weight>
        <weight id="455">0.31956643</weight>
        <weight id="458">0.8229167</weight>
        <weight id="463">0.66796875</weight>
        <weight id="468">0.39583334</weight>
        <weight id="473">0.8229167</weight>
        <weight id="478">0.055555556</weight>
        <weight id="483">0.39583334</weight>
        <weight id="488">0.8541667</weight>
        <weight id="493">0.561632</weight>
        <weight id="501">0.8845486</weight>
        <weight id="506">0.9140625</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="967">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1242">0.875</weight>
        <weight id="1245">0.875</weight>
        <weight id="1252">0.5</weight>
        <weight id="1254">0.5</weight>
        <weight id="1255">0.75</weight>
        <weight id="1263">0.875</weight>
        <weight id="1265">0.875</weight>
        <weight id="1287">0.5</weight>
        <weight id="1292">0.5</weight>
        <weight id="1309">0.5</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.5</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.875</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.984375</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.5</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.25</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.25</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.16666667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.875</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.5</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.16666667</weight>
        <weight id="2283">0.5</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.5</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.16666667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.5</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.9369297</weight>
        <weight id="3712">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.90625</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4412">0.25</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.8691387</weight>
        <weight id="4591">0.953123</weight>
        <weight id="4603">0.905262</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.98435974</weight>
        <weight id="4632">0.98435974</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.8085022</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.734375</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.96875</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
      </k>
      <k id="1">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="143">0.875</weight>
        <weight id="144">0.984375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.5</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.875</weight>
        <weight id="218">0.75</weight>
        <weight id="219">0.5</weight>
        <weight id="228">0.5</weight>
        <weight id="229">0.5</weight>
        <weight id="234">0.75</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.4088542</weight>
        <weight id="417">0.92648315</weight>
        <weight id="421">0.9192709</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.9192709</weight>
        <weight id="441">0.41276044</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9557292</weight>
        <weight id="463">0.6699219</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9114584</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9309896</weight>
        <weight id="493">0.5655382</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.97113717</weight>
        <weight id="506">0.95703125</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1061">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.16666667</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.5</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7109375</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.5625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.5625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.5</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.5</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4459">0.875</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.5</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.5</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.8691387</weight>
        <weight id="4591">0.953123</weight>
        <weight id="4603">0.90477943</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.9765549</weight>
        <weight id="4632">0.9765549</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80659485</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.734375</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.96875</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.5</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.5</weight>
        <weight id="5012">0.5</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.5</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.5</weight>
        <weight id="5067">0.5</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="2">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.875</weight>
        <weight id="131">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.96875</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41471356</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35266507</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67089844</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4375</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9785156</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.65625</weight>
        <weight id="1380">0.65625</weight>
        <weight id="1384">0.65625</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.65625</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.33333334</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.33333334</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.33333334</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.33333334</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.33333334</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.33333334</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.65625</weight>
        <weight id="1513">0.65625</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.25</weight>
        <weight id="1656">0.875</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.5</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.984375</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.5</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.96875</weight>
        <weight id="4501">0.75</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.86914015</weight>
        <weight id="4591">0.9531245</weight>
        <weight id="4603">0.80955887</weight>
        <weight id="4613">0.7421875</weight>
        <weight id="4618">0.9882803</weight>
        <weight id="4632">0.9882803</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80955887</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.7421875</weight>
        <weight id="4656">0.7421875</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.4375</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.984375</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.5</weight>
        <weight id="5011">0.5</weight>
        <weight id="5012">0.5</weight>
        <weight id="5019">0.5</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.5</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.5</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.5</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.5</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.5</weight>
        <weight id="5319">0.5</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.5</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.5</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.5</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9980469</weight>
        <weight id="5468">0.5</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9980469</weight>
        <weight id="5670">0.5</weight>
        <weight id="5674">0.75</weight>
        <weight id="5680">0.5</weight>
        <weight id="5685">0.5</weight>
        <weight id="5686">0.75</weight>
        <weight id="5687">0.5</weight>
        <weight id="5689">0.5</weight>
        <weight id="5691">0.5</weight>
        <weight id="5693">0.5</weight>
        <weight id="5695">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.5</weight>
        <weight id="5706">0.5</weight>
        <weight id="5708">0.5</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.75</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="3">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.984375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.6510417</weight>
        <weight id="417">0.9787191</weight>
        <weight id="421">0.9635417</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.9635417</weight>
        <weight id="441">0.6588542</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.6003925</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9739583</weight>
        <weight id="463">0.7005209</weight>
        <weight id="468">0.5208333</weight>
        <weight id="473">0.9479166</weight>
        <weight id="478">0.5</weight>
        <weight id="483">0.4375</weight>
        <weight id="488">0.9670139</weight>
        <weight id="493">0.6510417</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9817709</weight>
        <weight id="506">0.9739584</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.65625</weight>
        <weight id="1380">0.65625</weight>
        <weight id="1384">0.65625</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.65625</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.33333334</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.33333334</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.33333334</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.33333334</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.33333334</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.33333334</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.65625</weight>
        <weight id="1513">0.65625</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.5</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2034">0.75</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.5</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.5</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.75</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.5</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.5</weight>
        <weight id="2283">0.5</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.5</weight>
        <weight id="2293">0.5</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.5</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4584">0.8710899</weight>
        <weight id="4591">0.96874523</weight>
        <weight id="4603">0.90477943</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.9765549</weight>
        <weight id="4632">0.9765549</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80659485</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.734375</weight>
        <weight id="4659">0.90625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.90625</weight>
        <weight id="4671">0.953125</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.96875</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.5</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.5</weight>
        <weight id="5326">0.5</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="4">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.875</weight>
        <weight id="144">0.984375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="416">0.484375</weight>
        <weight id="417">0.93640137</weight>
        <weight id="421">0.921875</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.921875</weight>
        <weight id="441">0.4921875</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.37204742</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.953125</weight>
        <weight id="463">0.6731771</weight>
        <weight id="468">0.5625</weight>
        <weight id="473">0.90625</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.375</weight>
        <weight id="488">0.9314236</weight>
        <weight id="493">0.59548616</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9678819</weight>
        <weight id="506">0.953125</weight>
        <weight id="687">0.75</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.5</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1330">0.75</weight>
        <weight id="1370">0.75</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1443">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.5</weight>
        <weight id="1658">0.5</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1732">0.984375</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.5</weight>
        <weight id="2030">0.75</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7109375</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.5625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.5625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.5</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.5</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.875</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.8632734</weight>
        <weight id="4591">0.9062338</weight>
        <weight id="4603">0.81102943</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.9765549</weight>
        <weight id="4632">0.9765549</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.61909485</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4650">0.7421875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.734375</weight>
        <weight id="4659">0.78125</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.875</weight>
        <weight id="4671">0.921875</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.96875</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.75</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.75</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="5">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.875</weight>
        <weight id="144">0.96875</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.9375</weight>
        <weight id="218">0.9375</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.75</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.5</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41471356</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67513025</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9785156</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.5</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9375</weight>
        <weight id="1245">0.9375</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.984375</weight>
        <weight id="1254">0.984375</weight>
        <weight id="1255">0.9375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9375</weight>
        <weight id="1265">0.9375</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.75</weight>
        <weight id="1292">0.75</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.75</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.25</weight>
        <weight id="1656">0.875</weight>
        <weight id="1657">0.5</weight>
        <weight id="1658">0.5</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.5</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3658">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3694">0.96313477</weight>
        <weight id="3720">0.5</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.25</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.90625</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.5</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.75</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.8125</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4195">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.875</weight>
        <weight id="4460">0.96875</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.86914015</weight>
        <weight id="4591">0.9531245</weight>
        <weight id="4603">0.90551615</weight>
        <weight id="4613">0.7421875</weight>
        <weight id="4618">0.9882803</weight>
        <weight id="4632">0.9882803</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80955887</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.87109375</weight>
        <weight id="4653">0.7421875</weight>
        <weight id="4656">0.7421875</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.9941406</weight>
        <weight id="4677">0.984375</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.5</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5291">0.75</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.75</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.75</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="6">
        <weight id="13">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.875</weight>
        <weight id="129">0.875</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.984375</weight>
        <weight id="177">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.5</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.875</weight>
        <weight id="218">0.75</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.5</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.75</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41276044</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67089844</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9785156</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.5</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.9674454</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9375</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.90625</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.75</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.75</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.86914015</weight>
        <weight id="4591">0.9531245</weight>
        <weight id="4603">0.90551615</weight>
        <weight id="4613">0.7421875</weight>
        <weight id="4618">0.9882803</weight>
        <weight id="4632">0.9882803</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80955887</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.87109375</weight>
        <weight id="4653">0.7421875</weight>
        <weight id="4656">0.7421875</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.9941406</weight>
        <weight id="4677">0.984375</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.5</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.5</weight>
        <weight id="5270">0.75</weight>
        <weight id="5277">0.5</weight>
        <weight id="5284">0.5</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.5</weight>
        <weight id="5315">0.5</weight>
        <weight id="5319">0.5</weight>
        <weight id="5320">0.5</weight>
        <weight id="5326">0.5</weight>
        <weight id="5330">0.5</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5345">0.5</weight>
        <weight id="5351">0.5</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9980469</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="7">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.5</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.9375</weight>
        <weight id="129">0.9375</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.9375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.75</weight>
        <weight id="407">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41471356</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67089844</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9785156</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.875</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.5</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1850">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.5</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2214">0.5</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2270">0.75</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2289">0.625</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.5</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3465">0.75</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.25</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.9375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.25</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.72656035</weight>
        <weight id="4591">0.8124838</weight>
        <weight id="4603">0.90551186</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.9882736</weight>
        <weight id="4632">0.9882736</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.80952454</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.734375</weight>
        <weight id="4659">0.78125</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.875</weight>
        <weight id="4671">0.921875</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.9765625</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.5</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.5</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.5</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.5</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.5</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.5</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.5</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.5</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.5</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.9921875</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.875</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="8">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.5</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.875</weight>
        <weight id="129">0.875</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.875</weight>
        <weight id="144">0.9375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.5</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.75</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41471356</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67513025</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9778646</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="770">0.5</weight>
        <weight id="776">0.5</weight>
        <weight id="780">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1662">0.16666667</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1701">0.16666667</weight>
        <weight id="1706">0.5833333</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.984375</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1776">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.4161784</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1973">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2001">0.875</weight>
        <weight id="2002">0.75</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.875</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.5</weight>
        <weight id="2050">0.5</weight>
        <weight id="2054">0.75</weight>
        <weight id="2058">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.5</weight>
        <weight id="2217">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.9375</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2699">0.75</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.7402344</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.65625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.65625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2911">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2919">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2927">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2935">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2940">0.125</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.5</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.9995117</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3738">0.875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3752">0.875</weight>
        <weight id="3766">0.5</weight>
        <weight id="3770">0.875</weight>
        <weight id="3776">0.5</weight>
        <weight id="3780">0.75</weight>
        <weight id="3796">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3809">0.75</weight>
        <weight id="3834">0.5</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3918">0.5</weight>
        <weight id="3922">0.5</weight>
        <weight id="3947">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3958">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3968">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3979">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4104">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.5</weight>
        <weight id="4368">0.5</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.875</weight>
        <weight id="4460">0.9375</weight>
        <weight id="4501">0.5</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.5</weight>
        <weight id="4576">0.5</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.86914015</weight>
        <weight id="4591">0.9531245</weight>
        <weight id="4603">0.9970627</weight>
        <weight id="4613">0.984375</weight>
        <weight id="4618">0.9882803</weight>
        <weight id="4632">0.9882803</weight>
        <weight id="4637">0.9882202</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.9921875</weight>
        <weight id="4653">0.984375</weight>
        <weight id="4656">0.7421875</weight>
        <weight id="4659">0.890625</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.890625</weight>
        <weight id="4671">0.9609375</weight>
        <weight id="4674">0.9921875</weight>
        <weight id="4677">0.984375</weight>
        <weight id="4737">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5000">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5004">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5104">0.9375</weight>
        <weight id="5120">0.5</weight>
        <weight id="5141">0.5</weight>
        <weight id="5143">0.5</weight>
        <weight id="5145">0.5</weight>
        <weight id="5148">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.5</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.5</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.5</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.5</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.5</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.5</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.5</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.9921875</weight>
        <weight id="5657">0.5</weight>
        <weight id="5668">0.9980469</weight>
        <weight id="5670">0.5</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.96875</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.5</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.5</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.5</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.5</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.5</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.5</weight>
        <weight id="5696">0.5</weight>
        <weight id="5699">0.5</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.5</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.5</weight>
        <weight id="5708">0.5</weight>
        <weight id="5710">0.5</weight>
        <weight id="5711">0.75</weight>
        <weight id="5810">0.5</weight>
      </k>
      <k id="9">
        <weight id="13">0.5</weight>
        <weight id="51">0.5</weight>
        <weight id="64">0.5</weight>
        <weight id="107">0.75</weight>
        <weight id="111">0.25</weight>
        <weight id="117">0.25</weight>
        <weight id="127">0.5</weight>
        <weight id="128">0.875</weight>
        <weight id="129">0.875</weight>
        <weight id="131">0.5</weight>
        <weight id="135">0.5</weight>
        <weight id="142">0.5</weight>
        <weight id="143">0.9375</weight>
        <weight id="144">0.984375</weight>
        <weight id="162">0.5</weight>
        <weight id="165">0.5</weight>
        <weight id="177">0.5</weight>
        <weight id="181">0.5</weight>
        <weight id="191">0.5</weight>
        <weight id="203">0.75</weight>
        <weight id="206">0.5</weight>
        <weight id="217">0.96875</weight>
        <weight id="218">0.9375</weight>
        <weight id="219">0.5</weight>
        <weight id="227">0.5</weight>
        <weight id="228">0.75</weight>
        <weight id="229">0.5</weight>
        <weight id="233">0.5</weight>
        <weight id="234">0.875</weight>
        <weight id="235">0.5</weight>
        <weight id="243">0.875</weight>
        <weight id="246">0.5</weight>
        <weight id="280">0.5</weight>
        <weight id="287">0.5</weight>
        <weight id="357">0.5</weight>
        <weight id="395">0.5</weight>
        <weight id="407">0.5</weight>
        <weight id="413">0.5</weight>
        <weight id="414">0.5</weight>
        <weight id="416">0.41276044</weight>
        <weight id="417">0.96339166</weight>
        <weight id="421">0.95963544</weight>
        <weight id="435">0.5</weight>
        <weight id="437">0.5</weight>
        <weight id="438">0.5</weight>
        <weight id="440">0.95963544</weight>
        <weight id="441">0.41471356</weight>
        <weight id="442">0.5</weight>
        <weight id="454">0.9980469</weight>
        <weight id="455">0.35167974</weight>
        <weight id="457">0.9980469</weight>
        <weight id="458">0.9778646</weight>
        <weight id="463">0.67089844</weight>
        <weight id="468">0.5364584</weight>
        <weight id="473">0.9557292</weight>
        <weight id="478">0.30555555</weight>
        <weight id="483">0.4479167</weight>
        <weight id="488">0.9654948</weight>
        <weight id="493">0.56749135</weight>
        <weight id="498">0.5</weight>
        <weight id="501">0.9855686</weight>
        <weight id="506">0.9785156</weight>
        <weight id="598">0.5</weight>
        <weight id="608">0.5</weight>
        <weight id="687">0.75</weight>
        <weight id="698">0.5</weight>
        <weight id="718">0.5</weight>
        <weight id="728">0.5</weight>
        <weight id="738">0.5</weight>
        <weight id="812">0.5</weight>
        <weight id="822">0.5</weight>
        <weight id="862">0.5</weight>
        <weight id="907">0.75</weight>
        <weight id="908">0.75</weight>
        <weight id="941">0.9375</weight>
        <weight id="942">0.9375</weight>
        <weight id="967">0.5</weight>
        <weight id="982">0.5</weight>
        <weight id="994">0.75</weight>
        <weight id="1049">0.5</weight>
        <weight id="1061">0.5</weight>
        <weight id="1062">0.5</weight>
        <weight id="1069">0.5</weight>
        <weight id="1122">0.5</weight>
        <weight id="1128">0.5</weight>
        <weight id="1140">0.5</weight>
        <weight id="1169">0.5</weight>
        <weight id="1222">0.5</weight>
        <weight id="1242">0.9921875</weight>
        <weight id="1245">0.9921875</weight>
        <weight id="1246">0.984375</weight>
        <weight id="1252">0.9921875</weight>
        <weight id="1254">0.9921875</weight>
        <weight id="1255">0.984375</weight>
        <weight id="1258">0.984375</weight>
        <weight id="1263">0.9921875</weight>
        <weight id="1265">0.9921875</weight>
        <weight id="1268">0.75</weight>
        <weight id="1269">0.75</weight>
        <weight id="1278">0.9375</weight>
        <weight id="1279">0.9375</weight>
        <weight id="1287">0.875</weight>
        <weight id="1292">0.875</weight>
        <weight id="1299">0.75</weight>
        <weight id="1309">0.875</weight>
        <weight id="1319">0.75</weight>
        <weight id="1324">0.875</weight>
        <weight id="1328">0.5</weight>
        <weight id="1330">0.75</weight>
        <weight id="1332">0.875</weight>
        <weight id="1344">0.5</weight>
        <weight id="1359">0.5</weight>
        <weight id="1370">0.875</weight>
        <weight id="1379">0.6665039</weight>
        <weight id="1380">0.6665039</weight>
        <weight id="1384">0.6665039</weight>
        <weight id="1423">0.9999962</weight>
        <weight id="1430">0.6665039</weight>
        <weight id="1436">0.9999962</weight>
        <weight id="1442">0.5</weight>
        <weight id="1443">0.5</weight>
        <weight id="1444">0.5</weight>
        <weight id="1445">0.5</weight>
        <weight id="1446">0.5</weight>
        <weight id="1447">0.5</weight>
        <weight id="1448">0.5</weight>
        <weight id="1449">0.5</weight>
        <weight id="1450">0.5</weight>
        <weight id="1452">0.5</weight>
        <weight id="1454">0.5</weight>
        <weight id="1457">0.5</weight>
        <weight id="1460">0.5</weight>
        <weight id="1462">0.5</weight>
        <weight id="1465">0.5</weight>
        <weight id="1468">0.5</weight>
        <weight id="1471">0.5</weight>
        <weight id="1474">0.5</weight>
        <weight id="1477">0.5</weight>
        <weight id="1479">0.5</weight>
        <weight id="1480">0.5</weight>
        <weight id="1481">0.5</weight>
        <weight id="1482">0.5</weight>
        <weight id="1485">0.5</weight>
        <weight id="1490">0.5</weight>
        <weight id="1493">0.5</weight>
        <weight id="1510">0.6665039</weight>
        <weight id="1513">0.6665039</weight>
        <weight id="1560">0.9999995</weight>
        <weight id="1564">0.75</weight>
        <weight id="1599">0.5</weight>
        <weight id="1651">0.375</weight>
        <weight id="1656">0.9375</weight>
        <weight id="1657">0.75</weight>
        <weight id="1658">0.75</weight>
        <weight id="1659">0.5</weight>
        <weight id="1660">0.5</weight>
        <weight id="1666">0.75</weight>
        <weight id="1681">0.16666667</weight>
        <weight id="1706">0.5</weight>
        <weight id="1710">0.5</weight>
        <weight id="1712">0.5</weight>
        <weight id="1728">0.75</weight>
        <weight id="1730">0.5</weight>
        <weight id="1732">0.96875</weight>
        <weight id="1764">0.5</weight>
        <weight id="1767">0.5</weight>
        <weight id="1770">0.5</weight>
        <weight id="1772">0.5</weight>
        <weight id="1778">0.5</weight>
        <weight id="1787">0.5</weight>
        <weight id="1789">0.5</weight>
        <weight id="1801">0.5</weight>
        <weight id="1804">0.5</weight>
        <weight id="1817">0.5</weight>
        <weight id="1834">0.5</weight>
        <weight id="1837">0.75</weight>
        <weight id="1841">0.25</weight>
        <weight id="1849">0.5</weight>
        <weight id="1850">0.5</weight>
        <weight id="1858">0.5</weight>
        <weight id="1861">0.5</weight>
        <weight id="1864">0.5</weight>
        <weight id="1869">0.5</weight>
        <weight id="1870">0.5</weight>
        <weight id="1876">0.5</weight>
        <weight id="1877">0.5</weight>
        <weight id="1906">0.5</weight>
        <weight id="1915">0.5</weight>
        <weight id="1921">0.5</weight>
        <weight id="1926">0.5</weight>
        <weight id="1948">0.41569012</weight>
        <weight id="1960">0.375</weight>
        <weight id="1968">0.5</weight>
        <weight id="1984">0.5</weight>
        <weight id="2004">0.5</weight>
        <weight id="2011">0.5</weight>
        <weight id="2013">0.5</weight>
        <weight id="2024">0.5</weight>
        <weight id="2028">0.5</weight>
        <weight id="2029">0.625</weight>
        <weight id="2030">0.5</weight>
        <weight id="2032">0.5</weight>
        <weight id="2034">0.75</weight>
        <weight id="2036">0.5</weight>
        <weight id="2044">0.75</weight>
        <weight id="2054">0.5</weight>
        <weight id="2062">0.5</weight>
        <weight id="2063">0.5</weight>
        <weight id="2064">0.5</weight>
        <weight id="2076">1.0</weight>
        <weight id="2171">0.5</weight>
        <weight id="2204">0.5</weight>
        <weight id="2211">0.25</weight>
        <weight id="2214">0.75</weight>
        <weight id="2217">0.5</weight>
        <weight id="2249">0.5</weight>
        <weight id="2253">0.4166667</weight>
        <weight id="2257">0.5</weight>
        <weight id="2262">0.5</weight>
        <weight id="2263">0.875</weight>
        <weight id="2269">0.5</weight>
        <weight id="2270">0.75</weight>
        <weight id="2278">0.5</weight>
        <weight id="2279">0.4166667</weight>
        <weight id="2283">0.75</weight>
        <weight id="2287">0.5</weight>
        <weight id="2289">0.625</weight>
        <weight id="2293">0.5</weight>
        <weight id="2297">0.16666667</weight>
        <weight id="2300">0.5</weight>
        <weight id="2303">0.4166667</weight>
        <weight id="2306">0.5</weight>
        <weight id="2332">0.5</weight>
        <weight id="2340">0.5</weight>
        <weight id="2345">0.5</weight>
        <weight id="2354">0.5</weight>
        <weight id="2363">0.5</weight>
        <weight id="2369">0.5</weight>
        <weight id="2376">0.5</weight>
        <weight id="2382">0.5</weight>
        <weight id="2432">0.5</weight>
        <weight id="2481">0.5</weight>
        <weight id="2504">0.5</weight>
        <weight id="2654">0.5</weight>
        <weight id="2699">0.5</weight>
        <weight id="2856">0.5</weight>
        <weight id="2860">0.875</weight>
        <weight id="2862">0.703125</weight>
        <weight id="2873">0.9375</weight>
        <weight id="2891">0.5625</weight>
        <weight id="2897">0.5</weight>
        <weight id="2900">0.5625</weight>
        <weight id="2906">0.5</weight>
        <weight id="2909">0.5</weight>
        <weight id="2915">0.5</weight>
        <weight id="2921">0.5</weight>
        <weight id="2923">0.5</weight>
        <weight id="2929">0.5</weight>
        <weight id="2931">0.5</weight>
        <weight id="2937">0.5</weight>
        <weight id="2961">0.5</weight>
        <weight id="2982">0.5</weight>
        <weight id="2985">0.5</weight>
        <weight id="3199">0.5</weight>
        <weight id="3202">0.5</weight>
        <weight id="3235">0.5</weight>
        <weight id="3362">0.75</weight>
        <weight id="3369">0.5</weight>
        <weight id="3398">0.5</weight>
        <weight id="3460">0.5</weight>
        <weight id="3465">0.5</weight>
        <weight id="3485">0.5</weight>
        <weight id="3492">0.5</weight>
        <weight id="3494">0.5</weight>
        <weight id="3503">0.5</weight>
        <weight id="3511">0.5</weight>
        <weight id="3535">0.5</weight>
        <weight id="3539">0.5</weight>
        <weight id="3542">0.5</weight>
        <weight id="3548">0.5</weight>
        <weight id="3602">0.5</weight>
        <weight id="3611">0.5</weight>
        <weight id="3619">0.5</weight>
        <weight id="3628">0.5</weight>
        <weight id="3650">0.25</weight>
        <weight id="3658">0.25</weight>
        <weight id="3661">0.25</weight>
        <weight id="3664">0.25</weight>
        <weight id="3680">0.5</weight>
        <weight id="3686">0.5</weight>
        <weight id="3694">0.96846485</weight>
        <weight id="3712">0.5</weight>
        <weight id="3720">0.5</weight>
        <weight id="3734">0.9921875</weight>
        <weight id="3736">0.484375</weight>
        <weight id="3738">0.9921875</weight>
        <weight id="3740">0.5</weight>
        <weight id="3744">0.9375</weight>
        <weight id="3752">0.875</weight>
        <weight id="3755">0.875</weight>
        <weight id="3757">0.75</weight>
        <weight id="3766">0.5</weight>
        <weight id="3767">0.5</weight>
        <weight id="3770">0.953125</weight>
        <weight id="3771">0.5</weight>
        <weight id="3776">0.625</weight>
        <weight id="3777">0.5</weight>
        <weight id="3780">0.875</weight>
        <weight id="3782">0.5</weight>
        <weight id="3788">0.5</weight>
        <weight id="3796">0.5</weight>
        <weight id="3798">0.5</weight>
        <weight id="3801">0.5</weight>
        <weight id="3802">0.5</weight>
        <weight id="3805">0.5</weight>
        <weight id="3806">0.5</weight>
        <weight id="3809">0.875</weight>
        <weight id="3810">0.5</weight>
        <weight id="3834">0.75</weight>
        <weight id="3883">0.5</weight>
        <weight id="3891">0.5</weight>
        <weight id="3949">0.5</weight>
        <weight id="3965">0.5</weight>
        <weight id="3972">0.5</weight>
        <weight id="3976">0.5</weight>
        <weight id="3991">0.5</weight>
        <weight id="4001">0.5</weight>
        <weight id="4005">0.5</weight>
        <weight id="4022">0.5</weight>
        <weight id="4036">0.75</weight>
        <weight id="4065">0.5</weight>
        <weight id="4101">0.25</weight>
        <weight id="4189">0.5</weight>
        <weight id="4195">0.5</weight>
        <weight id="4208">0.5</weight>
        <weight id="4212">0.5</weight>
        <weight id="4216">0.5</weight>
        <weight id="4218">0.5</weight>
        <weight id="4224">0.5</weight>
        <weight id="4226">0.5</weight>
        <weight id="4242">0.5</weight>
        <weight id="4248">0.5</weight>
        <weight id="4263">0.5</weight>
        <weight id="4269">0.5</weight>
        <weight id="4270">0.5</weight>
        <weight id="4276">0.5</weight>
        <weight id="4284">0.5</weight>
        <weight id="4285">0.5</weight>
        <weight id="4290">0.5</weight>
        <weight id="4294">0.5</weight>
        <weight id="4297">0.5</weight>
        <weight id="4307">0.5</weight>
        <weight id="4318">0.625</weight>
        <weight id="4320">0.25</weight>
        <weight id="4333">0.25</weight>
        <weight id="4345">0.25</weight>
        <weight id="4354">0.25</weight>
        <weight id="4368">0.75</weight>
        <weight id="4394">0.5</weight>
        <weight id="4398">0.5</weight>
        <weight id="4404">0.5</weight>
        <weight id="4412">0.25</weight>
        <weight id="4421">0.5</weight>
        <weight id="4424">0.5</weight>
        <weight id="4427">0.5</weight>
        <weight id="4458">0.5</weight>
        <weight id="4459">0.9375</weight>
        <weight id="4460">0.984375</weight>
        <weight id="4501">0.75</weight>
        <weight id="4506">0.5</weight>
        <weight id="4524">0.75</weight>
        <weight id="4547">0.25</weight>
        <weight id="4570">0.5</weight>
        <weight id="4572">0.25</weight>
        <weight id="4576">0.625</weight>
        <weight id="4580">0.5</weight>
        <weight id="4584">0.96874523</weight>
        <weight id="4591">0.96874523</weight>
        <weight id="4603">0.905262</weight>
        <weight id="4613">0.734375</weight>
        <weight id="4618">0.98435974</weight>
        <weight id="4632">0.98435974</weight>
        <weight id="4635">0.46875</weight>
        <weight id="4637">0.8085022</weight>
        <weight id="4641">0.99609375</weight>
        <weight id="4642">0.99609375</weight>
        <weight id="4650">0.8671875</weight>
        <weight id="4653">0.734375</weight>
        <weight id="4656">0.96875</weight>
        <weight id="4659">0.8125</weight>
        <weight id="4662">0.5</weight>
        <weight id="4668">0.625</weight>
        <weight id="4671">0.8125</weight>
        <weight id="4674">0.98828125</weight>
        <weight id="4677">0.96875</weight>
        <weight id="4682">0.25</weight>
        <weight id="4691">0.25</weight>
        <weight id="4693">0.46875</weight>
        <weight id="4700">0.46875</weight>
        <weight id="4724">0.25</weight>
        <weight id="4727">0.25</weight>
        <weight id="4730">0.25</weight>
        <weight id="4732">0.25</weight>
        <weight id="4734">0.25</weight>
        <weight id="4737">0.25</weight>
        <weight id="4739">0.25</weight>
        <weight id="4764">0.5</weight>
        <weight id="4829">0.5</weight>
        <weight id="4872">0.5</weight>
        <weight id="4876">0.5</weight>
        <weight id="4888">0.5</weight>
        <weight id="4889">0.5</weight>
        <weight id="4935">0.5</weight>
        <weight id="4936">0.5</weight>
        <weight id="4938">0.5</weight>
        <weight id="4941">0.5</weight>
        <weight id="4999">0.5</weight>
        <weight id="5003">0.5</weight>
        <weight id="5007">0.75</weight>
        <weight id="5008">0.25</weight>
        <weight id="5009">0.25</weight>
        <weight id="5011">0.75</weight>
        <weight id="5012">0.75</weight>
        <weight id="5018">0.25</weight>
        <weight id="5019">0.75</weight>
        <weight id="5020">0.25</weight>
        <weight id="5035">0.75</weight>
        <weight id="5039">0.5</weight>
        <weight id="5067">0.75</weight>
        <weight id="5089">0.5</weight>
        <weight id="5120">0.5</weight>
        <weight id="5194">0.5</weight>
        <weight id="5201">0.5</weight>
        <weight id="5209">0.5</weight>
        <weight id="5214">0.5</weight>
        <weight id="5233">0.9921875</weight>
        <weight id="5235">0.99609375</weight>
        <weight id="5249">0.5</weight>
        <weight id="5251">0.5</weight>
        <weight id="5255">0.75</weight>
        <weight id="5263">0.75</weight>
        <weight id="5265">0.5</weight>
        <weight id="5267">0.75</weight>
        <weight id="5270">0.75</weight>
        <weight id="5273">0.5</weight>
        <weight id="5277">0.75</weight>
        <weight id="5280">0.5</weight>
        <weight id="5284">0.75</weight>
        <weight id="5287">0.25</weight>
        <weight id="5291">0.75</weight>
        <weight id="5293">0.25</weight>
        <weight id="5297">0.75</weight>
        <weight id="5302">0.75</weight>
        <weight id="5303">0.5</weight>
        <weight id="5305">0.25</weight>
        <weight id="5309">0.75</weight>
        <weight id="5311">0.75</weight>
        <weight id="5315">0.75</weight>
        <weight id="5319">0.75</weight>
        <weight id="5320">0.75</weight>
        <weight id="5326">0.75</weight>
        <weight id="5330">0.75</weight>
        <weight id="5332">0.25</weight>
        <weight id="5336">0.75</weight>
        <weight id="5342">0.5</weight>
        <weight id="5345">0.75</weight>
        <weight id="5348">0.5</weight>
        <weight id="5351">0.75</weight>
        <weight id="5354">0.25</weight>
        <weight id="5357">0.75</weight>
        <weight id="5366">0.5</weight>
        <weight id="5376">0.5</weight>
        <weight id="5386">0.9999962</weight>
        <weight id="5468">0.75</weight>
        <weight id="5472">0.25</weight>
        <weight id="5520">0.5</weight>
        <weight id="5530">0.9375</weight>
        <weight id="5547">0.5</weight>
        <weight id="5577">0.5</weight>
        <weight id="5585">0.5</weight>
        <weight id="5591">0.5</weight>
        <weight id="5615">0.5</weight>
        <weight id="5626">0.5</weight>
        <weight id="5647">0.99993896</weight>
        <weight id="5668">0.9999962</weight>
        <weight id="5672">0.5</weight>
        <weight id="5674">0.875</weight>
        <weight id="5675">0.5</weight>
        <weight id="5680">0.9375</weight>
        <weight id="5683">0.75</weight>
        <weight id="5685">0.75</weight>
        <weight id="5686">0.875</weight>
        <weight id="5687">0.75</weight>
        <weight id="5688">0.5</weight>
        <weight id="5689">0.75</weight>
        <weight id="5690">0.5</weight>
        <weight id="5691">0.75</weight>
        <weight id="5692">0.5</weight>
        <weight id="5693">0.75</weight>
        <weight id="5694">0.5</weight>
        <weight id="5695">0.75</weight>
        <weight id="5696">0.5</weight>
        <weight id="5698">0.25</weight>
        <weight id="5700">0.5</weight>
        <weight id="5703">0.75</weight>
        <weight id="5704">0.5</weight>
        <weight id="5706">0.75</weight>
        <weight id="5708">0.75</weight>
        <weight id="5711">0.75</weight>
        <weight id="5810">0.5</weight>
      </k>
    </weights>
  </execution>
</MutationGraphKFold>
