<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="USES_REFLEXION" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="1040">
    <node id="com.google.gson.functional.ArrayTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayElementsAreArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.MoreAsserts.assertEquals(java.lang.Integer[],java.lang.Integer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="int#length">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.reflect.Array#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testEmptyArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testNullsInArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testSingleStringArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.MoreAsserts.assertEquals(int[],int[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testCircularSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#children">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReferenceArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReferenceArray#children">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference#child">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassOverridingEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassOverridingEquals#ref">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$Entry#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$Entry(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection#collection">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testFieldIsArrayList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$HasArrayListField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$HasArrayListField#longs">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$HasArrayListField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testLinkedListSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testNullsInListSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testQueueDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testQueueSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Collection#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testRawCollectionSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testSetDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testSetSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.toIntArray(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$1.serialize(java.util.List,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testWildcardCollectionField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject(java.lang.String,java.lang.String,int)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject#a">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject#i">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$2.run()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$MyObject#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$1.run()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolder#data">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolder.getData()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest#SUFFIX">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper(com.google.gson.functional.CustomDeserializerTest$DataHolder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest#DEFAULT_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper#wrappedData">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper.getWrappedData()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubType1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$MyBase()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubType2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubTypes#SUB_TYPE1">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubTypes(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubTypes#SUB_TYPE2">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubTypes.getSubclass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubTypes#subClass">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolder#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseField#base">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$ClassWithBaseArray#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$ClassWithBaseArray#bases">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$MyBase#TYPE_ACCESS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$MyBase#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomDeserializerTest$SubType1#field1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BaseSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$SubSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BaseSerializer#NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseArrayField(com.google.gson.common.TestTypes$Base[])">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$SubSerializer#NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#data">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer.serialize(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper#wrappedData">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Date#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Derived()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Base()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Foo()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Foo#key">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Foo#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Foo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSerializationContext.serialize(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$StringHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomSerializersOfSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest#builder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$9.serialize(byte[],java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$8.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="boolean#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Boolean#TRUE">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Boolean#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives.getIntValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$4.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$3.serialize(com.google.gson.common.TestTypes$BagOfPrimitives,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$7.serialize(java.lang.Boolean,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$1.serialize(com.google.gson.common.TestTypes$ClassWithCustomTypeConverter,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$6.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Base#baseValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$Base#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$5.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.sql.Date#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter#constructor">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.String#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest#oldTimeZone">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Locale#US">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.BitSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Class#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setDateFormat(int)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">FIELD</data>
    </node>
    <node id="java.text.DateFormat#FULL">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Calendar#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#YEAR">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#MONTH">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#DAY_OF_MONTH">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#HOUR_OF_DAY">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#MINUTE">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Calendar#SECOND">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsDate(java.util.Date,int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsTime(java.util.Date,int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.GregorianCalendar#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.sql.Time#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.sql.Timestamp#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonArray#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNull#INSTANCE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonNull#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Locale#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Locale#CANADA_FRENCH">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerializationAndDeserialization(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Byte#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Short#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Integer#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Long#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Double#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Float#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Number#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Character#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.StringBuilder#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.StringBuffer#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.math.BigDecimal#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.math.BigInteger#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.TreeSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.ArrayList#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.HashSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Properties#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.net.URL#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.net.URI#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.UUID#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.net.InetAddress#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Enum#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Set#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField#url">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numReads">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numWrites">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest#stats">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$ClassWithEnumFields.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$ClassWithEnumFields#value1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$ClassWithEnumFields#value2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnumTypeAdapter.serialize(com.google.gson.functional.EnumTest$Roshambo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnumTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Gender#MALE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Gender()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Gender#FEMALE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnum()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnum#VALUE2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$1.defeats()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo#SCISSORS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$2.defeats()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo#PAPER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo$3.defeats()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$ClassWithEnumFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$ClassWithEnumFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.MoreAsserts.assertContains(java.util.Collection,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testEnumCaseMapping()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Gender#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testEnumSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testEnumSubclass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$Roshambo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnumTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest$MyEnum#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EnumTest.testTopLevelEnumSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.testEscapingObjectFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.disableHtmlEscaping()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy#typeToSkip">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy.shouldSkipClass(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getAnnotation(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$1.shouldSkipClass(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest#src">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#c">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#d">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#e">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField#interfaceField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField(com.google.gson.functional.ExposeFieldsTest$SomeInterface)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$SomeInterfaceInstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$SomeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$SomeInterfaceInstanceCreator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$SomeInterface#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest$NestedClass#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest$NestedClass(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest$NestedClass.toJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest$Outer$Inner(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest$Outer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest#outer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest#VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.disableInnerClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest.testIdentity()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy#IDENTITY">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_DASHES">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_UNDERSCORES">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE_WITH_SPACES">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#list">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#queue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#set">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#sortedSet">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.listContains(int[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.queueContains(long[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.setContains(float[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.sortedSetContains(char[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.append(java.lang.StringBuilder,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$SubTypeOfNested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$SubTypeOfNested.appendFields(java.lang.StringBuilder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$SubTypeOfNested#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base#BASE_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base#BASE_FIELD_KEY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseArrayField#FIELD_KEY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseCollectionField(java.util.Collection)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseField#FIELD_KEY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testSubClassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$SubTypeOfNested#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testSubClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$4.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$SubArrayList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="SubArrayList#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.SortedSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="SubTreeSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$1.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Base#baseName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$3.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Sub#subName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$2.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InstanceCreatorTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest$TestObject#someStringValue">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest$TestObject(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest$TestObjectWrapper#obj">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest$TestObjectWrapper(com.google.gson.functional.InterfaceTest$TestObjectInterface)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest#obj">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest#OBJ_JSON">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$B(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$ClassWithIncorrectJsonAdapter#value">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$ClassWithIncorrectJsonAdapter(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#firstName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#lastName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAR">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAZ">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$3.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$2.serialize(com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#user">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2#user">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget#part">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo#part">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParser()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParser.parse(java.io.Reader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.remove(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.list(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonParserTest.testParseInvalidJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives(long,int,boolean,java.lang.String,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives#f">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.testToJsonTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#x">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#y">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$PointWithProperty#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$PointWithProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Map#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapClass.addBase(java.lang.String,com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapClass#bases">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapClass.addSub(java.lang.String,com.google.gson.common.TestTypes$Sub)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapClass#subs">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MyParameterizedMap#foo">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MyParameterizedMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point#x">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point#y">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$Point.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testComplexKeysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testComplexKeysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$1.serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.newMap(K,V,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testGeneralMapField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapWithGeneralMapParameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapWithGeneralMapParameters#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testHashMapDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testInterfaceTypeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MapClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapOfMapDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapOfMapSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithNullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$ClassWithAMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$ClassWithAMap#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$1.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSubclassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest$MyMap#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapSubclassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testMapWithQuotes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testNumberKeyDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testRawMapSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testSerializeMapOfMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testSerializeMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setPrettyPrinting()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testStringKeyDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithBaseFields#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$Base)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields#collection">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields#map">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields#collection">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields#map">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithParameterizedBaseFields#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithParameterizedBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase#t">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub#s">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub#s">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer,java.lang.Double)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields#a">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$AtName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest$UpperCaseNamingStrategy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$StringWrapper#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#f">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#str1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_STRING_DEFAULT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer.serialize(com.google.gson.common.TestTypes$ClassWithObjects,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#array">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#str2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_INT_DEFAULT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#int1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#int2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_BOOLEAN_DEFAULT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#bool1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#bool2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithObjects(com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithObjects#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$1.serialize(com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithObjects#bag">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithMembers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ArrayOfArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ArrayOfArrays#elements">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ArrayOfArrays.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest#oldTimeZone">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$3.serialize(com.google.gson.common.TestTypes$ClassWithNoFields,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithNoFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ArrayOfArrays#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithArray(java.lang.Object[])">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ArrayOfObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ArrayOfObjects.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ArrayOfObjects#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithObjectField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithObjectField#member">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields#transientLongValue">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields(long)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testDateAsMapObjectField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$HasObjectMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$HasObjectMap#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithCollectionField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithCollectionField#children">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithCollectionField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testEmptyStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Object#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$5.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Parent$Child()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Parent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Parent$Child#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Parent$Child#value2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testInnerClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNestedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNestedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullArraysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithArray#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithArray#array">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullFieldsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#DEFAULT_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testNullSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$PrimitiveArray(long[])">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$PrimitiveArray.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$PrimitiveArray#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testSingletonLists()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Product()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Department()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Product#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Product#departments">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$Product#attributes">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#c">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#c">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#d">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#e">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$MyQuantity()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$Quantity()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterObj">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterArray">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfTypeParameters">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfTypeParameters">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfWildcardTypeParameters">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfWildcardTypeParameters">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.toString(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.util.List[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$Amount#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$Amount()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator(T)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.getExpectedJson(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.print(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest#DEBUG">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.System#out">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testEmptyMapField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest$ClassWithMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest$ClassWithMap#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testMultipleArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveCharacterTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveCharacterTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="char#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.extractElementFromArray(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testBooleanDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testByteDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="byte#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testByteSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="double#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="int#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="float#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="long#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="short#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest$ClassWithIntegerField#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest$ClassWithIntegerField#i">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Double#NaN">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Float#POSITIVE_INFINITY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Float#NaN">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy#STRING">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.io.Serializable#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Float#NEGATIVE_INFINITY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNumberDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Long#MAX_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testNumberSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testShortSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$PrimitiveArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest.assertContainsNoWhiteSpace(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$Bar#t">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$Bar(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$Foo#b">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.testCollectionOfObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.testParameterizedObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ReadersWritersTest.testWriterForSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape(com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#CIRCLE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle#radius">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#baseType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#typeFieldName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.TypeAdapter.toJsonTree(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#subtypeToLabel">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#labelToSubtype">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.of(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.of(java.lang.Class,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#SQUARE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#type">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square#side">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.generateNonExecutableJson()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Node#label">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Node(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest#mapAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#horsePower">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$7.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$7.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.nullSafe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Person#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Node#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Node#left">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$Node#right">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StreamingTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StringTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testAssignmentCharDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testAssignmentCharSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testStringValueDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testStringValueSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.OutOfMemoryError#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Error#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Exception#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.RuntimeException#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.ThrowableFunctionalTest$MyException()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Assignment()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Assignment(com.google.gson.functional.TreeTypeAdaptersTest$Id,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Assignment#id">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Assignment#data">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course#courseId">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course#numAssignments">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course#assignment">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course#students">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Course.getStudents()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Id#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Id#typeOfId">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Id.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.serialize(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Student()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Student#id">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Student#name">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1_ID">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2_ID">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#TYPE_COURSE_HISTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#COURSE_ID">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest.createList(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest$Id#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest#course">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$1.serialize(com.google.gson.functional.TypeAdapterPrecedenceTest$Foo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$3.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$3.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.TypeAdapterPrecedenceTest$Foo)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$CEO()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Employee(java.lang.String,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#startDate">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#minions">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$CEO#assistant">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Employee()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Manager,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Company()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Company#ceo">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeHierarchyAdapterTest$Company#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Bar()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Bar(java.lang.String,java.lang.Integer,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Blue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Red(S)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Blue(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Blue.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Red#redField">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Red()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo#someSField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo#someTField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Foo#map">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Bar#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$Blue#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$Derived1()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$Derived2()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$OperationType#OP1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$OperationType#OP2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$Base()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$Base#opType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$OperationType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassOverridingEquals.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$Base#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1_1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1_2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest#builder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1_2#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1_1#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest#C">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$Version1_1#c">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$SinceUntilMixing#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$SinceUntilMixing#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest#B">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$SinceUntilMixing#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest$SinceUntilMixing()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest#A">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ArrayOfObjects#elements">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#longValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#intValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#booleanValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BagOfPrimitives.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$BaseSerializer.serialize(com.google.gson.common.TestTypes$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithArray()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseArrayField#base">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithBaseCollectionField#base">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#bag">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getExpectedJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithNoFields.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#g">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$ClassWithTransientFields#longValue">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.serialize(java.lang.Long,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$CrazyLongTypeAdapter#DIFFERENCE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested#primitive1">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$Nested#primitive2">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$PrimitiveArray#longArray">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.common.TestTypes$SubSerializer.serialize(com.google.gson.common.TestTypes$Sub,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter#FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter#componentTypeAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter#componentType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#NULL">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#elementTypeAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#constructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ObjectConstructor.construct()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory#constructorConstructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter#FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter#iso8601Format">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter.buildIso8601Format()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSyntaxException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter#localFormat">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter#enUsFormat">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.DateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory#constructorConstructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.annotations.JsonAdapter#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TypeAdapterFactory#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.beginObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.endObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#NAME">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.skipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader#UNREADABLE_READER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken#STRING">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader#SENTINEL_CLOSED">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.isLenient()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter#UNWRITABLE_WRITER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter#SENTINEL_CLOSED">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter#product">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.beginObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.endArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter#pendingName">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.endObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.nullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.value(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.value(double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.value(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriter.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.getSerializeNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#keyTypeAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#valueTypeAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#constructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSyntaxException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.JsonReaderInternalAccess#INSTANCE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.isJsonArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory#complexMapKeySerialization">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory#constructorConstructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_AS_STRING">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter#FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#constructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#boundFields">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.read(com.google.gson.stream.JsonReader,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#deserialized">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.writeField(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.write(com.google.gson.stream.JsonWriter,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#serialized">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#constructorConstructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#fieldNamingPolicy">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#excluder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1#typeAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1(java.lang.String,boolean,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.writeField(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader,java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.Primitives.isPrimitive(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldNamingStrategy.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.annotations.SerializedName#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter#FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter#format">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.SqlDateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter#FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter#format">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TimeTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Time)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#context">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#delegate">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#type">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#nameToConstant">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#constantToName">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CLASS">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CLASS_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.BitSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BIT_SET">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BIT_SET_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$3.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BOOLEAN">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$4.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$4.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$5.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BYTE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BYTE_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$6.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#SHORT">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#SHORT_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$7.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#INTEGER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#INTEGER_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$8.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$9.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$9.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#FLOAT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#DOUBLE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#NUMBER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#NUMBER_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Character)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CHARACTER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CHARACTER_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BIG_DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.math.BigInteger)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#BIG_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING_BUILDER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING_BUILDER_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING_BUFFER">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#STRING_BUFFER_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.net.URL)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#URL">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#URL_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#URI">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#URI_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.net.InetAddress)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#INET_ADDRESS">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#INET_ADDRESS_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.UUID)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#UUID">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#UUID_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2$1.write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#TIMESTAMP_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#YEAR">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#MONTH">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#DAY_OF_MONTH">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#HOUR_OF_DAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#MINUTE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2#SECOND">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CALENDAR">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#CALENDAR_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#LOCALE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#LOCALE_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters#ENUM_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.bind.TypeAdapters$3.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl#componentType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.getGenericComponentType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#ownerType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#rawType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getOwnerType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getRawType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getActualTypeArguments()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#lowerBound">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#upperBound">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.getLowerBounds()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types#EMPTY_TYPE_ARRAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.getUpperBounds()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.indexOf(java.lang.Object[],java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.getCollectionElementType(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor#instanceCreators">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$1.construct()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$2.construct()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$5.construct()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.JsonIOException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.EnumSet#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.Queue#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.SortedMap#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor$1#unsafeAllocator">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator.create()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator.newInstance(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.ConstructorConstructor.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#DEFAULT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder$1.delegate()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder$1#delegate">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder$1.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isInnerClass(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isAnonymousOrLocal(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.ExclusionStrategy.shouldSkipClass(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#version">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#IGNORE_VERSIONS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.annotations.Since#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.annotations.Until#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#serializeInnerClasses">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#serializationStrategies">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#deserializationStrategies">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.FieldAttributes(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#modifiers">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder#requireExpose">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.annotations.Expose#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isStatic(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="java.lang.reflect.Modifier#STATIC">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isValidSince(com.google.gson.annotations.Since)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.isValidUntil(com.google.gson.annotations.Until)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.disableInnerClassSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.withModifiers(int[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Excluder.withVersion(double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest.getFirstTypeArgument(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest.testGetFirstTypeArgument()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest$A#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest$B#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest$C#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.List#class">
      <data key="type">FIELD</data>
    </node>
    <node id="D#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.doubleValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.floatValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.intValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.writeReplace()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LazilyParsedNumber.longValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.root()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#stack">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesToSkip">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#size">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesSkipped">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlIterator#stackTop">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#next">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#header">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#modCount">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#expectedModCount">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#next">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#lastReturned">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#hash">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#prev">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.setValue(V)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$Node.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#NATURAL_ORDER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#comparator">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#threshold">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.secondaryHash(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.equal(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$EntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#entrySet">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap$KeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap#keySet">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest#head">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testPutNullKeyFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#next">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#header">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#modCount">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#expectedModCount">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#next">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#lastReturned">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#prev">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#height">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.setValue(V)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$Node.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#NATURAL_ORDER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#comparator">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.find(K,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#root">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.equal(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$EntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#entrySet">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap$KeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap#keySet">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testIterationOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testPutNonComparableKeyFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testPutNullKeyFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testPutOverrides()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Primitives.unwrap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Primitives#WRAPPER_TO_PRIMITIVE_TYPE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Primitives#PRIMITIVE_TO_WRAPPER_TYPE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Primitives.isWrapperType(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.charAt(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite#chars">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.length()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.subSequence(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter#currentWrite">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter#appendable">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter(java.lang.Appendable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter.write(char[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams$AppendableWriter.write(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator$3.newInstance(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.internal.UnsafeAllocator$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.io.ObjectStreamClass#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.io.ObjectInputStream#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.internal.JsonReaderInternalAccess()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#peeked">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#in">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#buffer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#lineStart">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#pos">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#limit">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#lenient">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.isLiteral(char)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_TRUE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_FALSE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.skipTo(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.readEscapeCharacter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_BEGIN_OBJECT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_BEGIN_ARRAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_NULL">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_BUFFERED">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#PEEKED_EOF">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextUnquotedValue()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.MalformedJsonException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#peekedLong">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#peekedString">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#peekedNumberLength">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#stack">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#DANGLING_NAME">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#EMPTY_DOCUMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonScope#CLOSED">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.skipToEndOfLine()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_NONE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_SIGN">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_E">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_SIGN">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_DIGIT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_FRACTION_DIGIT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#MIN_INCOMPLETE_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_DIGIT">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Long#MIN_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader#NON_EXECUTE_PREFIX">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.skipQuotedValue(char)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReader.skipUnquotedValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testArrayOfArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testArrayPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testObjectPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testSkipArrayElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testSkipNestedStructures()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testSkipObjectNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="java.io.IOException#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testBomForbiddenAsOtherCharacterInDocument()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testBomIgnoredAsFirstCharacterOfDocument()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testBooleans()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testDocumentWithCommentEndingInSlash()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testEmptyString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testEmptyStringName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithEscapedNewlineCharacter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPosition()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionGreaterThanBufferSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionIsOffsetByBom()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverCStyleComment()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverHashEndOfLineComment()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverQuotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverSlashSlashEndOfLineComment()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverUnquotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testHelloWorld()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientComments()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientTopLevelValueType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testLongs()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testMalformedNumbers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testMissingValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testNoTopLevelObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testNullLiteralIsNotAString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testReadArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testReadObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictComments()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictCommentsWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefix()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefixWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoublesWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictQuotedNonFiniteDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArrayWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStringsWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictTopLevelString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueTypeWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNamesWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStringsWithSkipValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringEndingInSlash()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringNullIsNotNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testStringWithLeadingSlash()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testUnescapingInvalidCharacters()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedCharacters()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedSequence()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#out">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#serializeNulls">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.isHtmlSafe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#htmlSafe">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#lenient">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.open(int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.newline()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#deferredName">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.push(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.value(double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.string(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#stack">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.beforeName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.replaceTop(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#separator">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.flush()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#indent">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#HTML_SAFE_REPLACEMENT_CHARS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriter#REPLACEMENT_CHARS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testArraysInObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testBadNestingArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testBadNestingObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testBooleans()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testDeepNestingArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testDeepNestingObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Double#MAX_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Double#MIN_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Math#PI">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Math#E">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testEmptyArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testEmptyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testLongs()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNameWithoutValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNullName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNullStringValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testNumbers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testRepeatedName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testTwoNames()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testValueWithoutName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonWriterTest.testWrongTopLevelType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithExposedField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithExposedField(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithExposedField#field">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithField(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithField#field">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithList(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithList#field">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#field">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$CollectionEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$CollectionEntry(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$CollectionEntry#name">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$CollectionEntry#value">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ExceptionHolder()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ExceptionHolder(java.lang.String,java.lang.String)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ExceptionHolder#message">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ExceptionHolder#stackTrace">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.buildJsonForClassWithList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest#COLLECTION_SIZE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testByteArraySerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest#NUM_ITERATIONS">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithList#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithList#list">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#list">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.disabled_testStringDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest$ExceptionHolder#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.metrics.PerformanceTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken#type">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken#rawType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken#hashCode">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.isAssignableFrom(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="java.lang.reflect.ParameterizedType#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.GenericArrayType#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeToken.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.RandomAccess#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards()">
      <data key="type">FIELD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest#listOfUnknown">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest#listOfString">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.CommentsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.CommentsTest.testParseComments()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">METHOD</data>
    </node>
    <node id="java.text.DateFormat#DEFAULT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter#enUsFormat">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter#localFormat">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter#iso8601Format">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="java.text.DateFormat#SHORT">
      <data key="type">FIELD</data>
    </node>
    <node id="java.text.DateFormat#MEDIUM">
      <data key="type">FIELD</data>
    </node>
    <node id="java.text.DateFormat#LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testDatePattern()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.util.Locale#FRANCE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testInvalidDatePattern()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultInetAddressTypeAdapterTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultInetAddressTypeAdapterTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest$MockObject#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributes#field">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.FieldAttributes.hasModifier(int)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.isSynthetic()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getDeclaredClass()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getDeclaringClass()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.get(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getName()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getDeclaredType()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributes.getAnnotations()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testDeclaringClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testIsSynthetic()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testModifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.reflect.Modifier#FINAL">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.Modifier#ABSTRACT">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.Modifier#VOLATILE">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.Modifier#PROTECTED">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.Modifier#PUBLIC">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.reflect.Modifier#TRANSIENT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldAttributesTest.testNullField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest#ourType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest.testNotEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.Gson$FutureTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$FutureTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$FutureTypeAdapter#delegate">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson$FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$FutureTypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#deserializationContext">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$2.serialize(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$2.serialize(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#serializationContext">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#DEFAULT_JSON_NON_EXECUTABLE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy#DEFAULT">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.doubleAdapter(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.floatAdapter(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#constructorConstructor">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#serializeNulls">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#generateNonExecutableJson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#htmlSafe">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#prettyPrinting">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#factories">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#typeTokenCache">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson#calls">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$3.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$3.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.checkValidFloatingPoint(double)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$4.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$4.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$5.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson$5.write(com.google.gson.stream.JsonWriter,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.newJsonWriter(java.io.Writer)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.Gson.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#factories">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#hierarchyFactories">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#datePattern">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#dateStyle">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#timeStyle">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#excluder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#fieldNamingPolicy">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#instanceCreators">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#serializeNulls">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#complexMapKeySerialization">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#generateNonExecutableJson">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#escapeHtmlChars">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#prettyPrinting">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#serializeSpecialFloatingPointValues">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder#longSerializationPolicy">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setDateFormat(int,int)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilder.setExclusionStrategies(com.google.gson.ExclusionStrategy[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest#NULL_TYPE_ADAPTER">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest$HasModifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.reflect.Modifier#PRIVATE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonBuilderTest$HasTransients()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter.serialize(java.util.concurrent.atomic.AtomicInteger,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Concrete()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Abstract()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Abstract#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$ExceptionTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.concurrent.atomic.AtomicLong#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.util.concurrent.atomic.AtomicInteger#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Abstract#a">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Concrete#b">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest$Concrete#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest#innerClass">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest$InnerClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest#staticNestedClass">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest$StaticNestedClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest#excluder">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest.testListIsSerializable()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest.serializedCopy(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest.testMapIsSerializable()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JavaSerializationTest.testNumberIsSerializable()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray#elements">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonArray.contains(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.remove(com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsByte()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsByte()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsCharacter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsCharacter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.deepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.deepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.set(int,com.google.gson.JsonElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsFloat()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsFloat()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.getAsShort()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsShort()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArray.addAll(com.google.gson.JsonArray)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArrayTest.testDeepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArrayTest.testEqualsOnEmptyArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArrayTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonArrayTest.testSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonElement.getAsJsonNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonIOException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParseException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParseException(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNull.deepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNull.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNullTest.testDeepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonNullTest.testEqualsAndHashcode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject#members">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonObject.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.getAsJsonArray(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.createJsonElement(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.deepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.getAsJsonObject(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.getAsJsonPrimitive(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Character)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingBooleanProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingCharacterProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testAddingStringProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testDeepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testEqualsOnEmptyObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testPropertyWithQuotes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonParserTest#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseEmptyString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseInvalidJson()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseMixedArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseReader()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonParserTest.testReadWriteTwoObjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive#value">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsBooleanWrapper()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.isPrimitiveOrString(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.JsonPrimitive#PRIMITIVE_TYPES">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsByte()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsCharacter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsFloat()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.getAsShort()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testByteEqualsInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testByteEqualsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testByteEqualsShort()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testDeepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitive.deepCopy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testExponential()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testShortEqualsInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testShortEqualsLong()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testStringsAndChar()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonPrimitiveTest.testValidJsonOnToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser#lock">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonStreamParser(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest.setUp()">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonStreamParserTest.testParseTwoStrings()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy.serialize(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car#name">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car#color">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest#BLACK_BMW">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest#RED_MIATA">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testReadClosed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testReadInvalidState()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testReadMixedStreamed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testReadNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteClosed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteHtmlSafe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteInvalidState()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteLenient()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteMixedStreamed()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MixedStreamTest.testWriteNulls()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MockExclusionStrategy#skipClass">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MockExclusionStrategy(boolean,boolean)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MockExclusionStrategy#skipField">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.MockExclusionStrategy.shouldSkipClass(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.MockExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest#gson">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest.testDeserialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.fromJson(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest.testSerialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest$RuntimeType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.toJson(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ObjectTypeAdapterTest.testSerializeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$1.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest#booleanAsIntAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest#swapCaseStringAdapter">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Boolean#FALSE">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.serialize(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.PrimitiveTypeAdapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator#instanceOfT">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest#ourType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest.testNotEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory#serializer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory#deserializer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory#exactType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory#matchRawType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory#hierarchyType">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#serializer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#deserializer">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#gson">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#typeToken">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#skipPast">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.delegate()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter#delegate">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.JsonSerializer.serialize(T,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.fromJson(java.io.Reader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter$1.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter$1.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.TypeAdapter.toJson(java.io.Writer,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.VersionExclusionStrategyTest#VERSION">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.VersionExclusionStrategyTest$MockObject#class">
      <data key="type">FIELD</data>
    </node>
    <node id="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$2.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$3.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy.separateCamelCase(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$4.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy$5.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.google.gson.FieldNamingPolicy.modifyString(char,java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy$1.serialize(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.google.gson.LongSerializationPolicy$2.serialize(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="com.google.gson.functional.ArrayTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2" source="com.google.gson.functional.ArrayTest#gson" target="com.google.gson.functional.ArrayTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3" source="com.google.gson.functional.ArrayTest.testArrayElementsAreArrays()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4" source="com.google.gson.functional.ArrayTest.testArrayElementsAreArrays()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5" source="com.google.gson.functional.ArrayTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.functional.ArrayTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e10" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.common.MoreAsserts.assertEquals(java.lang.Integer[],java.lang.Integer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e11" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e12" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e13" source="com.google.gson.functional.ArrayTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e14" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()" target="com.google.gson.functional.ArrayTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e15" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e16" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e17" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e18" source="com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e19" source="com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e20" source="com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e21" source="com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e22" source="com.google.gson.functional.ArrayTest.testArrayOfNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e23" source="com.google.gson.functional.ArrayTest.testArrayOfNullSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e24" source="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e25" source="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e26" source="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e27" source="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e28" source="com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e29" source="com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e30" source="com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e31" source="com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e32" source="com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e33" source="com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e34" source="com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e35" source="com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e36" source="com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e37" source="com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e38" source="com.google.gson.functional.ArrayTest.testEmptyArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e39" source="com.google.gson.functional.ArrayTest.testEmptyArraySerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e40" source="com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e41" source="com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e42" source="com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e43" source="com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e44" source="com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e45" source="com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e46" source="com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e47" source="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e48" source="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e49" source="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e50" source="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e51" source="com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e52" source="com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e53" source="com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e54" source="com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e55" source="com.google.gson.functional.ArrayTest.testNullsInArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e56" source="com.google.gson.functional.ArrayTest.testNullsInArraySerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e57" source="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e58" source="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e59" source="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e60" source="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e61" source="com.google.gson.functional.ArrayTest#gson" target="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e62" source="com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e63" source="com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization()" target="com.google.gson.common.TestTypes$ClassWithObjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e64" source="com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e65" source="com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e66" source="com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e67" source="com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e68" source="com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e69" source="com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e70" source="com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e71" source="com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e72" source="com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e73" source="com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e74" source="com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e75" source="com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e76" source="com.google.gson.functional.ArrayTest.testSingleStringArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e77" source="com.google.gson.functional.ArrayTest.testSingleStringArraySerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e78" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e79" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization()" target="com.google.gson.common.MoreAsserts.assertEquals(int[],int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e80" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e81" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e82" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e83" source="com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization()" target="com.google.gson.functional.ArrayTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e84" source="com.google.gson.functional.CircularReferenceTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e85" source="com.google.gson.functional.CircularReferenceTest#gson" target="com.google.gson.functional.CircularReferenceTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e86" source="com.google.gson.functional.CircularReferenceTest.testCircularSerialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e87" source="com.google.gson.functional.CircularReferenceTest.testCircularSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e88" source="com.google.gson.functional.CircularReferenceTest.testCircularSerialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#children">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e89" source="com.google.gson.functional.CircularReferenceTest.testCircularSerialization()" target="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e90" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e91" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization()" target="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e92" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e93" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#children">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e94" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e95" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e96" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()" target="com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType#children">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e97" source="com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()" target="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e98" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization()" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReferenceArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e99" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e100" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization()" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReferenceArray#children">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e101" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization()" target="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e102" source="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e103" source="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e104" source="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e105" source="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e106" source="com.google.gson.functional.CircularReferenceTest$1.serialize(com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference#child">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e107" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e108" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e109" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e110" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.functional.CircularReferenceTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e111" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e112" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e113" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e114" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e115" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e116" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e117" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference#child">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e118" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization()" target="com.google.gson.functional.CircularReferenceTest$ClassWithSelfReference#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e119" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization()" target="com.google.gson.common.TestTypes$ClassOverridingEquals()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e120" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e121" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization()" target="com.google.gson.common.TestTypes$ClassOverridingEquals#ref">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e122" source="com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization()" target="com.google.gson.functional.CircularReferenceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e123" source="com.google.gson.functional.CollectionTest$Entry#value" target="com.google.gson.functional.CollectionTest$Entry(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e124" source="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection#collection" target="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection(java.util.Collection)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e125" source="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection.getCollection()" target="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection#collection">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e126" source="com.google.gson.functional.CollectionTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e127" source="com.google.gson.functional.CollectionTest#gson" target="com.google.gson.functional.CollectionTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e128" source="com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e129" source="com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e130" source="com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e131" source="com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e132" source="com.google.gson.functional.CollectionTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e133" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e134" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e135" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e136" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e137" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e138" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e139" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e140" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e141" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e142" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e143" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e144" source="com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e145" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e146" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e147" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e148" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e149" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e150" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e151" source="com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e152" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.functional.CollectionTest$HasArrayListField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e153" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e154" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e155" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.functional.CollectionTest$HasArrayListField#longs">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e156" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e157" source="com.google.gson.functional.CollectionTest.testFieldIsArrayList()" target="com.google.gson.functional.CollectionTest$HasArrayListField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e158" source="com.google.gson.functional.CollectionTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e159" source="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()" target="com.google.gson.functional.CollectionTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e160" source="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e161" source="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e162" source="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e163" source="com.google.gson.functional.CollectionTest.testLinkedListDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e164" source="com.google.gson.functional.CollectionTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e165" source="com.google.gson.functional.CollectionTest.testLinkedListSerialization()" target="com.google.gson.functional.CollectionTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e166" source="com.google.gson.functional.CollectionTest.testLinkedListSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e167" source="com.google.gson.functional.CollectionTest.testLinkedListSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e168" source="com.google.gson.functional.CollectionTest.testLinkedListSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e169" source="com.google.gson.functional.CollectionTest.testLinkedListSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e170" source="com.google.gson.functional.CollectionTest$9()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e171" source="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()" target="com.google.gson.functional.CollectionTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e172" source="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e173" source="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e174" source="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e175" source="com.google.gson.functional.CollectionTest.testNullsInListDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e176" source="com.google.gson.functional.CollectionTest$8()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e177" source="com.google.gson.functional.CollectionTest.testNullsInListSerialization()" target="com.google.gson.functional.CollectionTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e178" source="com.google.gson.functional.CollectionTest.testNullsInListSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e179" source="com.google.gson.functional.CollectionTest.testNullsInListSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e180" source="com.google.gson.functional.CollectionTest.testNullsInListSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e181" source="com.google.gson.functional.CollectionTest.testNullsInListSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e182" source="com.google.gson.functional.CollectionTest$7()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e183" source="com.google.gson.functional.CollectionTest.testQueueDeserialization()" target="com.google.gson.functional.CollectionTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e184" source="com.google.gson.functional.CollectionTest.testQueueDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e185" source="com.google.gson.functional.CollectionTest.testQueueDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e186" source="com.google.gson.functional.CollectionTest.testQueueDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e187" source="com.google.gson.functional.CollectionTest.testQueueDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e188" source="com.google.gson.functional.CollectionTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e189" source="com.google.gson.functional.CollectionTest.testQueueSerialization()" target="com.google.gson.functional.CollectionTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e190" source="com.google.gson.functional.CollectionTest.testQueueSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e191" source="com.google.gson.functional.CollectionTest.testQueueSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e192" source="com.google.gson.functional.CollectionTest.testQueueSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e193" source="com.google.gson.functional.CollectionTest.testQueueSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e194" source="com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e195" source="com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e196" source="com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed()" target="java.util.Collection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e197" source="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e198" source="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e199" source="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e200" source="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e201" source="com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed()" target="java.util.Collection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e202" source="com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e203" source="com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e204" source="com.google.gson.functional.CollectionTest.testRawCollectionSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e205" source="com.google.gson.functional.CollectionTest.testRawCollectionSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e206" source="com.google.gson.functional.CollectionTest.testRawCollectionSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e207" source="com.google.gson.functional.CollectionTest.testRawCollectionSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e208" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e209" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e210" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e211" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e212" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e213" source="com.google.gson.functional.CollectionTest.testSetDeserialization()" target="com.google.gson.functional.CollectionTest$Entry#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e214" source="com.google.gson.functional.CollectionTest.testSetSerialization()" target="com.google.gson.functional.CollectionTest$Entry(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e215" source="com.google.gson.functional.CollectionTest.testSetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e216" source="com.google.gson.functional.CollectionTest.testSetSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e217" source="com.google.gson.functional.CollectionTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e218" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.functional.CollectionTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e219" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e220" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e221" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e222" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.common.MoreAsserts.assertEquals(int[],int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e223" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.functional.CollectionTest.toIntArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e224" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e225" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e226" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e227" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e228" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e229" source="com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e230" source="com.google.gson.functional.CollectionTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e231" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.functional.CollectionTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e232" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e233" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e234" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e235" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.common.MoreAsserts.assertEquals(int[],int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e236" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.functional.CollectionTest.toIntArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e237" source="com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e238" source="com.google.gson.functional.CollectionTest$1.serialize(java.util.List,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e239" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e240" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e241" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e242" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e243" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e244" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e245" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e246" source="com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e247" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e248" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e249" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e250" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e251" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e252" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e253" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e254" source="com.google.gson.functional.CollectionTest.testWildcardCollectionField()" target="com.google.gson.functional.CollectionTest$ObjectWithWildcardCollection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e255" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e256" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e257" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e258" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e259" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e260" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.functional.CollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e261" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e262" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e263" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e264" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e265" source="com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization()" target="com.google.gson.functional.CollectionTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e266" source="com.google.gson.functional.ConcurrencyTest$MyObject()" target="com.google.gson.functional.ConcurrencyTest$MyObject(java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e267" source="com.google.gson.functional.ConcurrencyTest$MyObject#a" target="com.google.gson.functional.ConcurrencyTest$MyObject(java.lang.String,java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e268" source="com.google.gson.functional.ConcurrencyTest$MyObject#b" target="com.google.gson.functional.ConcurrencyTest$MyObject(java.lang.String,java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e269" source="com.google.gson.functional.ConcurrencyTest$MyObject#i" target="com.google.gson.functional.ConcurrencyTest$MyObject(java.lang.String,java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e270" source="com.google.gson.functional.ConcurrencyTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e271" source="com.google.gson.functional.ConcurrencyTest#gson" target="com.google.gson.functional.ConcurrencyTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e272" source="com.google.gson.functional.ConcurrencyTest$2.run()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e273" source="com.google.gson.functional.ConcurrencyTest$2.run()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e274" source="com.google.gson.functional.ConcurrencyTest$2.run()" target="com.google.gson.functional.ConcurrencyTest$MyObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e275" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization()" target="com.google.gson.functional.ConcurrencyTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e276" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e277" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e278" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization()" target="com.google.gson.functional.ConcurrencyTest$MyObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e279" source="com.google.gson.functional.ConcurrencyTest$1.run()" target="com.google.gson.functional.ConcurrencyTest$MyObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e280" source="com.google.gson.functional.ConcurrencyTest$1.run()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e281" source="com.google.gson.functional.ConcurrencyTest$1.run()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e282" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization()" target="com.google.gson.functional.ConcurrencyTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e283" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization()" target="com.google.gson.functional.ConcurrencyTest$MyObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e284" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e285" source="com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e286" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e287" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e288" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization()" target="com.google.gson.functional.ConcurrencyTest$MyObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e289" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization()" target="com.google.gson.functional.ConcurrencyTest$MyObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e290" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e291" source="com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization()" target="com.google.gson.functional.ConcurrencyTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e292" source="com.google.gson.functional.CustomDeserializerTest$DataHolder#data" target="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e293" source="com.google.gson.functional.CustomDeserializerTest$DataHolder.getData()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder#data">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e294" source="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e295" source="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e296" source="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e297" source="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e298" source="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomDeserializerTest#SUFFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e299" source="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper(com.google.gson.functional.CustomDeserializerTest$DataHolder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e300" source="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e301" source="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper()" target="com.google.gson.functional.CustomDeserializerTest#DEFAULT_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e302" source="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper#wrappedData" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper(com.google.gson.functional.CustomDeserializerTest$DataHolder)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e303" source="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper.getWrappedData()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper#wrappedData">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e304" source="com.google.gson.functional.CustomDeserializerTest$SubType1()" target="com.google.gson.functional.CustomDeserializerTest$MyBase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e305" source="com.google.gson.functional.CustomDeserializerTest$SubType2()" target="com.google.gson.functional.CustomDeserializerTest$MyBase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e306" source="com.google.gson.functional.CustomDeserializerTest$SubTypes#SUB_TYPE1" target="com.google.gson.functional.CustomDeserializerTest$SubTypes(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e307" source="com.google.gson.functional.CustomDeserializerTest$SubTypes#SUB_TYPE2" target="com.google.gson.functional.CustomDeserializerTest$SubTypes(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e308" source="com.google.gson.functional.CustomDeserializerTest$SubTypes.getSubclass()" target="com.google.gson.functional.CustomDeserializerTest$SubTypes#subClass">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e309" source="com.google.gson.functional.CustomDeserializerTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e310" source="com.google.gson.functional.CustomDeserializerTest.setUp()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e311" source="com.google.gson.functional.CustomDeserializerTest.setUp()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderDeserializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e312" source="com.google.gson.functional.CustomDeserializerTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e313" source="com.google.gson.functional.CustomDeserializerTest#gson" target="com.google.gson.functional.CustomDeserializerTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e314" source="com.google.gson.functional.CustomDeserializerTest.setUp()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e315" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e316" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e317" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.functional.CustomDeserializerTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e318" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e319" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e320" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e321" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.common.TestTypes$ClassWithBaseField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e322" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull()" target="com.google.gson.common.TestTypes$ClassWithBaseField#base">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e323" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e324" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e325" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.functional.CustomDeserializerTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e326" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e327" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e328" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e329" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e330" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e331" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e332" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.functional.CustomDeserializerTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e333" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e334" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e335" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e336" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.functional.CustomDeserializerTest$ClassWithBaseArray#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e337" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField()" target="com.google.gson.functional.CustomDeserializerTest$ClassWithBaseArray#bases">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e338" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e339" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e340" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.functional.CustomDeserializerTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e341" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e342" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e343" source="com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e344" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper(com.google.gson.functional.CustomDeserializerTest$DataHolder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e345" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e346" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e347" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e348" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper.getWrappedData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e349" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e350" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest#DEFAULT_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e351" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e352" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest$DataHolderWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e353" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField()" target="com.google.gson.functional.CustomDeserializerTest#SUFFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e354" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e355" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e356" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e357" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e358" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest#DEFAULT_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e359" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e360" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest$DataHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e361" source="com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject()" target="com.google.gson.functional.CustomDeserializerTest#SUFFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e362" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e363" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e364" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e365" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e366" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomDeserializerTest$SubTypes.getSubclass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e367" source="com.google.gson.functional.CustomDeserializerTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomDeserializerTest$MyBase#TYPE_ACCESS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e368" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e369" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e370" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.functional.CustomDeserializerTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e371" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e372" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e373" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e374" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e375" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.functional.CustomDeserializerTest$SubTypes.getSubclass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e376" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e377" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e378" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.functional.CustomDeserializerTest$MyBase#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e379" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.functional.CustomDeserializerTest$MyBase#TYPE_ACCESS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e380" source="com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization()" target="com.google.gson.functional.CustomDeserializerTest$SubType1#field1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e381" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e382" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e383" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$BaseSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e384" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$SubSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e385" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e386" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e387" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e388" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e389" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e390" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e391" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e392" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e393" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e394" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$BaseSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e395" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields()" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e396" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e397" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e398" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$BaseSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e399" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e400" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e401" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e402" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e403" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e404" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e405" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e406" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e407" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$BaseSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e408" source="com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e409" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e410" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e411" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.functional.CustomSerializerTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e412" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e413" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e414" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e415" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e416" source="com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e417" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e418" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e419" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$BaseSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e420" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$SubSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e421" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e422" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$ClassWithBaseArrayField(com.google.gson.common.TestTypes$Base[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e423" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e424" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e425" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e426" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e427" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e428" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e429" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e430" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e431" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e432" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances()" target="com.google.gson.common.TestTypes$SubSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e433" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e434" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e435" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$BaseSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e436" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$SubSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e437" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e438" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e439" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e440" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e441" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e442" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e443" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e444" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e445" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e446" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$SubSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e447" source="com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances()" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e448" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#data" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e449" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e450" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e451" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e452" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e453" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e454" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer.serialize(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e455" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer.serialize(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e456" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer.serialize(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#data">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e457" source="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper#wrappedData" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e458" source="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e459" source="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e460" source="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e461" source="com.google.gson.functional.CustomTypeAdaptersTest$Derived()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e462" source="com.google.gson.functional.CustomTypeAdaptersTest$Foo()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e463" source="com.google.gson.functional.CustomTypeAdaptersTest$Foo#key" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e464" source="com.google.gson.functional.CustomTypeAdaptersTest$Foo#value" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e465" source="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Foo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e466" source="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e467" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e468" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e469" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e470" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e471" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$StringHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e472" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$StringHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e473" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.serialize(com.google.gson.functional.CustomTypeAdaptersTest$StringHolder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e474" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.createInstance(java.lang.reflect.Type)" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e475" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e476" source="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e477" source="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e478" source="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e479" source="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()" target="com.google.gson.functional.CustomTypeAdaptersTest$FooTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e480" source="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e481" source="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e482" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e483" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e484" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e485" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e486" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e487" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e488" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e489" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomDeserializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e490" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomSerializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest.createGsonObjectWithFooTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e491" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomSerializersOfSelf()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e492" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomSerializersOfSelf()" target="com.google.gson.functional.CustomTypeAdaptersTest$Foo(int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e493" source="com.google.gson.functional.CustomTypeAdaptersTest.disable_testCustomSerializersOfSelf()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e494" source="com.google.gson.functional.CustomTypeAdaptersTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e495" source="com.google.gson.functional.CustomTypeAdaptersTest#builder" target="com.google.gson.functional.CustomTypeAdaptersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e496" source="com.google.gson.functional.CustomTypeAdaptersTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e497" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e498" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e499" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e500" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e501" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e502" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e503" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e504" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e505" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e506" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e507" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e508" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e509" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e510" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e511" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e512" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e513" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e514" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e515" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e516" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e517" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e518" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e519" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e520" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e521" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e522" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e523" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e524" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e525" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e526" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e527" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e528" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e529" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e530" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e531" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e532" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e533" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e534" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e535" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#part2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e536" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e537" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e538" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e539" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e540" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e541" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e542" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e543" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e544" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e545" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolderTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e546" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e547" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e548" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e549" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e550" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e551" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e552" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType()" target="com.google.gson.functional.CustomTypeAdaptersTest$StringHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e553" source="com.google.gson.functional.CustomTypeAdaptersTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e554" source="com.google.gson.functional.CustomTypeAdaptersTest$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e555" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e556" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e557" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e558" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e559" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e560" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e561" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e562" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e563" source="com.google.gson.functional.CustomTypeAdaptersTest$9.serialize(byte[],java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e564" source="com.google.gson.functional.CustomTypeAdaptersTest$9.serialize(byte[],java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e565" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e566" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e567" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.functional.CustomTypeAdaptersTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e568" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e569" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e570" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e571" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e572" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e573" source="com.google.gson.functional.CustomTypeAdaptersTest$8.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e574" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e575" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e576" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.functional.CustomTypeAdaptersTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e577" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e578" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e579" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e580" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e581" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="java.lang.Boolean#TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e582" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e583" source="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e584" source="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e585" source="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e586" source="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e587" source="com.google.gson.functional.CustomTypeAdaptersTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e588" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e589" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e590" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.functional.CustomTypeAdaptersTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e591" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e592" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e593" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e594" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e595" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e596" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e597" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e598" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e599" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getIntValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e600" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e601" source="com.google.gson.functional.CustomTypeAdaptersTest$4.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e602" source="com.google.gson.functional.CustomTypeAdaptersTest$4.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e603" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e604" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e605" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.functional.CustomTypeAdaptersTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e606" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e607" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e608" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e609" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e610" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e611" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getIntValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e612" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e613" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e614" source="com.google.gson.functional.CustomTypeAdaptersTest$3.serialize(com.google.gson.common.TestTypes$BagOfPrimitives,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e615" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e616" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e617" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.functional.CustomTypeAdaptersTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e618" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e619" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e620" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e621" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e622" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e623" source="com.google.gson.functional.CustomTypeAdaptersTest$7.serialize(java.lang.Boolean,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e624" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e625" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e626" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.functional.CustomTypeAdaptersTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e627" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e628" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e629" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e630" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e631" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e632" source="com.google.gson.functional.CustomTypeAdaptersTest$1.serialize(com.google.gson.common.TestTypes$ClassWithCustomTypeConverter,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e633" source="com.google.gson.functional.CustomTypeAdaptersTest$1.serialize(com.google.gson.common.TestTypes$ClassWithCustomTypeConverter,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e634" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e635" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.functional.CustomTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e636" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e637" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e638" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e639" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e640" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e641" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.functional.CustomTypeAdaptersTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e642" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e643" source="com.google.gson.functional.CustomTypeAdaptersTest$6.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e644" source="com.google.gson.functional.CustomTypeAdaptersTest$6.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e645" source="com.google.gson.functional.CustomTypeAdaptersTest$6.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#baseValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e646" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e647" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e648" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.functional.CustomTypeAdaptersTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e649" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e650" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e651" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e652" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e653" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e654" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.functional.CustomTypeAdaptersTest$Derived()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e655" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e656" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e657" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#baseValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e658" source="com.google.gson.functional.CustomTypeAdaptersTest$5.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e659" source="com.google.gson.functional.CustomTypeAdaptersTest$5.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e660" source="com.google.gson.functional.CustomTypeAdaptersTest$5.serialize(com.google.gson.functional.CustomTypeAdaptersTest$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#baseValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e661" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e662" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e663" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.functional.CustomTypeAdaptersTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e664" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e665" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e666" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e667" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e668" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e669" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.functional.CustomTypeAdaptersTest$Derived()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e670" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e671" source="com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses()" target="com.google.gson.functional.CustomTypeAdaptersTest$Base#baseValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e672" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e673" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e674" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderDeserializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e675" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e676" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e677" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e678" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e679" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper#wrappedData">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e680" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e681" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e682" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e683" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e684" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolderWrapper(com.google.gson.functional.CustomTypeAdaptersTest$DataHolder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e685" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e686" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e687" source="com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues()" target="com.google.gson.functional.CustomTypeAdaptersTest$DataHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e688" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e689" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e690" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.functional.CustomTypeAdaptersTest$DateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e691" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e692" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e693" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e694" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e695" source="com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate()" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e696" source="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#value" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e697" source="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal.getExpectedJson()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e698" source="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#value" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e699" source="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger.getExpectedJson()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e700" source="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e701" source="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e702" source="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Class)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e703" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e704" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter#constructor" target="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e705" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e706" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e707" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter#constructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e708" source="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e709" source="com.google.gson.functional.DefaultTypeAdaptersTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e710" source="com.google.gson.functional.DefaultTypeAdaptersTest#oldTimeZone" target="com.google.gson.functional.DefaultTypeAdaptersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e711" source="com.google.gson.functional.DefaultTypeAdaptersTest.setUp()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e712" source="com.google.gson.functional.DefaultTypeAdaptersTest#gson" target="com.google.gson.functional.DefaultTypeAdaptersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e713" source="com.google.gson.functional.DefaultTypeAdaptersTest.tearDown()" target="com.google.gson.functional.DefaultTypeAdaptersTest#oldTimeZone">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e714" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e715" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e716" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e717" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e718" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e719" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e720" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e721" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e722" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e723" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e724" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e725" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e726" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigDecimal#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e727" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e728" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e729" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e730" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e731" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e732" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e733" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e734" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e735" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithBigInteger.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e736" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e737" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e738" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e739" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e740" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization()" target="java.util.BitSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e741" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e742" source="com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e743" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e744" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e745" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e746" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e747" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e748" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e749" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e750" source="com.google.gson.functional.DefaultTypeAdaptersTest#gson" target="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e751" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization()" target="java.lang.Class#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e752" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e753" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e754" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e755" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$MyClassTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e756" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e757" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e758" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e759" source="com.google.gson.functional.DefaultTypeAdaptersTest#gson" target="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e760" source="com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization()" target="java.lang.Class#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e761" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e762" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.GsonBuilder.setDateFormat(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e763" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e764" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e765" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e766" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e767" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="java.text.DateFormat#FULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e768" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e769" source="com.google.gson.functional.DefaultTypeAdaptersTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e770" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.functional.DefaultTypeAdaptersTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e771" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e772" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e773" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e774" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e775" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e776" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e777" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e778" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e779" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e780" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="com.google.gson.GsonBuilder.setDateFormat(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e781" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e782" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e783" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e784" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern()" target="java.text.DateFormat#FULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e785" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e786" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e787" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e788" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.functional.DefaultTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e789" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e790" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e791" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e792" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e793" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e794" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e795" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e796" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#YEAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e797" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e798" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#DAY_OF_MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e799" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#HOUR_OF_DAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e800" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#MINUTE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e801" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization()" target="java.util.Calendar#SECOND">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e802" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e803" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e804" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e805" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e806" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsDate(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e807" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsTime(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e808" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e809" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e810" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e811" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e812" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e813" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e814" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e815" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e816" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e817" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e818" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e819" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e820" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e821" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e822" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e823" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.GregorianCalendar#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e824" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#YEAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e825" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e826" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#DAY_OF_MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e827" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#HOUR_OF_DAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e828" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#MINUTE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e829" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization()" target="java.util.Calendar#SECOND">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e830" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e831" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e832" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e833" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e834" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsDate(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e835" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e836" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization()" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e837" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e838" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e839" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e840" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsTime(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e841" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e842" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization()" target="java.sql.Time#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e843" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e844" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e845" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e846" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsDate(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e847" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.assertEqualsTime(java.util.Date,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e848" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e849" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization()" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e850" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e851" source="com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e852" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e853" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e854" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e855" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e856" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e857" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e858" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization()" target="com.google.gson.JsonArray#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e859" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e860" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e861" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e862" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e863" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e864" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e865" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e866" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e867" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e868" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e869" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization()" target="com.google.gson.JsonNull#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e870" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e871" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e872" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e873" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e874" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization()" target="com.google.gson.JsonNull#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e875" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e876" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e877" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e878" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e879" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e880" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e881" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization()" target="com.google.gson.JsonObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e882" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e883" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e884" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e885" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e886" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e887" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e888" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e889" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e890" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e891" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e892" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e893" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e894" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e895" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization()" target="com.google.gson.JsonPrimitive#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e896" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e897" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e898" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e899" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e900" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e901" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e902" source="com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e903" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e904" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e905" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage()" target="java.util.Locale#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e906" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e907" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e908" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry()" target="java.util.Locale#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e909" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry()" target="java.util.Locale#CANADA_FRENCH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e910" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e911" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e912" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant()" target="java.util.Locale#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e913" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e914" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e915" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e916" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry()" target="java.util.Locale#CANADA_FRENCH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e917" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e918" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e919" source="com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e920" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e921" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e922" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization()" target="com.google.gson.JsonElement#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e923" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization()" target="com.google.gson.JsonNull#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e924" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerializationAndDeserialization(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e925" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e926" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e927" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e928" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e929" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e930" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e931" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e932" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Number#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e933" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e934" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e935" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.StringBuilder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e936" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.StringBuffer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e937" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e938" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e939" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.TreeSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e940" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.ArrayList#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e941" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.HashSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e942" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.Properties#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e943" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.net.URL#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e944" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.net.URI#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e945" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.UUID#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e946" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.Locale#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e947" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.net.InetAddress#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e948" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.BitSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e949" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e950" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.GregorianCalendar#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e951" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.util.Calendar#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e952" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.sql.Time#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e953" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e954" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e955" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Enum#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e956" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization()" target="java.lang.Class#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e957" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerializationAndDeserialization(java.lang.Class)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e958" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerializationAndDeserialization(java.lang.Class)" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e959" source="com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerializationAndDeserialization(java.lang.Class)" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e960" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e961" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e962" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e963" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e964" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e965" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e966" source="com.google.gson.functional.DefaultTypeAdaptersTest#gson" target="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e967" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e968" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e969" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e970" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e971" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.functional.DefaultTypeAdaptersTest$NumberAsStringAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e972" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e973" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e974" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e975" source="com.google.gson.functional.DefaultTypeAdaptersTest#gson" target="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e976" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e977" source="com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e978" source="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e979" source="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e980" source="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization()" target="java.util.Properties#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e981" source="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e982" source="com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e983" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e984" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e985" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e986" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization()" target="java.util.Set#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e987" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e988" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e989" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e990" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e991" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e992" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e993" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e994" source="com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization()" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e995" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e996" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e997" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization()" target="java.lang.StringBuffer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e998" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e999" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1000" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1001" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1002" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization()" target="java.lang.StringBuilder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1003" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1004" source="com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1005" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1006" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1007" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1008" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1009" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1010" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1011" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization()" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1012" source="com.google.gson.functional.DefaultTypeAdaptersTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1013" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1014" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1015" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1016" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1017" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1018" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1019" source="com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1020" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1021" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1022" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization()" target="java.net.URI#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1023" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1024" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1025" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1026" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1027" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization()" target="java.net.URL#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1028" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1029" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1030" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1031" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField#url">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1032" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest$ClassWithUrlField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1033" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1034" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1035" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1036" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1037" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1038" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1039" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization()" target="java.util.UUID#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1040" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1041" source="com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization()" target="com.google.gson.functional.DefaultTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1042" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1043" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1044" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numReads">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1045" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1046" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numWrites">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1047" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1048" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1049" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1050" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1051" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1052" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numReads">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1053" source="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numWrites">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1054" source="com.google.gson.functional.DelegateTypeAdapterTest.setUp()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1055" source="com.google.gson.functional.DelegateTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1056" source="com.google.gson.functional.DelegateTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder.registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1057" source="com.google.gson.functional.DelegateTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1058" source="com.google.gson.functional.DelegateTypeAdapterTest#stats" target="com.google.gson.functional.DelegateTypeAdapterTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1059" source="com.google.gson.functional.DelegateTypeAdapterTest#gson" target="com.google.gson.functional.DelegateTypeAdapterTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1060" source="com.google.gson.functional.DelegateTypeAdapterTest.setUp()" target="com.google.gson.functional.DelegateTypeAdapterTest#stats">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1061" source="com.google.gson.functional.DelegateTypeAdapterTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1062" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1063" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1064" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1065" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1066" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1067" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1068" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.functional.DelegateTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1069" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numReads">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1070" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.functional.DelegateTypeAdapterTest#stats">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1071" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numWrites">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1072" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1073" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1074" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.functional.DelegateTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1075" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1076" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numReads">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1077" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.functional.DelegateTypeAdapterTest#stats">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1078" source="com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings()" target="com.google.gson.functional.DelegateTypeAdapterTest$StatsTypeAdapterFactory#numWrites">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1079" source="com.google.gson.functional.EnumTest$ClassWithEnumFields.getExpectedJson()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields#value1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1080" source="com.google.gson.functional.EnumTest$ClassWithEnumFields.getExpectedJson()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields#value2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1081" source="com.google.gson.functional.EnumTest$MyEnumTypeAdapter.serialize(com.google.gson.functional.EnumTest$Roshambo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1082" source="com.google.gson.functional.EnumTest$MyEnumTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1083" source="com.google.gson.functional.EnumTest$Gender#MALE" target="com.google.gson.functional.EnumTest$Gender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1084" source="com.google.gson.functional.EnumTest$Gender#FEMALE" target="com.google.gson.functional.EnumTest$Gender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1085" source="com.google.gson.functional.EnumTest$MyEnum#VALUE1" target="com.google.gson.functional.EnumTest$MyEnum()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1086" source="com.google.gson.functional.EnumTest$MyEnum#VALUE2" target="com.google.gson.functional.EnumTest$MyEnum()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1087" source="com.google.gson.functional.EnumTest$Roshambo$1()" target="com.google.gson.functional.EnumTest$Roshambo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1088" source="com.google.gson.functional.EnumTest$Roshambo$1.defeats()" target="com.google.gson.functional.EnumTest$Roshambo#SCISSORS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1089" source="com.google.gson.functional.EnumTest$Roshambo#ROCK" target="com.google.gson.functional.EnumTest$Roshambo$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1090" source="com.google.gson.functional.EnumTest$Roshambo$2()" target="com.google.gson.functional.EnumTest$Roshambo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1091" source="com.google.gson.functional.EnumTest$Roshambo$2.defeats()" target="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1092" source="com.google.gson.functional.EnumTest$Roshambo#PAPER" target="com.google.gson.functional.EnumTest$Roshambo$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1093" source="com.google.gson.functional.EnumTest$Roshambo$3()" target="com.google.gson.functional.EnumTest$Roshambo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1094" source="com.google.gson.functional.EnumTest$Roshambo$3.defeats()" target="com.google.gson.functional.EnumTest$Roshambo#PAPER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1095" source="com.google.gson.functional.EnumTest$Roshambo#SCISSORS" target="com.google.gson.functional.EnumTest$Roshambo$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1096" source="com.google.gson.functional.EnumTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1097" source="com.google.gson.functional.EnumTest#gson" target="com.google.gson.functional.EnumTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1098" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1099" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1100" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1101" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1102" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields#value1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1103" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1104" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields#value2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1105" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1106" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization()" target="com.google.gson.functional.EnumTest$ClassWithEnumFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1107" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1108" source="com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1109" source="com.google.gson.functional.EnumTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1110" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.functional.EnumTest$Roshambo$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1111" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1112" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1113" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1114" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.common.MoreAsserts.assertContains(java.util.Collection,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1115" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1116" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1117" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1118" source="com.google.gson.functional.EnumTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1119" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.functional.EnumTest$Roshambo$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1120" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1121" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1122" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1123" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1124" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1125" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1126" source="com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1127" source="com.google.gson.functional.EnumTest.testEnumCaseMapping()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1128" source="com.google.gson.functional.EnumTest.testEnumCaseMapping()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1129" source="com.google.gson.functional.EnumTest.testEnumCaseMapping()" target="com.google.gson.functional.EnumTest$Gender#MALE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1130" source="com.google.gson.functional.EnumTest.testEnumCaseMapping()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1131" source="com.google.gson.functional.EnumTest.testEnumCaseMapping()" target="com.google.gson.functional.EnumTest$Gender#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1132" source="com.google.gson.functional.EnumTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1133" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1134" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.functional.EnumTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1135" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1136" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1137" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1138" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1139" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.functional.EnumTest$Roshambo#PAPER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1140" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1141" source="com.google.gson.functional.EnumTest.testEnumSet()" target="com.google.gson.functional.EnumTest$Roshambo#SCISSORS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1142" source="com.google.gson.functional.EnumTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1143" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1144" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1145" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1146" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.functional.EnumTest$Roshambo$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1147" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1148" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1149" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.functional.EnumTest$Roshambo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1150" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1151" source="com.google.gson.functional.EnumTest.testEnumSubclass()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1152" source="com.google.gson.functional.EnumTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1153" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1154" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.functional.EnumTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1155" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1156" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1157" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1158" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.common.MoreAsserts.assertContains(java.util.Collection,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1159" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1160" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.functional.EnumTest$Roshambo#PAPER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1161" source="com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1162" source="com.google.gson.functional.EnumTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1163" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1164" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1165" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.functional.EnumTest$MyEnumTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1166" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1167" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1168" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1169" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1170" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.functional.EnumTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1171" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1172" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1173" source="com.google.gson.functional.EnumTest#gson" target="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1174" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.functional.EnumTest$Roshambo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1175" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.functional.EnumTest$Roshambo#ROCK">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1176" source="com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1177" source="com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1178" source="com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1179" source="com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1180" source="com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization()" target="com.google.gson.functional.EnumTest$MyEnum#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1181" source="com.google.gson.functional.EnumTest.testTopLevelEnumSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1182" source="com.google.gson.functional.EnumTest.testTopLevelEnumSerialization()" target="com.google.gson.functional.EnumTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1183" source="com.google.gson.functional.EnumTest.testTopLevelEnumSerialization()" target="com.google.gson.functional.EnumTest$MyEnum#VALUE1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1184" source="com.google.gson.functional.EscapingTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1185" source="com.google.gson.functional.EscapingTest#gson" target="com.google.gson.functional.EscapingTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1186" source="com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1187" source="com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters()" target="com.google.gson.functional.EscapingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1188" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1189" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1190" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1191" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1192" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.functional.EscapingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1193" source="com.google.gson.functional.EscapingTest.testEscapingObjectFields()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1194" source="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1195" source="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1196" source="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()" target="com.google.gson.functional.EscapingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1197" source="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1198" source="com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1199" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1200" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1201" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.GsonBuilder.disableHtmlEscaping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1202" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1203" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1204" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1205" source="com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1206" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1207" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1208" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1209" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="com.google.gson.functional.EscapingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1210" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1211" source="com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1212" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy#typeToSkip" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1213" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy.shouldSkipClass(java.lang.Class)" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy#typeToSkip">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1214" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)" target="com.google.gson.FieldAttributes.getAnnotation(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1215" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1216" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1217" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1218" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1219" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1220" source="com.google.gson.functional.ExclusionStrategyFunctionalTest$1.shouldSkipClass(java.lang.Class)" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1221" source="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1222" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1223" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)" target="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1224" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)" target="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1225" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1226" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1227" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.setUp()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1228" source="com.google.gson.functional.ExclusionStrategyFunctionalTest#src" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1229" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1230" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1231" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1232" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1233" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1234" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1235" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1236" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1237" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1238" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1239" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1240" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1241" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1242" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1243" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1244" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1245" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1246" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1247" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1248" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1249" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1250" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1251" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1252" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1253" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#EXCLUDE_SAMPLE_OBJECT_FOR_TEST">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1254" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1255" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1256" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1257" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1258" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1259" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1260" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1261" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1262" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1263" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1264" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1265" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1266" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1267" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#src">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1268" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1269" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1270" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1271" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1272" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1273" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1274" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1275" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#src">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1276" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1277" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1278" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1279" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1280" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1281" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1282" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1283" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1284" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1285" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1286" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1287" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1288" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#src">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1289" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest(int,java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1290" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest.createGson(com.google.gson.ExclusionStrategy,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1291" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$MyExclusionStrategy(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1292" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1293" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1294" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1295" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1296" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1297" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1298" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1299" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#annotatedField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1300" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest#src">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1301" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#stringField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1302" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#longField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1303" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1304" source="com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode()" target="com.google.gson.functional.ExclusionStrategyFunctionalTest$SampleObjectForTest#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1305" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer)" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1306" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#a" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1307" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#b" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1308" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#c" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1309" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#d" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1310" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#e" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer,long,double,char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1311" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1312" source="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#d">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1313" source="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField#interfaceField" target="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField(com.google.gson.functional.ExposeFieldsTest$SomeInterface)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1314" source="com.google.gson.functional.ExposeFieldsTest$SomeInterfaceInstanceCreator.createInstance(java.lang.reflect.Type)" target="com.google.gson.functional.ExposeFieldsTest$SomeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1315" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1316" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1317" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1318" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.functional.ExposeFieldsTest$SomeInterfaceInstanceCreator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1319" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1320" source="com.google.gson.functional.ExposeFieldsTest#gson" target="com.google.gson.functional.ExposeFieldsTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1321" source="com.google.gson.functional.ExposeFieldsTest.setUp()" target="com.google.gson.functional.ExposeFieldsTest$SomeInterface#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1322" source="com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1323" source="com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1324" source="com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1325" source="com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1326" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1327" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1328" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1329" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1330" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1331" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields#d">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1332" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1333" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1334" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1335" source="com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1336" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1337" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1338" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1339" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField#interfaceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1340" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithInterfaceField(com.google.gson.functional.ExposeFieldsTest$SomeInterface)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1341" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest$SomeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1342" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1343" source="com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1344" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1345" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1346" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1347" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1348" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1349" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithNoExposedFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1350" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1351" source="com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1352" source="com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields(java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1353" source="com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1354" source="com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1355" source="com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()" target="com.google.gson.functional.ExposeFieldsTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1356" source="com.google.gson.functional.FieldExclusionTest$NestedClass#value" target="com.google.gson.functional.FieldExclusionTest$NestedClass(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1357" source="com.google.gson.functional.FieldExclusionTest$NestedClass.toJson()" target="com.google.gson.functional.FieldExclusionTest$NestedClass#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1358" source="com.google.gson.functional.FieldExclusionTest$Outer$Inner(java.lang.String)" target="com.google.gson.functional.FieldExclusionTest$NestedClass(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1359" source="com.google.gson.functional.FieldExclusionTest.setUp()" target="com.google.gson.functional.FieldExclusionTest$Outer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1360" source="com.google.gson.functional.FieldExclusionTest#outer" target="com.google.gson.functional.FieldExclusionTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1361" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1362" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest$Outer$Inner(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1363" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1364" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest$NestedClass.toJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1365" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1366" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1367" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest#outer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1368" source="com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest#VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1369" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1370" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.functional.FieldExclusionTest$Outer$Inner(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1371" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1372" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.functional.FieldExclusionTest$NestedClass.toJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1373" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1374" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1375" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.functional.FieldExclusionTest#outer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1376" source="com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded()" target="com.google.gson.functional.FieldExclusionTest#VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1377" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1378" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.GsonBuilder.disableInnerClassSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1379" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1380" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest$Outer$Inner(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1381" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1382" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest#outer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1383" source="com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion()" target="com.google.gson.functional.FieldExclusionTest#VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1384" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1385" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1386" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1387" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1388" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1389" source="com.google.gson.functional.FieldNamingTest.testIdentity()" target="com.google.gson.FieldNamingPolicy#IDENTITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1390" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1391" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1392" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1393" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1394" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1395" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_DASHES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1396" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1397" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1398" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1399" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1400" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1401" source="com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_UNDERSCORES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1402" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1403" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1404" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1405" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1406" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1407" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCase()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1408" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1409" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1410" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1411" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1412" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.functional.FieldNamingTest$TestNames()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1413" source="com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE_WITH_SPACES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1414" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#list" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1415" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#queue" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1416" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#set" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1417" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#sortedSet" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1418" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.listContains(int[])" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#list">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1419" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.queueContains(long[])" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#queue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1420" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.setContains(float[])" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#set">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1421" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.sortedSetContains(char[])" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#sortedSet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1422" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.append(java.lang.StringBuilder,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1423" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#list">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1424" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#queue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1425" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#set">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1426" source="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#sortedSet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1427" source="com.google.gson.functional.InheritanceTest$SubTypeOfNested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1428" source="com.google.gson.functional.InheritanceTest$SubTypeOfNested.appendFields(java.lang.StringBuilder)" target="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1429" source="com.google.gson.functional.InheritanceTest$SubTypeOfNested.appendFields(java.lang.StringBuilder)" target="com.google.gson.functional.InheritanceTest$SubTypeOfNested#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1430" source="com.google.gson.functional.InheritanceTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1431" source="com.google.gson.functional.InheritanceTest#gson" target="com.google.gson.functional.InheritanceTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1432" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1433" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1434" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1435" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1436" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1437" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1438" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1439" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Base#BASE_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1440" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Base#BASE_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1441" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1442" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1443" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1444" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1445" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1446" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Base#BASE_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1447" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1448" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1449" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1450" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1451" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1452" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1453" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1454" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1455" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1456" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1457" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1458" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1459" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1460" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1461" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1462" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1463" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1464" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1465" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1466" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1467" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1468" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1469" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1470" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1471" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1472" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1473" source="com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1474" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1475" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseArrayField(com.google.gson.common.TestTypes$Base[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1476" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1477" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1478" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1479" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1480" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1481" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1482" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseArrayField#FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1483" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1484" source="com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1485" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1486" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseCollectionField(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1487" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1488" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1489" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1490" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1491" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1492" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1493" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseArrayField#FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1494" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1495" source="com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1496" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1497" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1498" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1499" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1500" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1501" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1502" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1503" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.common.TestTypes$ClassWithBaseField#FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1504" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1505" source="com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization()" target="com.google.gson.common.TestTypes$Sub#SUB_FIELD_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1506" source="com.google.gson.functional.InheritanceTest.testSubClassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1507" source="com.google.gson.functional.InheritanceTest.testSubClassDeserialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1508" source="com.google.gson.functional.InheritanceTest.testSubClassDeserialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1509" source="com.google.gson.functional.InheritanceTest.testSubClassDeserialization()" target="com.google.gson.functional.InheritanceTest$SubTypeOfNested#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1510" source="com.google.gson.functional.InheritanceTest.testSubClassSerialization()" target="com.google.gson.functional.InheritanceTest$SubTypeOfNested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1511" source="com.google.gson.functional.InheritanceTest.testSubClassSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1512" source="com.google.gson.functional.InheritanceTest.testSubClassSerialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1513" source="com.google.gson.functional.InheritanceTest.testSubClassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1514" source="com.google.gson.functional.InheritanceTest.testSubClassSerialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1515" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1516" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.listContains(int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1517" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.queueContains(long[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1518" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.setContains(float[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1519" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.sortedSetContains(char[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1520" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1521" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1522" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection(java.util.List,java.util.Queue,java.util.Set,java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1523" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization()" target="com.google.gson.functional.InheritanceTest$ClassWithSubInterfacesOfCollection.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1524" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1525" source="com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization()" target="com.google.gson.functional.InheritanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1526" source="com.google.gson.functional.InstanceCreatorTest$4.createInstance(java.lang.reflect.Type)" target="com.google.gson.functional.InstanceCreatorTest$SubArrayList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1527" source="com.google.gson.functional.InstanceCreatorTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1528" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.functional.InstanceCreatorTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1529" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.functional.InstanceCreatorTest$SubArrayList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1530" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.functional.InstanceCreatorTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1531" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1532" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1533" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1534" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1535" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1536" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1537" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType()" target="SubArrayList#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1538" source="com.google.gson.functional.InstanceCreatorTest$7()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1539" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.functional.InstanceCreatorTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1540" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1541" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1542" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1543" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.functional.InstanceCreatorTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1544" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1545" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1546" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1547" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1548" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="java.util.SortedSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1549" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType()" target="SubTreeSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1550" source="com.google.gson.functional.InstanceCreatorTest$1.createInstance(java.lang.reflect.Type)" target="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1551" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1552" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1553" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.functional.InstanceCreatorTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1554" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1555" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1556" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1557" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1558" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType()" target="com.google.gson.common.TestTypes$Base#baseName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1559" source="com.google.gson.functional.InstanceCreatorTest$3.createInstance(java.lang.reflect.Type)" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1560" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1561" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1562" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.functional.InstanceCreatorTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1563" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1564" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1565" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1566" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1567" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$ClassWithBaseField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1568" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$ClassWithBaseField#base">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1569" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1570" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField()" target="com.google.gson.common.TestTypes$Sub#subName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1571" source="com.google.gson.functional.InstanceCreatorTest$2.createInstance(java.lang.reflect.Type)" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1572" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1573" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1574" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.functional.InstanceCreatorTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1575" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1576" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1577" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1578" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1579" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.common.TestTypes$Sub#subName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1580" source="com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject()" target="com.google.gson.common.TestTypes$Sub#SUB_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1581" source="com.google.gson.functional.InterfaceTest$TestObject#someStringValue" target="com.google.gson.functional.InterfaceTest$TestObject(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1582" source="com.google.gson.functional.InterfaceTest$TestObjectWrapper#obj" target="com.google.gson.functional.InterfaceTest$TestObjectWrapper(com.google.gson.functional.InterfaceTest$TestObjectInterface)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1583" source="com.google.gson.functional.InterfaceTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1584" source="com.google.gson.functional.InterfaceTest.setUp()" target="com.google.gson.functional.InterfaceTest$TestObject(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1585" source="com.google.gson.functional.InterfaceTest#gson" target="com.google.gson.functional.InterfaceTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1586" source="com.google.gson.functional.InterfaceTest#obj" target="com.google.gson.functional.InterfaceTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1587" source="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()" target="com.google.gson.functional.InterfaceTest$TestObjectWrapper(com.google.gson.functional.InterfaceTest$TestObjectInterface)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1588" source="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1589" source="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()" target="com.google.gson.functional.InterfaceTest#obj">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1590" source="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()" target="com.google.gson.functional.InterfaceTest#OBJ_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1591" source="com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField()" target="com.google.gson.functional.InterfaceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1592" source="com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1593" source="com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface()" target="com.google.gson.functional.InterfaceTest#OBJ_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1594" source="com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface()" target="com.google.gson.functional.InterfaceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1595" source="com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface()" target="com.google.gson.functional.InterfaceTest#obj">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1596" source="com.google.gson.functional.InternationalizationTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1597" source="com.google.gson.functional.InternationalizationTest#gson" target="com.google.gson.functional.InternationalizationTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1598" source="com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1599" source="com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization()" target="com.google.gson.functional.InternationalizationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1600" source="com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1601" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1602" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization()" target="com.google.gson.functional.InternationalizationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1603" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1604" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1605" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization()" target="com.google.gson.functional.InternationalizationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1606" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1607" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1608" source="com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization()" target="com.google.gson.functional.InternationalizationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1609" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1610" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1611" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1612" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A$JsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1613" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#value" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1614" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$B(java.lang.String)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1615" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1616" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1617" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1618" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1619" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1620" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1621" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1622" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1623" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1624" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C#value" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1625" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$ClassWithIncorrectJsonAdapter#value" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$ClassWithIncorrectJsonAdapter(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1626" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1627" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1628" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.read(com.google.gson.stream.JsonReader)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1629" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1630" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$FooJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1631" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#firstName" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1632" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#lastName" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1633" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1634" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1635" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1636" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1637" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1638" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1639" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1640" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1641" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1642" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1643" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#firstName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1644" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$UserJsonAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#lastName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1645" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAR" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1646" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAZ" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1647" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1648" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1649" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$ClassWithIncorrectJsonAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1650" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1651" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1652" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1653" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1654" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1655" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1656" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1657" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1658" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1659" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1660" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1661" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1662" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#firstName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1663" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$User#lastName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1664" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1665" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1666" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$Foo#BAZ">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1667" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1668" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1669" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1670" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$1.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1671" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$C$JsonAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1672" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1673" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1674" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1675" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1676" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1677" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1678" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1679" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1680" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1681" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$3.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1682" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1683" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1684" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1685" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1686" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1687" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1688" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1689" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1690" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1691" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$2.serialize(com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1692" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1693" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1694" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1695" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1696" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1697" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1698" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1699" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1700" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1701" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$A#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1702" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1703" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1704" source="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked()" target="com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$B(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1705" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#user" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1706" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2#user" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1707" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget#part" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1708" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part1" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1709" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part2" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1710" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo#part" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1711" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1712" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1713" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1714" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1715" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1716" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1717" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1718" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1719" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1720" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#name" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1721" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1722" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1723" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1724" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$PartJsonFieldAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1725" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1726" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1727" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1728" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1729" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#name" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1730" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1731" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1732" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1733" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserClassAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1734" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1735" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1736" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1737" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$UserFieldAnnotationAdapter.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1738" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1739" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1740" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1741" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1742" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1743" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1744" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1745" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gizmo#part">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1746" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1747" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1748" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1749" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1750" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1751" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1752" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1753" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#user">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1754" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1755" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1756" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1757" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1758" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1759" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1760" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1761" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer2#user">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1762" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1763" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1764" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1765" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GizmoPartTypeAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1766" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1767" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1768" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1769" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1770" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1771" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1772" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1773" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1774" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1775" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Gadget#part">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1776" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1777" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1778" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1779" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Part#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1780" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1781" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$GadgetWithTwoParts#part2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1782" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1783" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1784" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$RegisteredUserAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1785" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1786" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1787" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer(com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1788" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1789" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1790" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1791" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1792" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$User#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1793" source="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter()" target="com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest$Computer#user">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1794" source="com.google.gson.functional.JsonParserTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1795" source="com.google.gson.functional.JsonParserTest#gson" target="com.google.gson.functional.JsonParserTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1796" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1797" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1798" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1799" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1800" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1801" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1802" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1803" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1804" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1805" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1806" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1807" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1808" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1809" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1810" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1811" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1812" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1813" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1814" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1815" source="com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree()" target="com.google.gson.common.TestTypes$Nested#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1816" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1817" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1818" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1819" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1820" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1821" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1822" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1823" source="com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1824" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1825" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.JsonParser.parse(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1826" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.JsonObject.remove(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1827" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1828" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1829" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1830" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1831" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1832" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1833" source="com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1834" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1835" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1836" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1837" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1838" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1839" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1840" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1841" source="com.google.gson.functional.JsonParserTest.testDeserializingCustomTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1842" source="com.google.gson.functional.JsonParserTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1843" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.functional.JsonParserTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1844" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1845" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1846" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.functional.JsonParserTest.list(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1847" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1848" source="com.google.gson.functional.JsonParserTest.testExtraCommasInArrays()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1849" source="com.google.gson.functional.JsonParserTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1850" source="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()" target="com.google.gson.functional.JsonParserTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1851" source="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1852" source="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1853" source="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1854" source="com.google.gson.functional.JsonParserTest.testExtraCommasInMaps()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1855" source="com.google.gson.functional.JsonParserTest.testParseInvalidJson()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1856" source="com.google.gson.functional.JsonParserTest.testParseInvalidJson()" target="com.google.gson.functional.JsonParserTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1857" source="com.google.gson.functional.JsonParserTest.testParseInvalidJson()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1858" source="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives(long,int,boolean,java.lang.String,float)" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1859" source="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives#f" target="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives(long,int,boolean,java.lang.String,float)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1860" source="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1861" source="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1862" source="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)" target="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1863" source="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)" target="com.google.gson.JsonPrimitive.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1864" source="com.google.gson.functional.JsonTreeTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1865" source="com.google.gson.functional.JsonTreeTest#gson" target="com.google.gson.functional.JsonTreeTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1866" source="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1867" source="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1868" source="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1869" source="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()" target="com.google.gson.functional.JsonTreeTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1870" source="com.google.gson.functional.JsonTreeTest.testJsonTreeNull()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1871" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives(long,int,boolean,java.lang.String,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1872" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1873" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1874" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1875" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.functional.JsonTreeTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1876" source="com.google.gson.functional.JsonTreeTest.testJsonTreeToString()" target="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1877" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1878" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1879" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1880" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1881" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1882" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1883" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1884" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1885" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1886" source="com.google.gson.functional.JsonTreeTest.testToJsonTree()" target="com.google.gson.functional.JsonTreeTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1887" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.functional.JsonTreeTest$SubTypeOfBagOfPrimitives(long,int,boolean,java.lang.String,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1888" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1889" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1890" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1891" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1892" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.functional.JsonTreeTest.assertContains(com.google.gson.JsonObject,com.google.gson.JsonPrimitive)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1893" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1894" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1895" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1896" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.functional.JsonTreeTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1897" source="com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1898" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#x" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1899" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#y" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1900" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.equals(java.lang.Object)" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1901" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.equals(java.lang.Object)" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1902" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.hashCode()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1903" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.hashCode()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1904" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.toString()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1905" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point.toString()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1906" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1907" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1908" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1909" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1910" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1911" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1912" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1913" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.disabled_testTwoTypesCollapseToOneSerialize()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1914" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$8()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1915" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1916" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1917" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1918" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1919" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1920" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1921" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1922" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1923" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$PointWithProperty#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1924" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$7()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1925" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1926" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1927" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1928" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$PointWithProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1929" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1930" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1931" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1932" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1933" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1934" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$PointWithProperty#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1935" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1936" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1937" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1938" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1939" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1940" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1941" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1942" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1943" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1944" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1945" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1946" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1947" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1948" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1949" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1950" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1951" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1952" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1953" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1954" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$Point(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1955" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1956" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1957" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1958" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1959" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter()" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1960" source="com.google.gson.functional.MapAsArrayTypeAdapterTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1961" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1962" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1963" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1964" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1965" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.functional.MapAsArrayTypeAdapterTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1966" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1967" source="com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1968" source="com.google.gson.functional.MapTest$MapClass.addBase(java.lang.String,com.google.gson.common.TestTypes$Base)" target="com.google.gson.functional.MapTest$MapClass#bases">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1969" source="com.google.gson.functional.MapTest$MapClass.addSub(java.lang.String,com.google.gson.common.TestTypes$Sub)" target="com.google.gson.functional.MapTest$MapClass#subs">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1970" source="com.google.gson.functional.MapTest$MyParameterizedMap#foo" target="com.google.gson.functional.MapTest$MyParameterizedMap(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1971" source="com.google.gson.functional.MapTest$Point#x" target="com.google.gson.functional.MapTest$Point(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1972" source="com.google.gson.functional.MapTest$Point#y" target="com.google.gson.functional.MapTest$Point(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1973" source="com.google.gson.functional.MapTest$Point.equals(java.lang.Object)" target="com.google.gson.functional.MapTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1974" source="com.google.gson.functional.MapTest$Point.equals(java.lang.Object)" target="com.google.gson.functional.MapTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1975" source="com.google.gson.functional.MapTest$Point.hashCode()" target="com.google.gson.functional.MapTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1976" source="com.google.gson.functional.MapTest$Point.hashCode()" target="com.google.gson.functional.MapTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1977" source="com.google.gson.functional.MapTest$Point.toString()" target="com.google.gson.functional.MapTest$Point#x">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1978" source="com.google.gson.functional.MapTest$Point.toString()" target="com.google.gson.functional.MapTest$Point#y">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1979" source="com.google.gson.functional.MapTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1980" source="com.google.gson.functional.MapTest#gson" target="com.google.gson.functional.MapTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e1981" source="com.google.gson.functional.MapTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1982" source="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1983" source="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1984" source="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1985" source="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1986" source="com.google.gson.functional.MapTest.testBooleanKeyDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1987" source="com.google.gson.functional.MapTest.testComplexKeysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1988" source="com.google.gson.functional.MapTest.testComplexKeysDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1989" source="com.google.gson.functional.MapTest.testComplexKeysDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1990" source="com.google.gson.functional.MapTest.testComplexKeysDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1991" source="com.google.gson.functional.MapTest.testComplexKeysDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1992" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.functional.MapTest$Point(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1993" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1994" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1995" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1996" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1997" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1998" source="com.google.gson.functional.MapTest.testComplexKeysSerialization()" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e1999" source="com.google.gson.functional.MapTest$1.serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2000" source="com.google.gson.functional.MapTest$1.serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2001" source="com.google.gson.functional.MapTest$1.serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2002" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2003" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2004" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2005" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2006" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2007" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2008" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2009" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2010" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2011" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2012" source="com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2013" source="com.google.gson.functional.MapTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2014" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.functional.MapTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2015" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2016" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2017" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.functional.MapTest.newMap(K,V,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2018" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2019" source="com.google.gson.functional.MapTest.testDeerializeMapOfMaps()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2020" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.functional.MapTest$MapWithGeneralMapParameters()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2021" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2022" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2023" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2024" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2025" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.functional.MapTest$MapWithGeneralMapParameters#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2026" source="com.google.gson.functional.MapTest.testGeneralMapField()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2027" source="com.google.gson.functional.MapTest#gson" target="com.google.gson.functional.MapTest.testGeneralMapField()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2028" source="com.google.gson.functional.MapTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2029" source="com.google.gson.functional.MapTest.testHashMapDeserialization()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2030" source="com.google.gson.functional.MapTest.testHashMapDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2031" source="com.google.gson.functional.MapTest.testHashMapDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2032" source="com.google.gson.functional.MapTest.testHashMapDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2033" source="com.google.gson.functional.MapTest.testHashMapDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2034" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.functional.MapTest$MapClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2035" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2036" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.functional.MapTest$MapClass.addBase(java.lang.String,com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2037" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.functional.MapTest$MapClass.addSub(java.lang.String,com.google.gson.common.TestTypes$Sub)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2038" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2039" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2040" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2041" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2042" source="com.google.gson.functional.MapTest.testInterfaceTypeMap()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2043" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.functional.MapTest$MapClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2044" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.common.TestTypes$Sub()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2045" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.functional.MapTest$MapClass.addBase(java.lang.String,com.google.gson.common.TestTypes$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2046" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.functional.MapTest$MapClass.addSub(java.lang.String,com.google.gson.common.TestTypes$Sub)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2047" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2048" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2049" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2050" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2051" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2052" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2053" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2054" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2055" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2056" source="com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer()" target="com.google.gson.common.TestTypes$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2057" source="com.google.gson.functional.MapTest.testMapDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2058" source="com.google.gson.functional.MapTest.testMapDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2059" source="com.google.gson.functional.MapTest.testMapDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2060" source="com.google.gson.functional.MapTest.testMapDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2061" source="com.google.gson.functional.MapTest.testMapDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2062" source="com.google.gson.functional.MapTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2063" source="com.google.gson.functional.MapTest.testMapDeserializationEmpty()" target="com.google.gson.functional.MapTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2064" source="com.google.gson.functional.MapTest.testMapDeserializationEmpty()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2065" source="com.google.gson.functional.MapTest.testMapDeserializationEmpty()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2066" source="com.google.gson.functional.MapTest.testMapDeserializationEmpty()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2067" source="com.google.gson.functional.MapTest.testMapDeserializationEmpty()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2068" source="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2069" source="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2070" source="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2071" source="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2072" source="com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2073" source="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2074" source="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2075" source="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2076" source="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2077" source="com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2078" source="com.google.gson.functional.MapTest$9()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2079" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()" target="com.google.gson.functional.MapTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2080" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2081" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2082" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2083" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullKey()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2084" source="com.google.gson.functional.MapTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2085" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()" target="com.google.gson.functional.MapTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2086" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2087" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2088" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2089" source="com.google.gson.functional.MapTest.testMapDeserializationWithNullValue()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2090" source="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2091" source="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2092" source="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2093" source="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2094" source="com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2095" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2096" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2097" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2098" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.functional.MapTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2099" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2100" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2101" source="com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2102" source="com.google.gson.functional.MapTest.testMapOfMapDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2103" source="com.google.gson.functional.MapTest.testMapOfMapDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2104" source="com.google.gson.functional.MapTest.testMapOfMapDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2105" source="com.google.gson.functional.MapTest.testMapOfMapDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2106" source="com.google.gson.functional.MapTest.testMapOfMapDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2107" source="com.google.gson.functional.MapTest.testMapOfMapSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2108" source="com.google.gson.functional.MapTest.testMapOfMapSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2109" source="com.google.gson.functional.MapTest.testMapSerialization()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2110" source="com.google.gson.functional.MapTest.testMapSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2111" source="com.google.gson.functional.MapTest.testMapSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2112" source="com.google.gson.functional.MapTest.testMapSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2113" source="com.google.gson.functional.MapTest.testMapSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2114" source="com.google.gson.functional.MapTest.testMapSerializationEmpty()" target="com.google.gson.functional.MapTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2115" source="com.google.gson.functional.MapTest.testMapSerializationEmpty()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2116" source="com.google.gson.functional.MapTest.testMapSerializationEmpty()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2117" source="com.google.gson.functional.MapTest.testMapSerializationEmpty()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2118" source="com.google.gson.functional.MapTest.testMapSerializationEmpty()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2119" source="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2120" source="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2121" source="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2122" source="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2123" source="com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2124" source="com.google.gson.functional.MapTest$8()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2125" source="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()" target="com.google.gson.functional.MapTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2126" source="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2127" source="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2128" source="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2129" source="com.google.gson.functional.MapTest.testMapSerializationWithNullKey()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2130" source="com.google.gson.functional.MapTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2131" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()" target="com.google.gson.functional.MapTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2132" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2133" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2134" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2135" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValue()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2136" source="com.google.gson.functional.MapTest$7()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2137" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2138" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2139" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2140" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.functional.MapTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2141" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2142" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2143" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2144" source="com.google.gson.functional.MapTest#gson" target="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2145" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2146" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValues()" target="com.google.gson.functional.MapTest$ClassWithAMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2147" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValues()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2148" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValues()" target="com.google.gson.functional.MapTest$ClassWithAMap#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2149" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValues()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2150" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2151" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2152" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2153" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.functional.MapTest$ClassWithAMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2154" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2155" source="com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized()" target="com.google.gson.functional.MapTest$ClassWithAMap#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2156" source="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2157" source="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2158" source="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2159" source="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2160" source="com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2161" source="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2162" source="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2163" source="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2164" source="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2165" source="com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2166" source="com.google.gson.functional.MapTest$1.createInstance(java.lang.reflect.Type)" target="com.google.gson.functional.MapTest$MyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2167" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2168" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2169" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2170" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.functional.MapTest$MyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2171" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2172" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2173" source="com.google.gson.functional.MapTest.testMapSubclassDeserialization()" target="com.google.gson.functional.MapTest$MyMap#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2174" source="com.google.gson.functional.MapTest.testMapSubclassSerialization()" target="com.google.gson.functional.MapTest$MyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2175" source="com.google.gson.functional.MapTest.testMapSubclassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2176" source="com.google.gson.functional.MapTest.testMapSubclassSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2177" source="com.google.gson.functional.MapTest.testMapSubclassSerialization()" target="com.google.gson.functional.MapTest$MyMap#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2178" source="com.google.gson.functional.MapTest.testMapWithQuotes()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2179" source="com.google.gson.functional.MapTest.testMapWithQuotes()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2180" source="com.google.gson.functional.MapTest.testNumberKeyDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2181" source="com.google.gson.functional.MapTest.testNumberKeyDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2182" source="com.google.gson.functional.MapTest.testNumberKeyDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2183" source="com.google.gson.functional.MapTest.testNumberKeyDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2184" source="com.google.gson.functional.MapTest.testNumberKeyDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2185" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.functional.MapTest$MyParameterizedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2186" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2187" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2188" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2189" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2190" source="com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2191" source="com.google.gson.functional.MapTest.testRawMapSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2192" source="com.google.gson.functional.MapTest.testRawMapSerialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2193" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2194" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2195" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2196" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2197" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2198" source="com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey()" target="java.lang.Boolean#TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2199" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2200" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2201" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2202" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.functional.MapTest.newMap(K,V,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2203" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2204" source="com.google.gson.functional.MapTest.testSerializeMapOfMaps()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2205" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2206" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2207" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2208" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2209" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.GsonBuilder.setPrettyPrinting()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2210" source="com.google.gson.functional.MapTest.testSerializeMaps()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2211" source="com.google.gson.functional.MapTest.testSortedMap()" target="com.google.gson.functional.MapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2212" source="com.google.gson.functional.MapTest.testSortedMap()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2213" source="com.google.gson.functional.MapTest.testSortedMap()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2214" source="com.google.gson.functional.MapTest.testSortedMap()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2215" source="com.google.gson.functional.MapTest.testSortedMap()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2216" source="com.google.gson.functional.MapTest.testStringKeyDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2217" source="com.google.gson.functional.MapTest.testStringKeyDeserialization()" target="com.google.gson.functional.MapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2218" source="com.google.gson.functional.MapTest.testStringKeyDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2219" source="com.google.gson.functional.MapTest.testStringKeyDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2220" source="com.google.gson.functional.MapTest.testStringKeyDeserialization()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2221" source="com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2222" source="com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey()" target="com.google.gson.functional.MapTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2223" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base#b" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2224" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithBaseFields#b" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$Base)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2225" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields#collection" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2226" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields#map" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2227" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields#collection" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2228" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields#map" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2229" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithParameterizedBaseFields#b" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithParameterizedBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2230" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase#t" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase(T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2231" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2232" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub#s" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2233" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2234" source="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub#s" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2235" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2236" source="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson" target="com.google.gson.functional.MoreSpecificTypeSerializationTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2237" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2238" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2239" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2240" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2241" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2242" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2243" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2244" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2245" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2246" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2247" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2248" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2249" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfParameterizedBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2250" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2251" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2252" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2253" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2254" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2255" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Base(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2256" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2257" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithContainersOfBaseFields(java.util.Collection,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2258" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2259" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2260" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2261" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2262" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2263" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithParameterizedBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedBase)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2264" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ParameterizedSub(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2265" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2266" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2267" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$ClassWithBaseFields(com.google.gson.functional.MoreSpecificTypeSerializationTest$Base)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2268" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest$Sub(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2269" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2270" source="com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields()" target="com.google.gson.functional.MoreSpecificTypeSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2271" source="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName#value" target="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName(long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2272" source="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Double)" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer,java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2273" source="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer)" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer,java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2274" source="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields#a" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer,java.lang.Double)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2275" source="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields#b" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer,java.lang.Double)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2276" source="com.google.gson.functional.NamingPolicyTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2277" source="com.google.gson.functional.NamingPolicyTest#builder" target="com.google.gson.functional.NamingPolicyTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2278" source="com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2279" source="com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2280" source="com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName()" target="com.google.gson.functional.NamingPolicyTest$AtName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2281" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2282" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2283" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2284" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2285" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2286" source="com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy()" target="com.google.gson.functional.NamingPolicyTest$ClassWithComplexFieldName#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2287" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.GsonBuilder.setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2288" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.functional.NamingPolicyTest$UpperCaseNamingStrategy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2289" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2290" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2291" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2292" source="com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2293" source="com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2294" source="com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.functional.NamingPolicyTest$ClassWithDuplicateFields(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2295" source="com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2296" source="com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2297" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2298" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2299" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2300" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2301" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_DASHES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2302" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2303" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2304" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2305" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2306" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2307" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2308" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2309" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_DASHES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2310" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2311" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2312" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2313" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2314" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2315" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_UNDERSCORES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2316" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2317" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2318" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2319" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2320" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2321" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2322" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2323" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_UNDERSCORES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2324" source="com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2325" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2326" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2327" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2328" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2329" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2330" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2331" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2332" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2333" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2334" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2335" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2336" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2337" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2338" source="com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2339" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2340" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2341" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2342" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2343" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2344" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2345" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#f">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2346" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2347" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2348" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2349" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2350" source="com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2351" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2352" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2353" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2354" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2355" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE_WITH_SPACES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2356" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2357" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2358" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2359" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2360" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2361" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2362" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.functional.NamingPolicyTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2363" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE_WITH_SPACES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2364" source="com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation()" target="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2365" source="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#str1" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2366" source="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_STRING_DEFAULT" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2367" source="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer.serialize(com.google.gson.common.TestTypes$ClassWithObjects,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2368" source="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer.serialize(com.google.gson.common.TestTypes$ClassWithObjects,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2369" source="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer.serialize(com.google.gson.common.TestTypes$ClassWithObjects,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2370" source="com.google.gson.functional.NullObjectAndFieldTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2371" source="com.google.gson.functional.NullObjectAndFieldTest.setUp()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2372" source="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder" target="com.google.gson.functional.NullObjectAndFieldTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2373" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2374" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2375" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2376" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2377" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#array">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2378" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_STRING_DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2379" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#str1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2380" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#str2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2381" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_INT_DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2382" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#int1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2383" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#int2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2384" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#MY_BOOLEAN_DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2385" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#bool1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2386" source="com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithInitializedMembers#bool2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2387" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2388" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithObjectsSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2389" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2390" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.common.TestTypes$ClassWithObjects(com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2391" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2392" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2393" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2394" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls()" target="com.google.gson.common.TestTypes$ClassWithObjects#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2395" source="com.google.gson.functional.NullObjectAndFieldTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2396" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2397" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2398" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.functional.NullObjectAndFieldTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2399" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2400" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2401" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2402" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2403" source="com.google.gson.functional.NullObjectAndFieldTest$1.serialize(com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2404" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2405" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2406" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2407" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2408" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2409" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2410" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2411" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2412" source="com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2413" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2414" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2415" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2416" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()" target="com.google.gson.common.TestTypes$ClassWithObjects#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2417" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls()" target="com.google.gson.common.TestTypes$ClassWithObjects#bag">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2418" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2419" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2420" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2421" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ObjectWithField#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2422" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2423" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithMembers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2424" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2425" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2426" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2427" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithMembers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2428" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2429" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2430" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2431" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithMembers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2432" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2433" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2434" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2435" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls()" target="com.google.gson.common.TestTypes$ClassWithObjects(com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2436" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2437" source="com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2438" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2439" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2440" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2441" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2442" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2443" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2444" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2445" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithNullWrappedPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2446" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2447" source="com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2448" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2449" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2450" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2451" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2452" source="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder" target="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2453" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2454" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2455" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2456" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2457" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.functional.NullObjectAndFieldTest$ClassWithMembers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2458" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2459" source="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder" target="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2460" source="com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2461" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2462" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2463" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2464" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2465" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2466" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2467" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2468" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()" target="com.google.gson.functional.NullObjectAndFieldTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2469" source="com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2470" source="com.google.gson.functional.ObjectTest$ArrayOfArrays()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2471" source="com.google.gson.functional.ObjectTest$ArrayOfArrays#elements" target="com.google.gson.functional.ObjectTest$ArrayOfArrays()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2472" source="com.google.gson.functional.ObjectTest$ArrayOfArrays()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2473" source="com.google.gson.functional.ObjectTest$ArrayOfArrays()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2474" source="com.google.gson.functional.ObjectTest$ArrayOfArrays.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2475" source="com.google.gson.functional.ObjectTest$ArrayOfArrays.getExpectedJson()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2476" source="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor#a" target="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2477" source="com.google.gson.functional.ObjectTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2478" source="com.google.gson.functional.ObjectTest#gson" target="com.google.gson.functional.ObjectTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2479" source="com.google.gson.functional.ObjectTest.setUp()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2480" source="com.google.gson.functional.ObjectTest.tearDown()" target="com.google.gson.functional.ObjectTest#oldTimeZone">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2481" source="com.google.gson.functional.ObjectTest$3.serialize(com.google.gson.common.TestTypes$ClassWithNoFields,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2482" source="com.google.gson.functional.ObjectTest$4()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2483" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2484" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2485" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.functional.ObjectTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2486" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2487" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2488" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2489" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.functional.ObjectTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2490" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2491" source="com.google.gson.functional.ObjectTest#gson" target="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2492" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2493" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2494" source="com.google.gson.functional.ObjectTest$2()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2495" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2496" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization()" target="com.google.gson.functional.ObjectTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2497" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2498" source="com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2499" source="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2500" source="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2501" source="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2502" source="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2503" source="com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2504" source="com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2505" source="com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization()" target="com.google.gson.functional.ObjectTest$ArrayOfArrays.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2506" source="com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2507" source="com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2508" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()" target="com.google.gson.common.TestTypes$ClassWithObjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2509" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2510" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2511" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()" target="com.google.gson.common.TestTypes$ClassWithArray(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2512" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2513" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()" target="com.google.gson.common.TestTypes$ArrayOfObjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2514" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()" target="com.google.gson.common.TestTypes$ArrayOfObjects.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2515" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2516" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2517" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization()" target="com.google.gson.common.TestTypes$ArrayOfObjects#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2518" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization()" target="com.google.gson.common.TestTypes$ArrayOfObjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2519" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization()" target="com.google.gson.common.TestTypes$ArrayOfObjects.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2520" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2521" source="com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2522" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2523" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2524" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2525" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2526" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2527" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2528" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2529" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2530" source="com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2531" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2532" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2533" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2534" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2535" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2536" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2537" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2538" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2539" source="com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2540" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2541" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2542" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2543" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2544" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2545" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization()" target="com.google.gson.common.TestTypes$ClassWithNoFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2546" source="com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2547" source="com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization()" target="com.google.gson.functional.ObjectTest$ClassWithObjectField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2548" source="com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2549" source="com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization()" target="com.google.gson.functional.ObjectTest$ClassWithObjectField#member">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2550" source="com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2551" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2552" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithTransientFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2553" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2554" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithTransientFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2555" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2556" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2557" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored()" target="com.google.gson.common.TestTypes$ClassWithTransientFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2558" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored()" target="com.google.gson.common.TestTypes$ClassWithTransientFields#transientLongValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2559" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization()" target="com.google.gson.common.TestTypes$ClassWithTransientFields(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2560" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization()" target="com.google.gson.common.TestTypes$ClassWithTransientFields.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2561" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2562" source="com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2563" source="com.google.gson.functional.ObjectTest.testDateAsMapObjectField()" target="com.google.gson.functional.ObjectTest$HasObjectMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2564" source="com.google.gson.functional.ObjectTest.testDateAsMapObjectField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2565" source="com.google.gson.functional.ObjectTest.testDateAsMapObjectField()" target="com.google.gson.functional.ObjectTest$HasObjectMap#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2566" source="com.google.gson.functional.ObjectTest.testDateAsMapObjectField()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2567" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2568" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2569" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithCollectionField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2570" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithCollectionField#children">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2571" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization()" target="com.google.gson.functional.ObjectTest$ClassWithCollectionField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2572" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2573" source="com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2574" source="com.google.gson.functional.ObjectTest.testEmptyStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2575" source="com.google.gson.functional.ObjectTest.testEmptyStringDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2576" source="com.google.gson.functional.ObjectTest.testEmptyStringDeserialization()" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2577" source="com.google.gson.functional.ObjectTest$5.createInstance(java.lang.reflect.Type)" target="com.google.gson.functional.ObjectTest$Parent$Child()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2578" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.functional.ObjectTest$Parent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2579" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2580" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2581" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.functional.ObjectTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2582" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.functional.ObjectTest$Parent$Child()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2583" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2584" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2585" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.functional.ObjectTest$Parent$Child#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2586" source="com.google.gson.functional.ObjectTest.testInnerClassDeserialization()" target="com.google.gson.functional.ObjectTest$Parent$Child#value2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2587" source="com.google.gson.functional.ObjectTest.testInnerClassSerialization()" target="com.google.gson.functional.ObjectTest$Parent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2588" source="com.google.gson.functional.ObjectTest.testInnerClassSerialization()" target="com.google.gson.functional.ObjectTest$Parent$Child()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2589" source="com.google.gson.functional.ObjectTest.testInnerClassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2590" source="com.google.gson.functional.ObjectTest.testInnerClassSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2591" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2592" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2593" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2594" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2595" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2596" source="com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2597" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2598" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2599" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2600" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2601" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2602" source="com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2603" source="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2604" source="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2605" source="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2606" source="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2607" source="com.google.gson.functional.ObjectTest.testJsonObjectSerialization()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2608" source="com.google.gson.functional.ObjectTest.testNestedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2609" source="com.google.gson.functional.ObjectTest.testNestedDeserialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2610" source="com.google.gson.functional.ObjectTest.testNestedDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2611" source="com.google.gson.functional.ObjectTest.testNestedDeserialization()" target="com.google.gson.common.TestTypes$Nested#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2612" source="com.google.gson.functional.ObjectTest.testNestedSerialization()" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2613" source="com.google.gson.functional.ObjectTest.testNestedSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2614" source="com.google.gson.functional.ObjectTest.testNestedSerialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2615" source="com.google.gson.functional.ObjectTest.testNestedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2616" source="com.google.gson.functional.ObjectTest.testNestedSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2617" source="com.google.gson.functional.ObjectTest.testNullArraysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2618" source="com.google.gson.functional.ObjectTest.testNullArraysDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2619" source="com.google.gson.functional.ObjectTest.testNullArraysDeserialization()" target="com.google.gson.common.TestTypes$ClassWithArray#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2620" source="com.google.gson.functional.ObjectTest.testNullArraysDeserialization()" target="com.google.gson.common.TestTypes$ClassWithArray#array">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2621" source="com.google.gson.functional.ObjectTest.testNullDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2622" source="com.google.gson.functional.ObjectTest.testNullDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2623" source="com.google.gson.functional.ObjectTest.testNullDeserialization()" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2624" source="com.google.gson.functional.ObjectTest.testNullFieldsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2625" source="com.google.gson.functional.ObjectTest.testNullFieldsDeserialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2626" source="com.google.gson.functional.ObjectTest.testNullFieldsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2627" source="com.google.gson.functional.ObjectTest.testNullFieldsDeserialization()" target="com.google.gson.common.TestTypes$Nested#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2628" source="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2629" source="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2630" source="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()" target="com.google.gson.common.TestTypes$Nested.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2631" source="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2632" source="com.google.gson.functional.ObjectTest.testNullFieldsSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2633" source="com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2634" source="com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2635" source="com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithObjects#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2636" source="com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization()" target="com.google.gson.common.TestTypes$ClassWithObjects#bag">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2637" source="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2638" source="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2639" source="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2640" source="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#DEFAULT_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2641" source="com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2642" source="com.google.gson.functional.ObjectTest.testNullSerialization()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2643" source="com.google.gson.functional.ObjectTest.testNullSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2644" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2645" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2646" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2647" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2648" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2649" source="com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2650" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization()" target="com.google.gson.common.TestTypes$PrimitiveArray(long[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2651" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization()" target="com.google.gson.common.TestTypes$PrimitiveArray.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2652" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2653" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2654" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2655" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization()" target="com.google.gson.common.TestTypes$PrimitiveArray.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2656" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2657" source="com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization()" target="com.google.gson.common.TestTypes$PrimitiveArray#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2658" source="com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2659" source="com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2660" source="com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2661" source="com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithPrivateNoArgsConstructor#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2662" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2663" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.functional.ObjectTest$Product()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2664" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2665" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2666" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.functional.ObjectTest$Department()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2667" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.functional.ObjectTest$Product#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2668" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.functional.ObjectTest$Product#departments">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2669" source="com.google.gson.functional.ObjectTest.testSingletonLists()" target="com.google.gson.functional.ObjectTest$Product#attributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2670" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2671" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2672" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2673" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2674" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2675" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#c">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2676" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2677" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2678" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization()" target="com.google.gson.functional.ObjectTest$ClassWithEmptyStringFields#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2679" source="com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2680" source="com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2681" source="com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2682" source="com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2683" source="com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2684" source="com.google.gson.functional.ObjectTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2685" source="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2686" source="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()" target="com.google.gson.functional.ObjectTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2687" source="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2688" source="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2689" source="com.google.gson.functional.ObjectTest.testTruncatedDeserialization()" target="com.google.gson.functional.ObjectTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2690" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#a" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2691" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#b" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2692" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#c" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2693" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#d" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2694" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#e" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2695" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2696" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2697" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#c">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2698" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#d">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2699" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.equals(java.lang.Object)" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#e">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2700" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2701" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2702" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#c">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2703" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#d">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2704" source="com.google.gson.functional.ParameterizedTypesTest$MultiParameters.hashCode()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters#e">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2705" source="com.google.gson.functional.ParameterizedTypesTest$MyQuantity()" target="com.google.gson.functional.ParameterizedTypesTest$Quantity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2706" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2707" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterObj" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2708" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterArray" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2709" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfTypeParameters" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2710" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfTypeParameters" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2711" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfWildcardTypeParameters" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2712" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfWildcardTypeParameters" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2713" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.toString(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2714" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2715" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2716" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterObj">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2717" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#typeParameterArray">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2718" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfTypeParameters">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2719" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfTypeParameters">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2720" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#listOfWildcardTypeParameters">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2721" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables#arrayOfListOfWildcardTypeParameters">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2722" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.lang.Iterable)" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.toString(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2723" source="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.util.List[])" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.appendObjectsToBuilder(java.lang.StringBuilder,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2724" source="com.google.gson.functional.ParameterizedTypesTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2725" source="com.google.gson.functional.ParameterizedTypesTest#gson" target="com.google.gson.functional.ParameterizedTypesTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2726" source="com.google.gson.functional.ParameterizedTypesTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2727" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2728" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2729" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2730" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2731" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2732" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$Amount#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2733" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$Amount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2734" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2735" source="com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2736" source="com.google.gson.functional.ParameterizedTypesTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2737" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2738" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2739" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2740" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2741" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2742" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2743" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2744" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2745" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2746" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2747" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2748" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2749" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2750" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2751" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2752" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2753" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2754" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2755" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2756" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2757" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2758" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2759" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2760" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2761" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2762" source="com.google.gson.functional.ParameterizedTypesTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2763" source="com.google.gson.functional.ParameterizedTypesTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2764" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.functional.ParameterizedTypesTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2765" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2766" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2767" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.functional.ParameterizedTypesTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2768" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2769" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2770" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2771" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2772" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2773" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2774" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.getExpectedJson(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2775" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2776" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2777" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2778" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2779" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2780" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2781" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2782" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2783" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2784" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2785" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2786" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2787" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2788" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2789" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2790" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2791" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2792" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2793" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2794" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2795" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2796" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2797" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2798" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2799" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2800" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2801" source="com.google.gson.functional.ParameterizedTypesTest$7()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2802" source="com.google.gson.functional.ParameterizedTypesTest$8()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2803" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.functional.ParameterizedTypesTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2804" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2805" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2806" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.functional.ParameterizedTypesTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2807" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2808" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2809" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2810" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2811" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2812" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2813" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.getExpectedJson(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2814" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2815" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2816" source="com.google.gson.functional.ParameterizedTypesTest$9()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2817" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2818" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2819" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2820" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2821" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2822" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2823" source="com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2824" source="com.google.gson.functional.ParameterizedTypesTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2825" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2826" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2827" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2828" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2829" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2830" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2831" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2832" source="com.google.gson.functional.ParameterizedTypesTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2833" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$MultiParameters(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2834" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2835" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2836" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2837" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2838" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2839" source="com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2840" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2841" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2842" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2843" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2844" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2845" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2846" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2847" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2848" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2849" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2850" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2851" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2852" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2853" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2854" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2855" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2856" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2857" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2858" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2859" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2860" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2861" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2862" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2863" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2864" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2865" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2866" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2867" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables(T,T[],java.util.List,java.util.List[],java.util.List,java.util.List[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2868" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2869" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest$ObjectWithTypeVariables.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2870" source="com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization()" target="com.google.gson.functional.ParameterizedTypesTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2871" source="com.google.gson.functional.PrettyPrintingTest.print(java.lang.String)" target="com.google.gson.functional.PrettyPrintingTest#DEBUG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2872" source="com.google.gson.functional.PrettyPrintingTest.print(java.lang.String)" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2873" source="com.google.gson.functional.PrettyPrintingTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2874" source="com.google.gson.functional.PrettyPrintingTest.setUp()" target="com.google.gson.GsonBuilder.setPrettyPrinting()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2875" source="com.google.gson.functional.PrettyPrintingTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2876" source="com.google.gson.functional.PrettyPrintingTest#gson" target="com.google.gson.functional.PrettyPrintingTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2877" source="com.google.gson.functional.PrettyPrintingTest.testEmptyMapField()" target="com.google.gson.functional.PrettyPrintingTest$ClassWithMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2878" source="com.google.gson.functional.PrettyPrintingTest.testEmptyMapField()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2879" source="com.google.gson.functional.PrettyPrintingTest.testEmptyMapField()" target="com.google.gson.functional.PrettyPrintingTest$ClassWithMap#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2880" source="com.google.gson.functional.PrettyPrintingTest.testEmptyMapField()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2881" source="com.google.gson.functional.PrettyPrintingTest.testMap()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2882" source="com.google.gson.functional.PrettyPrintingTest.testMap()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2883" source="com.google.gson.functional.PrettyPrintingTest.testMultipleArrays()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2884" source="com.google.gson.functional.PrettyPrintingTest.testMultipleArrays()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2885" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects()" target="com.google.gson.common.TestTypes$ArrayOfObjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2886" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2887" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects()" target="com.google.gson.functional.PrettyPrintingTest.print(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2888" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2889" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2890" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2891" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2892" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2893" source="com.google.gson.functional.PrettyPrintingTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2894" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2895" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.functional.PrettyPrintingTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2896" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2897" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2898" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2899" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.functional.PrettyPrintingTest.print(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2900" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2901" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2902" source="com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays()" target="com.google.gson.functional.PrettyPrintingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2903" source="com.google.gson.functional.PrimitiveCharacterTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2904" source="com.google.gson.functional.PrimitiveCharacterTest#gson" target="com.google.gson.functional.PrimitiveCharacterTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2905" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2906" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization()" target="com.google.gson.functional.PrimitiveCharacterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2907" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization()" target="char#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2908" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization()" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2909" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2910" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2911" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()" target="com.google.gson.functional.PrimitiveCharacterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2912" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()" target="char#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2913" source="com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization()" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2914" source="com.google.gson.functional.PrimitiveTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2915" source="com.google.gson.functional.PrimitiveTest#gson" target="com.google.gson.functional.PrimitiveTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e2916" source="com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2917" source="com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2918" source="com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2919" source="com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2920" source="com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2921" source="com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2922" source="com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2923" source="com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2924" source="com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2925" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2926" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest.extractElementFromArray(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2927" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2928" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2929" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2930" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2931" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2932" source="com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2933" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2934" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2935" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2936" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2937" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2938" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2939" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2940" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2941" source="com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2942" source="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2943" source="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2944" source="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2945" source="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2946" source="com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2947" source="com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2948" source="com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2949" source="com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2950" source="com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2951" source="com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2952" source="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2953" source="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest.extractElementFromArray(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2954" source="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2955" source="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2956" source="com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2957" source="com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2958" source="com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2959" source="com.google.gson.functional.PrimitiveTest.testBooleanDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2960" source="com.google.gson.functional.PrimitiveTest.testBooleanDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2961" source="com.google.gson.functional.PrimitiveTest.testBooleanDeserialization()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2962" source="com.google.gson.functional.PrimitiveTest.testByteDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2963" source="com.google.gson.functional.PrimitiveTest.testByteDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2964" source="com.google.gson.functional.PrimitiveTest.testByteDeserialization()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2965" source="com.google.gson.functional.PrimitiveTest.testByteDeserialization()" target="byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2966" source="com.google.gson.functional.PrimitiveTest.testByteSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2967" source="com.google.gson.functional.PrimitiveTest.testByteSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2968" source="com.google.gson.functional.PrimitiveTest.testByteSerialization()" target="byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2969" source="com.google.gson.functional.PrimitiveTest.testByteSerialization()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2970" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2971" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2972" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2973" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2974" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2975" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2976" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2977" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2978" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2979" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2980" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2981" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2982" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2983" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2984" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2985" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2986" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2987" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2988" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2989" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2990" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2991" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2992" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2993" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2994" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2995" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2996" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber()" target="java.lang.Number#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2997" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2998" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e2999" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3000" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3001" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3002" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3003" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3004" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3005" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3006" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3007" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3008" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3009" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3010" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3011" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive()" target="byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3012" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3013" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3014" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3015" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3016" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3017" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3018" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3019" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3020" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3021" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3022" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3023" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive()" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3024" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3025" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3026" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber()" target="java.lang.Number#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3027" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3028" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3029" source="com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive()" target="short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3030" source="com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3031" source="com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3032" source="com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField()" target="com.google.gson.functional.PrimitiveTest$ClassWithIntegerField#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3033" source="com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField()" target="com.google.gson.functional.PrimitiveTest$ClassWithIntegerField#i">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3034" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3035" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3036" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3037" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3038" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3039" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3040" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3041" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3042" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3043" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3044" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3045" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3046" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3047" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3048" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3049" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3050" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3051" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3052" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3053" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3054" source="com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3055" source="com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3056" source="com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3057" source="com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3058" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3059" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3060" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3061" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3062" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3063" source="com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3064" source="com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3065" source="com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3066" source="com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3067" source="com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3068" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3069" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3070" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3071" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3072" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3073" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3074" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3075" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3076" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3077" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3078" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3079" source="com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3080" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3081" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3082" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3083" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3084" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3085" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3086" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3087" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3088" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3089" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3090" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3091" source="com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3092" source="com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3093" source="com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3094" source="com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3095" source="com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3096" source="com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3097" source="com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3098" source="com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3099" source="com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3100" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3101" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3102" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3103" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3104" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization()" target="java.lang.Float#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3105" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3106" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault()" target="java.lang.Float#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3107" source="com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3108" source="com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3109" source="com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3110" source="com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3111" source="com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3112" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3113" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3114" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3115" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3116" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization()" target="java.lang.Float#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3117" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3118" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault()" target="java.lang.Float#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3119" source="com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3120" source="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3121" source="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3122" source="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()" target="com.google.gson.GsonBuilder.disableHtmlEscaping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3123" source="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3124" source="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3125" source="com.google.gson.functional.PrimitiveTest#gson" target="com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3126" source="com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3127" source="com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3128" source="com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3129" source="com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3130" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3131" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3132" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3133" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3134" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3135" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3136" source="com.google.gson.functional.PrimitiveTest#gson" target="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3137" source="com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization()" target="com.google.gson.LongSerializationPolicy#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3138" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3139" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3140" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3141" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3142" source="com.google.gson.functional.PrimitiveTest#gson" target="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3143" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.LongSerializationPolicy#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3144" source="com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3145" source="com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3146" source="com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3147" source="com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3148" source="com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization()" target="java.io.Serializable#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3149" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3150" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3151" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3152" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3153" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3154" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3155" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3156" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3157" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3158" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3159" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3160" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3161" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization()" target="java.lang.Float#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3162" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3163" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault()" target="java.lang.Float#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3164" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3165" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3166" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3167" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3168" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3169" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3170" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3171" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3172" source="com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3173" source="com.google.gson.functional.PrimitiveTest.testNumberDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3174" source="com.google.gson.functional.PrimitiveTest.testNumberDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3175" source="com.google.gson.functional.PrimitiveTest.testNumberDeserialization()" target="java.lang.Number#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3176" source="com.google.gson.functional.PrimitiveTest.testNumberDeserialization()" target="java.lang.Long#MAX_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3177" source="com.google.gson.functional.PrimitiveTest.testNumberSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3178" source="com.google.gson.functional.PrimitiveTest.testNumberSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3179" source="com.google.gson.functional.PrimitiveTest.testNumberSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3180" source="com.google.gson.functional.PrimitiveTest.testNumberSerialization()" target="java.lang.Number#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3181" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3182" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3183" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3184" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3185" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3186" source="com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3187" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3188" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3189" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3190" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3191" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3192" source="com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3193" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3194" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3195" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3196" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3197" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3198" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3199" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3200" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3201" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3202" source="com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3203" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3204" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3205" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3206" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3207" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3208" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3209" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3210" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3211" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3212" source="com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3213" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3214" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3215" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization()" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3216" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3217" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3218" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3219" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3220" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3221" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3222" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3223" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization()" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3224" source="com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3225" source="com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3226" source="com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3227" source="com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3228" source="com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3229" source="com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3230" source="com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3231" source="com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3232" source="com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3233" source="com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3234" source="com.google.gson.functional.PrimitiveTest.testShortSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3235" source="com.google.gson.functional.PrimitiveTest.testShortSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3236" source="com.google.gson.functional.PrimitiveTest.testShortSerialization()" target="short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3237" source="com.google.gson.functional.PrimitiveTest.testShortSerialization()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3238" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3239" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3240" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization()" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3241" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3242" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3243" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3244" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3245" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3246" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3247" source="com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3248" source="com.google.gson.functional.PrimitiveTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3249" source="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3250" source="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()" target="com.google.gson.functional.PrimitiveTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3251" source="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3252" source="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3253" source="com.google.gson.functional.PrimitiveTest.testStringsAsBooleans()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3254" source="com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3255" source="com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3256" source="com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3257" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3258" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="com.google.gson.functional.PrimitiveTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3259" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3260" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3261" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3262" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3263" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3264" source="com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3265" source="com.google.gson.functional.PrintFormattingTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3266" source="com.google.gson.functional.PrintFormattingTest#gson" target="com.google.gson.functional.PrintFormattingTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3267" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3268" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.common.TestTypes$Nested()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3269" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.common.TestTypes$PrimitiveArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3270" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.common.TestTypes$ClassWithTransientFields()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3271" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3272" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.functional.PrintFormattingTest.assertContainsNoWhiteSpace(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3273" source="com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace()" target="com.google.gson.functional.PrintFormattingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3274" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3275" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3276" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3277" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues()" target="com.google.gson.functional.PrintFormattingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3278" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3279" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3280" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3281" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3282" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3283" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3284" source="com.google.gson.functional.PrintFormattingTest#gson" target="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3285" source="com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized()" target="com.google.gson.functional.PrintFormattingTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3286" source="com.google.gson.functional.RawSerializationTest$Bar#t" target="com.google.gson.functional.RawSerializationTest$Bar(T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3287" source="com.google.gson.functional.RawSerializationTest$Foo#b" target="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3288" source="com.google.gson.functional.RawSerializationTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3289" source="com.google.gson.functional.RawSerializationTest#gson" target="com.google.gson.functional.RawSerializationTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3290" source="com.google.gson.functional.RawSerializationTest.testCollectionOfObjects()" target="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3291" source="com.google.gson.functional.RawSerializationTest.testCollectionOfObjects()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3292" source="com.google.gson.functional.RawSerializationTest.testCollectionOfObjects()" target="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3293" source="com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3294" source="com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives()" target="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3295" source="com.google.gson.functional.RawSerializationTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3296" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Bar(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3297" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3298" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3299" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3300" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3301" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3302" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3303" source="com.google.gson.functional.RawSerializationTest.testParameterizedObject()" target="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3304" source="com.google.gson.functional.RawSerializationTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3305" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Bar(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3306" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3307" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3308" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3309" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3310" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3311" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3312" source="com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3313" source="com.google.gson.functional.RawSerializationTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3314" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Bar(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3315" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$Foo(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3316" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3317" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3318" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3319" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3320" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3321" source="com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject()" target="com.google.gson.functional.RawSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3322" source="com.google.gson.functional.ReadersWritersTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3323" source="com.google.gson.functional.ReadersWritersTest#gson" target="com.google.gson.functional.ReadersWritersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3324" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3325" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3326" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3327" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3328" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3329" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3330" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.JsonStreamParser.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3331" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3332" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3333" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3334" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3335" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3336" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3337" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3338" source="com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3339" source="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3340" source="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3341" source="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3342" source="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3343" source="com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3344" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3345" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3346" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3347" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3348" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3349" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3350" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3351" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3352" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3353" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3354" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3355" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls()" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3356" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3357" source="com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3358" source="com.google.gson.functional.ReadersWritersTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3359" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3360" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()" target="com.google.gson.functional.ReadersWritersTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3361" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3362" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3363" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3364" source="com.google.gson.functional.ReadersWritersTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3365" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3366" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()" target="com.google.gson.functional.ReadersWritersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3367" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3368" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3369" source="com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3370" source="com.google.gson.functional.ReadersWritersTest.testWriterForSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3371" source="com.google.gson.functional.ReadersWritersTest.testWriterForSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3372" source="com.google.gson.functional.ReadersWritersTest.testWriterForSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3373" source="com.google.gson.functional.ReadersWritersTest.testWriterForSerialization()" target="com.google.gson.functional.ReadersWritersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3374" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle(int)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape(com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3375" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle(int)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#CIRCLE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3376" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle#radius" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3377" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#baseType" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3378" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#typeFieldName" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3379" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3380" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3381" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3382" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3383" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3384" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3385" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3386" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#typeFieldName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3387" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#baseType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3388" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3389" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.TypeAdapter.toJsonTree(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3390" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3391" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3392" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3393" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3394" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3395" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3396" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3397" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#subtypeToLabel">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3398" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,R)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#typeFieldName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3399" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3400" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3401" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3402" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3403" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3404" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3405" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3406" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3407" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3408" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3409" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3410" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.toJsonTree(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3411" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3412" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3413" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3414" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3415" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3416" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3417" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#baseType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3418" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#labelToSubtype">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3419" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#typeFieldName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3420" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#subtypeToLabel">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3421" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.of(java.lang.Class)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3422" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.of(java.lang.Class,java.lang.String)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3423" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3424" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class,java.lang.String)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#subtypeToLabel">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3425" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class,java.lang.String)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory#labelToSubtype">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3426" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3427" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory.registerSubtype(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3428" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3429" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3430" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#CIRCLE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3431" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3432" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape$JsonAdapterFactory()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#SQUARE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3433" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#type" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape(com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3434" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square(int)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape(com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3435" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square(int)" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#SQUARE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3436" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square#side" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3437" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#SQUARE" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3438" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#CIRCLE" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3439" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest#gson" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3440" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3441" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3442" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3443" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3444" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3445" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3446" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Circle#radius">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3447" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Square#side">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3448" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$ShapeType#SQUARE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3449" source="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed()" target="com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest$Shape#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3450" source="com.google.gson.functional.SecurityTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3451" source="com.google.gson.functional.SecurityTest#gsonBuilder" target="com.google.gson.functional.SecurityTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3452" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()" target="com.google.gson.GsonBuilder.generateNonExecutableJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3453" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3454" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3455" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()" target="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3456" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization()" target="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3457" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.GsonBuilder.generateNonExecutableJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3458" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3459" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3460" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3461" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3462" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3463" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3464" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3465" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3466" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3467" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3468" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3469" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3470" source="com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3471" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3472" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3473" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3474" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3475" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3476" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3477" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.GsonBuilder.generateNonExecutableJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3478" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3479" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3480" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3481" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.functional.SecurityTest#gsonBuilder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3482" source="com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization()" target="com.google.gson.functional.SecurityTest#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3483" source="com.google.gson.functional.StreamingTypeAdaptersTest$Node#label" target="com.google.gson.functional.StreamingTypeAdaptersTest$Node(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3484" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3485" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3486" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person.equals(java.lang.Object)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3487" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person.equals(java.lang.Object)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3488" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person.hashCode()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3489" source="com.google.gson.functional.StreamingTypeAdaptersTest$Person.hashCode()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3490" source="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3491" source="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3492" source="com.google.gson.functional.StreamingTypeAdaptersTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3493" source="com.google.gson.functional.StreamingTypeAdaptersTest#mapAdapter" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3494" source="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3495" source="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3496" source="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3497" source="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3498" source="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3499" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3500" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3501" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3502" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#horsePower">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3503" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3504" source="com.google.gson.functional.StreamingTypeAdaptersTest$4()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3505" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3506" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3507" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3508" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3509" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3510" source="com.google.gson.functional.StreamingTypeAdaptersTest$6()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3511" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3512" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3513" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3514" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3515" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3516" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3517" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap()" target="com.google.gson.functional.StreamingTypeAdaptersTest#mapAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3518" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3519" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3520" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3521" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3522" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3523" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3524" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3525" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest.fromJson(com.google.gson.TypeAdapter,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3526" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3527" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3528" source="com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3529" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3530" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3531" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3532" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3533" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3534" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3535" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3536" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3537" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3538" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#horsePower">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3539" source="com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3540" source="com.google.gson.functional.StreamingTypeAdaptersTest$7()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3541" source="com.google.gson.functional.StreamingTypeAdaptersTest$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3542" source="com.google.gson.functional.StreamingTypeAdaptersTest$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3543" source="com.google.gson.functional.StreamingTypeAdaptersTest$7.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3544" source="com.google.gson.functional.StreamingTypeAdaptersTest$7.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3545" source="com.google.gson.functional.StreamingTypeAdaptersTest$7.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3546" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3547" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3548" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3549" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3550" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3551" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3552" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3553" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3554" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3555" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3556" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3557" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.TypeAdapter.nullSafe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3558" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3559" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#age">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3560" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3561" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#horsePower">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3562" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3563" source="com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3564" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3565" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3566" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3567" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3568" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#horsePower">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3569" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3570" source="com.google.gson.functional.StreamingTypeAdaptersTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3571" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3572" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3573" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3574" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3575" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3576" source="com.google.gson.functional.StreamingTypeAdaptersTest$5()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3577" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3578" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3579" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3580" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3581" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3582" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3583" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap()" target="com.google.gson.functional.StreamingTypeAdaptersTest#mapAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3584" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3585" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3586" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3587" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3588" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3589" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3590" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3591" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3592" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3593" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3594" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3595" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3596" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Node#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3597" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3598" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3599" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3600" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3601" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3602" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest.toJson(com.google.gson.TypeAdapter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3603" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#passengers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3604" source="com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3605" source="com.google.gson.functional.StreamingTypeAdaptersTest$2()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3606" source="com.google.gson.functional.StreamingTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3607" source="com.google.gson.functional.StreamingTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3608" source="com.google.gson.functional.StreamingTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3609" source="com.google.gson.functional.StreamingTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.StreamingTypeAdaptersTest$Person)" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3610" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3611" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3612" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3613" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3614" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3615" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3616" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3617" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3618" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3619" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3620" source="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson" target="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3621" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Person#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3622" source="com.google.gson.functional.StreamingTypeAdaptersTest#truckAdapter" target="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3623" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest#miniGson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3624" source="com.google.gson.functional.StreamingTypeAdaptersTest.usePersonNameAdapter()" target="com.google.gson.functional.StreamingTypeAdaptersTest$Truck#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3625" source="com.google.gson.functional.StringTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3626" source="com.google.gson.functional.StringTest#gson" target="com.google.gson.functional.StringTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3627" source="com.google.gson.functional.StringTest.testAssignmentCharDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3628" source="com.google.gson.functional.StringTest.testAssignmentCharDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3629" source="com.google.gson.functional.StringTest.testAssignmentCharDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3630" source="com.google.gson.functional.StringTest.testAssignmentCharSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3631" source="com.google.gson.functional.StringTest.testAssignmentCharSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3632" source="com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3633" source="com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3634" source="com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3635" source="com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3636" source="com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3637" source="com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3638" source="com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3639" source="com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3640" source="com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3641" source="com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3642" source="com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3643" source="com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3644" source="com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3645" source="com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3646" source="com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3647" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3648" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3649" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3650" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3651" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3652" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3653" source="com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3654" source="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3655" source="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3656" source="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3657" source="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3658" source="com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3659" source="com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3660" source="com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3661" source="com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3662" source="com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3663" source="com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3664" source="com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3665" source="com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3666" source="com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3667" source="com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3668" source="com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3669" source="com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3670" source="com.google.gson.functional.StringTest.testStringValueDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3671" source="com.google.gson.functional.StringTest.testStringValueDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3672" source="com.google.gson.functional.StringTest.testStringValueDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3673" source="com.google.gson.functional.StringTest.testStringValueSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3674" source="com.google.gson.functional.StringTest.testStringValueSerialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3675" source="com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3676" source="com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization()" target="com.google.gson.functional.StringTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3677" source="com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3678" source="com.google.gson.functional.ThrowableFunctionalTest#gson" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3679" source="com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3680" source="com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3681" source="com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause()" target="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3682" source="com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause()" target="java.lang.OutOfMemoryError#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3683" source="com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3684" source="com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3685" source="com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause()" target="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3686" source="com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause()" target="java.lang.Error#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3687" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3688" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3689" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause()" target="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3690" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause()" target="java.lang.Exception#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3691" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3692" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3693" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause()" target="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3694" source="com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause()" target="java.lang.RuntimeException#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3695" source="com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields()" target="com.google.gson.functional.ThrowableFunctionalTest$MyException()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3696" source="com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3697" source="com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields()" target="com.google.gson.functional.ThrowableFunctionalTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3698" source="com.google.gson.functional.TreeTypeAdaptersTest$Assignment()" target="com.google.gson.functional.TreeTypeAdaptersTest$Assignment(com.google.gson.functional.TreeTypeAdaptersTest$Id,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3699" source="com.google.gson.functional.TreeTypeAdaptersTest$Assignment#id" target="com.google.gson.functional.TreeTypeAdaptersTest$Assignment(com.google.gson.functional.TreeTypeAdaptersTest$Id,T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3700" source="com.google.gson.functional.TreeTypeAdaptersTest$Assignment#data" target="com.google.gson.functional.TreeTypeAdaptersTest$Assignment(com.google.gson.functional.TreeTypeAdaptersTest$Id,T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3701" source="com.google.gson.functional.TreeTypeAdaptersTest$Course()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3702" source="com.google.gson.functional.TreeTypeAdaptersTest$Course#courseId" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3703" source="com.google.gson.functional.TreeTypeAdaptersTest$Course#numAssignments" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3704" source="com.google.gson.functional.TreeTypeAdaptersTest$Course#assignment" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3705" source="com.google.gson.functional.TreeTypeAdaptersTest$Course#students" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3706" source="com.google.gson.functional.TreeTypeAdaptersTest$Course.getId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course#courseId">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3707" source="com.google.gson.functional.TreeTypeAdaptersTest$Course.getStudents()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course#students">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3708" source="com.google.gson.functional.TreeTypeAdaptersTest$Id#value" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3709" source="com.google.gson.functional.TreeTypeAdaptersTest$Id#typeOfId" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3710" source="com.google.gson.functional.TreeTypeAdaptersTest$Id.getValue()" target="com.google.gson.functional.TreeTypeAdaptersTest$Id#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3711" source="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.serialize(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3712" source="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.serialize(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TreeTypeAdaptersTest$Id.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3713" source="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3714" source="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3715" source="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3716" source="com.google.gson.functional.TreeTypeAdaptersTest$Student()" target="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3717" source="com.google.gson.functional.TreeTypeAdaptersTest$Student#id" target="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3718" source="com.google.gson.functional.TreeTypeAdaptersTest$Student#name" target="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3719" source="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1_ID" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3720" source="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2_ID" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3721" source="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1" target="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3722" source="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2" target="com.google.gson.functional.TreeTypeAdaptersTest$Student(com.google.gson.functional.TreeTypeAdaptersTest$Id,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3723" source="com.google.gson.functional.TreeTypeAdaptersTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3724" source="com.google.gson.functional.TreeTypeAdaptersTest#TYPE_COURSE_HISTORY" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3725" source="com.google.gson.functional.TreeTypeAdaptersTest#COURSE_ID" target="com.google.gson.functional.TreeTypeAdaptersTest$Id(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3726" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3727" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3728" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest$IdTreeTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3729" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3730" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course(com.google.gson.functional.TreeTypeAdaptersTest$Id,int,com.google.gson.functional.TreeTypeAdaptersTest$Assignment,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3731" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest$Assignment(com.google.gson.functional.TreeTypeAdaptersTest$Id,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3732" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest.createList(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3733" source="com.google.gson.functional.TreeTypeAdaptersTest#gson" target="com.google.gson.functional.TreeTypeAdaptersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3734" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest$Id#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3735" source="com.google.gson.functional.TreeTypeAdaptersTest#course" target="com.google.gson.functional.TreeTypeAdaptersTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3736" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest#COURSE_ID">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3737" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3738" source="com.google.gson.functional.TreeTypeAdaptersTest.setUp()" target="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3739" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3740" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course.getStudents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3741" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Id.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3742" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Course.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3743" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3744" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#TYPE_COURSE_HISTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3745" source="com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Student#id">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3746" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3747" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest$Id.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3748" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3749" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#course">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3750" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#TYPE_COURSE_HISTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3751" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#COURSE_ID">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3752" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT1_ID">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3753" source="com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId()" target="com.google.gson.functional.TreeTypeAdaptersTest#STUDENT2_ID">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3754" source="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3755" source="com.google.gson.functional.TypeAdapterPrecedenceTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3756" source="com.google.gson.functional.TypeAdapterPrecedenceTest$2.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3757" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3758" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3759" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3760" source="com.google.gson.functional.TypeAdapterPrecedenceTest$1.serialize(com.google.gson.functional.TypeAdapterPrecedenceTest$Foo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3761" source="com.google.gson.functional.TypeAdapterPrecedenceTest$1.serialize(com.google.gson.functional.TypeAdapterPrecedenceTest$Foo,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3762" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3763" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3764" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3765" source="com.google.gson.functional.TypeAdapterPrecedenceTest$3()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3766" source="com.google.gson.functional.TypeAdapterPrecedenceTest$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3767" source="com.google.gson.functional.TypeAdapterPrecedenceTest$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3768" source="com.google.gson.functional.TypeAdapterPrecedenceTest$3.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.TypeAdapterPrecedenceTest$Foo)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3769" source="com.google.gson.functional.TypeAdapterPrecedenceTest$3.write(com.google.gson.stream.JsonWriter,com.google.gson.functional.TypeAdapterPrecedenceTest$Foo)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3770" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3771" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3772" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3773" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3774" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3775" source="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3776" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3777" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3778" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3779" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3780" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3781" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3782" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3783" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3784" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3785" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3786" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3787" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3788" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3789" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3790" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3791" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3792" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3793" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3794" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3795" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3796" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3797" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3798" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3799" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3800" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3801" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3802" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3803" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3804" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3805" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3806" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3807" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3808" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3809" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3810" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3811" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3812" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3813" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3814" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3815" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3816" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3817" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3818" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3819" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3820" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3821" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3822" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3823" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3824" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3825" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3826" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3827" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3828" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3829" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3830" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3831" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3832" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3833" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3834" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3835" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3836" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3837" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3838" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3839" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3840" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3841" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3842" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3843" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3844" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3845" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3846" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3847" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3848" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3849" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3850" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3851" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3852" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3853" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3854" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newSerializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3855" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newDeserializer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3856" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest.newTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3857" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3858" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3859" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3860" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3861" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3862" source="com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical()" target="com.google.gson.functional.TypeAdapterPrecedenceTest$Foo#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3863" source="com.google.gson.functional.TypeHierarchyAdapterTest$CEO()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3864" source="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee(java.lang.String,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3865" source="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#startDate" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee(java.lang.String,long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3866" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3867" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3868" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3869" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3870" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3871" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#startDate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3872" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3873" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#minions">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3874" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3875" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$CEO#assistant">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3876" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Employee,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3877" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3878" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3879" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$CEO()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3880" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3881" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3882" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3883" source="com.google.gson.functional.TypeHierarchyAdapterTest$CEO#assistant" target="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3884" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3885" source="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#minions" target="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3886" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3887" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3888" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3889" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#startDate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3890" source="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3891" source="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3892" source="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Manager,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3893" source="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.serialize(com.google.gson.functional.TypeHierarchyAdapterTest$Manager,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3894" source="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3895" source="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3896" source="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3897" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3898" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3899" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3900" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3901" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3902" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3903" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3904" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3905" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3906" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3907" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$ManagerAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3908" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3909" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3910" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3911" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3912" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3913" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3914" source="com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3915" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3916" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3917" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$CEO()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3918" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3919" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3920" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$EmployeeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3921" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.GsonBuilder.setPrettyPrinting()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3922" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3923" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Company()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3924" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3925" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3926" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#userid">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3927" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#startDate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3928" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Manager#minions">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3929" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$CEO#assistant">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3930" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Employee#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3931" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Company#ceo">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3932" source="com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy()" target="com.google.gson.functional.TypeHierarchyAdapterTest$Company#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3933" source="com.google.gson.functional.TypeVariableTest$Bar()" target="com.google.gson.functional.TypeVariableTest$Bar(java.lang.String,java.lang.Integer,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3934" source="com.google.gson.functional.TypeVariableTest$Bar(java.lang.String,java.lang.Integer,boolean)" target="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3935" source="com.google.gson.functional.TypeVariableTest$Blue()" target="com.google.gson.functional.TypeVariableTest$Red(S)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3936" source="com.google.gson.functional.TypeVariableTest$Blue(boolean)" target="com.google.gson.functional.TypeVariableTest$Red(S)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3937" source="com.google.gson.functional.TypeVariableTest$Blue.equals(java.lang.Object)" target="com.google.gson.functional.TypeVariableTest$Red#redField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3938" source="com.google.gson.functional.TypeVariableTest$Foo()" target="com.google.gson.functional.TypeVariableTest$Red()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3939" source="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)" target="com.google.gson.functional.TypeVariableTest$Red(S)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3940" source="com.google.gson.functional.TypeVariableTest$Foo#someSField" target="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3941" source="com.google.gson.functional.TypeVariableTest$Foo#someTField" target="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3942" source="com.google.gson.functional.TypeVariableTest$Foo.equals(java.lang.Object)" target="com.google.gson.functional.TypeVariableTest$Red#redField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3943" source="com.google.gson.functional.TypeVariableTest$Foo.equals(java.lang.Object)" target="com.google.gson.functional.TypeVariableTest$Foo#someTField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3944" source="com.google.gson.functional.TypeVariableTest$Foo.equals(java.lang.Object)" target="com.google.gson.functional.TypeVariableTest$Foo#someSField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3945" source="com.google.gson.functional.TypeVariableTest$Foo.equals(java.lang.Object)" target="com.google.gson.functional.TypeVariableTest$Foo#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3946" source="com.google.gson.functional.TypeVariableTest$Red#redField" target="com.google.gson.functional.TypeVariableTest$Red(S)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3947" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3948" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.functional.TypeVariableTest$Bar(java.lang.String,java.lang.Integer,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3949" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3950" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3951" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.functional.TypeVariableTest$Foo#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3952" source="com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables()" target="com.google.gson.functional.TypeVariableTest$Bar#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3953" source="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3954" source="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()" target="com.google.gson.functional.TypeVariableTest$Blue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3955" source="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3956" source="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3957" source="com.google.gson.functional.TypeVariableTest.testBasicTypeVariables()" target="com.google.gson.functional.TypeVariableTest$Blue#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3958" source="com.google.gson.functional.TypeVariableTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3959" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3960" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.functional.TypeVariableTest$Foo(S,T,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3961" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.functional.TypeVariableTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3962" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3963" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3964" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3965" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3966" source="com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter()" target="com.google.gson.functional.TypeVariableTest$Foo#map">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3967" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3968" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3969" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3970" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.UncategorizedTest$Derived1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3971" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.UncategorizedTest$Derived2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3972" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3973" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.UncategorizedTest$OperationType#OP1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3974" source="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.functional.UncategorizedTest$OperationType#OP2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3975" source="com.google.gson.functional.UncategorizedTest$Derived1()" target="com.google.gson.functional.UncategorizedTest$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3976" source="com.google.gson.functional.UncategorizedTest$Base#opType" target="com.google.gson.functional.UncategorizedTest$Derived1()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3977" source="com.google.gson.functional.UncategorizedTest$OperationType#OP1" target="com.google.gson.functional.UncategorizedTest$Derived1()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3978" source="com.google.gson.functional.UncategorizedTest$Derived2()" target="com.google.gson.functional.UncategorizedTest$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3979" source="com.google.gson.functional.UncategorizedTest$Base#opType" target="com.google.gson.functional.UncategorizedTest$Derived2()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3980" source="com.google.gson.functional.UncategorizedTest$OperationType#OP2" target="com.google.gson.functional.UncategorizedTest$Derived2()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3981" source="com.google.gson.functional.UncategorizedTest$OperationType#OP1" target="com.google.gson.functional.UncategorizedTest$OperationType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3982" source="com.google.gson.functional.UncategorizedTest$OperationType#OP2" target="com.google.gson.functional.UncategorizedTest$OperationType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3983" source="com.google.gson.functional.UncategorizedTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3984" source="com.google.gson.functional.UncategorizedTest#gson" target="com.google.gson.functional.UncategorizedTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e3985" source="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3986" source="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3987" source="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3988" source="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()" target="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3989" source="com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3990" source="com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3991" source="com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails()" target="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3992" source="com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3993" source="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()" target="com.google.gson.common.TestTypes$ClassOverridingEquals()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3994" source="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3995" source="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()" target="com.google.gson.common.TestTypes$ClassOverridingEquals.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3996" source="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()" target="com.google.gson.common.TestTypes$ClassOverridingEquals#ref">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3997" source="com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization()" target="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e3998" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3999" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4000" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.functional.UncategorizedTest$BaseTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4001" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4002" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4003" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.functional.UncategorizedTest$Base#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4004" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.functional.UncategorizedTest$OperationType#OP1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4005" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.functional.UncategorizedTest$Base#opType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4006" source="com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization()" target="com.google.gson.functional.UncategorizedTest$OperationType#OP2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4007" source="com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4008" source="com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4009" source="com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized()" target="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4010" source="com.google.gson.functional.UncategorizedTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4011" source="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4012" source="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()" target="com.google.gson.functional.UncategorizedTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4013" source="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4014" source="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4015" source="com.google.gson.functional.UncategorizedTest.testTrailingWhitespace()" target="com.google.gson.functional.UncategorizedTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4016" source="com.google.gson.functional.VersioningTest$Version1_1()" target="com.google.gson.functional.VersioningTest$Version1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4017" source="com.google.gson.functional.VersioningTest$Version1_2()" target="com.google.gson.functional.VersioningTest$Version1_1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4018" source="com.google.gson.functional.VersioningTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4019" source="com.google.gson.functional.VersioningTest#builder" target="com.google.gson.functional.VersioningTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4020" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4021" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4022" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4023" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4024" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization()" target="com.google.gson.functional.VersioningTest$Version1_2#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4025" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4026" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4027" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4028" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()" target="com.google.gson.functional.VersioningTest$Version1_2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4029" source="com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4030" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4031" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4032" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4033" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4034" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest$Version1#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4035" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest$Version1#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4036" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest$Version1#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4037" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest$Version1_1#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4038" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest#C">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4039" source="com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest$Version1_1#c">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4040" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4041" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4042" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4043" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.functional.VersioningTest$Version1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4044" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.functional.VersioningTest$Version1_1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4045" source="com.google.gson.functional.VersioningTest.testVersionedClassesSerialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4046" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4047" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4048" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4049" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4050" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.functional.VersioningTest$SinceUntilMixing#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4051" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.functional.VersioningTest$SinceUntilMixing#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4052" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.functional.VersioningTest#B">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4053" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization()" target="com.google.gson.functional.VersioningTest$SinceUntilMixing#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4054" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4055" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4056" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.functional.VersioningTest$SinceUntilMixing()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4057" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4058" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4059" source="com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization()" target="com.google.gson.functional.VersioningTest#B">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4060" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4061" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4062" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4063" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4064" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4065" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4066" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4067" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4068" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4069" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4070" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4071" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4072" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4073" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4074" source="com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4075" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4076" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4077" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4078" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4079" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.functional.VersioningTest$Version1#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4080" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.functional.VersioningTest#A">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4081" source="com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization()" target="com.google.gson.functional.VersioningTest$Version1#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4082" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.functional.VersioningTest$Version1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4083" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4084" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4085" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4086" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.functional.VersioningTest#builder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4087" source="com.google.gson.functional.VersioningTest.testVersionedUntilSerialization()" target="com.google.gson.functional.VersioningTest#A">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4088" source="com.google.gson.common.MoreAsserts.assertEquals(int[],int[])" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4089" source="com.google.gson.common.MoreAsserts.assertEquals(java.lang.Integer[],java.lang.Integer[])" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4090" source="com.google.gson.common.TestTypes$ArrayOfObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4091" source="com.google.gson.common.TestTypes$ArrayOfObjects#elements" target="com.google.gson.common.TestTypes$ArrayOfObjects()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4092" source="com.google.gson.common.TestTypes$ArrayOfObjects()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4093" source="com.google.gson.common.TestTypes$ArrayOfObjects()" target="com.google.gson.common.TestTypes$ArrayOfObjects#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4094" source="com.google.gson.common.TestTypes$ArrayOfObjects.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4095" source="com.google.gson.common.TestTypes$ArrayOfObjects.getExpectedJson()" target="com.google.gson.common.TestTypes$ArrayOfObjects#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4096" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#longValue" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4097" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#intValue" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4098" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#booleanValue" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers(java.lang.Long,java.lang.Integer,java.lang.Boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4099" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4100" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4101" source="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitiveWrappers#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4102" source="com.google.gson.common.TestTypes$BagOfPrimitives()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4103" source="com.google.gson.common.TestTypes$BagOfPrimitives()" target="com.google.gson.common.TestTypes$BagOfPrimitives#DEFAULT_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4104" source="com.google.gson.common.TestTypes$BagOfPrimitives#longValue" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4105" source="com.google.gson.common.TestTypes$BagOfPrimitives#intValue" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4106" source="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4107" source="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4108" source="com.google.gson.common.TestTypes$BagOfPrimitives.equals(java.lang.Object)" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4109" source="com.google.gson.common.TestTypes$BagOfPrimitives.equals(java.lang.Object)" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4110" source="com.google.gson.common.TestTypes$BagOfPrimitives.equals(java.lang.Object)" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4111" source="com.google.gson.common.TestTypes$BagOfPrimitives.equals(java.lang.Object)" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4112" source="com.google.gson.common.TestTypes$BagOfPrimitives.getIntValue()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4113" source="com.google.gson.common.TestTypes$BagOfPrimitives.hashCode()" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4114" source="com.google.gson.common.TestTypes$BagOfPrimitives.hashCode()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4115" source="com.google.gson.common.TestTypes$BagOfPrimitives.hashCode()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4116" source="com.google.gson.common.TestTypes$BagOfPrimitives.hashCode()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4117" source="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4118" source="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4119" source="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4120" source="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4121" source="com.google.gson.common.TestTypes$BagOfPrimitives.toString()" target="com.google.gson.common.TestTypes$BagOfPrimitives#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4122" source="com.google.gson.common.TestTypes$BagOfPrimitives.toString()" target="com.google.gson.common.TestTypes$BagOfPrimitives#intValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4123" source="com.google.gson.common.TestTypes$BagOfPrimitives.toString()" target="com.google.gson.common.TestTypes$BagOfPrimitives#booleanValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4124" source="com.google.gson.common.TestTypes$BagOfPrimitives.toString()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4125" source="com.google.gson.common.TestTypes$BaseSerializer.serialize(com.google.gson.common.TestTypes$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4126" source="com.google.gson.common.TestTypes$BaseSerializer.serialize(com.google.gson.common.TestTypes$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4127" source="com.google.gson.common.TestTypes$BaseSerializer.serialize(com.google.gson.common.TestTypes$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4128" source="com.google.gson.common.TestTypes$BaseSerializer.serialize(com.google.gson.common.TestTypes$Base,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.common.TestTypes$BaseSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4129" source="com.google.gson.common.TestTypes$ClassOverridingEquals.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassOverridingEquals.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4130" source="com.google.gson.common.TestTypes$ClassOverridingEquals.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassOverridingEquals#ref">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4131" source="com.google.gson.common.TestTypes$ClassWithArray#array" target="com.google.gson.common.TestTypes$ClassWithArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4132" source="com.google.gson.common.TestTypes$ClassWithArray#array" target="com.google.gson.common.TestTypes$ClassWithArray(java.lang.Object[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4133" source="com.google.gson.common.TestTypes$ClassWithBaseArrayField#base" target="com.google.gson.common.TestTypes$ClassWithBaseArrayField(com.google.gson.common.TestTypes$Base[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4134" source="com.google.gson.common.TestTypes$ClassWithBaseCollectionField#base" target="com.google.gson.common.TestTypes$ClassWithBaseCollectionField(java.util.Collection)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4135" source="com.google.gson.common.TestTypes$ClassWithBaseField#base" target="com.google.gson.common.TestTypes$ClassWithBaseField(com.google.gson.common.TestTypes$Base)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4136" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4137" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4138" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#bag" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4139" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#value" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4140" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(int)" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(com.google.gson.common.TestTypes$BagOfPrimitives,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4141" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter(int)" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4142" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getBag()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#bag">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4143" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getValue()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4144" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getExpectedJson()" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4145" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#bag">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4146" source="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassWithCustomTypeConverter#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4147" source="com.google.gson.common.TestTypes$ClassWithNoFields.equals(java.lang.Object)" target="com.google.gson.common.TestTypes$ClassWithNoFields#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4148" source="com.google.gson.common.TestTypes$ClassWithObjects()" target="com.google.gson.common.TestTypes$ClassWithObjects(com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4149" source="com.google.gson.common.TestTypes$ClassWithObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4150" source="com.google.gson.common.TestTypes$ClassWithObjects#bag" target="com.google.gson.common.TestTypes$ClassWithObjects(com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4151" source="com.google.gson.common.TestTypes$ClassWithSerializedNameFields()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4152" source="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#f" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4153" source="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#g" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4154" source="com.google.gson.common.TestTypes$ClassWithSerializedNameFields.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#f">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4155" source="com.google.gson.common.TestTypes$ClassWithSerializedNameFields.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassWithSerializedNameFields#g">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4156" source="com.google.gson.common.TestTypes$ClassWithTransientFields()" target="com.google.gson.common.TestTypes$ClassWithTransientFields(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4157" source="com.google.gson.common.TestTypes$ClassWithTransientFields#longValue" target="com.google.gson.common.TestTypes$ClassWithTransientFields(long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4158" source="com.google.gson.common.TestTypes$ClassWithTransientFields#transientLongValue" target="com.google.gson.common.TestTypes$ClassWithTransientFields(long)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4159" source="com.google.gson.common.TestTypes$ClassWithTransientFields.getExpectedJson()" target="com.google.gson.common.TestTypes$ClassWithTransientFields#longValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4160" source="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.serialize(java.lang.Long,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4161" source="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.serialize(java.lang.Long,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.common.TestTypes$CrazyLongTypeAdapter#DIFFERENCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4162" source="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4163" source="com.google.gson.common.TestTypes$CrazyLongTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.common.TestTypes$CrazyLongTypeAdapter#DIFFERENCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4164" source="com.google.gson.common.TestTypes$Nested()" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4165" source="com.google.gson.common.TestTypes$Nested#primitive1" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4166" source="com.google.gson.common.TestTypes$Nested#primitive2" target="com.google.gson.common.TestTypes$Nested(com.google.gson.common.TestTypes$BagOfPrimitives,com.google.gson.common.TestTypes$BagOfPrimitives)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4167" source="com.google.gson.common.TestTypes$Nested.getExpectedJson()" target="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4168" source="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)" target="com.google.gson.common.TestTypes$BagOfPrimitives.getExpectedJson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4169" source="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)" target="com.google.gson.common.TestTypes$Nested#primitive1">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4170" source="com.google.gson.common.TestTypes$Nested.appendFields(java.lang.StringBuilder)" target="com.google.gson.common.TestTypes$Nested#primitive2">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4171" source="com.google.gson.common.TestTypes$PrimitiveArray()" target="com.google.gson.common.TestTypes$PrimitiveArray(long[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4172" source="com.google.gson.common.TestTypes$PrimitiveArray#longArray" target="com.google.gson.common.TestTypes$PrimitiveArray(long[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4173" source="com.google.gson.common.TestTypes$PrimitiveArray.getExpectedJson()" target="com.google.gson.common.TestTypes$PrimitiveArray#longArray">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4174" source="com.google.gson.common.TestTypes$StringWrapper#someConstantStringInstanceField" target="com.google.gson.common.TestTypes$StringWrapper(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4175" source="com.google.gson.common.TestTypes$Sub()" target="com.google.gson.common.TestTypes$Base()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4176" source="com.google.gson.common.TestTypes$SubSerializer.serialize(com.google.gson.common.TestTypes$Sub,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4177" source="com.google.gson.common.TestTypes$SubSerializer.serialize(com.google.gson.common.TestTypes$Sub,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4178" source="com.google.gson.common.TestTypes$SubSerializer.serialize(com.google.gson.common.TestTypes$Sub,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.common.TestTypes$Base#SERIALIZER_KEY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4179" source="com.google.gson.common.TestTypes$SubSerializer.serialize(com.google.gson.common.TestTypes$Sub,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.common.TestTypes$SubSerializer#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4180" source="com.google.gson.internal.bind.ArrayTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4181" source="com.google.gson.internal.bind.ArrayTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4182" source="com.google.gson.internal.bind.ArrayTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4183" source="com.google.gson.internal.bind.ArrayTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4184" source="com.google.gson.internal.bind.ArrayTypeAdapter#FACTORY" target="com.google.gson.internal.bind.ArrayTypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4185" source="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4186" source="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4187" source="com.google.gson.internal.bind.ArrayTypeAdapter#componentTypeAdapter" target="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4188" source="com.google.gson.internal.bind.ArrayTypeAdapter#componentType" target="com.google.gson.internal.bind.ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4189" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4190" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4191" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4192" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4193" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4194" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4195" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4196" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ArrayTypeAdapter#componentTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4197" source="com.google.gson.internal.bind.ArrayTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ArrayTypeAdapter#componentType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4198" source="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4199" source="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4200" source="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4201" source="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4202" source="com.google.gson.internal.bind.ArrayTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.internal.bind.ArrayTypeAdapter#componentTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4203" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4204" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4205" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#elementTypeAdapter" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4206" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#constructor" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4207" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4208" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4209" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.ObjectConstructor.construct()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4210" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4211" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4212" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4213" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4214" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4215" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#constructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4216" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#elementTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4217" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4218" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4219" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4220" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4221" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Collection)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter#elementTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4222" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory#constructorConstructor" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4223" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4224" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4225" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4226" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4227" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4228" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4229" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.util.Collection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4230" source="com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4231" source="com.google.gson.internal.bind.DateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4232" source="com.google.gson.internal.bind.DateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.DateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4233" source="com.google.gson.internal.bind.DateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4234" source="com.google.gson.internal.bind.DateTypeAdapter#FACTORY" target="com.google.gson.internal.bind.DateTypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4235" source="com.google.gson.internal.bind.DateTypeAdapter#iso8601Format" target="com.google.gson.internal.bind.DateTypeAdapter.buildIso8601Format()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4236" source="com.google.gson.internal.bind.DateTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4237" source="com.google.gson.internal.bind.DateTypeAdapter.buildIso8601Format()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4238" source="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)" target="com.google.gson.JsonSyntaxException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4239" source="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)" target="com.google.gson.internal.bind.DateTypeAdapter#localFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4240" source="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)" target="com.google.gson.internal.bind.DateTypeAdapter#enUsFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4241" source="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)" target="com.google.gson.internal.bind.DateTypeAdapter#iso8601Format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4242" source="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4243" source="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4244" source="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.DateTypeAdapter.deserializeToDate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4245" source="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4246" source="com.google.gson.internal.bind.DateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4247" source="com.google.gson.internal.bind.DateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.util.Date)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4248" source="com.google.gson.internal.bind.DateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.util.Date)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4249" source="com.google.gson.internal.bind.DateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.util.Date)" target="com.google.gson.internal.bind.DateTypeAdapter#enUsFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4250" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory#constructorConstructor" target="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4251" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4252" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4253" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.annotations.JsonAdapter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4254" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4255" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4256" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4257" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.internal.ObjectConstructor.construct()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4258" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4259" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.TypeAdapter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4260" source="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)" target="com.google.gson.TypeAdapterFactory#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4261" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4262" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4263" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4264" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4265" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4266" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4267" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4268" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4269" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4270" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4271" source="com.google.gson.internal.bind.JsonElementReaderTest.testArray()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4272" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4273" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4274" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4275" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4276" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4277" source="com.google.gson.internal.bind.JsonElementReaderTest.testBooleans()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4278" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4279" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4280" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4281" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4282" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.internal.bind.JsonTreeReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4283" source="com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4284" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4285" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4286" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4287" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4288" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4289" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4290" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4291" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4292" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()" target="com.google.gson.internal.bind.JsonTreeReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4293" source="com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject()" target="com.google.gson.internal.bind.JsonTreeReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4294" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4295" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4296" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4297" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4298" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4299" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4300" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4301" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4302" source="com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4303" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4304" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4305" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4306" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4307" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4308" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4309" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4310" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4311" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.internal.bind.JsonTreeReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4312" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.internal.bind.JsonTreeReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4313" source="com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects()" target="com.google.gson.internal.bind.JsonTreeReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4314" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4315" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4316" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4317" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4318" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.internal.bind.JsonTreeReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4319" source="com.google.gson.internal.bind.JsonElementReaderTest.testNulls()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4320" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4321" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4322" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4323" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4324" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4325" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4326" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4327" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4328" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4329" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4330" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4331" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4332" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4333" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4334" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4335" source="com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4336" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4337" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4338" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4339" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4340" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4341" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4342" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4343" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.internal.bind.JsonTreeReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4344" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4345" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4346" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4347" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4348" source="com.google.gson.internal.bind.JsonElementReaderTest.testObject()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4349" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4350" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4351" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4352" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4353" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4354" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.internal.bind.JsonTreeReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4355" source="com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4356" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4357" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4358" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4359" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4360" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4361" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4362" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4363" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4364" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4365" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4366" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4367" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4368" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4369" source="com.google.gson.internal.bind.JsonElementReaderTest.testStrings()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4370" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4371" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4372" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4373" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4374" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4375" source="com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4376" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4377" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4378" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4379" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4380" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4381" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4382" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4383" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4384" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4385" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4386" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4387" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4388" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4389" source="com.google.gson.internal.bind.JsonElementReaderTest.testWrongType()" target="com.google.gson.internal.bind.JsonTreeReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4390" source="com.google.gson.internal.bind.JsonTreeReader#UNREADABLE_READER" target="com.google.gson.internal.bind.JsonTreeReader$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4391" source="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4392" source="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeReader#UNREADABLE_READER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4393" source="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4394" source="com.google.gson.internal.bind.JsonTreeReader.hasNext()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4395" source="com.google.gson.internal.bind.JsonTreeReader.hasNext()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4396" source="com.google.gson.internal.bind.JsonTreeReader.hasNext()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4397" source="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4398" source="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4399" source="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()" target="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4400" source="com.google.gson.internal.bind.JsonTreeReader.nextBoolean()" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4401" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4402" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4403" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4404" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4405" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4406" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4407" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4408" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4409" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4410" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4411" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4412" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4413" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4414" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4415" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4416" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4417" source="com.google.gson.internal.bind.JsonTreeReader.peek()" target="com.google.gson.internal.bind.JsonTreeReader#SENTINEL_CLOSED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4418" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4419" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4420" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.JsonPrimitive.getAsDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4421" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.stream.JsonReader.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4422" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4423" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4424" source="com.google.gson.internal.bind.JsonTreeReader.nextDouble()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4425" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4426" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4427" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.JsonPrimitive.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4428" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4429" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4430" source="com.google.gson.internal.bind.JsonTreeReader.nextInt()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4431" source="com.google.gson.internal.bind.JsonTreeReader.peekStack()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4432" source="com.google.gson.internal.bind.JsonTreeReader.popStack()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4433" source="com.google.gson.internal.bind.JsonTreeReader.nextName()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4434" source="com.google.gson.internal.bind.JsonTreeReader.nextName()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4435" source="com.google.gson.internal.bind.JsonTreeReader.nextName()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4436" source="com.google.gson.internal.bind.JsonTreeReader.nextName()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4437" source="com.google.gson.internal.bind.JsonTreeReader.nextString()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4438" source="com.google.gson.internal.bind.JsonTreeReader.nextString()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4439" source="com.google.gson.internal.bind.JsonTreeReader.nextString()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4440" source="com.google.gson.internal.bind.JsonTreeReader.nextString()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4441" source="com.google.gson.internal.bind.JsonTreeReader.nextString()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4442" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4443" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4444" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.JsonPrimitive.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4445" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4446" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4447" source="com.google.gson.internal.bind.JsonTreeReader.nextLong()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4448" source="com.google.gson.internal.bind.JsonTreeReader.beginArray()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4449" source="com.google.gson.internal.bind.JsonTreeReader.beginArray()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4450" source="com.google.gson.internal.bind.JsonTreeReader.beginArray()" target="com.google.gson.JsonArray.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4451" source="com.google.gson.internal.bind.JsonTreeReader.beginArray()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4452" source="com.google.gson.internal.bind.JsonTreeReader.beginArray()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4453" source="com.google.gson.internal.bind.JsonTreeReader.beginObject()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4454" source="com.google.gson.internal.bind.JsonTreeReader.beginObject()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4455" source="com.google.gson.internal.bind.JsonTreeReader.beginObject()" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4456" source="com.google.gson.internal.bind.JsonTreeReader.beginObject()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4457" source="com.google.gson.internal.bind.JsonTreeReader.beginObject()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4458" source="com.google.gson.internal.bind.JsonTreeReader.close()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4459" source="com.google.gson.internal.bind.JsonTreeReader.close()" target="com.google.gson.internal.bind.JsonTreeReader#SENTINEL_CLOSED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4460" source="com.google.gson.internal.bind.JsonTreeReader.endArray()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4461" source="com.google.gson.internal.bind.JsonTreeReader.endArray()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4462" source="com.google.gson.internal.bind.JsonTreeReader.endArray()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4463" source="com.google.gson.internal.bind.JsonTreeReader.endObject()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4464" source="com.google.gson.internal.bind.JsonTreeReader.endObject()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4465" source="com.google.gson.internal.bind.JsonTreeReader.endObject()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4466" source="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4467" source="com.google.gson.internal.bind.JsonTreeReader.nextNull()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4468" source="com.google.gson.internal.bind.JsonTreeReader.nextNull()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4469" source="com.google.gson.internal.bind.JsonTreeReader.nextNull()" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4470" source="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()" target="com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4471" source="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()" target="com.google.gson.internal.bind.JsonTreeReader.peekStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4472" source="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4473" source="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4474" source="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()" target="com.google.gson.internal.bind.JsonTreeReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4475" source="com.google.gson.internal.bind.JsonTreeReader.skipValue()" target="com.google.gson.internal.bind.JsonTreeReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4476" source="com.google.gson.internal.bind.JsonTreeReader.skipValue()" target="com.google.gson.internal.bind.JsonTreeReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4477" source="com.google.gson.internal.bind.JsonTreeReader.skipValue()" target="com.google.gson.internal.bind.JsonTreeReader.popStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4478" source="com.google.gson.internal.bind.JsonTreeReader.skipValue()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4479" source="com.google.gson.internal.bind.JsonTreeWriter#UNWRITABLE_WRITER" target="com.google.gson.internal.bind.JsonTreeWriter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4480" source="com.google.gson.internal.bind.JsonTreeWriter#SENTINEL_CLOSED" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4481" source="com.google.gson.internal.bind.JsonTreeWriter()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4482" source="com.google.gson.internal.bind.JsonTreeWriter()" target="com.google.gson.internal.bind.JsonTreeWriter#UNWRITABLE_WRITER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4483" source="com.google.gson.internal.bind.JsonTreeWriter.get()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4484" source="com.google.gson.internal.bind.JsonTreeWriter.get()" target="com.google.gson.internal.bind.JsonTreeWriter#product">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4485" source="com.google.gson.internal.bind.JsonTreeWriter.peek()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4486" source="com.google.gson.internal.bind.JsonTreeWriter.beginArray()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4487" source="com.google.gson.internal.bind.JsonTreeWriter.beginArray()" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4488" source="com.google.gson.internal.bind.JsonTreeWriter.beginArray()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4489" source="com.google.gson.internal.bind.JsonTreeWriter.beginObject()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4490" source="com.google.gson.internal.bind.JsonTreeWriter.beginObject()" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4491" source="com.google.gson.internal.bind.JsonTreeWriter.beginObject()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4492" source="com.google.gson.internal.bind.JsonTreeWriter.endArray()" target="com.google.gson.internal.bind.JsonTreeWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4493" source="com.google.gson.internal.bind.JsonTreeWriter.endArray()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4494" source="com.google.gson.internal.bind.JsonTreeWriter.endArray()" target="com.google.gson.internal.bind.JsonTreeWriter#pendingName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4495" source="com.google.gson.internal.bind.JsonTreeWriter.endObject()" target="com.google.gson.internal.bind.JsonTreeWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4496" source="com.google.gson.internal.bind.JsonTreeWriter.endObject()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4497" source="com.google.gson.internal.bind.JsonTreeWriter.endObject()" target="com.google.gson.internal.bind.JsonTreeWriter#pendingName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4498" source="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)" target="com.google.gson.internal.bind.JsonTreeWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4499" source="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4500" source="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)" target="com.google.gson.internal.bind.JsonTreeWriter#pendingName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4501" source="com.google.gson.internal.bind.JsonTreeWriter#pendingName" target="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4502" source="com.google.gson.internal.bind.JsonTreeWriter.nullValue()" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4503" source="com.google.gson.internal.bind.JsonTreeWriter.nullValue()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4504" source="com.google.gson.internal.bind.JsonTreeWriter.value(boolean)" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4505" source="com.google.gson.internal.bind.JsonTreeWriter.value(boolean)" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4506" source="com.google.gson.internal.bind.JsonTreeWriter.value(double)" target="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4507" source="com.google.gson.internal.bind.JsonTreeWriter.value(double)" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4508" source="com.google.gson.internal.bind.JsonTreeWriter.value(double)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4509" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)" target="com.google.gson.internal.bind.JsonTreeWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4510" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4511" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4512" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4513" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.String)" target="com.google.gson.internal.bind.JsonTreeWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4514" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.String)" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4515" source="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.String)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4516" source="com.google.gson.internal.bind.JsonTreeWriter.value(long)" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4517" source="com.google.gson.internal.bind.JsonTreeWriter.value(long)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4518" source="com.google.gson.internal.bind.JsonTreeWriter.close()" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4519" source="com.google.gson.internal.bind.JsonTreeWriter.close()" target="com.google.gson.internal.bind.JsonTreeWriter#SENTINEL_CLOSED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4520" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4521" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.getSerializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4522" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4523" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4524" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4525" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeWriter#pendingName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4526" source="com.google.gson.internal.bind.JsonTreeWriter#pendingName" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4527" source="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4528" source="com.google.gson.internal.bind.JsonTreeWriter#product" target="com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonElement)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4529" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4530" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4531" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.internal.bind.JsonTreeWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4532" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.internal.bind.JsonTreeWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4533" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4534" source="com.google.gson.internal.bind.JsonTreeWriterTest.testArray()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4535" source="com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4536" source="com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4537" source="com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4538" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4539" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4540" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4541" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4542" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4543" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4544" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4545" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4546" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4547" source="com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4548" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4549" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4550" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()" target="com.google.gson.internal.bind.JsonTreeWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4551" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4552" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4553" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4554" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.internal.bind.JsonTreeWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4555" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4556" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.internal.bind.JsonTreeWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4557" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4558" source="com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4559" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4560" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.internal.bind.JsonTreeWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4561" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4562" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4563" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.internal.bind.JsonTreeWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4564" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4565" source="com.google.gson.internal.bind.JsonTreeWriterTest.testObject()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4566" source="com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4567" source="com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4568" source="com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4569" source="com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()" target="com.google.gson.internal.bind.JsonTreeWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4570" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4571" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4572" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4573" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4574" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4575" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4576" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4577" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4578" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4579" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4580" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4581" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4582" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4583" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4584" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4585" source="com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4586" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4587" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4588" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4589" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4590" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4591" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4592" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4593" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4594" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4595" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4596" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="com.google.gson.internal.bind.JsonTreeWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4597" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4598" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4599" source="com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4600" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4601" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4602" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.internal.bind.JsonTreeWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4603" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.internal.bind.JsonTreeWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4604" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.internal.bind.JsonTreeWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4605" source="com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose()" target="com.google.gson.internal.bind.JsonTreeWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4606" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4607" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4608" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#keyTypeAdapter" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4609" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#valueTypeAdapter" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4610" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#constructor" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4611" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4612" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4613" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4614" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4615" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4616" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4617" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4618" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4619" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4620" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4621" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4622" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.ObjectConstructor.construct()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4623" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4624" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4625" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4626" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4627" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4628" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4629" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4630" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4631" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4632" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#constructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4633" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4634" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#keyTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4635" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#valueTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4636" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.JsonReaderInternalAccess#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4637" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4638" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4639" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4640" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4641" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4642" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.TypeAdapter.toJsonTree(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4643" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.JsonElement.isJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4644" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4645" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4646" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4647" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4648" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.keyToString(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4649" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.internal.bind.MapTypeAdapterFactory#complexMapKeySerialization">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4650" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#valueTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4651" source="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,java.util.Map)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter#keyTypeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4652" source="com.google.gson.internal.bind.MapTypeAdapterFactory#constructorConstructor" target="com.google.gson.internal.bind.MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4653" source="com.google.gson.internal.bind.MapTypeAdapterFactory#complexMapKeySerialization" target="com.google.gson.internal.bind.MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4654" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4655" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4656" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4657" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4658" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4659" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4660" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4661" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4662" source="com.google.gson.internal.bind.MapTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.MapTypeAdapterFactory#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4663" source="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4664" source="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4665" source="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4666" source="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4667" source="com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)" target="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_AS_STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4668" source="com.google.gson.internal.bind.ObjectTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4669" source="com.google.gson.internal.bind.ObjectTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4670" source="com.google.gson.internal.bind.ObjectTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4671" source="com.google.gson.internal.bind.ObjectTypeAdapter#FACTORY" target="com.google.gson.internal.bind.ObjectTypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4672" source="com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4673" source="com.google.gson.internal.bind.ObjectTypeAdapter#gson" target="com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4674" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4675" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4676" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4677" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4678" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4679" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4680" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4681" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4682" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4683" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4684" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4685" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4686" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4687" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4688" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4689" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4690" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4691" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4692" source="com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4693" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4694" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4695" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4696" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4697" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4698" source="com.google.gson.internal.bind.ObjectTypeAdapter.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.internal.bind.ObjectTypeAdapter#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4699" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4700" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#constructor" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4701" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#boundFields" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4702" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4703" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4704" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.ObjectConstructor.construct()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4705" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4706" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4707" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4708" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4709" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.read(com.google.gson.stream.JsonReader,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4710" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4711" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4712" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4713" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#constructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4714" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#boundFields">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4715" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#deserialized">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4716" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4717" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4718" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.writeField(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4719" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4720" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField.write(com.google.gson.stream.JsonWriter,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4721" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4722" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter#boundFields">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4723" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4724" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#name" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4725" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#serialized" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4726" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#deserialized" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4727" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#constructorConstructor" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4728" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#fieldNamingPolicy" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4729" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#excluder" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4730" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4731" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4732" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4733" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4734" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4735" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4736" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4737" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4738" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4739" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4740" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4741" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4742" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)" target="com.google.gson.annotations.JsonAdapter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4743" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4744" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1#typeAdapter" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4745" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1(java.lang.String,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4746" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.writeField(java.lang.Object)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#serialized">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4747" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader,java.lang.Object)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4748" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(com.google.gson.stream.JsonReader,java.lang.Object)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1#typeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4749" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4750" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4751" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4752" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(com.google.gson.stream.JsonWriter,java.lang.Object)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1#typeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4753" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.Primitives.isPrimitive(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4754" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4755" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1(java.lang.String,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4756" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4757" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4758" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4759" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4760" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4761" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4762" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#serialized">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4763" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1#typeAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4764" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field)" target="com.google.gson.FieldNamingStrategy.translateName(java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4765" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field)" target="com.google.gson.annotations.SerializedName#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4766" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(java.lang.reflect.Field)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4767" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(java.lang.reflect.Field)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory#fieldNamingPolicy">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4768" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4769" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4770" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4771" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4772" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4773" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4774" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4775" source="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4776" source="com.google.gson.internal.bind.SqlDateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4777" source="com.google.gson.internal.bind.SqlDateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.SqlDateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4778" source="com.google.gson.internal.bind.SqlDateTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4779" source="com.google.gson.internal.bind.SqlDateTypeAdapter#FACTORY" target="com.google.gson.internal.bind.SqlDateTypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4780" source="com.google.gson.internal.bind.SqlDateTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4781" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4782" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4783" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4784" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4785" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4786" source="com.google.gson.internal.bind.SqlDateTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.SqlDateTypeAdapter#format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4787" source="com.google.gson.internal.bind.SqlDateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Date)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4788" source="com.google.gson.internal.bind.SqlDateTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Date)" target="com.google.gson.internal.bind.SqlDateTypeAdapter#format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4789" source="com.google.gson.internal.bind.TimeTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4790" source="com.google.gson.internal.bind.TimeTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.TimeTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4791" source="com.google.gson.internal.bind.TimeTypeAdapter$1.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.sql.Time#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4792" source="com.google.gson.internal.bind.TimeTypeAdapter#FACTORY" target="com.google.gson.internal.bind.TimeTypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4793" source="com.google.gson.internal.bind.TimeTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4794" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4795" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4796" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4797" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4798" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4799" source="com.google.gson.internal.bind.TimeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TimeTypeAdapter#format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4800" source="com.google.gson.internal.bind.TimeTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Time)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4801" source="com.google.gson.internal.bind.TimeTypeAdapter.write(com.google.gson.stream.JsonWriter,java.sql.Time)" target="com.google.gson.internal.bind.TimeTypeAdapter#format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4802" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4803" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#context" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4804" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#delegate" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4805" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#type" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4806" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4807" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4808" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4809" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4810" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4811" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4812" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4813" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4814" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4815" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#context">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4816" source="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper#delegate" target="com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e4817" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4818" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)" target="com.google.gson.annotations.SerializedName#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4819" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)" target="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#nameToConstant">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4820" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)" target="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#constantToName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4821" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4822" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4823" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4824" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4825" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#nameToConstant">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4826" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4827" source="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter#constantToName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4828" source="com.google.gson.internal.bind.TypeAdapters$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4829" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4830" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4831" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4832" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Class)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4833" source="com.google.gson.internal.bind.TypeAdapters#CLASS" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4834" source="com.google.gson.internal.bind.TypeAdapters#CLASS_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4835" source="com.google.gson.internal.bind.TypeAdapters$2()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4836" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4837" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4838" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4839" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4840" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4841" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4842" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4843" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4844" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4845" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4846" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4847" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4848" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4849" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.BitSet)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4850" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.BitSet)" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4851" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.BitSet)" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4852" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.BitSet)" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4853" source="com.google.gson.internal.bind.TypeAdapters#BIT_SET" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4854" source="com.google.gson.internal.bind.TypeAdapters#BIT_SET_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4855" source="com.google.gson.internal.bind.TypeAdapters$3()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4856" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4857" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4858" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4859" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4860" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4861" source="com.google.gson.internal.bind.TypeAdapters$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4862" source="com.google.gson.internal.bind.TypeAdapters$3.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4863" source="com.google.gson.internal.bind.TypeAdapters$3.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4864" source="com.google.gson.internal.bind.TypeAdapters#BOOLEAN" target="com.google.gson.internal.bind.TypeAdapters$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4865" source="com.google.gson.internal.bind.TypeAdapters$4()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4866" source="com.google.gson.internal.bind.TypeAdapters$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4867" source="com.google.gson.internal.bind.TypeAdapters$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4868" source="com.google.gson.internal.bind.TypeAdapters$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4869" source="com.google.gson.internal.bind.TypeAdapters$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4870" source="com.google.gson.internal.bind.TypeAdapters$4.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4871" source="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_AS_STRING" target="com.google.gson.internal.bind.TypeAdapters$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4872" source="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4873" source="com.google.gson.internal.bind.TypeAdapters$5()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4874" source="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4875" source="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4876" source="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4877" source="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4878" source="com.google.gson.internal.bind.TypeAdapters$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4879" source="com.google.gson.internal.bind.TypeAdapters$5.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4880" source="com.google.gson.internal.bind.TypeAdapters#BYTE" target="com.google.gson.internal.bind.TypeAdapters$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4881" source="com.google.gson.internal.bind.TypeAdapters#BYTE_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4882" source="com.google.gson.internal.bind.TypeAdapters$6()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4883" source="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4884" source="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4885" source="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4886" source="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4887" source="com.google.gson.internal.bind.TypeAdapters$6.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4888" source="com.google.gson.internal.bind.TypeAdapters$6.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4889" source="com.google.gson.internal.bind.TypeAdapters#SHORT" target="com.google.gson.internal.bind.TypeAdapters$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4890" source="com.google.gson.internal.bind.TypeAdapters#SHORT_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4891" source="com.google.gson.internal.bind.TypeAdapters$7()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4892" source="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4893" source="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4894" source="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4895" source="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4896" source="com.google.gson.internal.bind.TypeAdapters$7.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4897" source="com.google.gson.internal.bind.TypeAdapters$7.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4898" source="com.google.gson.internal.bind.TypeAdapters#INTEGER" target="com.google.gson.internal.bind.TypeAdapters$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4899" source="com.google.gson.internal.bind.TypeAdapters#INTEGER_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4900" source="com.google.gson.internal.bind.TypeAdapters$8()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4901" source="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4902" source="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4903" source="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4904" source="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4905" source="com.google.gson.internal.bind.TypeAdapters$8.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4906" source="com.google.gson.internal.bind.TypeAdapters$8.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4907" source="com.google.gson.internal.bind.TypeAdapters#LONG" target="com.google.gson.internal.bind.TypeAdapters$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4908" source="com.google.gson.internal.bind.TypeAdapters$9()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4909" source="com.google.gson.internal.bind.TypeAdapters$9.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4910" source="com.google.gson.internal.bind.TypeAdapters$9.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4911" source="com.google.gson.internal.bind.TypeAdapters$9.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4912" source="com.google.gson.internal.bind.TypeAdapters$9.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4913" source="com.google.gson.internal.bind.TypeAdapters$9.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4914" source="com.google.gson.internal.bind.TypeAdapters#FLOAT" target="com.google.gson.internal.bind.TypeAdapters$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4915" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4916" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4917" source="com.google.gson.internal.bind.TypeAdapters#DOUBLE" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4918" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.LazilyParsedNumber(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4919" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4920" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4921" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4922" source="com.google.gson.internal.bind.TypeAdapters#NUMBER" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4923" source="com.google.gson.internal.bind.TypeAdapters#NUMBER_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4924" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.Character)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4925" source="com.google.gson.internal.bind.TypeAdapters#CHARACTER" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4926" source="com.google.gson.internal.bind.TypeAdapters#CHARACTER_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4927" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4928" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4929" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.String)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4930" source="com.google.gson.internal.bind.TypeAdapters#STRING" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4931" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4932" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4933" source="com.google.gson.internal.bind.TypeAdapters#BIG_DECIMAL" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4934" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.math.BigInteger)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4935" source="com.google.gson.internal.bind.TypeAdapters#BIG_INTEGER" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4936" source="com.google.gson.internal.bind.TypeAdapters#STRING_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4937" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4938" source="com.google.gson.internal.bind.TypeAdapters#STRING_BUILDER" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4939" source="com.google.gson.internal.bind.TypeAdapters#STRING_BUILDER_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4940" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4941" source="com.google.gson.internal.bind.TypeAdapters#STRING_BUFFER" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4942" source="com.google.gson.internal.bind.TypeAdapters#STRING_BUFFER_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4943" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.net.URL)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4944" source="com.google.gson.internal.bind.TypeAdapters#URL" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4945" source="com.google.gson.internal.bind.TypeAdapters#URL_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4946" source="com.google.gson.internal.bind.TypeAdapters$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4947" source="com.google.gson.internal.bind.TypeAdapters$1.write(com.google.gson.stream.JsonWriter,java.net.URI)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4948" source="com.google.gson.internal.bind.TypeAdapters#URI" target="com.google.gson.internal.bind.TypeAdapters$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4949" source="com.google.gson.internal.bind.TypeAdapters#URI_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4950" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.net.InetAddress)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4951" source="com.google.gson.internal.bind.TypeAdapters#INET_ADDRESS" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4952" source="com.google.gson.internal.bind.TypeAdapters#INET_ADDRESS_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4953" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.UUID)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4954" source="com.google.gson.internal.bind.TypeAdapters#UUID" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4955" source="com.google.gson.internal.bind.TypeAdapters#UUID_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4956" source="com.google.gson.internal.bind.TypeAdapters$2$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4957" source="com.google.gson.internal.bind.TypeAdapters$2$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4958" source="com.google.gson.internal.bind.TypeAdapters$2$1.write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4959" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4960" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4961" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4962" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4963" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4964" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4965" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4966" source="com.google.gson.internal.bind.TypeAdapters#TIMESTAMP_FACTORY" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4967" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4968" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4969" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4970" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4971" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#YEAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4972" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4973" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#DAY_OF_MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4974" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#HOUR_OF_DAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4975" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#MINUTE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4976" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2#SECOND">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4977" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4978" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4979" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4980" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4981" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4982" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#YEAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4983" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#YEAR">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4984" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4985" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4986" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#DAY_OF_MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4987" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#DAY_OF_MONTH">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4988" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#HOUR_OF_DAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4989" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#HOUR_OF_DAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4990" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#MINUTE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4991" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#MINUTE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4992" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="com.google.gson.internal.bind.TypeAdapters$2#SECOND">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4993" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Calendar)" target="java.util.Calendar#SECOND">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e4994" source="com.google.gson.internal.bind.TypeAdapters#CALENDAR" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4995" source="com.google.gson.internal.bind.TypeAdapters#CALENDAR_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4996" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,java.util.Locale)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4997" source="com.google.gson.internal.bind.TypeAdapters#LOCALE" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4998" source="com.google.gson.internal.bind.TypeAdapters#LOCALE_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4999" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5000" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5001" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.LazilyParsedNumber(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5002" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5003" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5004" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5005" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5006" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5007" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5008" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5009" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5010" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5011" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5012" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5013" source="com.google.gson.internal.bind.TypeAdapters$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5014" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5015" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5016" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5017" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5018" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5019" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5020" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5021" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5022" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5023" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5024" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5025" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5026" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5027" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5028" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5029" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5030" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5031" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5032" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5033" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5034" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5035" source="com.google.gson.internal.bind.TypeAdapters$2.write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5036" source="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5037" source="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT_FACTORY" target="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5038" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5039" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="java.lang.Enum#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5040" source="com.google.gson.internal.bind.TypeAdapters#ENUM_FACTORY" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5041" source="com.google.gson.internal.bind.TypeAdapters$2.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5042" source="com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5043" source="com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)" target="com.google.gson.reflect.TypeToken.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5044" source="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5045" source="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5046" source="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.internal.bind.TypeAdapters$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5047" source="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5048" source="com.google.gson.internal.bind.TypeAdapters$3.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5049" source="com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.internal.bind.TypeAdapters$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5050" source="com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5051" source="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.internal.bind.TypeAdapters$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5052" source="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5053" source="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl#componentType" target="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5054" source="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl#componentType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5055" source="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.toString()" target="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl#componentType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5056" source="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.getGenericComponentType()" target="com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl#componentType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5057" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#ownerType" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5058" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#rawType" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5059" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5060" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5061" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5062" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5063" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#rawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5064" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#ownerType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5065" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.toString()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5066" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.toString()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5067" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.toString()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#rawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5068" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getOwnerType()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#ownerType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5069" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getRawType()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#rawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5070" source="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.getActualTypeArguments()" target="com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl#typeArguments">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5071" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5072" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5073" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#lowerBound" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5074" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#upperBound" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5075" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#lowerBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5076" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.hashCode()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#upperBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5077" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.toString()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#lowerBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5078" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.toString()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#upperBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5079" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.toString()" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5080" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.getLowerBounds()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#lowerBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5081" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.getLowerBounds()" target="com.google.gson.internal.$Gson$Types#EMPTY_TYPE_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5082" source="com.google.gson.internal.$Gson$Types$WildcardTypeImpl.getUpperBounds()" target="com.google.gson.internal.$Gson$Types$WildcardTypeImpl#upperBound">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5083" source="com.google.gson.internal.$Gson$Types.indexOf(java.lang.Object[],java.lang.Object)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5084" source="com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5085" source="com.google.gson.internal.$Gson$Types.getCollectionElementType(java.lang.reflect.Type,java.lang.Class)" target="java.util.Collection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5086" source="com.google.gson.internal.$Gson$Types.getCollectionElementType(java.lang.reflect.Type,java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5087" source="com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5088" source="com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5089" source="com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5090" source="com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)" target="java.util.Properties#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5091" source="com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5092" source="com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5093" source="com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5094" source="com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type)" target="com.google.gson.internal.$Gson$Types#EMPTY_TYPE_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5095" source="com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5096" source="com.google.gson.internal.ConstructorConstructor#instanceCreators" target="com.google.gson.internal.ConstructorConstructor(java.util.Map)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5097" source="com.google.gson.internal.ConstructorConstructor$1.construct()" target="com.google.gson.InstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5098" source="com.google.gson.internal.ConstructorConstructor$2.construct()" target="com.google.gson.InstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5099" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5100" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5101" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5102" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.InstanceCreator.createInstance(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5103" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5104" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5105" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5106" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5107" source="com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.ConstructorConstructor#instanceCreators">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5108" source="com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5109" source="com.google.gson.internal.ConstructorConstructor$5.construct()" target="com.google.gson.JsonIOException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5110" source="com.google.gson.internal.ConstructorConstructor$1.construct()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5111" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5112" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5113" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.JsonIOException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5114" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5115" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5116" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5117" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5118" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5119" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5120" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5121" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5122" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.Collection#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5123" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.SortedSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5124" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.EnumSet#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5125" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.Set#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5126" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.Queue#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5127" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.Map#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5128" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.util.SortedMap#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5129" source="com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5130" source="com.google.gson.internal.ConstructorConstructor$1#unsafeAllocator" target="com.google.gson.internal.UnsafeAllocator.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5131" source="com.google.gson.internal.ConstructorConstructor$1.construct()" target="com.google.gson.internal.UnsafeAllocator.newInstance(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5132" source="com.google.gson.internal.ConstructorConstructor$1.construct()" target="com.google.gson.internal.ConstructorConstructor$1#unsafeAllocator">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5133" source="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5134" source="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.UnsafeAllocator.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5135" source="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.UnsafeAllocator.newInstance(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5136" source="com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)" target="com.google.gson.internal.ConstructorConstructor$1#unsafeAllocator">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5137" source="com.google.gson.internal.ConstructorConstructor.toString()" target="com.google.gson.internal.ConstructorConstructor#instanceCreators">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5138" source="com.google.gson.internal.Excluder#DEFAULT" target="com.google.gson.internal.Excluder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5139" source="com.google.gson.internal.Excluder$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5140" source="com.google.gson.internal.Excluder$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5141" source="com.google.gson.internal.Excluder$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.Excluder$1.delegate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5142" source="com.google.gson.internal.Excluder$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5143" source="com.google.gson.internal.Excluder$1.delegate()" target="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5144" source="com.google.gson.internal.Excluder$1.delegate()" target="com.google.gson.internal.Excluder$1#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5145" source="com.google.gson.internal.Excluder$1#delegate" target="com.google.gson.internal.Excluder$1.delegate()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5146" source="com.google.gson.internal.Excluder$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5147" source="com.google.gson.internal.Excluder$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.Excluder$1.delegate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5148" source="com.google.gson.internal.Excluder$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5149" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5150" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5151" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Excluder$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5152" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5153" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5154" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Excluder$1.delegate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5155" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5156" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5157" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5158" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5159" source="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.internal.Excluder$1#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5160" source="com.google.gson.internal.Excluder$1#delegate" target="com.google.gson.internal.Excluder.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5161" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder.isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5162" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder.isInnerClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5163" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder.isAnonymousOrLocal(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5164" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.ExclusionStrategy.shouldSkipClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5165" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder#version">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5166" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder#IGNORE_VERSIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5167" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.annotations.Since#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5168" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.annotations.Until#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5169" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder#serializeInnerClasses">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5170" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder#serializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5171" source="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)" target="com.google.gson.internal.Excluder#deserializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5172" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder.isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5173" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder.isInnerClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5174" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder.isAnonymousOrLocal(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5175" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.FieldAttributes(java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5176" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.ExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5177" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#modifiers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5178" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#version">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5179" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#IGNORE_VERSIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5180" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.annotations.Since#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5181" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.annotations.Until#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5182" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#requireExpose">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5183" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.annotations.Expose#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5184" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#serializeInnerClasses">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5185" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#serializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5186" source="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)" target="com.google.gson.internal.Excluder#deserializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5187" source="com.google.gson.internal.Excluder.isAnonymousOrLocal(java.lang.Class)" target="java.lang.Enum#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5188" source="com.google.gson.internal.Excluder.isInnerClass(java.lang.Class)" target="com.google.gson.internal.Excluder.isStatic(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5189" source="com.google.gson.internal.Excluder.isStatic(java.lang.Class)" target="java.lang.reflect.Modifier#STATIC">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5190" source="com.google.gson.internal.Excluder.isValidSince(com.google.gson.annotations.Since)" target="com.google.gson.internal.Excluder#version">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5191" source="com.google.gson.internal.Excluder.isValidUntil(com.google.gson.annotations.Until)" target="com.google.gson.internal.Excluder#version">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5192" source="com.google.gson.internal.Excluder.isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)" target="com.google.gson.internal.Excluder.isValidSince(com.google.gson.annotations.Since)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5193" source="com.google.gson.internal.Excluder.isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)" target="com.google.gson.internal.Excluder.isValidUntil(com.google.gson.annotations.Until)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5194" source="com.google.gson.internal.Excluder.disableInnerClassSerialization()" target="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5195" source="com.google.gson.internal.Excluder.disableInnerClassSerialization()" target="com.google.gson.internal.Excluder#serializeInnerClasses">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5196" source="com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()" target="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5197" source="com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()" target="com.google.gson.internal.Excluder#requireExpose">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5198" source="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)" target="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5199" source="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)" target="com.google.gson.internal.Excluder#serializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5200" source="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)" target="com.google.gson.internal.Excluder#deserializationStrategies">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5201" source="com.google.gson.internal.Excluder.withModifiers(int[])" target="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5202" source="com.google.gson.internal.Excluder.withModifiers(int[])" target="com.google.gson.internal.Excluder#modifiers">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5203" source="com.google.gson.internal.Excluder.withVersion(double)" target="com.google.gson.internal.Excluder.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5204" source="com.google.gson.internal.Excluder.withVersion(double)" target="com.google.gson.internal.Excluder#version">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5205" source="com.google.gson.internal.GsonTypesTest.getFirstTypeArgument(java.lang.reflect.Type)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5206" source="com.google.gson.internal.GsonTypesTest.testGetFirstTypeArgument()" target="com.google.gson.internal.GsonTypesTest.getFirstTypeArgument(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5207" source="com.google.gson.internal.GsonTypesTest.testGetFirstTypeArgument()" target="com.google.gson.internal.GsonTypesTest$A#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5208" source="com.google.gson.internal.GsonTypesTest.testGetFirstTypeArgument()" target="com.google.gson.internal.GsonTypesTest$B#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5209" source="com.google.gson.internal.GsonTypesTest.testGetFirstTypeArgument()" target="com.google.gson.internal.GsonTypesTest$C#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5210" source="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()" target="com.google.gson.internal.GsonTypesTest.getFirstTypeArgument(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5211" source="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()" target="java.util.List#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5212" source="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()" target="com.google.gson.internal.GsonTypesTest$A#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5213" source="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()" target="com.google.gson.internal.GsonTypesTest$B#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5214" source="com.google.gson.internal.GsonTypesTest.testNewParameterizedTypeWithoutOwner()" target="D#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5215" source="com.google.gson.internal.LazilyParsedNumber#value" target="com.google.gson.internal.LazilyParsedNumber(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5216" source="com.google.gson.internal.LazilyParsedNumber.doubleValue()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5217" source="com.google.gson.internal.LazilyParsedNumber.floatValue()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5218" source="com.google.gson.internal.LazilyParsedNumber.intValue()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5219" source="com.google.gson.internal.LazilyParsedNumber.writeReplace()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5220" source="com.google.gson.internal.LazilyParsedNumber.toString()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5221" source="com.google.gson.internal.LazilyParsedNumber.longValue()" target="com.google.gson.internal.LazilyParsedNumber#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5222" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.root()" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5223" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.root()" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5224" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5225" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5226" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5227" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5228" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesToSkip">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5229" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5230" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesSkipped">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5231" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#stack" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5232" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5233" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesSkipped" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5234" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesToSkip" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5235" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#size" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5236" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#leavesSkipped" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5237" source="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder#stack" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5238" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator#stackTop">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5239" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5240" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5241" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5242" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator#stackTop" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5243" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5244" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5245" source="com.google.gson.internal.LinkedHashTreeMap$AvlIterator#stackTop" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5246" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.contains(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5247" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5248" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5249" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.size()" target="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5250" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5251" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1.next()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5252" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5253" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5254" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5255" source="com.google.gson.internal.LinkedHashTreeMap$EntrySet.clear()" target="com.google.gson.internal.LinkedHashTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5256" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.contains(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5257" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5258" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.size()" target="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5259" source="com.google.gson.internal.LinkedHashTreeMap$KeySet$1()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5260" source="com.google.gson.internal.LinkedHashTreeMap$KeySet$1.next()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5261" source="com.google.gson.internal.LinkedHashTreeMap$KeySet$1.next()" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5262" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$KeySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5263" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5264" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5265" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5266" source="com.google.gson.internal.LinkedHashTreeMap$KeySet.clear()" target="com.google.gson.internal.LinkedHashTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5267" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.hasNext()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5268" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.hasNext()" target="com.google.gson.internal.LinkedHashTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5269" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5270" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedHashTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5271" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedHashTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5272" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#expectedModCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5273" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#next" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5274" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedHashTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5275" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#lastReturned" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5276" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()" target="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5277" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#lastReturned">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5278" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#lastReturned" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5279" source="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator#expectedModCount" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5280" source="com.google.gson.internal.LinkedHashTreeMap#modCount" target="com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5281" source="com.google.gson.internal.LinkedHashTreeMap$Node#key" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5282" source="com.google.gson.internal.LinkedHashTreeMap$Node#hash" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5283" source="com.google.gson.internal.LinkedHashTreeMap$Node#next" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5284" source="com.google.gson.internal.LinkedHashTreeMap$Node#prev" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5285" source="com.google.gson.internal.LinkedHashTreeMap$Node#parent" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5286" source="com.google.gson.internal.LinkedHashTreeMap$Node#key" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5287" source="com.google.gson.internal.LinkedHashTreeMap$Node#hash" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5288" source="com.google.gson.internal.LinkedHashTreeMap$Node#height" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5289" source="com.google.gson.internal.LinkedHashTreeMap$Node#next" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5290" source="com.google.gson.internal.LinkedHashTreeMap$Node#prev" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5291" source="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5292" source="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5293" source="com.google.gson.internal.LinkedHashTreeMap$Node.getKey()" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5294" source="com.google.gson.internal.LinkedHashTreeMap$Node.getValue()" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5295" source="com.google.gson.internal.LinkedHashTreeMap$Node.setValue(V)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5296" source="com.google.gson.internal.LinkedHashTreeMap$Node#value" target="com.google.gson.internal.LinkedHashTreeMap$Node.setValue(V)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5297" source="com.google.gson.internal.LinkedHashTreeMap$Node.equals(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5298" source="com.google.gson.internal.LinkedHashTreeMap$Node.equals(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5299" source="com.google.gson.internal.LinkedHashTreeMap$Node.first()" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5300" source="com.google.gson.internal.LinkedHashTreeMap$Node.last()" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5301" source="com.google.gson.internal.LinkedHashTreeMap$Node.hashCode()" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5302" source="com.google.gson.internal.LinkedHashTreeMap$Node.hashCode()" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5303" source="com.google.gson.internal.LinkedHashTreeMap$Node.toString()" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5304" source="com.google.gson.internal.LinkedHashTreeMap$Node.toString()" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5305" source="com.google.gson.internal.LinkedHashTreeMap#NATURAL_ORDER" target="com.google.gson.internal.LinkedHashTreeMap$EntrySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5306" source="com.google.gson.internal.LinkedHashTreeMap()" target="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5307" source="com.google.gson.internal.LinkedHashTreeMap()" target="com.google.gson.internal.LinkedHashTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5308" source="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5309" source="com.google.gson.internal.LinkedHashTreeMap#comparator" target="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5310" source="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)" target="com.google.gson.internal.LinkedHashTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5311" source="com.google.gson.internal.LinkedHashTreeMap#header" target="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5312" source="com.google.gson.internal.LinkedHashTreeMap#table" target="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5313" source="com.google.gson.internal.LinkedHashTreeMap#threshold" target="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5314" source="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5315" source="com.google.gson.internal.LinkedHashTreeMap(java.util.Comparator)" target="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5316" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5317" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5318" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5319" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5320" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5321" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5322" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.root()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5323" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5324" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])" target="com.google.gson.internal.LinkedHashTreeMap$Node#hash">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5325" source="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5326" source="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5327" source="com.google.gson.internal.LinkedHashTreeMap.put(K,V)" target="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5328" source="com.google.gson.internal.LinkedHashTreeMap.put(K,V)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5329" source="com.google.gson.internal.LinkedHashTreeMap.remove(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5330" source="com.google.gson.internal.LinkedHashTreeMap.remove(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5331" source="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5332" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.secondaryHash(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5333" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5334" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5335" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5336" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#comparator">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5337" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5338" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5339" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5340" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5341" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5342" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5343" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5344" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5345" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5346" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#threshold">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5347" source="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5348" source="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5349" source="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedHashTreeMap.equal(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5350" source="com.google.gson.internal.LinkedHashTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedHashTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5351" source="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5352" source="com.google.gson.internal.LinkedHashTreeMap.removeInternalByKey(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5353" source="com.google.gson.internal.LinkedHashTreeMap.removeInternalByKey(java.lang.Object)" target="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5354" source="com.google.gson.internal.LinkedHashTreeMap.size()" target="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5355" source="com.google.gson.internal.LinkedHashTreeMap.entrySet()" target="com.google.gson.internal.LinkedHashTreeMap$EntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5356" source="com.google.gson.internal.LinkedHashTreeMap.entrySet()" target="com.google.gson.internal.LinkedHashTreeMap#entrySet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5357" source="com.google.gson.internal.LinkedHashTreeMap#entrySet" target="com.google.gson.internal.LinkedHashTreeMap.entrySet()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5358" source="com.google.gson.internal.LinkedHashTreeMap.keySet()" target="com.google.gson.internal.LinkedHashTreeMap$KeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5359" source="com.google.gson.internal.LinkedHashTreeMap.keySet()" target="com.google.gson.internal.LinkedHashTreeMap#keySet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5360" source="com.google.gson.internal.LinkedHashTreeMap#keySet" target="com.google.gson.internal.LinkedHashTreeMap.keySet()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5361" source="com.google.gson.internal.LinkedHashTreeMap.clear()" target="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5362" source="com.google.gson.internal.LinkedHashTreeMap#size" target="com.google.gson.internal.LinkedHashTreeMap.clear()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5363" source="com.google.gson.internal.LinkedHashTreeMap.clear()" target="com.google.gson.internal.LinkedHashTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5364" source="com.google.gson.internal.LinkedHashTreeMap.clear()" target="com.google.gson.internal.LinkedHashTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5365" source="com.google.gson.internal.LinkedHashTreeMap.clear()" target="com.google.gson.internal.LinkedHashTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5366" source="com.google.gson.internal.LinkedHashTreeMap.clear()" target="com.google.gson.internal.LinkedHashTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5367" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5368" source="com.google.gson.internal.LinkedHashTreeMap#table" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5369" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5370" source="com.google.gson.internal.LinkedHashTreeMap#threshold" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5371" source="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5372" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5373" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5374" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5375" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5376" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5377" source="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5378" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5379" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5380" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5381" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5382" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap.rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5383" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5384" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5385" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5386" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5387" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5388" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5389" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5390" source="com.google.gson.internal.LinkedHashTreeMap.removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedHashTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5391" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5392" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5393" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5394" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#hash">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5395" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5396" source="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap#table">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5397" source="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5398" source="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5399" source="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5400" source="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5401" source="com.google.gson.internal.LinkedHashTreeMap.rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5402" source="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap.replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5403" source="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5404" source="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5405" source="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5406" source="com.google.gson.internal.LinkedHashTreeMap.rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5407" source="com.google.gson.internal.LinkedHashTreeMapTest#head" target="com.google.gson.internal.LinkedHashTreeMap$Node()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5408" source="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5409" source="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5410" source="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5411" source="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5412" source="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,K,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5413" source="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMapTest#head">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5414" source="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5415" source="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5416" source="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5417" source="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5418" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5419" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.reset(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5420" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5421" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5422" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5423" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)" target="com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.root()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5424" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5425" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5426" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])" target="com.google.gson.internal.LinkedHashTreeMap$AvlIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5427" source="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])" target="com.google.gson.internal.LinkedHashTreeMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5428" source="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5429" source="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5430" source="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5431" source="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5432" source="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5433" source="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMapTest.toString(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5434" source="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)" target="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5435" source="com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlBuilder(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5436" source="com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertAvlWalker(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5437" source="com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5438" source="com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5439" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5440" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5441" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5442" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5443" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5444" source="com.google.gson.internal.LinkedHashTreeMapTest.testClear()" target="com.google.gson.internal.LinkedHashTreeMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5445" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5446" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5447" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5448" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5449" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5450" source="com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5451" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5452" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5453" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5454" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5455" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5456" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()" target="com.google.gson.internal.LinkedHashTreeMapTest.node(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5457" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()" target="com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5458" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertTree(java.lang.String,com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5459" source="com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertConsistent(com.google.gson.internal.LinkedHashTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5460" source="com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5461" source="com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5462" source="com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5463" source="com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5464" source="com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5465" source="com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5466" source="com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5467" source="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5468" source="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5469" source="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()" target="com.google.gson.internal.LinkedHashTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5470" source="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()" target="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5471" source="com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5472" source="com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5473" source="com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5474" source="com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5475" source="com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedHashTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5476" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5477" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5478" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutNullKeyFails()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5479" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutNullKeyFails()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5480" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5481" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5482" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedHashTreeMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5483" source="com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedHashTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5484" source="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedHashTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5485" source="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedHashTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5486" source="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedHashTreeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5487" source="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedHashTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5488" source="com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedHashTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5489" source="com.google.gson.internal.LinkedTreeMap$EntrySet.contains(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5490" source="com.google.gson.internal.LinkedTreeMap$EntrySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5491" source="com.google.gson.internal.LinkedTreeMap$EntrySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5492" source="com.google.gson.internal.LinkedTreeMap$EntrySet.size()" target="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5493" source="com.google.gson.internal.LinkedTreeMap$EntrySet$1()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5494" source="com.google.gson.internal.LinkedTreeMap$EntrySet$1.next()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5495" source="com.google.gson.internal.LinkedTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$EntrySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5496" source="com.google.gson.internal.LinkedTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5497" source="com.google.gson.internal.LinkedTreeMap$EntrySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5498" source="com.google.gson.internal.LinkedTreeMap$EntrySet.clear()" target="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5499" source="com.google.gson.internal.LinkedTreeMap$KeySet.contains(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5500" source="com.google.gson.internal.LinkedTreeMap$KeySet.remove(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5501" source="com.google.gson.internal.LinkedTreeMap$KeySet.size()" target="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5502" source="com.google.gson.internal.LinkedTreeMap$KeySet$1()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5503" source="com.google.gson.internal.LinkedTreeMap$KeySet$1.next()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5504" source="com.google.gson.internal.LinkedTreeMap$KeySet$1.next()" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5505" source="com.google.gson.internal.LinkedTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$KeySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5506" source="com.google.gson.internal.LinkedTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5507" source="com.google.gson.internal.LinkedTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5508" source="com.google.gson.internal.LinkedTreeMap$KeySet.iterator()" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5509" source="com.google.gson.internal.LinkedTreeMap$KeySet.clear()" target="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5510" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.hasNext()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5511" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.hasNext()" target="com.google.gson.internal.LinkedTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5512" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5513" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5514" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5515" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#expectedModCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5516" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#next" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5517" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()" target="com.google.gson.internal.LinkedTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5518" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#lastReturned" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.nextNode()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5519" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()" target="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5520" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#lastReturned">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5521" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#lastReturned" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5522" source="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator#expectedModCount" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5523" source="com.google.gson.internal.LinkedTreeMap#modCount" target="com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.remove()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5524" source="com.google.gson.internal.LinkedTreeMap$Node#key" target="com.google.gson.internal.LinkedTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5525" source="com.google.gson.internal.LinkedTreeMap$Node#next" target="com.google.gson.internal.LinkedTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5526" source="com.google.gson.internal.LinkedTreeMap$Node#prev" target="com.google.gson.internal.LinkedTreeMap$Node()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5527" source="com.google.gson.internal.LinkedTreeMap$Node#parent" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5528" source="com.google.gson.internal.LinkedTreeMap$Node#key" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5529" source="com.google.gson.internal.LinkedTreeMap$Node#height" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5530" source="com.google.gson.internal.LinkedTreeMap$Node#next" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5531" source="com.google.gson.internal.LinkedTreeMap$Node#prev" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5532" source="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5533" source="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5534" source="com.google.gson.internal.LinkedTreeMap$Node.getKey()" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5535" source="com.google.gson.internal.LinkedTreeMap$Node.getValue()" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5536" source="com.google.gson.internal.LinkedTreeMap$Node.setValue(V)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5537" source="com.google.gson.internal.LinkedTreeMap$Node#value" target="com.google.gson.internal.LinkedTreeMap$Node.setValue(V)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5538" source="com.google.gson.internal.LinkedTreeMap$Node.equals(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5539" source="com.google.gson.internal.LinkedTreeMap$Node.equals(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5540" source="com.google.gson.internal.LinkedTreeMap$Node.first()" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5541" source="com.google.gson.internal.LinkedTreeMap$Node.last()" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5542" source="com.google.gson.internal.LinkedTreeMap$Node.hashCode()" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5543" source="com.google.gson.internal.LinkedTreeMap$Node.hashCode()" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5544" source="com.google.gson.internal.LinkedTreeMap$Node.toString()" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5545" source="com.google.gson.internal.LinkedTreeMap$Node.toString()" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5546" source="com.google.gson.internal.LinkedTreeMap#NATURAL_ORDER" target="com.google.gson.internal.LinkedTreeMap$EntrySet$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5547" source="com.google.gson.internal.LinkedTreeMap#header" target="com.google.gson.internal.LinkedTreeMap$Node()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5548" source="com.google.gson.internal.LinkedTreeMap()" target="com.google.gson.internal.LinkedTreeMap(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5549" source="com.google.gson.internal.LinkedTreeMap()" target="com.google.gson.internal.LinkedTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5550" source="com.google.gson.internal.LinkedTreeMap#comparator" target="com.google.gson.internal.LinkedTreeMap(java.util.Comparator)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5551" source="com.google.gson.internal.LinkedTreeMap(java.util.Comparator)" target="com.google.gson.internal.LinkedTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5552" source="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5553" source="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5554" source="com.google.gson.internal.LinkedTreeMap.put(K,V)" target="com.google.gson.internal.LinkedTreeMap.find(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5555" source="com.google.gson.internal.LinkedTreeMap.put(K,V)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5556" source="com.google.gson.internal.LinkedTreeMap.remove(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.removeInternalByKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5557" source="com.google.gson.internal.LinkedTreeMap.remove(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5558" source="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5559" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,K,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5560" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5561" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#comparator">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5562" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#root">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5563" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#NATURAL_ORDER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5564" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#key">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5565" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5566" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5567" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5568" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5569" source="com.google.gson.internal.LinkedTreeMap#root" target="com.google.gson.internal.LinkedTreeMap.find(K,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5570" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5571" source="com.google.gson.internal.LinkedTreeMap.find(K,boolean)" target="com.google.gson.internal.LinkedTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5572" source="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5573" source="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedTreeMap.equal(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5574" source="com.google.gson.internal.LinkedTreeMap.findByEntry(java.util.Map$Entry)" target="com.google.gson.internal.LinkedTreeMap$Node#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5575" source="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.find(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5576" source="com.google.gson.internal.LinkedTreeMap.removeInternalByKey(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.findByObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5577" source="com.google.gson.internal.LinkedTreeMap.removeInternalByKey(java.lang.Object)" target="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5578" source="com.google.gson.internal.LinkedTreeMap.size()" target="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5579" source="com.google.gson.internal.LinkedTreeMap.entrySet()" target="com.google.gson.internal.LinkedTreeMap$EntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5580" source="com.google.gson.internal.LinkedTreeMap.entrySet()" target="com.google.gson.internal.LinkedTreeMap#entrySet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5581" source="com.google.gson.internal.LinkedTreeMap#entrySet" target="com.google.gson.internal.LinkedTreeMap.entrySet()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5582" source="com.google.gson.internal.LinkedTreeMap.keySet()" target="com.google.gson.internal.LinkedTreeMap$KeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5583" source="com.google.gson.internal.LinkedTreeMap.keySet()" target="com.google.gson.internal.LinkedTreeMap#keySet">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5584" source="com.google.gson.internal.LinkedTreeMap#keySet" target="com.google.gson.internal.LinkedTreeMap.keySet()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5585" source="com.google.gson.internal.LinkedTreeMap#root" target="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5586" source="com.google.gson.internal.LinkedTreeMap#size" target="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5587" source="com.google.gson.internal.LinkedTreeMap.clear()" target="com.google.gson.internal.LinkedTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5588" source="com.google.gson.internal.LinkedTreeMap.clear()" target="com.google.gson.internal.LinkedTreeMap#header">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5589" source="com.google.gson.internal.LinkedTreeMap.clear()" target="com.google.gson.internal.LinkedTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5590" source="com.google.gson.internal.LinkedTreeMap.clear()" target="com.google.gson.internal.LinkedTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5591" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5592" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5593" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5594" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5595" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5596" source="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5597" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5598" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5599" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5600" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5601" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap.rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5602" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#next">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5603" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#prev">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5604" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5605" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5606" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5607" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5608" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap#size">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5609" source="com.google.gson.internal.LinkedTreeMap.removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)" target="com.google.gson.internal.LinkedTreeMap#modCount">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5610" source="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5611" source="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5612" source="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5613" source="com.google.gson.internal.LinkedTreeMap#root" target="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5614" source="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5615" source="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5616" source="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5617" source="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5618" source="com.google.gson.internal.LinkedTreeMap.rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5619" source="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap.replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5620" source="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#left">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5621" source="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#right">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5622" source="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#parent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5623" source="com.google.gson.internal.LinkedTreeMap.rotateRight(com.google.gson.internal.LinkedTreeMap$Node)" target="com.google.gson.internal.LinkedTreeMap$Node#height">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5624" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5625" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5626" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5627" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5628" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5629" source="com.google.gson.internal.LinkedTreeMapTest.testClear()" target="com.google.gson.internal.LinkedTreeMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5630" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5631" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5632" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse()" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5633" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5634" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5635" source="com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse()" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5636" source="com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5637" source="com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5638" source="com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5639" source="com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues()" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5640" source="com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5641" source="com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5642" source="com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5643" source="com.google.gson.internal.LinkedTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5644" source="com.google.gson.internal.LinkedTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5645" source="com.google.gson.internal.LinkedTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5646" source="com.google.gson.internal.LinkedTreeMapTest.testIterationOrder()" target="com.google.gson.internal.LinkedTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5647" source="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5648" source="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5649" source="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5650" source="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5651" source="com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5652" source="com.google.gson.internal.LinkedTreeMapTest.testPutNonComparableKeyFails()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5653" source="com.google.gson.internal.LinkedTreeMapTest.testPutNonComparableKeyFails()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5654" source="com.google.gson.internal.LinkedTreeMapTest.testPutNullKeyFails()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5655" source="com.google.gson.internal.LinkedTreeMapTest.testPutNullKeyFails()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5656" source="com.google.gson.internal.LinkedTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5657" source="com.google.gson.internal.LinkedTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5658" source="com.google.gson.internal.LinkedTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedTreeMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5659" source="com.google.gson.internal.LinkedTreeMapTest.testPutOverrides()" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5660" source="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5661" source="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5662" source="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedTreeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5663" source="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedTreeMapTest.assertIterationOrder(java.lang.Iterable,T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5664" source="com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink()" target="com.google.gson.internal.LinkedTreeMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5665" source="com.google.gson.internal.Primitives.unwrap(java.lang.Class)" target="com.google.gson.internal.Primitives#WRAPPER_TO_PRIMITIVE_TYPE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5666" source="com.google.gson.internal.Primitives.wrap(java.lang.Class)" target="com.google.gson.internal.Primitives#PRIMITIVE_TO_WRAPPER_TYPE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5667" source="com.google.gson.internal.Primitives.isPrimitive(java.lang.reflect.Type)" target="com.google.gson.internal.Primitives#PRIMITIVE_TO_WRAPPER_TYPE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5668" source="com.google.gson.internal.Primitives.isWrapperType(java.lang.reflect.Type)" target="com.google.gson.internal.Primitives#WRAPPER_TO_PRIMITIVE_TYPE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5669" source="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.charAt(int)" target="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite#chars">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5670" source="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.length()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5671" source="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.length()" target="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite#chars">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5672" source="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.subSequence(int,int)" target="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite#chars">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5673" source="com.google.gson.internal.Streams$AppendableWriter#currentWrite" target="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5674" source="com.google.gson.internal.Streams$AppendableWriter#appendable" target="com.google.gson.internal.Streams$AppendableWriter(java.lang.Appendable)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5675" source="com.google.gson.internal.Streams$AppendableWriter.write(char[],int,int)" target="com.google.gson.internal.Streams$AppendableWriter$CurrentWrite#chars">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5676" source="com.google.gson.internal.Streams$AppendableWriter#currentWrite" target="com.google.gson.internal.Streams$AppendableWriter.write(char[],int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5677" source="com.google.gson.internal.Streams$AppendableWriter.write(char[],int,int)" target="com.google.gson.internal.Streams$AppendableWriter#appendable">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5678" source="com.google.gson.internal.Streams$AppendableWriter.write(char[],int,int)" target="com.google.gson.internal.Streams$AppendableWriter#currentWrite">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5679" source="com.google.gson.internal.Streams$AppendableWriter.write(int)" target="com.google.gson.internal.Streams$AppendableWriter#appendable">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5680" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5681" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5682" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5683" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5684" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5685" source="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5686" source="com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable)" target="com.google.gson.internal.Streams$AppendableWriter(java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5687" source="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5688" source="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5689" source="com.google.gson.internal.UnsafeAllocator$1()" target="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5690" source="com.google.gson.internal.UnsafeAllocator$2()" target="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5691" source="com.google.gson.internal.UnsafeAllocator$3()" target="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5692" source="com.google.gson.internal.UnsafeAllocator$3.newInstance(java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5693" source="com.google.gson.internal.UnsafeAllocator$4()" target="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5694" source="com.google.gson.internal.UnsafeAllocator.create()" target="com.google.gson.internal.UnsafeAllocator$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5695" source="com.google.gson.internal.UnsafeAllocator.create()" target="com.google.gson.internal.UnsafeAllocator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5696" source="com.google.gson.internal.UnsafeAllocator.create()" target="com.google.gson.internal.UnsafeAllocator$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5697" source="com.google.gson.internal.UnsafeAllocator.create()" target="com.google.gson.internal.UnsafeAllocator$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5698" source="com.google.gson.internal.UnsafeAllocator.create()" target="com.google.gson.internal.UnsafeAllocator$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5699" source="com.google.gson.internal.UnsafeAllocator.create()" target="java.lang.Class#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5700" source="com.google.gson.internal.UnsafeAllocator.create()" target="java.io.ObjectStreamClass#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5701" source="com.google.gson.internal.UnsafeAllocator.create()" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5702" source="com.google.gson.internal.UnsafeAllocator.create()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5703" source="com.google.gson.internal.UnsafeAllocator.create()" target="java.io.ObjectInputStream#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5704" source="com.google.gson.stream.JsonReader$1()" target="com.google.gson.internal.JsonReaderInternalAccess()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5705" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.bind.JsonTreeReader.promoteNameToValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5706" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5707" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5708" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5709" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5710" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5711" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5712" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5713" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5714" source="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED" target="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5715" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5716" source="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED" target="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5717" source="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5718" source="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED" target="com.google.gson.stream.JsonReader$1.promoteNameToValue(com.google.gson.stream.JsonReader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5719" source="com.google.gson.stream.JsonReader#in" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5720" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5721" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5722" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5723" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5724" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5725" source="com.google.gson.stream.JsonReader#limit" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5726" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#in">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5727" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5728" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5729" source="com.google.gson.stream.JsonReader.fillBuffer(int)" target="com.google.gson.stream.JsonReader#lineStart">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5730" source="com.google.gson.stream.JsonReader.hasNext()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5731" source="com.google.gson.stream.JsonReader.hasNext()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5732" source="com.google.gson.stream.JsonReader.hasNext()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5733" source="com.google.gson.stream.JsonReader.hasNext()" target="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5734" source="com.google.gson.stream.JsonReader.hasNext()" target="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5735" source="com.google.gson.stream.JsonReader.isLenient()" target="com.google.gson.stream.JsonReader#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5736" source="com.google.gson.stream.JsonReader.isLiteral(char)" target="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5737" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5738" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5739" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5740" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5741" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5742" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5743" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5744" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#PEEKED_TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5745" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5746" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5747" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5748" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5749" source="com.google.gson.stream.JsonReader.nextBoolean()" target="com.google.gson.stream.JsonReader#PEEKED_FALSE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5750" source="com.google.gson.stream.JsonReader.skipTo(java.lang.String)" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5751" source="com.google.gson.stream.JsonReader.skipTo(java.lang.String)" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5752" source="com.google.gson.stream.JsonReader.skipTo(java.lang.String)" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5753" source="com.google.gson.stream.JsonReader.skipTo(java.lang.String)" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5754" source="com.google.gson.stream.JsonReader.skipTo(java.lang.String)" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5755" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.skipTo(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5756" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5757" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5758" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5759" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5760" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5761" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.readEscapeCharacter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5762" source="com.google.gson.stream.JsonReader.readEscapeCharacter()" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5763" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.readEscapeCharacter()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5764" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5765" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5766" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5767" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5768" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5769" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5770" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5771" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5772" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5773" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5774" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5775" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5776" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5777" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5778" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5779" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5780" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_FALSE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5781" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5782" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5783" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5784" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5785" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5786" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5787" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_BUFFERED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5788" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5789" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5790" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5791" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5792" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonReader#PEEKED_EOF">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5793" source="com.google.gson.stream.JsonReader.peek()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5794" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5795" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5796" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.nextUnquotedValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5797" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5798" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5799" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5800" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5801" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.MalformedJsonException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5802" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5803" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5804" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5805" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5806" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5807" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5808" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5809" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#peekedLong">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5810" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5811" source="com.google.gson.stream.JsonReader#peekedString" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5812" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5813" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5814" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#peekedNumberLength">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5815" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5816" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5817" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5818" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5819" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5820" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#PEEKED_BUFFERED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5821" source="com.google.gson.stream.JsonReader#PEEKED_BUFFERED" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5822" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#peekedString">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5823" source="com.google.gson.stream.JsonReader.nextDouble()" target="com.google.gson.stream.JsonReader#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5824" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5825" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5826" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5827" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.isLiteral(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5828" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5829" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5830" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5831" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5832" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5833" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5834" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5835" source="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5836" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5837" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5838" source="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5839" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5840" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5841" source="com.google.gson.stream.JsonScope#DANGLING_NAME" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5842" source="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5843" source="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5844" source="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5845" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5846" source="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5847" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#DANGLING_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5848" source="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5849" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5850" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5851" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#EMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5852" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5853" source="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5854" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5855" source="com.google.gson.stream.JsonReader#PEEKED_EOF" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5856" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonScope#CLOSED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5857" source="com.google.gson.stream.JsonReader#PEEKED_NULL" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5858" source="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5859" source="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5860" source="com.google.gson.stream.JsonReader#PEEKED_BEGIN_ARRAY" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5861" source="com.google.gson.stream.JsonReader#PEEKED_BEGIN_OBJECT" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5862" source="com.google.gson.stream.JsonReader.doPeek()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5863" source="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5864" source="com.google.gson.stream.JsonReader.getColumnNumber()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5865" source="com.google.gson.stream.JsonReader.getColumnNumber()" target="com.google.gson.stream.JsonReader#lineStart">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5866" source="com.google.gson.stream.JsonReader.getLineNumber()" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5867" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5868" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5869" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5870" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5871" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5872" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5873" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5874" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5875" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5876" source="com.google.gson.stream.JsonReader#peekedLong" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5877" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#peekedLong">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5878" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5879" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5880" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5881" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5882" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5883" source="com.google.gson.stream.JsonReader#peekedString" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5884" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5885" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5886" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#peekedNumberLength">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5887" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5888" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5889" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5890" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5891" source="com.google.gson.stream.JsonReader.nextInt()" target="com.google.gson.stream.JsonReader#peekedString">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5892" source="com.google.gson.stream.JsonReader#PEEKED_BUFFERED" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5893" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5894" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5895" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.skipTo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5896" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5897" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.skipToEndOfLine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5898" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5899" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5900" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5901" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5902" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5903" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5904" source="com.google.gson.stream.JsonReader#limit" target="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5905" source="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5906" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5907" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5908" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader.isLiteral(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5909" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5910" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5911" source="com.google.gson.stream.JsonReader#PEEKED_TRUE" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5912" source="com.google.gson.stream.JsonReader#PEEKED_FALSE" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5913" source="com.google.gson.stream.JsonReader#PEEKED_NULL" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5914" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5915" source="com.google.gson.stream.JsonReader.peekKeyword()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5916" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5917" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.peekKeyword()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5918" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5919" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader.isLiteral(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5920" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5921" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5922" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5923" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5924" source="com.google.gson.stream.JsonReader.peekNumber()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5925" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5926" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5927" source="com.google.gson.stream.JsonReader#limit" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5928" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_SIGN" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5929" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_E">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5930" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_SIGN" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5931" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_DIGIT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5932" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_FRACTION_DIGIT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5933" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_E" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5934" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_DECIMAL" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5935" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_SIGN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5936" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_DIGIT" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5937" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#MIN_INCOMPLETE_INTEGER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5938" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_DECIMAL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5939" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_FRACTION_DIGIT" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5940" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_SIGN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5941" source="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_DIGIT" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5942" source="com.google.gson.stream.JsonReader.peekNumber()" target="java.lang.Long#MIN_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5943" source="com.google.gson.stream.JsonReader#peekedLong" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5944" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5945" source="com.google.gson.stream.JsonReader#PEEKED_LONG" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5946" source="com.google.gson.stream.JsonReader.peekNumber()" target="com.google.gson.stream.JsonReader#NUMBER_CHAR_EXP_DIGIT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5947" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5948" source="com.google.gson.stream.JsonReader#PEEKED_NUMBER" target="com.google.gson.stream.JsonReader.peekNumber()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5949" source="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)" target="com.google.gson.stream.MalformedJsonException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5950" source="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5951" source="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5952" source="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5953" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5954" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5955" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5956" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5957" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5958" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5959" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#DANGLING_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5960" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5961" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5962" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5963" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#EMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5964" source="com.google.gson.stream.JsonReader.getPath()" target="com.google.gson.stream.JsonScope#CLOSED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5965" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5966" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.nextUnquotedValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5967" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5968" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5969" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5970" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5971" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5972" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5973" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5974" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5975" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5976" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5977" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5978" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5979" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5980" source="com.google.gson.stream.JsonReader.nextName()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5981" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader.readEscapeCharacter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5982" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5983" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5984" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5985" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5986" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5987" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5988" source="com.google.gson.stream.JsonReader#limit" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5989" source="com.google.gson.stream.JsonReader.nextQuotedValue(char)" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5990" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e5991" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5992" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.nextUnquotedValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5993" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5994" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5995" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5996" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5997" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5998" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e5999" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6000" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6001" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6002" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6003" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_BUFFERED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6004" source="com.google.gson.stream.JsonReader#peekedString" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6005" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6006" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#peekedLong">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6007" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6008" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6009" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6010" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#peekedNumberLength">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6011" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6012" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6013" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6014" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6015" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6016" source="com.google.gson.stream.JsonReader.nextString()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6017" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6018" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6019" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6020" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6021" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6022" source="com.google.gson.stream.JsonReader.nextUnquotedValue()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6023" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextUnquotedValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6024" source="com.google.gson.stream.JsonReader.toString()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6025" source="com.google.gson.stream.JsonReader.toString()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6026" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6027" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.nextQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6028" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6029" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6030" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6031" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6032" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6033" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6034" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#PEEKED_LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6035" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6036" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6037" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6038" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6039" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#peekedLong">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6040" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6041" source="com.google.gson.stream.JsonReader#peekedString" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6042" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6043" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6044" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#peekedNumberLength">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6045" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6046" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6047" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6048" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6049" source="com.google.gson.stream.JsonReader.nextLong()" target="com.google.gson.stream.JsonReader#peekedString">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6050" source="com.google.gson.stream.JsonReader#PEEKED_BUFFERED" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6051" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6052" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6053" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6054" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6055" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6056" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6057" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6058" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6059" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6060" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6061" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6062" source="com.google.gson.stream.JsonReader.beginArray()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6063" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6064" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6065" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6066" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6067" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6068" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6069" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6070" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6071" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6072" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6073" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6074" source="com.google.gson.stream.JsonReader.beginObject()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6075" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6076" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6077" source="com.google.gson.stream.JsonReader.checkLenient()" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6078" source="com.google.gson.stream.JsonReader.checkLenient()" target="com.google.gson.stream.JsonReader#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6079" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6080" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6081" source="com.google.gson.stream.JsonReader.close()" target="com.google.gson.stream.JsonReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6082" source="com.google.gson.stream.JsonScope#CLOSED" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6083" source="com.google.gson.stream.JsonReader#stackSize" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6084" source="com.google.gson.stream.JsonReader.close()" target="com.google.gson.stream.JsonReader#in">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6085" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6086" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6087" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6088" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6089" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader#NON_EXECUTE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6090" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6091" source="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6092" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6093" source="com.google.gson.stream.JsonReader#NON_EXECUTE_PREFIX" target="com.google.gson.stream.JsonReader.consumeNonExecutePrefix()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6094" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6095" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6096" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6097" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6098" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6099" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6100" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6101" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6102" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6103" source="com.google.gson.stream.JsonReader.endArray()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6104" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6105" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6106" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6107" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6108" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6109" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6110" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6111" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6112" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6113" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6114" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6115" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6116" source="com.google.gson.stream.JsonReader.endObject()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6117" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6118" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6119" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6120" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6121" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader.getLineNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6122" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader.getColumnNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6123" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6124" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6125" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6126" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader#PEEKED_NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6127" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6128" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6129" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6130" source="com.google.gson.stream.JsonReader.nextNull()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6131" source="com.google.gson.stream.JsonReader.push(int)" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6132" source="com.google.gson.stream.JsonReader.push(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6133" source="com.google.gson.stream.JsonReader.push(int)" target="com.google.gson.stream.JsonReader#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6134" source="com.google.gson.stream.JsonReader.push(int)" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6135" source="com.google.gson.stream.JsonReader.push(int)" target="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6136" source="com.google.gson.stream.JsonReader#stack" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6137" source="com.google.gson.stream.JsonReader#pathIndices" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6138" source="com.google.gson.stream.JsonReader#pathNames" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6139" source="com.google.gson.stream.JsonReader#lenient" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6140" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6141" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader.readEscapeCharacter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6142" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader.syntaxError(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6143" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6144" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6145" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6146" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.skipQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6147" source="com.google.gson.stream.JsonReader#limit" target="com.google.gson.stream.JsonReader.skipQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6148" source="com.google.gson.stream.JsonReader.skipQuotedValue(char)" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6149" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.skipQuotedValue(char)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6150" source="com.google.gson.stream.JsonReader.skipToEndOfLine()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6151" source="com.google.gson.stream.JsonReader.skipToEndOfLine()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6152" source="com.google.gson.stream.JsonReader.skipToEndOfLine()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6153" source="com.google.gson.stream.JsonReader.skipToEndOfLine()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6154" source="com.google.gson.stream.JsonReader.skipToEndOfLine()" target="com.google.gson.stream.JsonReader#lineNumber">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6155" source="com.google.gson.stream.JsonReader#lineStart" target="com.google.gson.stream.JsonReader.skipToEndOfLine()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6156" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.skipToEndOfLine()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6157" source="com.google.gson.stream.JsonReader.skipUnquotedValue()" target="com.google.gson.stream.JsonReader.fillBuffer(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6158" source="com.google.gson.stream.JsonReader.skipUnquotedValue()" target="com.google.gson.stream.JsonReader.checkLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6159" source="com.google.gson.stream.JsonReader.skipUnquotedValue()" target="com.google.gson.stream.JsonReader#pos">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6160" source="com.google.gson.stream.JsonReader.skipUnquotedValue()" target="com.google.gson.stream.JsonReader#limit">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6161" source="com.google.gson.stream.JsonReader.skipUnquotedValue()" target="com.google.gson.stream.JsonReader#buffer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6162" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.skipUnquotedValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6163" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader.doPeek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6164" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader.push(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6165" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader.skipUnquotedValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6166" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader.skipQuotedValue(char)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6167" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#peeked">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6168" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_NONE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6169" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6170" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6171" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6172" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6173" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6174" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6175" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6176" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6177" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_UNQUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6178" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6179" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_SINGLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6180" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6181" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_DOUBLE_QUOTED_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6182" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#PEEKED_NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6183" source="com.google.gson.stream.JsonReader#pos" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6184" source="com.google.gson.stream.JsonReader#peekedNumberLength" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6185" source="com.google.gson.stream.JsonReader#peeked" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6186" source="com.google.gson.stream.JsonReader#PEEKED_NONE" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6187" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#pathIndices">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6188" source="com.google.gson.stream.JsonReader.skipValue()" target="com.google.gson.stream.JsonReader#pathNames">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6189" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfArrays()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6190" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfArrays()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6191" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfArrays()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6192" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfArrays()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6193" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6194" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6195" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6196" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6197" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6198" source="com.google.gson.stream.JsonReaderPathTest.testArrayOfObjects()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6199" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6200" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6201" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6202" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6203" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6204" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6205" source="com.google.gson.stream.JsonReaderPathTest.testArrayPath()" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6206" source="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6207" source="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6208" source="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6209" source="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6210" source="com.google.gson.stream.JsonReaderPathTest.testMultipleTopLevelValuesInOneDocument()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6211" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6212" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6213" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6214" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6215" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6216" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6217" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6218" source="com.google.gson.stream.JsonReaderPathTest.testObjectPath()" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6219" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6220" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6221" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6222" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6223" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6224" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6225" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6226" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6227" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6228" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6229" source="com.google.gson.stream.JsonReaderPathTest.testPath()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6230" source="com.google.gson.stream.JsonReaderPathTest.testSkipArrayElements()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6231" source="com.google.gson.stream.JsonReaderPathTest.testSkipArrayElements()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6232" source="com.google.gson.stream.JsonReaderPathTest.testSkipArrayElements()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6233" source="com.google.gson.stream.JsonReaderPathTest.testSkipArrayElements()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6234" source="com.google.gson.stream.JsonReaderPathTest.testSkipNestedStructures()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6235" source="com.google.gson.stream.JsonReaderPathTest.testSkipNestedStructures()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6236" source="com.google.gson.stream.JsonReaderPathTest.testSkipNestedStructures()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6237" source="com.google.gson.stream.JsonReaderPathTest.testSkipNestedStructures()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6238" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectNames()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6239" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectNames()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6240" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectNames()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6241" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectNames()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6242" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6243" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6244" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6245" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6246" source="com.google.gson.stream.JsonReaderPathTest.testSkipObjectValues()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6247" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6248" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6249" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6250" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6251" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6252" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6253" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6254" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6255" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6256" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6257" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6258" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6259" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6260" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6261" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6262" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6263" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6264" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6265" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6266" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6267" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6268" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6269" source="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])" target="java.io.IOException#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6270" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6271" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6272" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6273" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6274" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6275" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6276" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6277" source="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6278" source="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6279" source="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6280" source="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6281" source="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6282" source="com.google.gson.stream.JsonReaderTest.disabled_testHighPrecisionLong()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6283" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6284" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6285" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6286" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6287" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6288" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6289" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6290" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6291" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6292" source="com.google.gson.stream.JsonReaderTest.disabled_testNumberWithOctalPrefix()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6293" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6294" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6295" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6296" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6297" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6298" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6299" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMaxValue()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6300" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6301" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6302" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6303" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6304" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6305" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6306" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6307" source="com.google.gson.stream.JsonReaderTest.disabled_testPeekLargerThanLongMinValue()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6308" source="com.google.gson.stream.JsonReaderTest.testBomForbiddenAsOtherCharacterInDocument()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6309" source="com.google.gson.stream.JsonReaderTest.testBomForbiddenAsOtherCharacterInDocument()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6310" source="com.google.gson.stream.JsonReaderTest.testBomForbiddenAsOtherCharacterInDocument()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6311" source="com.google.gson.stream.JsonReaderTest.testBomForbiddenAsOtherCharacterInDocument()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6312" source="com.google.gson.stream.JsonReaderTest.testBomIgnoredAsFirstCharacterOfDocument()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6313" source="com.google.gson.stream.JsonReaderTest.testBomIgnoredAsFirstCharacterOfDocument()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6314" source="com.google.gson.stream.JsonReaderTest.testBomIgnoredAsFirstCharacterOfDocument()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6315" source="com.google.gson.stream.JsonReaderTest.testBomIgnoredAsFirstCharacterOfDocument()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6316" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6317" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6318" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6319" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6320" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6321" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6322" source="com.google.gson.stream.JsonReaderTest.testBooleans()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6323" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6324" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6325" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6326" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6327" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6328" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6329" source="com.google.gson.stream.JsonReaderTest.testCharacterUnescaping()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6330" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6331" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6332" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6333" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6334" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6335" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6336" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6337" source="com.google.gson.stream.JsonReaderTest.testCommentsInStringValue()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6338" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6339" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6340" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6341" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6342" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6343" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6344" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6345" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6346" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6347" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6348" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6349" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6350" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6351" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6352" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6353" source="com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6354" source="com.google.gson.stream.JsonReaderTest.testDocumentWithCommentEndingInSlash()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6355" source="com.google.gson.stream.JsonReaderTest.testDocumentWithCommentEndingInSlash()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6356" source="com.google.gson.stream.JsonReaderTest.testDocumentWithCommentEndingInSlash()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6357" source="com.google.gson.stream.JsonReaderTest.testDocumentWithCommentEndingInSlash()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6358" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6359" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6360" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6361" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6362" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6363" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6364" source="com.google.gson.stream.JsonReaderTest.testDoubles()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6365" source="com.google.gson.stream.JsonReaderTest.testEmptyString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6366" source="com.google.gson.stream.JsonReaderTest.testEmptyString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6367" source="com.google.gson.stream.JsonReaderTest.testEmptyString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6368" source="com.google.gson.stream.JsonReaderTest.testEmptyString()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6369" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6370" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6371" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6372" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6373" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6374" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6375" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6376" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6377" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6378" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6379" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6380" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonToken#END_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6381" source="com.google.gson.stream.JsonReaderTest.testEmptyStringName()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6382" source="com.google.gson.stream.JsonReaderTest.testFailWithEscapedNewlineCharacter()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6383" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6384" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6385" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6386" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6387" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6388" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6389" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6390" source="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6391" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6392" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6393" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6394" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6395" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6396" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6397" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionDeepPath()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6398" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionGreaterThanBufferSize()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6399" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionGreaterThanBufferSize()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6400" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionIsOffsetByBom()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6401" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverCStyleComment()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6402" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverHashEndOfLineComment()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6403" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverQuotedString()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6404" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverSlashSlashEndOfLineComment()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6405" source="com.google.gson.stream.JsonReaderTest.testFailWithPositionOverUnquotedString()" target="com.google.gson.stream.JsonReaderTest.testFailWithPosition(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6406" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6407" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6408" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6409" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6410" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6411" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6412" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6413" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6414" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6415" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6416" source="com.google.gson.stream.JsonReaderTest.testHelloWorld()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6417" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6418" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6419" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6420" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6421" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6422" source="com.google.gson.stream.JsonReaderTest.testIntegerMismatchFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6423" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6424" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6425" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6426" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6427" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6428" source="com.google.gson.stream.JsonReaderTest.testIntegersWithFractionalPartSpecified()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6429" source="com.google.gson.stream.JsonReaderTest.testLenientComments()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6430" source="com.google.gson.stream.JsonReaderTest.testLenientComments()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6431" source="com.google.gson.stream.JsonReaderTest.testLenientComments()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6432" source="com.google.gson.stream.JsonReaderTest.testLenientComments()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6433" source="com.google.gson.stream.JsonReaderTest.testLenientComments()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6434" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6435" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6436" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6437" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6438" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6439" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6440" source="com.google.gson.stream.JsonReaderTest.testLenientExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6441" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6442" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6443" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6444" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6445" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6446" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6447" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6448" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6449" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6450" source="com.google.gson.stream.JsonReaderTest.testLenientMultipleTopLevelValues()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6451" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6452" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6453" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6454" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6455" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6456" source="com.google.gson.stream.JsonReaderTest.testLenientNameValueSeparator()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6457" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6458" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6459" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6460" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6461" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6462" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6463" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefix()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6464" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6465" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6466" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6467" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6468" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6469" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6470" source="com.google.gson.stream.JsonReaderTest.testLenientNonExecutePrefixWithLeadingWhitespace()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6471" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6472" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6473" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6474" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6475" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6476" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6477" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6478" source="com.google.gson.stream.JsonReaderTest.testLenientNonFiniteDoubles()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6479" source="com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6480" source="com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6481" source="com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6482" source="com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6483" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6484" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6485" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6486" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6487" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6488" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6489" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6490" source="com.google.gson.stream.JsonReaderTest.testLenientQuotedNonFiniteDoubles()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6491" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6492" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6493" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6494" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6495" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6496" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6497" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6498" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6499" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6500" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6501" source="com.google.gson.stream.JsonReaderTest.testLenientSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6502" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6503" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6504" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6505" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6506" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedNames()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6507" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6508" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6509" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6510" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6511" source="com.google.gson.stream.JsonReaderTest.testLenientSingleQuotedStrings()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6512" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6513" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6514" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6515" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6516" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6517" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelString()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6518" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelValueType()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6519" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelValueType()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6520" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelValueType()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6521" source="com.google.gson.stream.JsonReaderTest.testLenientTopLevelValueType()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6522" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6523" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6524" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6525" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6526" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6527" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6528" source="com.google.gson.stream.JsonReaderTest.testLenientUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6529" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6530" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6531" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6532" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6533" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedNames()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6534" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6535" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6536" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6537" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6538" source="com.google.gson.stream.JsonReaderTest.testLenientUnquotedStrings()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6539" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6540" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6541" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6542" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6543" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6544" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6545" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6546" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6547" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6548" source="com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6549" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6550" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6551" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6552" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6553" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6554" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6555" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6556" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6557" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6558" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6559" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6560" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6561" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6562" source="com.google.gson.stream.JsonReaderTest.testLongLargerThanMinLongThatWrapsAround()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6563" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6564" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6565" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6566" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6567" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6568" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6569" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6570" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6571" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="java.lang.Long#MIN_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6572" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="java.lang.Long#MAX_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6573" source="com.google.gson.stream.JsonReaderTest.testLongs()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6574" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonReaderTest.assertDocument(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6575" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6576" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="java.io.IOException#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6577" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6578" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6579" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6580" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6581" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#END_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6582" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6583" source="com.google.gson.stream.JsonReaderTest.testMalformedDocuments()" target="com.google.gson.stream.JsonToken#BOOLEAN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6584" source="com.google.gson.stream.JsonReaderTest.testMalformedNumbers()" target="com.google.gson.stream.JsonReaderTest.assertNotANumber(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6585" source="com.google.gson.stream.JsonReaderTest.testMissingValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6586" source="com.google.gson.stream.JsonReaderTest.testMissingValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6587" source="com.google.gson.stream.JsonReaderTest.testMissingValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6588" source="com.google.gson.stream.JsonReaderTest.testMissingValue()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6589" source="com.google.gson.stream.JsonReaderTest.testMissingValue()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6590" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6591" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6592" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6593" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6594" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6595" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6596" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6597" source="com.google.gson.stream.JsonReaderTest.testMixedCaseLiterals()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6598" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6599" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6600" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6601" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6602" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6603" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6604" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6605" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6606" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6607" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6608" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6609" source="com.google.gson.stream.JsonReaderTest.testNextFailuresDoNotAdvance()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6610" source="com.google.gson.stream.JsonReaderTest.testNoTopLevelObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6611" source="com.google.gson.stream.JsonReaderTest.testNoTopLevelObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6612" source="com.google.gson.stream.JsonReaderTest.testNoTopLevelObject()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6613" source="com.google.gson.stream.JsonReaderTest.testNullLiteralIsNotAString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6614" source="com.google.gson.stream.JsonReaderTest.testNullLiteralIsNotAString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6615" source="com.google.gson.stream.JsonReaderTest.testNullLiteralIsNotAString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6616" source="com.google.gson.stream.JsonReaderTest.testNullLiteralIsNotAString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6617" source="com.google.gson.stream.JsonReaderTest.testNulls()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6618" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6619" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6620" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6621" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6622" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6623" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6624" source="com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6625" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6626" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6627" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6628" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6629" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6630" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6631" source="com.google.gson.stream.JsonReaderTest.testPeekLongMinValue()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6632" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6633" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6634" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6635" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6636" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6637" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6638" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6639" source="com.google.gson.stream.JsonReaderTest.testPeekMuchLargerThanLongMinValue()" target="com.google.gson.stream.JsonToken#NUMBER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6640" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6641" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6642" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6643" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6644" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6645" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6646" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6647" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6648" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithBooleans()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6649" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6650" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6651" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6652" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6653" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6654" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6655" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6656" source="com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6657" source="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6658" source="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6659" source="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6660" source="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6661" source="com.google.gson.stream.JsonReaderTest.testPrematureEndOfInput()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6662" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6663" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6664" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6665" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6666" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6667" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6668" source="com.google.gson.stream.JsonReaderTest.testPrematurelyClosed()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6669" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6670" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6671" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6672" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6673" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6674" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6675" source="com.google.gson.stream.JsonReaderTest.testQuotedNumberWithEscape()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6676" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6677" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6678" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6679" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6680" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6681" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6682" source="com.google.gson.stream.JsonReaderTest.testReadArray()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6683" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6684" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6685" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6686" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6687" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6688" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6689" source="com.google.gson.stream.JsonReaderTest.testReadEmptyArray()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6690" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6691" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6692" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6693" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReader.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6694" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6695" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6696" source="com.google.gson.stream.JsonReaderTest.testReadEmptyObject()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6697" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6698" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6699" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6700" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6701" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6702" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6703" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6704" source="com.google.gson.stream.JsonReaderTest.testReadObject()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6705" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6706" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6707" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6708" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6709" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6710" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6711" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6712" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6713" source="com.google.gson.stream.JsonReaderTest.testSkipArray()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6714" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6715" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6716" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6717" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6718" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6719" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6720" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6721" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6722" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonToken#BEGIN_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6723" source="com.google.gson.stream.JsonReaderTest.testSkipArrayAfterPeek()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6724" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6725" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6726" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6727" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6728" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6729" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6730" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6731" source="com.google.gson.stream.JsonReaderTest.testSkipDouble()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6732" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6733" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6734" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6735" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6736" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6737" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6738" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6739" source="com.google.gson.stream.JsonReaderTest.testSkipInteger()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6740" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6741" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6742" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6743" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6744" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6745" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6746" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6747" source="com.google.gson.stream.JsonReaderTest.testSkipObject()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6748" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6749" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6750" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6751" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6752" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6753" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6754" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonReader.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6755" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonToken#BEGIN_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6756" source="com.google.gson.stream.JsonReaderTest.testSkipObjectAfterPeek()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6757" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6758" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6759" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6760" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6761" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelObject()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6762" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6763" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6764" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6765" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6766" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6767" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6768" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelQuotedString()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6769" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6770" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6771" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6772" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6773" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6774" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6775" source="com.google.gson.stream.JsonReaderTest.testSkipTopLevelUnquotedString()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6776" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6777" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6778" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6779" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6780" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6781" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6782" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6783" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6784" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6785" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6786" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6787" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6788" source="com.google.gson.stream.JsonReaderTest.testSkipVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6789" source="com.google.gson.stream.JsonReaderTest.testStrictComments()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6790" source="com.google.gson.stream.JsonReaderTest.testStrictComments()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6791" source="com.google.gson.stream.JsonReaderTest.testStrictComments()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6792" source="com.google.gson.stream.JsonReaderTest.testStrictComments()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6793" source="com.google.gson.stream.JsonReaderTest.testStrictCommentsWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6794" source="com.google.gson.stream.JsonReaderTest.testStrictCommentsWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6795" source="com.google.gson.stream.JsonReaderTest.testStrictCommentsWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6796" source="com.google.gson.stream.JsonReaderTest.testStrictCommentsWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6797" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6798" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6799" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6800" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6801" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6802" source="com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6803" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6804" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6805" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6806" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6807" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValues()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6808" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6809" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6810" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6811" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6812" source="com.google.gson.stream.JsonReaderTest.testStrictMultipleTopLevelValuesWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6813" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6814" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6815" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6816" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6817" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparator()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6818" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6819" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6820" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6821" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6822" source="com.google.gson.stream.JsonReaderTest.testStrictNameValueSeparatorWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6823" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefix()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6824" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefix()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6825" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefix()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6826" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefixWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6827" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefixWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6828" source="com.google.gson.stream.JsonReaderTest.testStrictNonExecutePrefixWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6829" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoubles()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6830" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoubles()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6831" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6832" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6833" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoublesWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6834" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoublesWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6835" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoublesWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6836" source="com.google.gson.stream.JsonReaderTest.testStrictNonFiniteDoublesWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6837" source="com.google.gson.stream.JsonReaderTest.testStrictQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6838" source="com.google.gson.stream.JsonReaderTest.testStrictQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6839" source="com.google.gson.stream.JsonReaderTest.testStrictQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6840" source="com.google.gson.stream.JsonReaderTest.testStrictQuotedNonFiniteDoubles()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6841" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6842" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6843" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6844" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArray()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6845" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArrayWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6846" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArrayWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6847" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArrayWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6848" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedArrayWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6849" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6850" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6851" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6852" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6853" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePair()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6854" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6855" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6856" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6857" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6858" source="com.google.gson.stream.JsonReaderTest.testStrictSemicolonDelimitedNameValuePairWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6859" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNames()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6860" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNames()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6861" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNames()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6862" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNames()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6863" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6864" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6865" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6866" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6867" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStrings()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6868" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStrings()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6869" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStrings()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6870" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStrings()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6871" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6872" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6873" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6874" source="com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6875" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6876" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6877" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6878" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueType()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6879" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueType()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6880" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueType()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6881" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueTypeWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6882" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueTypeWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6883" source="com.google.gson.stream.JsonReaderTest.testStrictTopLevelValueTypeWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6884" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6885" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6886" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6887" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6888" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparators()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6889" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6890" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6891" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6892" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()" target="com.google.gson.stream.JsonReader.nextBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6893" source="com.google.gson.stream.JsonReaderTest.testStrictUnnecessaryArraySeparatorsWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6894" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNames()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6895" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNames()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6896" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNames()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6897" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNames()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6898" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6899" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6900" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6901" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedNamesWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6902" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStrings()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6903" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStrings()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6904" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStrings()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6905" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStrings()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6906" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6907" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6908" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6909" source="com.google.gson.stream.JsonReaderTest.testStrictUnquotedStringsWithSkipValue()" target="com.google.gson.stream.JsonReader.skipValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6910" source="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6911" source="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6912" source="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6913" source="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6914" source="com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber()" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6915" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6916" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6917" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6918" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6919" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6920" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithDigitAndNonDigitExponent()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6921" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6922" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6923" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6924" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6925" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6926" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithNonDigitExponent()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6927" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6928" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6929" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6930" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6931" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6932" source="com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6933" source="com.google.gson.stream.JsonReaderTest.testStringEndingInSlash()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6934" source="com.google.gson.stream.JsonReaderTest.testStringEndingInSlash()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6935" source="com.google.gson.stream.JsonReaderTest.testStringEndingInSlash()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6936" source="com.google.gson.stream.JsonReaderTest.testStringEndingInSlash()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6937" source="com.google.gson.stream.JsonReaderTest.testStringNullIsNotNull()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6938" source="com.google.gson.stream.JsonReaderTest.testStringNullIsNotNull()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6939" source="com.google.gson.stream.JsonReaderTest.testStringNullIsNotNull()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6940" source="com.google.gson.stream.JsonReaderTest.testStringNullIsNotNull()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6941" source="com.google.gson.stream.JsonReaderTest.testStringWithLeadingSlash()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6942" source="com.google.gson.stream.JsonReaderTest.testStringWithLeadingSlash()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6943" source="com.google.gson.stream.JsonReaderTest.testStringWithLeadingSlash()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6944" source="com.google.gson.stream.JsonReaderTest.testStringWithLeadingSlash()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6945" source="com.google.gson.stream.JsonReaderTest.testUnescapingInvalidCharacters()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6946" source="com.google.gson.stream.JsonReaderTest.testUnescapingInvalidCharacters()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6947" source="com.google.gson.stream.JsonReaderTest.testUnescapingInvalidCharacters()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6948" source="com.google.gson.stream.JsonReaderTest.testUnescapingInvalidCharacters()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6949" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedCharacters()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6950" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedCharacters()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6951" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedCharacters()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6952" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedCharacters()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6953" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedSequence()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6954" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedSequence()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6955" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedSequence()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6956" source="com.google.gson.stream.JsonReaderTest.testUnescapingTruncatedSequence()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6957" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6958" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6959" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6960" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6961" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader.nextName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6962" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6963" source="com.google.gson.stream.JsonReaderTest.testUnterminatedObject()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6964" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6965" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6966" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6967" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6968" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6969" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6970" source="com.google.gson.stream.JsonReaderTest.testUnterminatedStringFailure()" target="com.google.gson.stream.JsonToken#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6971" source="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6972" source="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6973" source="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6974" source="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6975" source="com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6976" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReaderTest.repeat(char,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6977" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6978" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6979" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6980" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6981" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6982" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6983" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6984" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6985" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6986" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6987" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6988" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6989" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6990" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReaderTest.reader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6991" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6992" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6993" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6994" source="com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6995" source="com.google.gson.stream.JsonWriter#out" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e6996" source="com.google.gson.stream.JsonWriter.getSerializeNulls()" target="com.google.gson.stream.JsonWriter#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6997" source="com.google.gson.stream.JsonWriter.isHtmlSafe()" target="com.google.gson.stream.JsonWriter#htmlSafe">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6998" source="com.google.gson.stream.JsonWriter.isLenient()" target="com.google.gson.stream.JsonWriter#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e6999" source="com.google.gson.stream.JsonWriter.beginArray()" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7000" source="com.google.gson.stream.JsonWriter.beginArray()" target="com.google.gson.stream.JsonWriter.open(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7001" source="com.google.gson.stream.JsonWriter.beginArray()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7002" source="com.google.gson.stream.JsonWriter.beginObject()" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7003" source="com.google.gson.stream.JsonWriter.beginObject()" target="com.google.gson.stream.JsonWriter.open(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7004" source="com.google.gson.stream.JsonWriter.beginObject()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7005" source="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)" target="com.google.gson.stream.JsonWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7006" source="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)" target="com.google.gson.stream.JsonWriter.newline()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7007" source="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)" target="com.google.gson.stream.JsonWriter#deferredName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7008" source="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7009" source="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7010" source="com.google.gson.stream.JsonWriter.endArray()" target="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7011" source="com.google.gson.stream.JsonWriter.endArray()" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7012" source="com.google.gson.stream.JsonWriter.endArray()" target="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7013" source="com.google.gson.stream.JsonWriter.endObject()" target="com.google.gson.stream.JsonWriter.close(int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7014" source="com.google.gson.stream.JsonWriter.endObject()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7015" source="com.google.gson.stream.JsonWriter.endObject()" target="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7016" source="com.google.gson.stream.JsonWriter.name(java.lang.String)" target="com.google.gson.stream.JsonWriter#deferredName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7017" source="com.google.gson.stream.JsonWriter.name(java.lang.String)" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7018" source="com.google.gson.stream.JsonWriter#deferredName" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7019" source="com.google.gson.stream.JsonWriter.nullValue()" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7020" source="com.google.gson.stream.JsonWriter.nullValue()" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7021" source="com.google.gson.stream.JsonWriter.nullValue()" target="com.google.gson.stream.JsonWriter#deferredName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7022" source="com.google.gson.stream.JsonWriter.nullValue()" target="com.google.gson.stream.JsonWriter#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7023" source="com.google.gson.stream.JsonWriter#deferredName" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7024" source="com.google.gson.stream.JsonWriter.nullValue()" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7025" source="com.google.gson.stream.JsonWriter.open(int,java.lang.String)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7026" source="com.google.gson.stream.JsonWriter.open(int,java.lang.String)" target="com.google.gson.stream.JsonWriter.push(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7027" source="com.google.gson.stream.JsonWriter.open(int,java.lang.String)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7028" source="com.google.gson.stream.JsonWriter.value(boolean)" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7029" source="com.google.gson.stream.JsonWriter.value(boolean)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7030" source="com.google.gson.stream.JsonWriter.value(boolean)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7031" source="com.google.gson.stream.JsonWriter.value(double)" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7032" source="com.google.gson.stream.JsonWriter.value(double)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7033" source="com.google.gson.stream.JsonWriter.value(double)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7034" source="com.google.gson.stream.JsonWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7035" source="com.google.gson.stream.JsonWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7036" source="com.google.gson.stream.JsonWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7037" source="com.google.gson.stream.JsonWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7038" source="com.google.gson.stream.JsonWriter.value(java.lang.Number)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7039" source="com.google.gson.stream.JsonWriter.value(java.lang.String)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7040" source="com.google.gson.stream.JsonWriter.value(java.lang.String)" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7041" source="com.google.gson.stream.JsonWriter.value(java.lang.String)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7042" source="com.google.gson.stream.JsonWriter.value(java.lang.String)" target="com.google.gson.stream.JsonWriter.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7043" source="com.google.gson.stream.JsonWriter.value(long)" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7044" source="com.google.gson.stream.JsonWriter.value(long)" target="com.google.gson.stream.JsonWriter.beforeValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7045" source="com.google.gson.stream.JsonWriter.value(long)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7046" source="com.google.gson.stream.JsonWriter.peek()" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7047" source="com.google.gson.stream.JsonWriter.peek()" target="com.google.gson.stream.JsonWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7048" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7049" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonWriter.newline()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7050" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonWriter.replaceTop(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7051" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7052" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7053" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonScope#EMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7054" source="com.google.gson.stream.JsonWriter.beforeName()" target="com.google.gson.stream.JsonScope#DANGLING_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7055" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7056" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter.replaceTop(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7057" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter.newline()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7058" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7059" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter#lenient">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7060" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#EMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7061" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#EMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7062" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#NONEMPTY_ARRAY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7063" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7064" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#DANGLING_NAME">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7065" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonWriter#separator">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7066" source="com.google.gson.stream.JsonWriter.beforeValue(boolean)" target="com.google.gson.stream.JsonScope#NONEMPTY_OBJECT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7067" source="com.google.gson.stream.JsonWriter.close()" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7068" source="com.google.gson.stream.JsonWriter.close()" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7069" source="com.google.gson.stream.JsonWriter.close()" target="com.google.gson.stream.JsonWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7070" source="com.google.gson.stream.JsonWriter.close()" target="com.google.gson.stream.JsonScope#NONEMPTY_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7071" source="com.google.gson.stream.JsonWriter#stackSize" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7072" source="com.google.gson.stream.JsonWriter.flush()" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7073" source="com.google.gson.stream.JsonWriter.flush()" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7074" source="com.google.gson.stream.JsonWriter.newline()" target="com.google.gson.stream.JsonWriter#indent">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7075" source="com.google.gson.stream.JsonWriter.newline()" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7076" source="com.google.gson.stream.JsonWriter.newline()" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7077" source="com.google.gson.stream.JsonWriter.push(int)" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7078" source="com.google.gson.stream.JsonWriter.push(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7079" source="com.google.gson.stream.JsonWriter.push(int)" target="com.google.gson.stream.JsonWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7080" source="com.google.gson.stream.JsonWriter#stack" target="com.google.gson.stream.JsonWriter.push(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7081" source="com.google.gson.stream.JsonWriter.replaceTop(int)" target="com.google.gson.stream.JsonWriter#stack">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7082" source="com.google.gson.stream.JsonWriter.replaceTop(int)" target="com.google.gson.stream.JsonWriter#stackSize">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7083" source="com.google.gson.stream.JsonWriter#htmlSafe" target="com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7084" source="com.google.gson.stream.JsonWriter#indent" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7085" source="com.google.gson.stream.JsonWriter#separator" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7086" source="com.google.gson.stream.JsonWriter#lenient" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7087" source="com.google.gson.stream.JsonWriter#serializeNulls" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7088" source="com.google.gson.stream.JsonWriter.string(java.lang.String)" target="com.google.gson.stream.JsonWriter#htmlSafe">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7089" source="com.google.gson.stream.JsonWriter.string(java.lang.String)" target="com.google.gson.stream.JsonWriter#HTML_SAFE_REPLACEMENT_CHARS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7090" source="com.google.gson.stream.JsonWriter.string(java.lang.String)" target="com.google.gson.stream.JsonWriter#REPLACEMENT_CHARS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7091" source="com.google.gson.stream.JsonWriter.string(java.lang.String)" target="com.google.gson.stream.JsonWriter#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7092" source="com.google.gson.stream.JsonWriter.writeDeferredName()" target="com.google.gson.stream.JsonWriter.beforeName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7093" source="com.google.gson.stream.JsonWriter.writeDeferredName()" target="com.google.gson.stream.JsonWriter.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7094" source="com.google.gson.stream.JsonWriter.writeDeferredName()" target="com.google.gson.stream.JsonWriter#deferredName">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7095" source="com.google.gson.stream.JsonWriter#deferredName" target="com.google.gson.stream.JsonWriter.writeDeferredName()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7096" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7097" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7098" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7099" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7100" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7101" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7102" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7103" source="com.google.gson.stream.JsonWriterTest.testArraysInObjects()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7104" source="com.google.gson.stream.JsonWriterTest.testBadNestingArray()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7105" source="com.google.gson.stream.JsonWriterTest.testBadNestingArray()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7106" source="com.google.gson.stream.JsonWriterTest.testBadNestingArray()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7107" source="com.google.gson.stream.JsonWriterTest.testBadNestingObject()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7108" source="com.google.gson.stream.JsonWriterTest.testBadNestingObject()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7109" source="com.google.gson.stream.JsonWriterTest.testBadNestingObject()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7110" source="com.google.gson.stream.JsonWriterTest.testBadNestingObject()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7111" source="com.google.gson.stream.JsonWriterTest.testBooleans()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7112" source="com.google.gson.stream.JsonWriterTest.testBooleans()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7113" source="com.google.gson.stream.JsonWriterTest.testBooleans()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7114" source="com.google.gson.stream.JsonWriterTest.testBooleans()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7115" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7116" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7117" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7118" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7119" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush()" target="com.google.gson.stream.JsonWriter.flush()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7120" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7121" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7122" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7123" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7124" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7125" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7126" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7127" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7128" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7129" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7130" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7131" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7132" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7133" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7134" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7135" source="com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7136" source="com.google.gson.stream.JsonWriterTest.testDeepNestingArrays()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7137" source="com.google.gson.stream.JsonWriterTest.testDeepNestingArrays()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7138" source="com.google.gson.stream.JsonWriterTest.testDeepNestingArrays()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7139" source="com.google.gson.stream.JsonWriterTest.testDeepNestingObjects()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7140" source="com.google.gson.stream.JsonWriterTest.testDeepNestingObjects()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7141" source="com.google.gson.stream.JsonWriterTest.testDeepNestingObjects()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7142" source="com.google.gson.stream.JsonWriterTest.testDeepNestingObjects()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7143" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7144" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7145" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="com.google.gson.stream.JsonWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7146" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7147" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7148" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="java.lang.Double#MAX_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7149" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="java.lang.Double#MIN_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7150" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="java.lang.Math#PI">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7151" source="com.google.gson.stream.JsonWriterTest.testDoubles()" target="java.lang.Math#E">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7152" source="com.google.gson.stream.JsonWriterTest.testEmptyArray()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7153" source="com.google.gson.stream.JsonWriterTest.testEmptyArray()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7154" source="com.google.gson.stream.JsonWriterTest.testEmptyArray()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7155" source="com.google.gson.stream.JsonWriterTest.testEmptyObject()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7156" source="com.google.gson.stream.JsonWriterTest.testEmptyObject()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7157" source="com.google.gson.stream.JsonWriterTest.testEmptyObject()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7158" source="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7159" source="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7160" source="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7161" source="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7162" source="com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7163" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7164" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7165" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7166" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7167" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7168" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="java.lang.Long#MIN_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7169" source="com.google.gson.stream.JsonWriterTest.testLongs()" target="java.lang.Long#MAX_VALUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7170" source="com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7171" source="com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7172" source="com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7173" source="com.google.gson.stream.JsonWriterTest.testNameWithoutValue()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7174" source="com.google.gson.stream.JsonWriterTest.testNameWithoutValue()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7175" source="com.google.gson.stream.JsonWriterTest.testNameWithoutValue()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7176" source="com.google.gson.stream.JsonWriterTest.testNameWithoutValue()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7177" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7178" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7179" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7180" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7181" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7182" source="com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7183" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7184" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7185" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="com.google.gson.stream.JsonWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7186" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7187" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7188" source="com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7189" source="com.google.gson.stream.JsonWriterTest.testNullName()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7190" source="com.google.gson.stream.JsonWriterTest.testNullName()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7191" source="com.google.gson.stream.JsonWriterTest.testNullName()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7192" source="com.google.gson.stream.JsonWriterTest.testNullStringValue()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7193" source="com.google.gson.stream.JsonWriterTest.testNullStringValue()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7194" source="com.google.gson.stream.JsonWriterTest.testNullStringValue()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7195" source="com.google.gson.stream.JsonWriterTest.testNullStringValue()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7196" source="com.google.gson.stream.JsonWriterTest.testNullStringValue()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7197" source="com.google.gson.stream.JsonWriterTest.testNulls()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7198" source="com.google.gson.stream.JsonWriterTest.testNulls()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7199" source="com.google.gson.stream.JsonWriterTest.testNulls()" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7200" source="com.google.gson.stream.JsonWriterTest.testNulls()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7201" source="com.google.gson.stream.JsonWriterTest.testNumbers()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7202" source="com.google.gson.stream.JsonWriterTest.testNumbers()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7203" source="com.google.gson.stream.JsonWriterTest.testNumbers()" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7204" source="com.google.gson.stream.JsonWriterTest.testNumbers()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7205" source="com.google.gson.stream.JsonWriterTest.testNumbers()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7206" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7207" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7208" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7209" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7210" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7211" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7212" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7213" source="com.google.gson.stream.JsonWriterTest.testObjectsInArrays()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7214" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7215" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7216" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7217" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7218" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7219" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7220" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7221" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7222" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7223" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintArray()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7224" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7225" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7226" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7227" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7228" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7229" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.value(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7230" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7231" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7232" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7233" source="com.google.gson.stream.JsonWriterTest.testPrettyPrintObject()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7234" source="com.google.gson.stream.JsonWriterTest.testRepeatedName()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7235" source="com.google.gson.stream.JsonWriterTest.testRepeatedName()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7236" source="com.google.gson.stream.JsonWriterTest.testRepeatedName()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7237" source="com.google.gson.stream.JsonWriterTest.testRepeatedName()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7238" source="com.google.gson.stream.JsonWriterTest.testRepeatedName()" target="com.google.gson.stream.JsonWriter.endObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7239" source="com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7240" source="com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7241" source="com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7242" source="com.google.gson.stream.JsonWriterTest.testStrings()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7243" source="com.google.gson.stream.JsonWriterTest.testStrings()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7244" source="com.google.gson.stream.JsonWriterTest.testStrings()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7245" source="com.google.gson.stream.JsonWriterTest.testStrings()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7246" source="com.google.gson.stream.JsonWriterTest.testTwoNames()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7247" source="com.google.gson.stream.JsonWriterTest.testTwoNames()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7248" source="com.google.gson.stream.JsonWriterTest.testTwoNames()" target="com.google.gson.stream.JsonWriter.name(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7249" source="com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7250" source="com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7251" source="com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7252" source="com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7253" source="com.google.gson.stream.JsonWriterTest.testValueWithoutName()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7254" source="com.google.gson.stream.JsonWriterTest.testValueWithoutName()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7255" source="com.google.gson.stream.JsonWriterTest.testValueWithoutName()" target="com.google.gson.stream.JsonWriter.value(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7256" source="com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7257" source="com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7258" source="com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7259" source="com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7260" source="com.google.gson.stream.JsonWriterTest.testWrongTopLevelType()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7261" source="com.google.gson.stream.JsonWriterTest.testWrongTopLevelType()" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7262" source="com.google.gson.stream.JsonToken#BEGIN_ARRAY" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7263" source="com.google.gson.stream.JsonToken#END_ARRAY" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7264" source="com.google.gson.stream.JsonToken#BEGIN_OBJECT" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7265" source="com.google.gson.stream.JsonToken#END_OBJECT" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7266" source="com.google.gson.stream.JsonToken#NAME" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7267" source="com.google.gson.stream.JsonToken#STRING" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7268" source="com.google.gson.stream.JsonToken#NUMBER" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7269" source="com.google.gson.stream.JsonToken#BOOLEAN" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7270" source="com.google.gson.stream.JsonToken#NULL" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7271" source="com.google.gson.stream.JsonToken#END_DOCUMENT" target="com.google.gson.stream.JsonToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7272" source="com.google.gson.metrics.PerformanceTest$ClassWithExposedField()" target="com.google.gson.metrics.PerformanceTest$ClassWithExposedField(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7273" source="com.google.gson.metrics.PerformanceTest$ClassWithExposedField#field" target="com.google.gson.metrics.PerformanceTest$ClassWithExposedField(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7274" source="com.google.gson.metrics.PerformanceTest$ClassWithField()" target="com.google.gson.metrics.PerformanceTest$ClassWithField(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7275" source="com.google.gson.metrics.PerformanceTest$ClassWithField#field" target="com.google.gson.metrics.PerformanceTest$ClassWithField(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7276" source="com.google.gson.metrics.PerformanceTest$ClassWithList()" target="com.google.gson.metrics.PerformanceTest$ClassWithList(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7277" source="com.google.gson.metrics.PerformanceTest$ClassWithList#field" target="com.google.gson.metrics.PerformanceTest$ClassWithList(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7278" source="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects()" target="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7279" source="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#field" target="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7280" source="com.google.gson.metrics.PerformanceTest$CollectionEntry()" target="com.google.gson.metrics.PerformanceTest$CollectionEntry(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7281" source="com.google.gson.metrics.PerformanceTest$CollectionEntry#name" target="com.google.gson.metrics.PerformanceTest$CollectionEntry(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7282" source="com.google.gson.metrics.PerformanceTest$CollectionEntry#value" target="com.google.gson.metrics.PerformanceTest$CollectionEntry(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7283" source="com.google.gson.metrics.PerformanceTest$ExceptionHolder()" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7284" source="com.google.gson.metrics.PerformanceTest$ExceptionHolder#message" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7285" source="com.google.gson.metrics.PerformanceTest$ExceptionHolder#stackTrace" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7286" source="com.google.gson.metrics.PerformanceTest.buildJsonForClassWithList()" target="com.google.gson.metrics.PerformanceTest#COLLECTION_SIZE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7287" source="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7288" source="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7289" source="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7290" source="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7291" source="com.google.gson.metrics.PerformanceTest.disable_testByteArrayDeserialization()" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7292" source="com.google.gson.metrics.PerformanceTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7293" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7294" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7295" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.metrics.PerformanceTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7296" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7297" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7298" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7299" source="com.google.gson.metrics.PerformanceTest.disable_testLargeObjectSerializationAndDeserialization()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7300" source="com.google.gson.metrics.PerformanceTest.disabled_testByteArraySerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7301" source="com.google.gson.metrics.PerformanceTest.disabled_testByteArraySerialization()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7302" source="com.google.gson.metrics.PerformanceTest.disabled_testByteArraySerialization()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7303" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="com.google.gson.metrics.PerformanceTest.buildJsonForClassWithList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7304" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7305" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="com.google.gson.metrics.PerformanceTest#NUM_ITERATIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7306" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7307" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithList#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7308" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeClasses()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7309" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest.buildJsonForClassWithList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7310" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7311" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest#NUM_ITERATIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7312" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7313" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7314" source="com.google.gson.metrics.PerformanceTest.disabled_testDeserializeExposedClasses()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7315" source="com.google.gson.metrics.PerformanceTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7316" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()" target="com.google.gson.metrics.PerformanceTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7317" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7318" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7319" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7320" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionDeserialization()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7321" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionSerialization()" target="com.google.gson.metrics.PerformanceTest$CollectionEntry(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7322" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionSerialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7323" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeCollectionSerialization()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7324" source="com.google.gson.metrics.PerformanceTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7325" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7326" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7327" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.metrics.PerformanceTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7328" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7329" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7330" source="com.google.gson.metrics.PerformanceTest.disabled_testLargeGsonMapRoundTrip()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7331" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithList(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7332" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithField(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7333" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7334" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest#COLLECTION_SIZE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7335" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithList#list">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7336" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest#NUM_ITERATIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7337" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7338" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeClasses()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7339" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7340" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithExposedField(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7341" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7342" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest#COLLECTION_SIZE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7343" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest$ClassWithListOfObjects#list">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7344" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest#NUM_ITERATIONS">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7345" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7346" source="com.google.gson.metrics.PerformanceTest.disabled_testSerializeExposedClasses()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7347" source="com.google.gson.metrics.PerformanceTest.disabled_testStringDeserialization()" target="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7348" source="com.google.gson.metrics.PerformanceTest.disabled_testStringDeserialization()" target="java.lang.System#out">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7349" source="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7350" source="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)" target="com.google.gson.metrics.PerformanceTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7351" source="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7352" source="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder#message">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7353" source="com.google.gson.metrics.PerformanceTest.parseLongJson(java.lang.String)" target="com.google.gson.metrics.PerformanceTest$ExceptionHolder#stackTrace">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7354" source="com.google.gson.metrics.PerformanceTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7355" source="com.google.gson.metrics.PerformanceTest#gson" target="com.google.gson.metrics.PerformanceTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7356" source="com.google.gson.reflect.TypeToken()" target="com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7357" source="com.google.gson.reflect.TypeToken#type" target="com.google.gson.reflect.TypeToken()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7358" source="com.google.gson.reflect.TypeToken#rawType" target="com.google.gson.reflect.TypeToken()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7359" source="com.google.gson.reflect.TypeToken()" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7360" source="com.google.gson.reflect.TypeToken#hashCode" target="com.google.gson.reflect.TypeToken()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7361" source="com.google.gson.reflect.TypeToken#type" target="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7362" source="com.google.gson.reflect.TypeToken#rawType" target="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7363" source="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7364" source="com.google.gson.reflect.TypeToken#hashCode" target="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7365" source="com.google.gson.reflect.TypeToken.get(java.lang.Class)" target="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7366" source="com.google.gson.reflect.TypeToken.equals(java.lang.Object)" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7367" source="com.google.gson.reflect.TypeToken.isAssignableFrom(com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7368" source="com.google.gson.reflect.TypeToken.isAssignableFrom(com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7369" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.Class)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7370" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7371" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7372" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7373" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7374" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken#rawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7375" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="java.lang.Class#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7376" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="java.lang.reflect.ParameterizedType#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7377" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)" target="java.lang.reflect.GenericArrayType#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7378" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7379" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" target="com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7380" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7381" source="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7382" source="com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)" target="com.google.gson.reflect.TypeToken.matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7383" source="com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)" target="int#length">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7384" source="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7385" source="com.google.gson.reflect.TypeToken.hashCode()" target="com.google.gson.reflect.TypeToken#hashCode">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7386" source="com.google.gson.reflect.TypeToken.getRawType()" target="com.google.gson.reflect.TypeToken#rawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7387" source="com.google.gson.reflect.TypeToken.toString()" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7388" source="com.google.gson.reflect.TypeToken.getType()" target="com.google.gson.reflect.TypeToken#type">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7389" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7390" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7391" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7392" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7393" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="java.util.RandomAccess#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7394" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()" target="java.util.ArrayList#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7395" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards()" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7396" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards()" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7397" source="com.google.gson.reflect.TypeTokenTest#listOfUnknown" target="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7398" source="com.google.gson.reflect.TypeTokenTest#listOfString" target="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7399" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards()" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7400" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards()" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7401" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters()" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7402" source="com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters()" target="com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7403" source="com.google.gson.CommentsTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7404" source="com.google.gson.CommentsTest.testParseComments()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7405" source="com.google.gson.CommentsTest.testParseComments()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7406" source="com.google.gson.CommentsTest.testParseComments()" target="com.google.gson.CommentsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7407" source="com.google.gson.CommentsTest.testParseComments()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7408" source="com.google.gson.CommentsTest.testParseComments()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7409" source="com.google.gson.DefaultDateTypeAdapter()" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7410" source="com.google.gson.DefaultDateTypeAdapter()" target="java.text.DateFormat#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7411" source="com.google.gson.DefaultDateTypeAdapter()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7412" source="com.google.gson.DefaultDateTypeAdapter(int)" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7413" source="com.google.gson.DefaultDateTypeAdapter(int)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7414" source="com.google.gson.DefaultDateTypeAdapter(int,int)" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7415" source="com.google.gson.DefaultDateTypeAdapter(int,int)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7416" source="com.google.gson.DefaultDateTypeAdapter(java.lang.String)" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7417" source="com.google.gson.DefaultDateTypeAdapter(java.lang.String)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7418" source="com.google.gson.DefaultDateTypeAdapter#enUsFormat" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7419" source="com.google.gson.DefaultDateTypeAdapter#localFormat" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7420" source="com.google.gson.DefaultDateTypeAdapter#iso8601Format" target="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7421" source="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7422" source="com.google.gson.DefaultDateTypeAdapter(java.text.DateFormat,java.text.DateFormat)" target="com.google.gson.DefaultDateTypeAdapter#iso8601Format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7423" source="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7424" source="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.DefaultDateTypeAdapter#localFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7425" source="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.DefaultDateTypeAdapter#enUsFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7426" source="com.google.gson.DefaultDateTypeAdapter.toString()" target="com.google.gson.DefaultDateTypeAdapter#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7427" source="com.google.gson.DefaultDateTypeAdapter.toString()" target="com.google.gson.DefaultDateTypeAdapter#localFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7428" source="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7429" source="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7430" source="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7431" source="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7432" source="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7433" source="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7434" source="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)" target="com.google.gson.JsonSyntaxException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7435" source="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)" target="com.google.gson.DefaultDateTypeAdapter#localFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7436" source="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)" target="com.google.gson.DefaultDateTypeAdapter#enUsFormat">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7437" source="com.google.gson.DefaultDateTypeAdapter.deserializeToDate(com.google.gson.JsonElement)" target="com.google.gson.DefaultDateTypeAdapter#iso8601Format">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7438" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7439" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7440" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7441" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7442" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="com.google.gson.DefaultDateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7443" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="com.google.gson.DefaultDateTypeAdapter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7444" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="com.google.gson.DefaultDateTypeAdapter(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7445" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="java.text.DateFormat#SHORT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7446" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="java.text.DateFormat#MEDIUM">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7447" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="java.text.DateFormat#LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7448" source="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)" target="java.text.DateFormat#FULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7449" source="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="com.google.gson.DefaultDateTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7450" source="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7451" source="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7452" source="com.google.gson.DefaultDateTypeAdapterTest.testDatePattern()" target="com.google.gson.DefaultDateTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7453" source="com.google.gson.DefaultDateTypeAdapterTest.testDatePattern()" target="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7454" source="com.google.gson.DefaultDateTypeAdapterTest.testDatePattern()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7455" source="com.google.gson.DefaultDateTypeAdapterTest.testDatePattern()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7456" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="com.google.gson.DefaultDateTypeAdapter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7457" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="com.google.gson.DefaultDateTypeAdapter.serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7458" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7459" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="java.text.DateFormat#LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7460" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7461" source="com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization()" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7462" source="com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone()" target="com.google.gson.DefaultDateTypeAdapterTest.assertFormatted(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7463" source="com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone()" target="com.google.gson.DefaultDateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7464" source="com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone()" target="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7465" source="com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7466" source="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs()" target="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7467" source="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7468" source="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr()" target="com.google.gson.DefaultDateTypeAdapterTest.assertFormattingAlwaysEmitsUsLocale(java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7469" source="com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr()" target="java.util.Locale#FRANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7470" source="com.google.gson.DefaultDateTypeAdapterTest.testInvalidDatePattern()" target="com.google.gson.DefaultDateTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7471" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7472" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="com.google.gson.DefaultDateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7473" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="com.google.gson.DefaultDateTypeAdapter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7474" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="com.google.gson.DefaultDateTypeAdapter(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7475" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="java.util.Locale#FRANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7476" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="java.text.DateFormat#SHORT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7477" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="java.text.DateFormat#MEDIUM">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7478" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="java.text.DateFormat#LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7479" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale()" target="java.text.DateFormat#FULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7480" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="com.google.gson.DefaultDateTypeAdapterTest.assertParsed(java.lang.String,com.google.gson.DefaultDateTypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7481" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="com.google.gson.DefaultDateTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7482" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="com.google.gson.DefaultDateTypeAdapter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7483" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="com.google.gson.DefaultDateTypeAdapter(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7484" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7485" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="java.text.DateFormat#SHORT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7486" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="java.text.DateFormat#MEDIUM">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7487" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="java.text.DateFormat#LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7488" source="com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale()" target="java.text.DateFormat#FULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7489" source="com.google.gson.DefaultInetAddressTypeAdapterTest.setUp()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7490" source="com.google.gson.DefaultInetAddressTypeAdapterTest#gson" target="com.google.gson.DefaultInetAddressTypeAdapterTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7491" source="com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7492" source="com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7493" source="com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization()" target="com.google.gson.DefaultInetAddressTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7494" source="com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization()" target="java.net.InetAddress#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7495" source="com.google.gson.DefaultMapJsonSerializerTest#gson" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7496" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7497" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization()" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7498" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization()" target="com.google.gson.DefaultMapJsonSerializerTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7499" source="com.google.gson.DefaultMapJsonSerializerTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7500" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.DefaultMapJsonSerializerTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7501" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7502" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7503" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7504" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.JsonObject.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7505" source="com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()" target="com.google.gson.DefaultMapJsonSerializerTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7506" source="com.google.gson.DefaultMapJsonSerializerTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7507" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.DefaultMapJsonSerializerTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7508" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7509" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7510" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7511" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7512" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7513" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7514" source="com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7515" source="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder" target="com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7516" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)" target="com.google.gson.ExposeAnnotationExclusionStrategyTest$MockObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7517" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7518" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7519" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7520" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7521" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7522" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest$MockObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7523" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7524" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7525" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7526" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7527" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7528" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7529" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7530" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7531" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7532" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest.createFieldAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7533" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7534" source="com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields()" target="com.google.gson.ExposeAnnotationExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7535" source="com.google.gson.FieldAttributes#field" target="com.google.gson.FieldAttributes(java.lang.reflect.Field)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7536" source="com.google.gson.FieldAttributes.getAnnotation(java.lang.Class)" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7537" source="com.google.gson.FieldAttributes.hasModifier(int)" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7538" source="com.google.gson.FieldAttributes.isSynthetic()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7539" source="com.google.gson.FieldAttributes.getDeclaredClass()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7540" source="com.google.gson.FieldAttributes.getDeclaringClass()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7541" source="com.google.gson.FieldAttributes.get(java.lang.Object)" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7542" source="com.google.gson.FieldAttributes.getName()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7543" source="com.google.gson.FieldAttributes.getDeclaredType()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7544" source="com.google.gson.FieldAttributes.getAnnotations()" target="com.google.gson.FieldAttributes#field">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7545" source="com.google.gson.FieldAttributesTest.setUp()" target="com.google.gson.FieldAttributes(java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7546" source="com.google.gson.FieldAttributesTest#fieldAttributes" target="com.google.gson.FieldAttributesTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7547" source="com.google.gson.FieldAttributesTest.setUp()" target="com.google.gson.FieldAttributesTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7548" source="com.google.gson.FieldAttributesTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7549" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.FieldAttributesTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7550" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7551" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7552" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.FieldAttributes.getDeclaredType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7553" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.FieldAttributes.getDeclaredClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7554" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7555" source="com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass()" target="java.util.List#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7556" source="com.google.gson.FieldAttributesTest.testDeclaringClass()" target="com.google.gson.FieldAttributes.getDeclaringClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7557" source="com.google.gson.FieldAttributesTest.testDeclaringClass()" target="com.google.gson.FieldAttributesTest$Foo#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7558" source="com.google.gson.FieldAttributesTest.testDeclaringClass()" target="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7559" source="com.google.gson.FieldAttributesTest.testIsSynthetic()" target="com.google.gson.FieldAttributes.isSynthetic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7560" source="com.google.gson.FieldAttributesTest.testIsSynthetic()" target="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7561" source="com.google.gson.FieldAttributesTest.testModifiers()" target="com.google.gson.FieldAttributes.hasModifier(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7562" source="com.google.gson.FieldAttributesTest.testModifiers()" target="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7563" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#STATIC">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7564" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#FINAL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7565" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#ABSTRACT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7566" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#VOLATILE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7567" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#PROTECTED">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7568" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#PUBLIC">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7569" source="com.google.gson.FieldAttributesTest.testModifiers()" target="java.lang.reflect.Modifier#TRANSIENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7570" source="com.google.gson.FieldAttributesTest.testName()" target="com.google.gson.FieldAttributes.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7571" source="com.google.gson.FieldAttributesTest.testName()" target="com.google.gson.FieldAttributesTest#fieldAttributes">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7572" source="com.google.gson.FieldAttributesTest.testNullField()" target="com.google.gson.FieldAttributes(java.lang.reflect.Field)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7573" source="com.google.gson.GenericArrayTypeTest#ourType" target="com.google.gson.GenericArrayTypeTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7574" source="com.google.gson.GenericArrayTypeTest.setUp()" target="java.util.List#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7575" source="com.google.gson.GenericArrayTypeTest.setUp()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7576" source="com.google.gson.GenericArrayTypeTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7577" source="com.google.gson.GenericArrayTypeTest.testNotEquals()" target="com.google.gson.GenericArrayTypeTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7578" source="com.google.gson.GenericArrayTypeTest.testNotEquals()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7579" source="com.google.gson.GenericArrayTypeTest.testNotEquals()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7580" source="com.google.gson.GenericArrayTypeTest.testNotEquals()" target="com.google.gson.GenericArrayTypeTest#ourType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7581" source="com.google.gson.GenericArrayTypeTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7582" source="com.google.gson.GenericArrayTypeTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7583" source="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()" target="com.google.gson.GenericArrayTypeTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7584" source="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7585" source="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7586" source="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()" target="com.google.gson.GenericArrayTypeTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7587" source="com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()" target="com.google.gson.GenericArrayTypeTest#ourType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7588" source="com.google.gson.Gson$FutureTypeAdapter()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7589" source="com.google.gson.Gson$FutureTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7590" source="com.google.gson.Gson$FutureTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.Gson$FutureTypeAdapter#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7591" source="com.google.gson.Gson$FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter)" target="com.google.gson.Gson$FutureTypeAdapter#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7592" source="com.google.gson.Gson$FutureTypeAdapter#delegate" target="com.google.gson.Gson$FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7593" source="com.google.gson.Gson$FutureTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7594" source="com.google.gson.Gson$FutureTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.Gson$FutureTypeAdapter#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7595" source="com.google.gson.Gson$1.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7596" source="com.google.gson.Gson#deserializationContext" target="com.google.gson.Gson$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7597" source="com.google.gson.Gson$2.serialize(java.lang.Object)" target="com.google.gson.Gson.toJsonTree(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7598" source="com.google.gson.Gson$2.serialize(java.lang.Object,java.lang.reflect.Type)" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7599" source="com.google.gson.Gson#serializationContext" target="com.google.gson.Gson$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7600" source="com.google.gson.Gson()" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7601" source="com.google.gson.Gson()" target="com.google.gson.internal.Excluder#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7602" source="com.google.gson.Gson()" target="com.google.gson.FieldNamingPolicy#IDENTITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7603" source="com.google.gson.Gson()" target="com.google.gson.Gson#DEFAULT_JSON_NON_EXECUTABLE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7604" source="com.google.gson.Gson()" target="com.google.gson.LongSerializationPolicy#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7605" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.ConstructorConstructor(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7606" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7607" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7608" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.Gson.doubleAdapter(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7609" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.Gson.floatAdapter(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7610" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters.newFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7611" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7612" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7613" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7614" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7615" source="com.google.gson.Gson#constructorConstructor" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7616" source="com.google.gson.Gson#serializeNulls" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7617" source="com.google.gson.Gson#generateNonExecutableJson" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7618" source="com.google.gson.Gson#htmlSafe" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7619" source="com.google.gson.Gson#prettyPrinting" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7620" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#JSON_ELEMENT_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7621" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.ObjectTypeAdapter#FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7622" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#STRING_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7623" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#INTEGER_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7624" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#BOOLEAN_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7625" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#BYTE_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7626" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#SHORT_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7627" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7628" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7629" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7630" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7631" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7632" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7633" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#NUMBER_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7634" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#CHARACTER_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7635" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#STRING_BUILDER_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7636" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#STRING_BUFFER_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7637" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="java.math.BigDecimal#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7638" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#BIG_DECIMAL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7639" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7640" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#BIG_INTEGER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7641" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#URL_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7642" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#URI_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7643" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#UUID_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7644" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#LOCALE_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7645" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#INET_ADDRESS_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7646" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#BIT_SET_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7647" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.DateTypeAdapter#FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7648" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#CALENDAR_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7649" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TimeTypeAdapter#FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7650" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.SqlDateTypeAdapter#FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7651" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#TIMESTAMP_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7652" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.ArrayTypeAdapter#FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7653" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#CLASS_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7654" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.Gson#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7655" source="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)" target="com.google.gson.internal.bind.TypeAdapters#ENUM_FACTORY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7656" source="com.google.gson.Gson#factories" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7657" source="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7658" source="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)" target="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7659" source="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7660" source="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7661" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.stream.JsonReader.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7662" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7663" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7664" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7665" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7666" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7667" source="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7668" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7669" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7670" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)" target="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7671" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)" target="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7672" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7673" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7674" source="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)" target="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7675" source="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7676" source="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)" target="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7677" source="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)" target="com.google.gson.Gson.fromJson(java.io.Reader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7678" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson$FutureTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7679" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7680" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson$FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7681" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson#typeTokenCache">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7682" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson#calls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7683" source="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7684" source="com.google.gson.Gson.getAdapter(java.lang.Class)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7685" source="com.google.gson.Gson.getAdapter(java.lang.Class)" target="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7686" source="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)" target="com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7687" source="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)" target="com.google.gson.Gson#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7688" source="com.google.gson.Gson.toJsonTree(java.lang.Object)" target="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7689" source="com.google.gson.Gson.toJsonTree(java.lang.Object)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7690" source="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7691" source="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7692" source="com.google.gson.Gson.toJsonTree(java.lang.Object,java.lang.reflect.Type)" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7693" source="com.google.gson.Gson$3()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7694" source="com.google.gson.Gson$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7695" source="com.google.gson.Gson$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7696" source="com.google.gson.Gson$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7697" source="com.google.gson.Gson$3.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7698" source="com.google.gson.Gson$3.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7699" source="com.google.gson.Gson$3.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.Gson.checkValidFloatingPoint(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7700" source="com.google.gson.Gson$3.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7701" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.Gson$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7702" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7703" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7704" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7705" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7706" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7707" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.Gson.checkValidFloatingPoint(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7708" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7709" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.internal.bind.TypeAdapters#DOUBLE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7710" source="com.google.gson.Gson.doubleAdapter(boolean)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7711" source="com.google.gson.Gson$4()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7712" source="com.google.gson.Gson$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7713" source="com.google.gson.Gson$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7714" source="com.google.gson.Gson$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7715" source="com.google.gson.Gson$4.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7716" source="com.google.gson.Gson$4.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7717" source="com.google.gson.Gson$4.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.Gson.checkValidFloatingPoint(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7718" source="com.google.gson.Gson$4.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7719" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.Gson$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7720" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7721" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7722" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7723" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonReader.nextDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7724" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7725" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.Gson.checkValidFloatingPoint(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7726" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonWriter.value(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7727" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.internal.bind.TypeAdapters#FLOAT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7728" source="com.google.gson.Gson.floatAdapter(boolean)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7729" source="com.google.gson.Gson$5()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7730" source="com.google.gson.Gson$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7731" source="com.google.gson.Gson$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7732" source="com.google.gson.Gson$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7733" source="com.google.gson.Gson$5.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7734" source="com.google.gson.Gson$5.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7735" source="com.google.gson.Gson$5.write(com.google.gson.stream.JsonWriter,java.lang.Number)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7736" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.Gson$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7737" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7738" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7739" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7740" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonReader.nextLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7741" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7742" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7743" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.LongSerializationPolicy#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7744" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.internal.bind.TypeAdapters#LONG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7745" source="com.google.gson.Gson.longAdapter(com.google.gson.LongSerializationPolicy)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7746" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7747" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7748" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7749" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.Gson#generateNonExecutableJson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7750" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.Gson#JSON_NON_EXECUTABLE_PREFIX">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7751" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.Gson#prettyPrinting">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7752" source="com.google.gson.Gson.newJsonWriter(java.io.Writer)" target="com.google.gson.Gson#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7753" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement)" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7754" source="com.google.gson.Gson.toJson(java.lang.Object)" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7755" source="com.google.gson.Gson.toJson(java.lang.Object)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7756" source="com.google.gson.Gson.toJson(java.lang.Object)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7757" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7758" source="com.google.gson.Gson.toString()" target="com.google.gson.Gson#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7759" source="com.google.gson.Gson.toString()" target="com.google.gson.Gson#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7760" source="com.google.gson.Gson.toString()" target="com.google.gson.Gson#constructorConstructor">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7761" source="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7762" source="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)" target="com.google.gson.JsonIOException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7763" source="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7764" source="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7765" source="com.google.gson.Gson.assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7766" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7767" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7768" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.isHtmlSafe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7769" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7770" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.getSerializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7771" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7772" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7773" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7774" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.Gson#htmlSafe">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7775" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)" target="com.google.gson.Gson#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7776" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)" target="com.google.gson.Gson.newJsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7777" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)" target="com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7778" source="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7779" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7780" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7781" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.Appendable)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7782" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7783" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7784" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7785" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7786" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.isHtmlSafe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7787" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7788" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.getSerializeNulls()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7789" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7790" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7791" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7792" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.Gson#htmlSafe">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7793" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)" target="com.google.gson.Gson#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7794" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)" target="com.google.gson.Gson.newJsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7795" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)" target="com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7796" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7797" source="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7798" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7799" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7800" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7801" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#hierarchyFactories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7802" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#datePattern">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7803" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#dateStyle">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7804" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#timeStyle">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7805" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7806" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#fieldNamingPolicy">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7807" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#instanceCreators">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7808" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#serializeNulls">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7809" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#complexMapKeySerialization">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7810" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#generateNonExecutableJson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7811" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#escapeHtmlChars">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7812" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#prettyPrinting">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7813" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#serializeSpecialFloatingPointValues">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7814" source="com.google.gson.GsonBuilder.create()" target="com.google.gson.GsonBuilder#longSerializationPolicy">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7815" source="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)" target="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7816" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7817" source="com.google.gson.GsonBuilder.addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7818" source="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)" target="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7819" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7820" source="com.google.gson.GsonBuilder.addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7821" source="com.google.gson.GsonBuilder#escapeHtmlChars" target="com.google.gson.GsonBuilder.disableHtmlEscaping()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7822" source="com.google.gson.GsonBuilder.disableInnerClassSerialization()" target="com.google.gson.internal.Excluder.disableInnerClassSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7823" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.disableInnerClassSerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7824" source="com.google.gson.GsonBuilder.disableInnerClassSerialization()" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7825" source="com.google.gson.GsonBuilder#complexMapKeySerialization" target="com.google.gson.GsonBuilder.enableComplexMapKeySerialization()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7826" source="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])" target="com.google.gson.internal.Excluder.withModifiers(int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7827" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7828" source="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7829" source="com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation()" target="com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7830" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7831" source="com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation()" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7832" source="com.google.gson.GsonBuilder#generateNonExecutableJson" target="com.google.gson.GsonBuilder.generateNonExecutableJson()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7833" source="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)" target="com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7834" source="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)" target="com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7835" source="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)" target="com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7836" source="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)" target="com.google.gson.GsonBuilder#instanceCreators">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7837" source="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)" target="com.google.gson.GsonBuilder#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7838" source="com.google.gson.GsonBuilder.registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)" target="com.google.gson.GsonBuilder#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7839" source="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)" target="com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7840" source="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)" target="com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7841" source="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)" target="com.google.gson.GsonBuilder#hierarchyFactories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7842" source="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)" target="com.google.gson.GsonBuilder#factories">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7843" source="com.google.gson.GsonBuilder#serializeNulls" target="com.google.gson.GsonBuilder.serializeNulls()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7844" source="com.google.gson.GsonBuilder#serializeSpecialFloatingPointValues" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7845" source="com.google.gson.GsonBuilder#dateStyle" target="com.google.gson.GsonBuilder.setDateFormat(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7846" source="com.google.gson.GsonBuilder#datePattern" target="com.google.gson.GsonBuilder.setDateFormat(int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7847" source="com.google.gson.GsonBuilder#dateStyle" target="com.google.gson.GsonBuilder.setDateFormat(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7848" source="com.google.gson.GsonBuilder#timeStyle" target="com.google.gson.GsonBuilder.setDateFormat(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7849" source="com.google.gson.GsonBuilder#datePattern" target="com.google.gson.GsonBuilder.setDateFormat(int,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7850" source="com.google.gson.GsonBuilder#datePattern" target="com.google.gson.GsonBuilder.setDateFormat(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7851" source="com.google.gson.GsonBuilder.setExclusionStrategies(com.google.gson.ExclusionStrategy[])" target="com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7852" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.setExclusionStrategies(com.google.gson.ExclusionStrategy[])">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7853" source="com.google.gson.GsonBuilder.setExclusionStrategies(com.google.gson.ExclusionStrategy[])" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7854" source="com.google.gson.GsonBuilder#fieldNamingPolicy" target="com.google.gson.GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7855" source="com.google.gson.GsonBuilder#fieldNamingPolicy" target="com.google.gson.GsonBuilder.setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7856" source="com.google.gson.GsonBuilder#longSerializationPolicy" target="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7857" source="com.google.gson.GsonBuilder#prettyPrinting" target="com.google.gson.GsonBuilder.setPrettyPrinting()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7858" source="com.google.gson.GsonBuilder.setVersion(double)" target="com.google.gson.internal.Excluder.withVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7859" source="com.google.gson.GsonBuilder#excluder" target="com.google.gson.GsonBuilder.setVersion(double)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7860" source="com.google.gson.GsonBuilder.setVersion(double)" target="com.google.gson.GsonBuilder#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7861" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="com.google.gson.DefaultDateTypeAdapter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7862" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="com.google.gson.DefaultDateTypeAdapter(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7863" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7864" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="com.google.gson.reflect.TypeToken.get(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7865" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="java.text.DateFormat#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7866" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="java.util.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7867" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="java.sql.Timestamp#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7868" source="com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)" target="java.sql.Date#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7869" source="com.google.gson.GsonBuilderTest$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7870" source="com.google.gson.GsonBuilderTest#NULL_TYPE_ADAPTER" target="com.google.gson.GsonBuilderTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7871" source="com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7872" source="com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7873" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7874" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7875" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7876" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7877" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="com.google.gson.GsonBuilderTest$HasModifiers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7878" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="java.lang.reflect.Modifier#VOLATILE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7879" source="com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers()" target="java.lang.reflect.Modifier#PRIVATE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7880" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7881" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7882" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="byte#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7883" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="int#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7884" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="double#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7885" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7886" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7887" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7888" source="com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType()" target="com.google.gson.GsonBuilderTest#NULL_TYPE_ADAPTER">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7889" source="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7890" source="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()" target="com.google.gson.GsonBuilder.excludeFieldsWithModifiers(int[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7891" source="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7892" source="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7893" source="com.google.gson.GsonBuilderTest.testTransientFieldExclusion()" target="com.google.gson.GsonBuilderTest$HasTransients()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7894" source="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter.serialize(java.util.concurrent.atomic.AtomicInteger,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7895" source="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7896" source="com.google.gson.GsonTypeAdapterTest$Concrete()" target="com.google.gson.GsonTypeAdapterTest$Abstract()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7897" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonTypeAdapterTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7898" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7899" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7900" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7901" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7902" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7903" source="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)" target="com.google.gson.GsonTypeAdapterTest$Abstract#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7904" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7905" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7906" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="com.google.gson.GsonTypeAdapterTest$ExceptionTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7907" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="com.google.gson.GsonTypeAdapterTest$AtomicIntegerTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7908" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7909" source="com.google.gson.GsonTypeAdapterTest#gson" target="com.google.gson.GsonTypeAdapterTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7910" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="java.util.concurrent.atomic.AtomicLong#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7911" source="com.google.gson.GsonTypeAdapterTest.setUp()" target="java.util.concurrent.atomic.AtomicInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7912" source="com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7913" source="com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException()" target="com.google.gson.GsonTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7914" source="com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException()" target="java.math.BigInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7915" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest$Concrete()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7916" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest.assertSerialized(java.lang.String,java.lang.Class,boolean,boolean,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7917" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest$Abstract#a">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7918" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest$Concrete#b">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7919" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest$Abstract#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7920" source="com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass()" target="com.google.gson.GsonTypeAdapterTest$Concrete#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7921" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7922" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7923" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes()" target="com.google.gson.GsonTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7924" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7925" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7926" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7927" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes()" target="com.google.gson.GsonTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7928" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes()" target="java.util.concurrent.atomic.AtomicInteger#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7929" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7930" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7931" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException()" target="com.google.gson.GsonTypeAdapterTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7932" source="com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException()" target="java.util.concurrent.atomic.AtomicLong#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7933" source="com.google.gson.InnerClassExclusionStrategyTest#innerClass" target="com.google.gson.InnerClassExclusionStrategyTest$InnerClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7934" source="com.google.gson.InnerClassExclusionStrategyTest#staticNestedClass" target="com.google.gson.InnerClassExclusionStrategyTest$StaticNestedClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7935" source="com.google.gson.InnerClassExclusionStrategyTest#excluder" target="com.google.gson.internal.Excluder.disableInnerClassSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7936" source="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7937" source="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField()" target="com.google.gson.InnerClassExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7938" source="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7939" source="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject()" target="com.google.gson.InnerClassExclusionStrategyTest#innerClass">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7940" source="com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject()" target="com.google.gson.InnerClassExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7941" source="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7942" source="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField()" target="com.google.gson.InnerClassExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7943" source="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7944" source="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject()" target="com.google.gson.InnerClassExclusionStrategyTest#staticNestedClass">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7945" source="com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject()" target="com.google.gson.InnerClassExclusionStrategyTest#excluder">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7946" source="com.google.gson.JavaSerializationTest#gson" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7947" source="com.google.gson.JavaSerializationTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7948" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.JavaSerializationTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7949" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7950" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7951" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7952" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.JavaSerializationTest.serializedCopy(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7953" source="com.google.gson.JavaSerializationTest.testListIsSerializable()" target="com.google.gson.JavaSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7954" source="com.google.gson.JavaSerializationTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7955" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.JavaSerializationTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7956" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7957" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7958" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7959" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.JavaSerializationTest.serializedCopy(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7960" source="com.google.gson.JavaSerializationTest.testMapIsSerializable()" target="com.google.gson.JavaSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7961" source="com.google.gson.JavaSerializationTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7962" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.JavaSerializationTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7963" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7964" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7965" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7966" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.JavaSerializationTest.serializedCopy(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7967" source="com.google.gson.JavaSerializationTest.testNumberIsSerializable()" target="com.google.gson.JavaSerializationTest#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7968" source="com.google.gson.JsonArray()" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7969" source="com.google.gson.JsonArray#elements" target="com.google.gson.JsonArray()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e7970" source="com.google.gson.JsonArray.contains(com.google.gson.JsonElement)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7971" source="com.google.gson.JsonArray.equals(java.lang.Object)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7972" source="com.google.gson.JsonArray.getAsBoolean()" target="com.google.gson.JsonElement.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7973" source="com.google.gson.JsonArray.getAsBoolean()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7974" source="com.google.gson.JsonArray.remove(com.google.gson.JsonElement)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7975" source="com.google.gson.JsonArray.getAsByte()" target="com.google.gson.JsonElement.getAsByte()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7976" source="com.google.gson.JsonArray.getAsByte()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7977" source="com.google.gson.JsonArray.getAsCharacter()" target="com.google.gson.JsonElement.getAsCharacter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7978" source="com.google.gson.JsonArray.getAsCharacter()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7979" source="com.google.gson.JsonArray.deepCopy()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7980" source="com.google.gson.JsonArray.deepCopy()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7981" source="com.google.gson.JsonArray.deepCopy()" target="com.google.gson.JsonElement.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7982" source="com.google.gson.JsonArray.deepCopy()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7983" source="com.google.gson.JsonArray.get(int)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7984" source="com.google.gson.JsonArray.remove(int)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7985" source="com.google.gson.JsonArray.set(int,com.google.gson.JsonElement)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7986" source="com.google.gson.JsonArray.getAsDouble()" target="com.google.gson.JsonElement.getAsDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7987" source="com.google.gson.JsonArray.getAsDouble()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7988" source="com.google.gson.JsonArray.getAsFloat()" target="com.google.gson.JsonElement.getAsFloat()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7989" source="com.google.gson.JsonArray.getAsFloat()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7990" source="com.google.gson.JsonArray.getAsInt()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7991" source="com.google.gson.JsonArray.getAsInt()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7992" source="com.google.gson.JsonArray.hashCode()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7993" source="com.google.gson.JsonArray.size()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7994" source="com.google.gson.JsonArray.getAsNumber()" target="com.google.gson.JsonElement.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7995" source="com.google.gson.JsonArray.getAsNumber()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7996" source="com.google.gson.JsonArray.getAsString()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7997" source="com.google.gson.JsonArray.getAsString()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e7998" source="com.google.gson.JsonArray.getAsBigDecimal()" target="com.google.gson.JsonElement.getAsBigDecimal()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7999" source="com.google.gson.JsonArray.getAsBigDecimal()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8000" source="com.google.gson.JsonArray.getAsBigInteger()" target="com.google.gson.JsonElement.getAsBigInteger()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8001" source="com.google.gson.JsonArray.getAsBigInteger()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8002" source="com.google.gson.JsonArray.iterator()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8003" source="com.google.gson.JsonArray.getAsLong()" target="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8004" source="com.google.gson.JsonArray.getAsLong()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8005" source="com.google.gson.JsonArray.getAsShort()" target="com.google.gson.JsonElement.getAsShort()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8006" source="com.google.gson.JsonArray.getAsShort()" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8007" source="com.google.gson.JsonNull#INSTANCE" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8008" source="com.google.gson.JsonArray.add(com.google.gson.JsonElement)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8009" source="com.google.gson.JsonArray.addAll(com.google.gson.JsonArray)" target="com.google.gson.JsonArray#elements">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8010" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8011" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8012" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonArray.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8013" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8014" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonArray.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8015" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonArray.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8016" source="com.google.gson.JsonArrayTest.testDeepCopy()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8017" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8018" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8019" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8020" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.JsonArray.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8021" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8022" source="com.google.gson.JsonArrayTest.testEqualsNonEmptyArray()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8023" source="com.google.gson.JsonArrayTest.testEqualsOnEmptyArray()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8024" source="com.google.gson.JsonArrayTest.testEqualsOnEmptyArray()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8025" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8026" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8027" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8028" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8029" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray.remove(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8030" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray.contains(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8031" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8032" source="com.google.gson.JsonArrayTest.testRemove()" target="com.google.gson.JsonArray.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8033" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8034" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonArray.set(int,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8035" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8036" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8037" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8038" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonArray.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8039" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8040" source="com.google.gson.JsonArrayTest.testSet()" target="com.google.gson.JsonArray.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8041" source="com.google.gson.JsonElement.getAsJsonArray()" target="com.google.gson.JsonElement.isJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8042" source="com.google.gson.JsonElement.getAsJsonNull()" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8043" source="com.google.gson.JsonElement.getAsJsonObject()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8044" source="com.google.gson.JsonElement.getAsJsonPrimitive()" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8045" source="com.google.gson.JsonElement.toString()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8046" source="com.google.gson.JsonElement.toString()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8047" source="com.google.gson.JsonElement.toString()" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8048" source="com.google.gson.JsonIOException(java.lang.String)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8049" source="com.google.gson.JsonIOException(java.lang.String,java.lang.Throwable)" target="com.google.gson.JsonParseException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8050" source="com.google.gson.JsonIOException(java.lang.Throwable)" target="com.google.gson.JsonParseException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8051" source="com.google.gson.JsonNull#INSTANCE" target="com.google.gson.JsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8052" source="com.google.gson.JsonNull()" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8053" source="com.google.gson.JsonNull.deepCopy()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8054" source="com.google.gson.JsonNull.hashCode()" target="com.google.gson.JsonNull#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8055" source="com.google.gson.JsonNullTest.testDeepCopy()" target="com.google.gson.JsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8056" source="com.google.gson.JsonNullTest.testDeepCopy()" target="com.google.gson.JsonNull.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8057" source="com.google.gson.JsonNullTest.testDeepCopy()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8058" source="com.google.gson.JsonNullTest.testEqualsAndHashcode()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8059" source="com.google.gson.JsonNullTest.testEqualsAndHashcode()" target="com.google.gson.JsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8060" source="com.google.gson.JsonNullTest.testEqualsAndHashcode()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8061" source="com.google.gson.JsonObject#members" target="com.google.gson.internal.LinkedTreeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8062" source="com.google.gson.JsonObject()" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8063" source="com.google.gson.JsonObject.equals(java.lang.Object)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8064" source="com.google.gson.JsonObject.has(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8065" source="com.google.gson.JsonObject.has(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8066" source="com.google.gson.JsonObject.getAsJsonArray(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8067" source="com.google.gson.JsonObject.getAsJsonArray(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8068" source="com.google.gson.JsonObject.createJsonElement(java.lang.Object)" target="com.google.gson.JsonPrimitive(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8069" source="com.google.gson.JsonObject.createJsonElement(java.lang.Object)" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8070" source="com.google.gson.JsonObject.get(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8071" source="com.google.gson.JsonObject.get(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8072" source="com.google.gson.JsonObject.remove(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8073" source="com.google.gson.JsonObject.remove(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8074" source="com.google.gson.JsonObject.deepCopy()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8075" source="com.google.gson.JsonObject.deepCopy()" target="com.google.gson.internal.LinkedTreeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8076" source="com.google.gson.JsonObject.deepCopy()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8077" source="com.google.gson.JsonObject.deepCopy()" target="com.google.gson.JsonElement.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8078" source="com.google.gson.JsonObject.deepCopy()" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8079" source="com.google.gson.JsonObject.getAsJsonObject(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8080" source="com.google.gson.JsonObject.getAsJsonObject(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8081" source="com.google.gson.JsonObject.getAsJsonPrimitive(java.lang.String)" target="com.google.gson.internal.LinkedTreeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8082" source="com.google.gson.JsonObject.getAsJsonPrimitive(java.lang.String)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8083" source="com.google.gson.JsonObject.hashCode()" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8084" source="com.google.gson.JsonObject.entrySet()" target="com.google.gson.internal.LinkedTreeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8085" source="com.google.gson.JsonObject.entrySet()" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8086" source="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)" target="com.google.gson.internal.LinkedTreeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8087" source="com.google.gson.JsonNull#INSTANCE" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8088" source="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)" target="com.google.gson.JsonObject#members">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8089" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Boolean)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8090" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Boolean)" target="com.google.gson.JsonObject.createJsonElement(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8091" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Character)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8092" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Character)" target="com.google.gson.JsonObject.createJsonElement(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8093" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8094" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)" target="com.google.gson.JsonObject.createJsonElement(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8095" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8096" source="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)" target="com.google.gson.JsonObject.createJsonElement(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8097" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8098" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8099" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8100" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8101" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8102" source="com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()" target="com.google.gson.JsonObject.remove(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8103" source="com.google.gson.JsonObjectTest.testAddingBooleanProperties()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8104" source="com.google.gson.JsonObjectTest.testAddingBooleanProperties()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8105" source="com.google.gson.JsonObjectTest.testAddingBooleanProperties()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8106" source="com.google.gson.JsonObjectTest.testAddingBooleanProperties()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8107" source="com.google.gson.JsonObjectTest.testAddingBooleanProperties()" target="com.google.gson.JsonElement.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8108" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8109" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8110" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8111" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8112" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8113" source="com.google.gson.JsonObjectTest.testAddingCharacterProperties()" target="com.google.gson.JsonElement.getAsCharacter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8114" source="com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8115" source="com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8116" source="com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8117" source="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8118" source="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8119" source="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8120" source="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8121" source="com.google.gson.JsonObjectTest.testAddingNullPropertyValue()" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8122" source="com.google.gson.JsonObjectTest.testAddingStringProperties()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8123" source="com.google.gson.JsonObjectTest.testAddingStringProperties()" target="com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8124" source="com.google.gson.JsonObjectTest.testAddingStringProperties()" target="com.google.gson.JsonObject.has(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8125" source="com.google.gson.JsonObjectTest.testAddingStringProperties()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8126" source="com.google.gson.JsonObjectTest.testAddingStringProperties()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8127" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8128" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8129" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8130" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonObject.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8131" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonArray.add(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8132" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8133" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8134" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8135" source="com.google.gson.JsonObjectTest.testDeepCopy()" target="com.google.gson.JsonArray.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8136" source="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8137" source="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8138" source="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()" target="com.google.gson.JsonObject.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8139" source="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8140" source="com.google.gson.JsonObjectTest.testEqualsNonEmptyObject()" target="com.google.gson.JsonNull#INSTANCE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8141" source="com.google.gson.JsonObjectTest.testEqualsOnEmptyObject()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8142" source="com.google.gson.JsonObjectTest.testEqualsOnEmptyObject()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8143" source="com.google.gson.JsonObjectTest.testPropertyWithQuotes()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8144" source="com.google.gson.JsonObjectTest.testPropertyWithQuotes()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8145" source="com.google.gson.JsonObjectTest.testPropertyWithQuotes()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8146" source="com.google.gson.JsonObjectTest.testPropertyWithQuotes()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8147" source="com.google.gson.JsonObjectTest.testPropertyWithQuotes()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8148" source="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8149" source="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8150" source="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8151" source="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8152" source="com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName()" target="com.google.gson.JsonElement.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8153" source="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8154" source="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8155" source="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8156" source="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8157" source="com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8158" source="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8159" source="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8160" source="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8161" source="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonParseException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8162" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8163" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8164" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8165" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8166" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.JsonSyntaxException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8167" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8168" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8169" source="com.google.gson.JsonParser.parse(java.io.Reader)" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8170" source="com.google.gson.JsonParser.parse(java.lang.String)" target="com.google.gson.JsonParser.parse(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8171" source="com.google.gson.JsonParserTest.setUp()" target="com.google.gson.JsonParser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8172" source="com.google.gson.JsonParserTest#parser" target="com.google.gson.JsonParserTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8173" source="com.google.gson.JsonParserTest.testParseEmptyString()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8174" source="com.google.gson.JsonParserTest.testParseEmptyString()" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8175" source="com.google.gson.JsonParserTest.testParseEmptyString()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8176" source="com.google.gson.JsonParserTest.testParseEmptyString()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8177" source="com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8178" source="com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput()" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8179" source="com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8180" source="com.google.gson.JsonParserTest.testParseInvalidJson()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8181" source="com.google.gson.JsonParserTest.testParseInvalidJson()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8182" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8183" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonElement.isJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8184" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8185" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonArray.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8186" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8187" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8188" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8189" source="com.google.gson.JsonParserTest.testParseMixedArray()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8190" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonParser.parse(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8191" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8192" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8193" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8194" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8195" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8196" source="com.google.gson.JsonParserTest.testParseReader()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8197" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8198" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonElement.isJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8199" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8200" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8201" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8202" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8203" source="com.google.gson.JsonParserTest.testParseString()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8204" source="com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8205" source="com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8206" source="com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8207" source="com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8208" source="com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8209" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonParser.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8210" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonElement.getAsJsonArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8211" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonArray.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8212" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8213" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonArray.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8214" source="com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails()" target="com.google.gson.JsonParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8215" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8216" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives(long,int,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8217" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.Gson.toJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8218" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8219" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8220" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8221" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8222" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8223" source="com.google.gson.JsonParserTest.testReadWriteTwoObjects()" target="com.google.gson.common.TestTypes$BagOfPrimitives#stringValue">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8224" source="com.google.gson.JsonPrimitive(java.lang.Boolean)" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8225" source="com.google.gson.JsonPrimitive(java.lang.Boolean)" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8226" source="com.google.gson.JsonPrimitive(java.lang.Character)" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8227" source="com.google.gson.JsonPrimitive(java.lang.Character)" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8228" source="com.google.gson.JsonPrimitive(java.lang.Number)" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8229" source="com.google.gson.JsonPrimitive(java.lang.Number)" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8230" source="com.google.gson.JsonPrimitive(java.lang.Object)" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8231" source="com.google.gson.JsonPrimitive(java.lang.Object)" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8232" source="com.google.gson.JsonPrimitive(java.lang.String)" target="com.google.gson.JsonElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8233" source="com.google.gson.JsonPrimitive(java.lang.String)" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8234" source="com.google.gson.JsonPrimitive.equals(java.lang.Object)" target="com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8235" source="com.google.gson.JsonPrimitive.equals(java.lang.Object)" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8236" source="com.google.gson.JsonPrimitive.equals(java.lang.Object)" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8237" source="com.google.gson.JsonPrimitive.getAsBoolean()" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8238" source="com.google.gson.JsonPrimitive.getAsBoolean()" target="com.google.gson.JsonPrimitive.getAsBooleanWrapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8239" source="com.google.gson.JsonPrimitive.getAsBoolean()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8240" source="com.google.gson.JsonPrimitive.isBoolean()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8241" source="com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive)" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8242" source="com.google.gson.JsonPrimitive.isNumber()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8243" source="com.google.gson.JsonPrimitive.isPrimitiveOrString(java.lang.Object)" target="com.google.gson.JsonPrimitive#PRIMITIVE_TYPES">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8244" source="com.google.gson.JsonPrimitive.isString()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8245" source="com.google.gson.JsonPrimitive.getAsByte()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8246" source="com.google.gson.JsonPrimitive.getAsByte()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8247" source="com.google.gson.JsonPrimitive.getAsByte()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8248" source="com.google.gson.JsonPrimitive.getAsCharacter()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8249" source="com.google.gson.JsonPrimitive.getAsDouble()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8250" source="com.google.gson.JsonPrimitive.getAsDouble()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8251" source="com.google.gson.JsonPrimitive.getAsDouble()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8252" source="com.google.gson.JsonPrimitive.getAsFloat()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8253" source="com.google.gson.JsonPrimitive.getAsFloat()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8254" source="com.google.gson.JsonPrimitive.getAsFloat()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8255" source="com.google.gson.JsonPrimitive.getAsInt()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8256" source="com.google.gson.JsonPrimitive.getAsInt()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8257" source="com.google.gson.JsonPrimitive.getAsInt()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8258" source="com.google.gson.JsonPrimitive.hashCode()" target="com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8259" source="com.google.gson.JsonPrimitive.hashCode()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8260" source="com.google.gson.JsonPrimitive.hashCode()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8261" source="com.google.gson.JsonPrimitive.getAsBooleanWrapper()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8262" source="com.google.gson.JsonPrimitive.getAsNumber()" target="com.google.gson.internal.LazilyParsedNumber(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8263" source="com.google.gson.JsonPrimitive.getAsNumber()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8264" source="com.google.gson.JsonPrimitive.getAsString()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8265" source="com.google.gson.JsonPrimitive.getAsString()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8266" source="com.google.gson.JsonPrimitive.getAsString()" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8267" source="com.google.gson.JsonPrimitive.getAsString()" target="com.google.gson.JsonPrimitive.getAsBooleanWrapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8268" source="com.google.gson.JsonPrimitive.getAsString()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8269" source="com.google.gson.JsonPrimitive.getAsBigDecimal()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8270" source="com.google.gson.JsonPrimitive.getAsBigInteger()" target="com.google.gson.JsonPrimitive#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8271" source="com.google.gson.JsonPrimitive.getAsLong()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8272" source="com.google.gson.JsonPrimitive.getAsLong()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8273" source="com.google.gson.JsonPrimitive.getAsLong()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8274" source="com.google.gson.JsonPrimitive.getAsShort()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8275" source="com.google.gson.JsonPrimitive.getAsShort()" target="com.google.gson.JsonPrimitive.getAsNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8276" source="com.google.gson.JsonPrimitive.getAsShort()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8277" source="com.google.gson.JsonPrimitive.setValue(java.lang.Object)" target="com.google.gson.JsonPrimitive.isPrimitiveOrString(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8278" source="com.google.gson.JsonPrimitive#value" target="com.google.gson.JsonPrimitive.setValue(java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8279" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8280" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8281" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8282" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8283" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8284" source="com.google.gson.JsonPrimitiveTest.testBoolean()" target="java.lang.Boolean#TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8285" source="com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8286" source="com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8287" source="com.google.gson.JsonPrimitiveTest.testByteEqualsInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8288" source="com.google.gson.JsonPrimitiveTest.testByteEqualsInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8289" source="com.google.gson.JsonPrimitiveTest.testByteEqualsLong()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8290" source="com.google.gson.JsonPrimitiveTest.testByteEqualsLong()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8291" source="com.google.gson.JsonPrimitiveTest.testByteEqualsShort()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8292" source="com.google.gson.JsonPrimitiveTest.testByteEqualsShort()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8293" source="com.google.gson.JsonPrimitiveTest.testDeepCopy()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8294" source="com.google.gson.JsonPrimitiveTest.testDeepCopy()" target="com.google.gson.JsonPrimitive.deepCopy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8295" source="com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8296" source="com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8297" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8298" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8299" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8300" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8301" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8302" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="com.google.gson.JsonPrimitive.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8303" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Float#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8304" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Float#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8305" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Float#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8306" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8307" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8308" source="com.google.gson.JsonPrimitiveTest.testEquals()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8309" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8310" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8311" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8312" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8313" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="java.lang.Float#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8314" source="com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8315" source="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8316" source="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()" target="com.google.gson.JsonPrimitive.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8317" source="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()" target="com.google.gson.JsonPrimitive(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8318" source="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8319" source="com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes()" target="java.lang.Float#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8320" source="com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8321" source="com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger()" target="com.google.gson.JsonPrimitive.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8322" source="com.google.gson.JsonPrimitiveTest.testExponential()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8323" source="com.google.gson.JsonPrimitiveTest.testExponential()" target="com.google.gson.JsonPrimitive.getAsBigDecimal()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8324" source="com.google.gson.JsonPrimitiveTest.testExponential()" target="com.google.gson.JsonPrimitive.getAsDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8325" source="com.google.gson.JsonPrimitiveTest.testExponential()" target="com.google.gson.JsonPrimitive.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8326" source="com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8327" source="com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8328" source="com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8329" source="com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8330" source="com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8331" source="com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8332" source="com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8333" source="com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8334" source="com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8335" source="com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8336" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8337" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean()" target="com.google.gson.JsonPrimitive.isBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8338" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean()" target="com.google.gson.JsonPrimitive.getAsBoolean()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8339" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8340" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8341" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsDouble()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8342" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsFloat()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8343" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8344" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8345" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsShort()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8346" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsByte()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8347" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsBigInteger()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8348" source="com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber()" target="com.google.gson.JsonPrimitive.getAsBigDecimal()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8349" source="com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8350" source="com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8351" source="com.google.gson.JsonPrimitiveTest.testShortEqualsInteger()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8352" source="com.google.gson.JsonPrimitiveTest.testShortEqualsInteger()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8353" source="com.google.gson.JsonPrimitiveTest.testShortEqualsLong()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8354" source="com.google.gson.JsonPrimitiveTest.testShortEqualsLong()" target="com.google.gson.JsonPrimitive.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8355" source="com.google.gson.JsonPrimitiveTest.testStringsAndChar()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8356" source="com.google.gson.JsonPrimitiveTest.testStringsAndChar()" target="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8357" source="com.google.gson.JsonPrimitiveTest.testStringsAndChar()" target="com.google.gson.JsonPrimitive.getAsCharacter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8358" source="com.google.gson.JsonPrimitiveTest.testStringsAndChar()" target="com.google.gson.JsonPrimitive.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8359" source="com.google.gson.JsonPrimitiveTest.testStringsAndChar()" target="com.google.gson.JsonPrimitive(java.lang.Character)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8360" source="com.google.gson.JsonPrimitiveTest.testValidJsonOnToString()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8361" source="com.google.gson.JsonPrimitiveTest.testValidJsonOnToString()" target="com.google.gson.JsonElement.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8362" source="com.google.gson.JsonPrimitiveTest.testValidJsonOnToString()" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8363" source="com.google.gson.JsonStreamParser(java.io.Reader)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8364" source="com.google.gson.JsonStreamParser(java.io.Reader)" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8365" source="com.google.gson.JsonStreamParser#parser" target="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8366" source="com.google.gson.JsonStreamParser(java.io.Reader)" target="com.google.gson.JsonStreamParser#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8367" source="com.google.gson.JsonStreamParser#lock" target="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8368" source="com.google.gson.JsonStreamParser(java.lang.String)" target="com.google.gson.JsonStreamParser(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8369" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8370" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.JsonSyntaxException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8371" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8372" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.JsonStreamParser#lock">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8373" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.JsonStreamParser#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8374" source="com.google.gson.JsonStreamParser.hasNext()" target="com.google.gson.stream.JsonToken#END_DOCUMENT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8375" source="com.google.gson.JsonStreamParser.next()" target="com.google.gson.JsonStreamParser.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8376" source="com.google.gson.JsonStreamParser.next()" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8377" source="com.google.gson.JsonStreamParser.next()" target="com.google.gson.JsonParseException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8378" source="com.google.gson.JsonStreamParser.next()" target="com.google.gson.JsonStreamParser#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8379" source="com.google.gson.JsonStreamParserTest.setUp()" target="com.google.gson.JsonStreamParser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8380" source="com.google.gson.JsonStreamParserTest#parser" target="com.google.gson.JsonStreamParserTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8381" source="com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8382" source="com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput()" target="com.google.gson.JsonStreamParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8383" source="com.google.gson.JsonStreamParserTest.testIterator()" target="com.google.gson.JsonStreamParser.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8384" source="com.google.gson.JsonStreamParserTest.testIterator()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8385" source="com.google.gson.JsonStreamParserTest.testIterator()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8386" source="com.google.gson.JsonStreamParserTest.testIterator()" target="com.google.gson.JsonStreamParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8387" source="com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()" target="com.google.gson.JsonStreamParser.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8388" source="com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8389" source="com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8390" source="com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()" target="com.google.gson.JsonStreamParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8391" source="com.google.gson.JsonStreamParserTest.testParseTwoStrings()" target="com.google.gson.JsonStreamParser.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8392" source="com.google.gson.JsonStreamParserTest.testParseTwoStrings()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8393" source="com.google.gson.JsonStreamParserTest.testParseTwoStrings()" target="com.google.gson.JsonStreamParserTest#parser">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8394" source="com.google.gson.JsonSyntaxException(java.lang.String)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8395" source="com.google.gson.JsonSyntaxException(java.lang.String,java.lang.Throwable)" target="com.google.gson.JsonParseException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8396" source="com.google.gson.JsonSyntaxException(java.lang.Throwable)" target="com.google.gson.JsonParseException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8397" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.LongSerializationPolicy.serialize(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8398" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8399" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8400" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8401" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8402" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.JsonElement.getAsLong()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8403" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization()" target="com.google.gson.LongSerializationPolicy#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8404" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8405" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8406" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8407" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8408" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="com.google.gson.LongSerializationPolicy#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8409" source="com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8410" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.LongSerializationPolicy.serialize(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8411" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.JsonElement.isJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8412" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.JsonElement.getAsJsonPrimitive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8413" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.JsonPrimitive.isNumber()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8414" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.JsonPrimitive.isString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8415" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8416" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerialization()" target="com.google.gson.LongSerializationPolicy#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8417" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8418" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="com.google.gson.GsonBuilder.setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8419" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8420" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8421" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="com.google.gson.LongSerializationPolicy#STRING">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8422" source="com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration()" target="java.lang.reflect.Array#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8423" source="com.google.gson.MixedStreamTest$Car#name" target="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8424" source="com.google.gson.MixedStreamTest$Car#color" target="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8425" source="com.google.gson.MixedStreamTest$Car.equals(java.lang.Object)" target="com.google.gson.MixedStreamTest$Car#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8426" source="com.google.gson.MixedStreamTest$Car.equals(java.lang.Object)" target="com.google.gson.MixedStreamTest$Car#color">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8427" source="com.google.gson.MixedStreamTest$Car.hashCode()" target="com.google.gson.MixedStreamTest$Car#name">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8428" source="com.google.gson.MixedStreamTest$Car.hashCode()" target="com.google.gson.MixedStreamTest$Car#color">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8429" source="com.google.gson.MixedStreamTest#BLUE_MUSTANG" target="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8430" source="com.google.gson.MixedStreamTest#BLACK_BMW" target="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8431" source="com.google.gson.MixedStreamTest#RED_MIATA" target="com.google.gson.MixedStreamTest$Car(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8432" source="com.google.gson.MixedStreamTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8433" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8434" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8435" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.stream.JsonReader.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8436" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8437" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.MixedStreamTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8438" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8439" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8440" source="com.google.gson.MixedStreamTest.testReadClosed()" target="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8441" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8442" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8443" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8444" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.stream.JsonReader.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8445" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8446" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8447" source="com.google.gson.MixedStreamTest.testReadInvalidState()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8448" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8449" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8450" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8451" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8452" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.stream.JsonReader.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8453" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8454" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8455" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8456" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.MixedStreamTest#BLACK_BMW">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8457" source="com.google.gson.MixedStreamTest.testReadMixedStreamed()" target="com.google.gson.MixedStreamTest#RED_MIATA">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8458" source="com.google.gson.MixedStreamTest.testReadNulls()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8459" source="com.google.gson.MixedStreamTest.testReadNulls()" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8460" source="com.google.gson.MixedStreamTest.testReadNulls()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8461" source="com.google.gson.MixedStreamTest.testReadNulls()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8462" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8463" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8464" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.stream.JsonReader.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8465" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.stream.JsonReader.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8466" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8467" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.stream.JsonReader.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8468" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8469" source="com.google.gson.MixedStreamTest.testReaderDoesNotMutateState()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8470" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8471" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8472" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8473" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8474" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.stream.JsonWriter.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8475" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8476" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8477" source="com.google.gson.MixedStreamTest.testWriteClosed()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8478" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8479" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8480" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8481" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8482" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter.setLenient(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8483" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8484" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter.isHtmlSafe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8485" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.stream.JsonWriter.isLenient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8486" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8487" source="com.google.gson.MixedStreamTest.testWriteDoesNotMutateState()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8488" source="com.google.gson.MixedStreamTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8489" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.MixedStreamTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8490" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8491" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8492" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8493" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8494" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8495" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8496" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.GsonBuilder.disableHtmlEscaping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8497" source="com.google.gson.MixedStreamTest.testWriteHtmlSafe()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8498" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8499" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8500" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.stream.JsonWriter.beginObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8501" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8502" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8503" source="com.google.gson.MixedStreamTest.testWriteInvalidState()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8504" source="com.google.gson.MixedStreamTest$3()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8505" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.MixedStreamTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8506" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8507" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8508" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8509" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8510" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8511" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8512" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8513" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8514" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="java.lang.Double#NaN">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8515" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="java.lang.Double#NEGATIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8516" source="com.google.gson.MixedStreamTest.testWriteLenient()" target="java.lang.Double#POSITIVE_INFINITY">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8517" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8518" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8519" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.stream.JsonWriter.beginArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8520" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.stream.JsonWriter.setIndent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8521" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8522" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.stream.JsonWriter.endArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8523" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.MixedStreamTest#BLUE_MUSTANG">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8524" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.MixedStreamTest$Car#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8525" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.MixedStreamTest#BLACK_BMW">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8526" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.MixedStreamTest#RED_MIATA">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8527" source="com.google.gson.MixedStreamTest.testWriteMixedStreamed()" target="com.google.gson.MixedStreamTest#CARS_JSON">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8528" source="com.google.gson.MixedStreamTest.testWriteNulls()" target="com.google.gson.Gson()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8529" source="com.google.gson.MixedStreamTest.testWriteNulls()" target="com.google.gson.Gson.toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8530" source="com.google.gson.MixedStreamTest.testWriteNulls()" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8531" source="com.google.gson.MixedStreamTest.testWriteNulls()" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8532" source="com.google.gson.MockExclusionStrategy#skipClass" target="com.google.gson.MockExclusionStrategy(boolean,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8533" source="com.google.gson.MockExclusionStrategy#skipField" target="com.google.gson.MockExclusionStrategy(boolean,boolean)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8534" source="com.google.gson.MockExclusionStrategy.shouldSkipClass(java.lang.Class)" target="com.google.gson.MockExclusionStrategy#skipClass">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8535" source="com.google.gson.MockExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)" target="com.google.gson.MockExclusionStrategy#skipField">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8536" source="com.google.gson.ObjectTypeAdapterTest#gson" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8537" source="com.google.gson.ObjectTypeAdapterTest#adapter" target="com.google.gson.Gson.getAdapter(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8538" source="com.google.gson.ObjectTypeAdapterTest.testDeserialize()" target="com.google.gson.TypeAdapter.fromJson(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8539" source="com.google.gson.ObjectTypeAdapterTest.testDeserialize()" target="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8540" source="com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue()" target="com.google.gson.TypeAdapter.fromJson(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8541" source="com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue()" target="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8542" source="com.google.gson.ObjectTypeAdapterTest.testSerialize()" target="com.google.gson.ObjectTypeAdapterTest$RuntimeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8543" source="com.google.gson.ObjectTypeAdapterTest.testSerialize()" target="com.google.gson.TypeAdapter.toJson(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8544" source="com.google.gson.ObjectTypeAdapterTest.testSerialize()" target="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8545" source="com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue()" target="com.google.gson.TypeAdapter.toJson(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8546" source="com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue()" target="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8547" source="com.google.gson.ObjectTypeAdapterTest.testSerializeObject()" target="com.google.gson.TypeAdapter.toJson(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8548" source="com.google.gson.ObjectTypeAdapterTest.testSerializeObject()" target="com.google.gson.ObjectTypeAdapterTest#adapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8549" source="com.google.gson.OverrideCoreTypeAdaptersTest$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8550" source="com.google.gson.OverrideCoreTypeAdaptersTest$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8551" source="com.google.gson.OverrideCoreTypeAdaptersTest$1.write(com.google.gson.stream.JsonWriter,java.lang.Boolean)" target="com.google.gson.stream.JsonWriter.value(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8552" source="com.google.gson.OverrideCoreTypeAdaptersTest#booleanAsIntAdapter" target="com.google.gson.OverrideCoreTypeAdaptersTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8553" source="com.google.gson.OverrideCoreTypeAdaptersTest$2()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8554" source="com.google.gson.OverrideCoreTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8555" source="com.google.gson.OverrideCoreTypeAdaptersTest$2.read(com.google.gson.stream.JsonReader)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8556" source="com.google.gson.OverrideCoreTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,java.lang.String)" target="com.google.gson.stream.JsonWriter.value(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8557" source="com.google.gson.OverrideCoreTypeAdaptersTest$2.write(com.google.gson.stream.JsonWriter,java.lang.String)" target="java.util.Locale#US">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8558" source="com.google.gson.OverrideCoreTypeAdaptersTest#swapCaseStringAdapter" target="com.google.gson.OverrideCoreTypeAdaptersTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8559" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8560" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8561" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8562" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8563" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8564" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8565" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="com.google.gson.OverrideCoreTypeAdaptersTest#booleanAsIntAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8566" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8567" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter()" target="java.lang.Boolean#TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8568" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8569" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8570" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8571" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8572" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8573" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8574" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()" target="com.google.gson.OverrideCoreTypeAdaptersTest#swapCaseStringAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8575" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.GsonBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8576" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8577" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.GsonBuilder.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8578" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8579" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8580" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8581" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="com.google.gson.OverrideCoreTypeAdaptersTest#booleanAsIntAdapter">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8582" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8583" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="java.lang.Boolean#TRUE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8584" source="com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter()" target="java.lang.Boolean#FALSE">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8585" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8586" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getValue()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8587" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.equals(java.lang.Object)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8588" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.hashCode()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8589" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8590" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson()" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8591" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson(java.lang.Object)" target="com.google.gson.internal.Primitives.isWrapperType(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8592" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson(java.lang.Object)" target="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8593" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getExpectedJson(java.lang.Object)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8594" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.getExpectedJson(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType)" target="com.google.gson.internal.Primitives.unwrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8595" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.getExpectedJson(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType#value">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8596" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.serialize(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8597" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.serialize(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8598" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.serialize(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8599" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.serialize(com.google.gson.ParameterizedTypeFixtures$MyParameterizedType,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)" target="com.google.gson.JsonSerializationContext.serialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8600" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsJsonObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8601" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonObject.get(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8602" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8603" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.JsonElement.getAsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8604" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.internal.Primitives.isPrimitive(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8605" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.PrimitiveTypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8606" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8607" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8608" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8609" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeAdapter.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8610" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator#instanceOfT" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator(T)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8611" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator.createInstance(java.lang.reflect.Type)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedType(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8612" source="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator.createInstance(java.lang.reflect.Type)" target="com.google.gson.ParameterizedTypeFixtures$MyParameterizedTypeInstanceCreator#instanceOfT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8613" source="com.google.gson.ParameterizedTypeTest#ourType" target="com.google.gson.ParameterizedTypeTest.setUp()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8614" source="com.google.gson.ParameterizedTypeTest.setUp()" target="java.util.List#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8615" source="com.google.gson.ParameterizedTypeTest.setUp()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8616" source="com.google.gson.ParameterizedTypeTest$2()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8617" source="com.google.gson.ParameterizedTypeTest.testNotEquals()" target="com.google.gson.ParameterizedTypeTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8618" source="com.google.gson.ParameterizedTypeTest.testNotEquals()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8619" source="com.google.gson.ParameterizedTypeTest.testNotEquals()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8620" source="com.google.gson.ParameterizedTypeTest.testNotEquals()" target="com.google.gson.ParameterizedTypeTest#ourType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8621" source="com.google.gson.ParameterizedTypeTest$1()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8622" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="com.google.gson.ParameterizedTypeTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8623" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="com.google.gson.reflect.TypeToken()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8624" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8625" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="com.google.gson.ParameterizedTypeTest#ourType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8626" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8627" source="com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality()" target="java.util.List#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8628" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="com.google.gson.internal.Primitives.wrap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8629" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="com.google.gson.internal.Primitives.isWrapperType(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8630" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="com.google.gson.JsonParseException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8631" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="com.google.gson.JsonParseException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8632" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8633" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8634" source="com.google.gson.PrimitiveTypeAdapter.adaptType(java.lang.Object,java.lang.Class)" target="java.lang.Enum#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8635" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory#serializer" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8636" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory#deserializer" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8637" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#serializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8638" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#deserializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8639" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory#exactType" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8640" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory#matchRawType" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8641" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory#hierarchyType" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8642" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8643" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8644" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8645" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8646" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#exactType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8647" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#matchRawType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8648" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#hierarchyType">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8649" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#serializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8650" source="com.google.gson.TreeTypeAdapter$SingleTypeFactory.create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory#deserializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8651" source="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8652" source="com.google.gson.TreeTypeAdapter#serializer" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8653" source="com.google.gson.TreeTypeAdapter#deserializer" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8654" source="com.google.gson.TreeTypeAdapter#gson" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8655" source="com.google.gson.TreeTypeAdapter#typeToken" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8656" source="com.google.gson.TreeTypeAdapter#skipPast" target="com.google.gson.TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8657" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TreeTypeAdapter.delegate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8658" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8659" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8660" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonElement.isJsonNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8661" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.JsonDeserializer.deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8662" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8663" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TreeTypeAdapter#deserializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8664" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TreeTypeAdapter#typeToken">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8665" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.Gson#deserializationContext">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8666" source="com.google.gson.TreeTypeAdapter.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TreeTypeAdapter#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8667" source="com.google.gson.TreeTypeAdapter.delegate()" target="com.google.gson.Gson.getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8668" source="com.google.gson.TreeTypeAdapter.delegate()" target="com.google.gson.TreeTypeAdapter#delegate">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8669" source="com.google.gson.TreeTypeAdapter#delegate" target="com.google.gson.TreeTypeAdapter.delegate()">
      <data key="type">WRITE_OPERATION</data>
    </edge>
    <edge id="e8670" source="com.google.gson.TreeTypeAdapter.delegate()" target="com.google.gson.TreeTypeAdapter#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8671" source="com.google.gson.TreeTypeAdapter.delegate()" target="com.google.gson.TreeTypeAdapter#skipPast">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8672" source="com.google.gson.TreeTypeAdapter.delegate()" target="com.google.gson.TreeTypeAdapter#typeToken">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8673" source="com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8674" source="com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8675" source="com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)" target="com.google.gson.reflect.TypeToken.getRawType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8676" source="com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8677" source="com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(java.lang.Class,java.lang.Object)" target="com.google.gson.TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8678" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TreeTypeAdapter.delegate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8679" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8680" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8681" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.JsonSerializer.serialize(T,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8682" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.reflect.TypeToken.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8683" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.internal.Streams.write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8684" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TreeTypeAdapter#serializer">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8685" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TreeTypeAdapter#typeToken">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8686" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.Gson#serializationContext">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8687" source="com.google.gson.TreeTypeAdapter.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TreeTypeAdapter#gson">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8688" source="com.google.gson.TypeAdapter.fromJson(java.io.Reader)" target="com.google.gson.stream.JsonReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8689" source="com.google.gson.TypeAdapter.fromJson(java.io.Reader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8690" source="com.google.gson.TypeAdapter.fromJson(java.lang.String)" target="com.google.gson.TypeAdapter.fromJson(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8691" source="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)" target="com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8692" source="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8693" source="com.google.gson.TypeAdapter.fromJsonTree(com.google.gson.JsonElement)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8694" source="com.google.gson.TypeAdapter.toJsonTree(T)" target="com.google.gson.internal.bind.JsonTreeWriter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8695" source="com.google.gson.TypeAdapter.toJsonTree(T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8696" source="com.google.gson.TypeAdapter.toJsonTree(T)" target="com.google.gson.internal.bind.JsonTreeWriter.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8697" source="com.google.gson.TypeAdapter.toJsonTree(T)" target="com.google.gson.JsonIOException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8698" source="com.google.gson.TypeAdapter$1()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8699" source="com.google.gson.TypeAdapter$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8700" source="com.google.gson.TypeAdapter$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8701" source="com.google.gson.TypeAdapter$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8702" source="com.google.gson.TypeAdapter$1.read(com.google.gson.stream.JsonReader)" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8703" source="com.google.gson.TypeAdapter$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8704" source="com.google.gson.TypeAdapter$1.write(com.google.gson.stream.JsonWriter,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8705" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.TypeAdapter$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8706" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.TypeAdapter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8707" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.stream.JsonReader.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8708" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.stream.JsonReader.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8709" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8710" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.stream.JsonWriter.nullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8711" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8712" source="com.google.gson.TypeAdapter.nullSafe()" target="com.google.gson.stream.JsonToken#NULL">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8713" source="com.google.gson.TypeAdapter.toJson(T)" target="com.google.gson.TypeAdapter.toJson(java.io.Writer,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8714" source="com.google.gson.TypeAdapter.toJson(java.io.Writer,T)" target="com.google.gson.stream.JsonWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8715" source="com.google.gson.TypeAdapter.toJson(java.io.Writer,T)" target="com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8716" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.internal.Excluder.withVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8717" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8718" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8719" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.internal.Excluder#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8720" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.VersionExclusionStrategyTest#VERSION">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8721" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion()" target="com.google.gson.VersionExclusionStrategyTest$MockObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8722" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.internal.Excluder.withVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8723" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8724" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8725" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.internal.Excluder#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8726" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.VersionExclusionStrategyTest#VERSION">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8727" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion()" target="com.google.gson.VersionExclusionStrategyTest$MockObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8728" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.internal.Excluder.withVersion(double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8729" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.internal.Excluder.excludeClass(java.lang.Class,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8730" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.internal.Excluder.excludeField(java.lang.reflect.Field,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8731" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.internal.Excluder#DEFAULT">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8732" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.VersionExclusionStrategyTest#VERSION">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8733" source="com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion()" target="com.google.gson.VersionExclusionStrategyTest$MockObject#class">
      <data key="type">READ_OPERATION</data>
    </edge>
    <edge id="e8734" source="com.google.gson.FieldNamingPolicy$1()" target="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8735" source="com.google.gson.FieldNamingPolicy#IDENTITY" target="com.google.gson.FieldNamingPolicy$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8736" source="com.google.gson.FieldNamingPolicy$2()" target="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8737" source="com.google.gson.FieldNamingPolicy$2.translateName(java.lang.reflect.Field)" target="com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8738" source="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE" target="com.google.gson.FieldNamingPolicy$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8739" source="com.google.gson.FieldNamingPolicy$3()" target="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8740" source="com.google.gson.FieldNamingPolicy$3.translateName(java.lang.reflect.Field)" target="com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8741" source="com.google.gson.FieldNamingPolicy$3.translateName(java.lang.reflect.Field)" target="com.google.gson.FieldNamingPolicy.separateCamelCase(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8742" source="com.google.gson.FieldNamingPolicy#UPPER_CAMEL_CASE_WITH_SPACES" target="com.google.gson.FieldNamingPolicy$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8743" source="com.google.gson.FieldNamingPolicy$4()" target="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8744" source="com.google.gson.FieldNamingPolicy$4.translateName(java.lang.reflect.Field)" target="com.google.gson.FieldNamingPolicy.separateCamelCase(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8745" source="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_UNDERSCORES" target="com.google.gson.FieldNamingPolicy$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8746" source="com.google.gson.FieldNamingPolicy$5()" target="com.google.gson.FieldNamingPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8747" source="com.google.gson.FieldNamingPolicy$5.translateName(java.lang.reflect.Field)" target="com.google.gson.FieldNamingPolicy.separateCamelCase(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8748" source="com.google.gson.FieldNamingPolicy#LOWER_CASE_WITH_DASHES" target="com.google.gson.FieldNamingPolicy$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8749" source="com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(java.lang.String)" target="com.google.gson.FieldNamingPolicy.modifyString(char,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8750" source="com.google.gson.LongSerializationPolicy$1()" target="com.google.gson.LongSerializationPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8751" source="com.google.gson.LongSerializationPolicy$1.serialize(java.lang.Long)" target="com.google.gson.JsonPrimitive(java.lang.Number)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8752" source="com.google.gson.LongSerializationPolicy#DEFAULT" target="com.google.gson.LongSerializationPolicy$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8753" source="com.google.gson.LongSerializationPolicy$2()" target="com.google.gson.LongSerializationPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8754" source="com.google.gson.LongSerializationPolicy$2.serialize(java.lang.Long)" target="com.google.gson.JsonPrimitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8755" source="com.google.gson.LongSerializationPolicy#STRING" target="com.google.gson.LongSerializationPolicy$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
  </graph>
</graphml>
