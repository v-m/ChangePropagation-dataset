<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="AOR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="795283">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) / (listenerType.getName()))" />
    <mutant id="mutant_565" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) - (listenerType.getName()))" />
    <mutant id="mutant_5680" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="&quot;nibble value not between 0 and 15: &quot;" />
    <mutant id="mutant_567" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(listenerType.getName())" />
    <mutant id="mutant_5681" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; * nibble)" />
    <mutant id="mutant_568" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) % (listenerType.getName()))" />
    <mutant id="mutant_5682" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; / nibble)" />
    <mutant id="mutant_3020" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) * source)" />
    <mutant id="mutant_4351" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4350" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3017" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="source" />
    <mutant id="mutant_4348" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_3016" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) % &quot;Unparseable date: \&quot;&quot;)" />
    <mutant id="mutant_4347" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_3015" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) / &quot;Unparseable date: \&quot;&quot;)" />
    <mutant id="mutant_4346" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_3014" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" />
    <mutant id="mutant_4345" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_3013" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) * &quot;Unparseable date: \&quot;&quot;)" />
    <mutant id="mutant_4344" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_3012" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) - &quot;Unparseable date: \&quot;&quot;)" />
    <mutant id="mutant_4343" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_3011" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="&quot;Unparseable date: \&quot;&quot;" />
    <mutant id="mutant_4342" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_3010" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="((&quot;(The &quot; + (locale)) % &quot; locale does not support dates before 1868 AD)\n&quot;)" />
    <mutant id="mutant_4341" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_561" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) - &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_5672" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_562" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) % &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_5673" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_563" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="&quot; method which takes a parameter of type &quot;" />
    <mutant id="mutant_5674" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_564" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) * (listenerType.getName()))" />
    <mutant id="mutant_5675" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_5676" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; / nibble)" />
    <mutant id="mutant_5677" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; % nibble)" />
    <mutant id="mutant_3019" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" />
    <mutant id="mutant_5678" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; - nibble)" />
    <mutant id="mutant_560" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) * &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_3018" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) / source)" />
    <mutant id="mutant_4349" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_5679" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="nibble" />
    <mutant id="mutant_576" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="ex" />
    <mutant id="mutant_577" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="(&quot;Not a checked exception: &quot; - ex)" />
    <mutant id="mutant_578" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="(&quot;Not a checked exception: &quot; * ex)" />
    <mutant id="mutant_5670" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_579" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="(&quot;Not a checked exception: &quot; / ex)" />
    <mutant id="mutant_5671" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_4340" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_3006" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="((&quot;(The &quot; + (locale)) / &quot; locale does not support dates before 1868 AD)\n&quot;)" />
    <mutant id="mutant_4337" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_5669" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_3005" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="&quot; locale does not support dates before 1868 AD)\n&quot;" />
    <mutant id="mutant_4336" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_3004" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="(&quot;(The &quot; - (locale))" />
    <mutant id="mutant_4335" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_3003" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="(&quot;(The &quot; * (locale))" />
    <mutant id="mutant_4334" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_3002" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="&quot;(The &quot;" />
    <mutant id="mutant_4333" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_3001" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="(locale)" />
    <mutant id="mutant_4332" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_3000" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="(&quot;(The &quot; % (locale))" />
    <mutant id="mutant_4331" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4330" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_572" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="&quot;.&quot;" />
    <mutant id="mutant_5661" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6992" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="((d[(i - 1)]) % 1)" />
    <mutant id="mutant_573" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) - &quot;.&quot;)" />
    <mutant id="mutant_5662" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6993" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="((d[(i - 1)]) / 1)" />
    <mutant id="mutant_574" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) / &quot;.&quot;)" />
    <mutant id="mutant_5663" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6994" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="((d[(i - 1)]) - 1)" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) * &quot;.&quot;)" />
    <mutant id="mutant_5664" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6995" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="d[(i - 1)]" />
    <mutant id="mutant_5665" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6996" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="((p[i]) / 1)" />
    <mutant id="mutant_3009" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="((&quot;(The &quot; + (locale)) - &quot; locale does not support dates before 1868 AD)\n&quot;)" />
    <mutant id="mutant_5666" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6997" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="1" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) % &quot;.&quot;)" />
    <mutant id="mutant_3008" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="((&quot;(The &quot; + (locale)) * &quot; locale does not support dates before 1868 AD)\n&quot;)" />
    <mutant id="mutant_4339" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_5667" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6998" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="((p[i]) - 1)" />
    <mutant id="mutant_571" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" />
    <mutant id="mutant_3007" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="(&quot;(The &quot; + (locale))" />
    <mutant id="mutant_4338" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_5668" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6999" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="p[i]" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="(&quot;No child initializer with name &quot; / name)" />
    <mutant id="mutant_588" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(totalAcquireCount)) + ((double)(periodCount))" />
    <mutant id="mutant_589" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(totalAcquireCount)) - ((double)(periodCount))" />
    <mutant id="mutant_6990" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="((d[(i - 1)]) * 1)" />
    <mutant id="mutant_5660" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6991" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="1" />
    <mutant id="mutant_4326" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_5658" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6989" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_4325" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_5659" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_4324" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_4323" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_4322" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_4321" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_4320" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_583" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="(&quot;No child initializer with name &quot; * name)" />
    <mutant id="mutant_5650" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6981" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="i" />
    <mutant id="mutant_584" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="name" />
    <mutant id="mutant_5651" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6982" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_585" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="(&quot;No child initializer with name &quot; % name)" />
    <mutant id="mutant_5652" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6983" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_586" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="&quot;No child initializer with name &quot;" />
    <mutant id="mutant_5653" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6984" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_5654" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6985" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="(&quot;Not a checked exception: &quot; % ex)" />
    <mutant id="mutant_4329" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_5655" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6986" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="1" />
    <mutant id="mutant_581" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="&quot;Not a checked exception: &quot;" />
    <mutant id="mutant_4328" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_5656" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6987" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="i" />
    <mutant id="mutant_582" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="(&quot;No child initializer with name &quot; - name)" />
    <mutant id="mutant_4327" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_5657" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6988" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_598" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="(getLimit()) * (getAcquireCount())" />
    <mutant id="mutant_599" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="(getLimit()) / (getAcquireCount())" />
    <mutant id="mutant_6980" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="1" />
    <mutant id="mutant_4315" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_5647" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6978" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_4314" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_5648" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6979" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_4313" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5649" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_4312" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4311" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_4310" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_594" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="getLimit()" />
    <mutant id="mutant_6970" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n * 1" />
    <mutant id="mutant_595" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="(getLimit()) % (getAcquireCount())" />
    <mutant id="mutant_5640" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6971" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n % 1" />
    <mutant id="mutant_596" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="(getLimit()) + (getAcquireCount())" />
    <mutant id="mutant_5641" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6972" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="1" />
    <mutant id="mutant_597" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="getAcquireCount()" />
    <mutant id="mutant_5642" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6973" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="(j % 1)" />
    <mutant id="mutant_590" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(periodCount))" />
    <mutant id="mutant_4319" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5643" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6974" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="j" />
    <mutant id="mutant_591" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(totalAcquireCount)) % ((double)(periodCount))" />
    <mutant id="mutant_4318" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5644" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6975" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="(j * 1)" />
    <mutant id="mutant_592" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(totalAcquireCount)) * ((double)(periodCount))" />
    <mutant id="mutant_4317" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5645" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6976" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="(j + 1)" />
    <mutant id="mutant_593" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="((double)(totalAcquireCount))" />
    <mutant id="mutant_4316" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5646" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6977" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="(j / 1)" />
    <mutant id="mutant_3064" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="((formatField.length()) * 1)" />
    <mutant id="mutant_4395" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3063" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="((formatField.length()) % 1)" />
    <mutant id="mutant_4394" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_3062" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="((formatField.length()) + 1)" />
    <mutant id="mutant_4393" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_3061" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="((formatField.length()) / 1)" />
    <mutant id="mutant_4392" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3060" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="1" />
    <mutant id="mutant_4391" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_4390" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_3059" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="formatField.length()" />
    <mutant id="mutant_3058" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="(offset / (matcher.end()))" />
    <mutant id="mutant_4389" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_3057" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="(offset % (matcher.end()))" />
    <mutant id="mutant_4388" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_3056" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="offset" />
    <mutant id="mutant_4387" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_3055" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="(offset * (matcher.end()))" />
    <mutant id="mutant_4386" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_3054" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="matcher.end()" />
    <mutant id="mutant_4385" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_3053" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="(offset - (matcher.end()))" />
    <mutant id="mutant_4384" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_3052" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) - (parsePattern.pattern()))" />
    <mutant id="mutant_4383" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_3051" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="parsePattern.pattern()" />
    <mutant id="mutant_4382" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_3050" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) * (parsePattern.pattern()))" />
    <mutant id="mutant_4381" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4380" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_3049" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) / (parsePattern.pattern()))" />
    <mutant id="mutant_3048" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4379" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_3047" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) % (parsePattern.pattern()))" />
    <mutant id="mutant_4378" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_3046" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="&quot;\&quot; does not match &quot;" />
    <mutant id="mutant_4377" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_3045" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="((&quot;Unparseable date: \&quot;&quot; + source) - &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4376" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_3044" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="((&quot;Unparseable date: \&quot;&quot; + source) / &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4375" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_3043" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="((&quot;Unparseable date: \&quot;&quot; + source) % &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4374" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_3042" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="((&quot;Unparseable date: \&quot;&quot; + source) * &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4373" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_3041" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="(&quot;Unparseable date: \&quot;&quot; + source)" />
    <mutant id="mutant_4372" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_3040" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="(&quot;Unparseable date: \&quot;&quot; / source)" />
    <mutant id="mutant_4371" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4370" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_3039" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="(&quot;Unparseable date: \&quot;&quot; - source)" />
    <mutant id="mutant_3038" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="source" />
    <mutant id="mutant_4369" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_3037" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="&quot;Unparseable date: \&quot;&quot;" />
    <mutant id="mutant_4368" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_3036" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="(&quot;Unparseable date: \&quot;&quot; % source)" />
    <mutant id="mutant_4367" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_3035" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="(&quot;Unparseable date: \&quot;&quot; * source)" />
    <mutant id="mutant_4366" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_3034" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) * (parsePattern.pattern()))" />
    <mutant id="mutant_4365" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_3033" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) % (parsePattern.pattern()))" />
    <mutant id="mutant_4364" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_3032" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="parsePattern.pattern()" />
    <mutant id="mutant_4363" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_5694" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="dstPos" />
    <mutant id="mutant_5695" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) / dstPos)" />
    <mutant id="mutant_5696" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="(nBools - 1)" />
    <mutant id="mutant_5697" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) % dstPos)" />
    <mutant id="mutant_5698" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) * dstPos)" />
    <mutant id="mutant_5699" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) - dstPos)" />
    <mutant id="mutant_5690" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_5691" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_5692" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_5693" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_3031" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) - (parsePattern.pattern()))" />
    <mutant id="mutant_4362" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_3030" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) / (parsePattern.pattern()))" />
    <mutant id="mutant_4361" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4360" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_3028" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) - &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4359" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3027" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="&quot;\&quot; does not match &quot;" />
    <mutant id="mutant_4358" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_3026" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) % &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4357" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_3025" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) / &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4356" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3024" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" />
    <mutant id="mutant_4355" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_3023" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) * &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_4354" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_3022" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) - source)" />
    <mutant id="mutant_4353" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3021" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) % source)" />
    <mutant id="mutant_4352" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5683" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; % nibble)" />
    <mutant id="mutant_5684" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; - nibble)" />
    <mutant id="mutant_5685" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="nibble" />
    <mutant id="mutant_5686" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="&quot;nibble value not between 0 and 15: &quot;" />
    <mutant id="mutant_5687" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="(&quot;nibble value not between 0 and 15: &quot; * nibble)" />
    <mutant id="mutant_5688" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_5689" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_3029" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" />
    <mutant id="mutant_3099" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="zoneOffset - (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3098" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="zoneOffset / (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3097" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="zoneOffset" />
    <mutant id="mutant_3096" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="calendar.get(Calendar.DST_OFFSET)" />
    <mutant id="mutant_3095" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="zoneOffset * (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3094" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) % (patternMatcher.regionStart()))" />
    <mutant id="mutant_3093" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) * (patternMatcher.regionStart()))" />
    <mutant id="mutant_3092" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="patternMatcher.regionStart()" />
    <mutant id="mutant_3091" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) - (patternMatcher.regionStart()))" />
    <mutant id="mutant_3090" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) / (patternMatcher.regionStart()))" />
    <mutant id="mutant_3089" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" />
    <mutant id="mutant_3088" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) % &quot;\&quot; ; gave up at index &quot;)" />
    <mutant id="mutant_3087" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) / &quot;\&quot; ; gave up at index &quot;)" />
    <mutant id="mutant_3086" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) - &quot;\&quot; ; gave up at index &quot;)" />
    <mutant id="mutant_3085" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="&quot;\&quot; ; gave up at index &quot;" />
    <mutant id="mutant_3084" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="(&quot;Failed to parse \&quot;&quot; + (pattern))" />
    <mutant id="mutant_3083" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) * &quot;\&quot; ; gave up at index &quot;)" />
    <mutant id="mutant_3082" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="(pattern)" />
    <mutant id="mutant_3081" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="&quot;Failed to parse \&quot;&quot;" />
    <mutant id="mutant_3080" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="(&quot;Failed to parse \&quot;&quot; * (pattern))" />
    <mutant id="mutant_3079" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="(&quot;Failed to parse \&quot;&quot; % (pattern))" />
    <mutant id="mutant_3078" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="(&quot;Failed to parse \&quot;&quot; / (pattern))" />
    <mutant id="mutant_3077" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="(&quot;Failed to parse \&quot;&quot; - (pattern))" />
    <mutant id="mutant_3076" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) / &quot;\'&quot;)" />
    <mutant id="mutant_3075" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) - &quot;\'&quot;)" />
    <mutant id="mutant_3074" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) % &quot;\'&quot;)" />
    <mutant id="mutant_3073" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="&quot;\'&quot;" />
    <mutant id="mutant_3072" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" />
    <mutant id="mutant_3071" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) * &quot;\'&quot;)" />
    <mutant id="mutant_3070" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="(&quot;Illegal pattern character \'&quot; - (pattern.charAt(patternMatcher.regionStart())))" />
    <mutant id="mutant_3069" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="(&quot;Illegal pattern character \'&quot; / (pattern.charAt(patternMatcher.regionStart())))" />
    <mutant id="mutant_3068" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="&quot;Illegal pattern character \'&quot;" />
    <mutant id="mutant_4399" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_3067" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="(&quot;Illegal pattern character \'&quot; % (pattern.charAt(patternMatcher.regionStart())))" />
    <mutant id="mutant_4398" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3066" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="(&quot;Illegal pattern character \'&quot; * (pattern.charAt(patternMatcher.regionStart())))" />
    <mutant id="mutant_4397" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_3065" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="(pattern.charAt(patternMatcher.regionStart()))" />
    <mutant id="mutant_4396" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5713" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_5714" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_5715" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_5716" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_5717" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_5718" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_5719" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_5710" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_5711" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_5712" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_5702" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="i / dstPos" />
    <mutant id="mutant_5703" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="i - dstPos" />
    <mutant id="mutant_5704" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="i % dstPos" />
    <mutant id="mutant_5705" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="i * dstPos" />
    <mutant id="mutant_5706" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_5707" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_5708" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_5709" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_5700" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="i" />
    <mutant id="mutant_5701" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="dstPos" />
    <mutant id="mutant_503" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="&quot;add&quot;" />
    <mutant id="mutant_504" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; * (eventSource.getClass().getName()))" />
    <mutant id="mutant_505" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(eventSource.getClass().getName())" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="&quot;Class &quot;" />
    <mutant id="mutant_500" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="(&quot;add&quot; - (listenerType.getSimpleName()))" />
    <mutant id="mutant_501" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="listenerType.getSimpleName()" />
    <mutant id="mutant_502" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="(&quot;add&quot; * (listenerType.getSimpleName()))" />
    <mutant id="mutant_507" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; - (eventSource.getClass().getName()))" />
    <mutant id="mutant_508" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; / (eventSource.getClass().getName()))" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; % (eventSource.getClass().getName()))" />
    <mutant id="mutant_514" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) % &quot; does not have a public add&quot;)" />
    <mutant id="mutant_515" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="(&quot;Class &quot; + (eventSource.getClass().getName()))" />
    <mutant id="mutant_516" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) * (listenerType.getSimpleName()))" />
    <mutant id="mutant_517" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) - (listenerType.getSimpleName()))" />
    <mutant id="mutant_510" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) - &quot; does not have a public add&quot;)" />
    <mutant id="mutant_511" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="&quot; does not have a public add&quot;" />
    <mutant id="mutant_512" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) / &quot; does not have a public add&quot;)" />
    <mutant id="mutant_513" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) * &quot; does not have a public add&quot;)" />
    <mutant id="mutant_518" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" />
    <mutant id="mutant_519" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="(listenerType.getSimpleName())" />
    <mutant id="mutant_525" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) * &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_526" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) / &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_527" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="&quot; method which takes a parameter of type &quot;" />
    <mutant id="mutant_528" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) / (listenerType.getName()))" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) % (listenerType.getSimpleName()))" />
    <mutant id="mutant_522" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" />
    <mutant id="mutant_523" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) % &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_524" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) - &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) * (listenerType.getName()))" />
    <mutant id="mutant_4425" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_5757" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) / &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_4424" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_5758" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_4423" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_5759" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_4422" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_4421" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_4420" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_5750" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; % hexDigit)" />
    <mutant id="mutant_5751" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; * hexDigit)" />
    <mutant id="mutant_520" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) / (listenerType.getSimpleName()))" />
    <mutant id="mutant_5752" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="hexDigit" />
    <mutant id="mutant_4429" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_5753" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; / hexDigit)" />
    <mutant id="mutant_4428" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_5754" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(&quot;Cannot interpret \'&quot; + hexDigit)" />
    <mutant id="mutant_4427" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_5755" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) % &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_4426" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_5756" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="&quot;\' as a hexadecimal digit&quot;" />
    <mutant id="mutant_536" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="&quot;.&quot;" />
    <mutant id="mutant_537" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) - &quot;.&quot;)" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) * &quot;.&quot;)" />
    <mutant id="mutant_539" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" />
    <mutant id="mutant_532" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(listenerType.getName())" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) % (listenerType.getName()))" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) / &quot;.&quot;)" />
    <mutant id="mutant_535" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) % &quot;.&quot;)" />
    <mutant id="mutant_4414" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_5746" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_4413" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_5747" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_4412" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_5748" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; - hexDigit)" />
    <mutant id="mutant_4411" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_5749" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="&quot;Cannot interpret \'&quot;" />
    <mutant id="mutant_4410" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_530" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) - (listenerType.getName()))" />
    <mutant id="mutant_5740" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="(i * 8) / dstPos" />
    <mutant id="mutant_531" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_4419" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_5741" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="(i * 8) % dstPos" />
    <mutant id="mutant_4418" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_5742" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_4417" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_5743" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_4416" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_5744" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_4415" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_5745" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) / &quot; does not have an accessible add&quot;)" />
    <mutant id="mutant_548" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="&quot; does not have an accessible add&quot;" />
    <mutant id="mutant_549" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) % &quot; does not have an accessible add&quot;)" />
    <mutant id="mutant_543" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; - (eventSource.getClass().getName()))" />
    <mutant id="mutant_544" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; / (eventSource.getClass().getName()))" />
    <mutant id="mutant_545" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; % (eventSource.getClass().getName()))" />
    <mutant id="mutant_546" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) - &quot; does not have an accessible add&quot;)" />
    <mutant id="mutant_4403" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5735" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_4402" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5736" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="(i * 8) * dstPos" />
    <mutant id="mutant_4401" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5737" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="i * 8" />
    <mutant id="mutant_4400" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5738" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="dstPos" />
    <mutant id="mutant_5739" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="(i * 8) - dstPos" />
    <mutant id="mutant_540" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(&quot;Class &quot; * (eventSource.getClass().getName()))" />
    <mutant id="mutant_541" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="(eventSource.getClass().getName())" />
    <mutant id="mutant_4409" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_542" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="&quot;Class &quot;" />
    <mutant id="mutant_4408" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_5730" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_4407" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_5731" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_4406" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_5732" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_4405" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_5733" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_4404" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_5734" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_558" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) / &quot; method which takes a parameter of type &quot;)" />
    <mutant id="mutant_559" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" />
    <mutant id="mutant_554" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) % (listenerType.getSimpleName()))" />
    <mutant id="mutant_555" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="(listenerType.getSimpleName())" />
    <mutant id="mutant_556" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" />
    <mutant id="mutant_557" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) - (listenerType.getSimpleName()))" />
    <mutant id="mutant_5724" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) - dstPos)" />
    <mutant id="mutant_5725" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_5726" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="dstPos" />
    <mutant id="mutant_5727" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) / dstPos)" />
    <mutant id="mutant_5728" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) % dstPos)" />
    <mutant id="mutant_5729" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) * dstPos)" />
    <mutant id="mutant_550" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="(&quot;Class &quot; + (eventSource.getClass().getName()))" />
    <mutant id="mutant_551" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="((&quot;Class &quot; + (eventSource.getClass().getName())) * &quot; does not have an accessible add&quot;)" />
    <mutant id="mutant_552" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) * (listenerType.getSimpleName()))" />
    <mutant id="mutant_553" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) / (listenerType.getSimpleName()))" />
    <mutant id="mutant_5720" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_5721" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_5722" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_5723" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_448" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="expPos" />
    <mutant id="mutant_449" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos - 1)" />
    <mutant id="mutant_444" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="1" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos / 1)" />
    <mutant id="mutant_6890" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="(jaro % ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" />
    <mutant id="mutant_446" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos * 1)" />
    <mutant id="mutant_5560" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6891" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) % 100.0)" />
    <mutant id="mutant_447" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos % 1)" />
    <mutant id="mutant_5561" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6892" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" />
    <mutant id="mutant_4230" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4227" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5559" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_4226" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4225" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4224" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4223" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_4222" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_4221" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_4220" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_5551" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6882" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="(1.0 - jaro)" />
    <mutant id="mutant_441" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_5552" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6883" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="((DEFAULT_SCALING_FACTOR * cl) - (1.0 - jaro))" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_5553" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6884" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="((DEFAULT_SCALING_FACTOR * cl) / (1.0 - jaro))" />
    <mutant id="mutant_443" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_5554" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6885" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="jaro" />
    <mutant id="mutant_5555" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6886" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="(jaro * ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" />
    <mutant id="mutant_5556" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6887" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="(jaro / ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" />
    <mutant id="mutant_4229" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5557" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6888" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="(jaro - ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" />
    <mutant id="mutant_4228" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5558" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6889" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" />
    <mutant id="mutant_459" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_455" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="str.length()" />
    <mutant id="mutant_457" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_6880" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="(DEFAULT_SCALING_FACTOR * cl)" />
    <mutant id="mutant_458" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_5550" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6881" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="((DEFAULT_SCALING_FACTOR * cl) + (1.0 - jaro))" />
    <mutant id="mutant_4216" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_5548" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6879" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="((DEFAULT_SCALING_FACTOR * cl) % (1.0 - jaro))" />
    <mutant id="mutant_4215" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_5549" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_4214" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_4213" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4212" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_4211" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_4210" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_451" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_5540" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6871" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="DEFAULT_SCALING_FACTOR" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_5541" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6872" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="(DEFAULT_SCALING_FACTOR - cl)" />
    <mutant id="mutant_453" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_5542" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6873" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="(1.0 + jaro)" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_5543" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6874" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="1.0" />
    <mutant id="mutant_5544" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6875" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="jaro" />
    <mutant id="mutant_4219" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_5545" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6876" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="(1.0 * jaro)" />
    <mutant id="mutant_4218" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_5546" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6877" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="(1.0 % jaro)" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="str.length()" />
    <mutant id="mutant_4217" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_5547" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6878" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="(1.0 / jaro)" />
    <mutant id="mutant_466" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str * &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_467" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str % &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_468" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="&quot; is not a valid number.&quot;" />
    <mutant id="mutant_469" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str - &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_6870" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="cl" />
    <mutant id="mutant_4205" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_5537" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6868" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="(DEFAULT_SCALING_FACTOR / cl)" />
    <mutant id="mutant_4204" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_5538" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6869" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="(DEFAULT_SCALING_FACTOR % cl)" />
    <mutant id="mutant_4203" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_5539" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_4202" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4201" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4200" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_462" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="&quot; is not a valid number.&quot;" />
    <mutant id="mutant_6860" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_463" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str - &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5530" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6861" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_464" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str / &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5531" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6862" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="str.length()" />
    <mutant id="mutant_465" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="str" />
    <mutant id="mutant_5532" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6863" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="(str.length()) / (suffix.length())" />
    <mutant id="mutant_4209" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_5533" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6864" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="(str.length()) + (suffix.length())" />
    <mutant id="mutant_4208" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_5534" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6865" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="(str.length()) % (suffix.length())" />
    <mutant id="mutant_460" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_4207" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_5535" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6866" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="(str.length()) * (suffix.length())" />
    <mutant id="mutant_461" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_4206" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_5536" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6867" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="(DEFAULT_SCALING_FACTOR + cl)" />
    <mutant id="mutant_477" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_478" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_479" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_5526" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6857" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="1" />
    <mutant id="mutant_5527" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6858" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="i" />
    <mutant id="mutant_5528" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6859" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_5529" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_473" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str % &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_474" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(str.length())" />
    <mutant id="mutant_6850" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="1" />
    <mutant id="mutant_475" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_5520" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6851" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="(j % 1)" />
    <mutant id="mutant_476" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_5521" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6852" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="j" />
    <mutant id="mutant_5522" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6853" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="(j * 1)" />
    <mutant id="mutant_470" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str / &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5523" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6854" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="(j - 1)" />
    <mutant id="mutant_471" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="str" />
    <mutant id="mutant_5524" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6855" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="(j / 1)" />
    <mutant id="mutant_472" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str * &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5525" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6856" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_488" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str / &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_489" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="str" />
    <mutant id="mutant_4274" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4273" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4272" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4271" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4270" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4269" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_4268" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4267" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4266" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4265" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_4264" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_484" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="expPos" />
    <mutant id="mutant_5595" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_485" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos - 1)" />
    <mutant id="mutant_5596" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_486" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="&quot; is not a valid number.&quot;" />
    <mutant id="mutant_5597" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_487" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str - &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5598" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_480" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="1" />
    <mutant id="mutant_5599" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_481" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos / 1)" />
    <mutant id="mutant_482" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos * 1)" />
    <mutant id="mutant_483" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="(expPos % 1)" />
    <mutant id="mutant_5590" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="(&quot;add&quot; / (listenerType.getSimpleName()))" />
    <mutant id="mutant_5591" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_5592" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_5593" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_5594" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_4263" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_4262" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_4261" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_4260" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_4259" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_4258" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_490" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str * &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_4257" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_4256" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_4255" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4254" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_4253" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_495" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_5584" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_5585" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_497" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_5586" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_498" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="(&quot;add&quot; % (listenerType.getSimpleName()))" />
    <mutant id="mutant_5587" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_491" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str % &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5588" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_492" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_5589" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_493" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_494" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_5580" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_5581" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_5582" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_5583" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_4252" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_4251" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_4250" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_4249" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_4248" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_4247" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4246" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4245" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4244" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4243" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4242" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_5573" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_5574" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_5575" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_5576" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_5577" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_5578" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_5579" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_5570" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_5571" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_5572" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_4241" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_4240" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_4238" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_4237" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_4236" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_4235" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4234" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4233" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_4232" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4231" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_5562" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6893" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="100.0" />
    <mutant id="mutant_5563" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6894" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) - 100.0)" />
    <mutant id="mutant_5564" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6895" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) / 100.0)" />
    <mutant id="mutant_5565" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6896" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) + 100.0)" />
    <mutant id="mutant_5566" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6897" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) + 100.0" />
    <mutant id="mutant_5567" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6898" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) - 100.0" />
    <mutant id="mutant_5568" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6899" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))" />
    <mutant id="mutant_4239" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_5569" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_4299" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_4298" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_4297" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4296" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_4295" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_4294" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_4293" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_4292" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_4291" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_4290" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_4289" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4288" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4287" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4286" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4285" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4284" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_4283" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_4282" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_4281" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_4280" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_4279" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_4278" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_4277" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4276" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4275" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_6923" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="((m2.length()) - ((double)(longer.length())))" />
    <mutant id="mutant_6924" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="((m2.length()) % ((double)(longer.length())))" />
    <mutant id="mutant_6925" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="(((m1.length()) / ((double)(shorter.length()))) * ((m2.length()) / ((double)(longer.length()))))" />
    <mutant id="mutant_6926" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="((m1.length()) / ((double)(shorter.length())))" />
    <mutant id="mutant_6927" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="(((m1.length()) / ((double)(shorter.length()))) - ((m2.length()) / ((double)(longer.length()))))" />
    <mutant id="mutant_6928" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="(((m1.length()) / ((double)(shorter.length()))) / ((m2.length()) / ((double)(longer.length()))))" />
    <mutant id="mutant_6929" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="(((m1.length()) / ((double)(shorter.length()))) % ((m2.length()) / ((double)(longer.length()))))" />
    <mutant id="mutant_6920" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="(m2.length())" />
    <mutant id="mutant_6921" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="((m2.length()) * ((double)(longer.length())))" />
    <mutant id="mutant_6922" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="((m2.length()) + ((double)(longer.length())))" />
    <mutant id="mutant_6912" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="(shorter.length()) / 2" />
    <mutant id="mutant_6913" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="((shorter.length()) / 2) / 1" />
    <mutant id="mutant_6914" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="((shorter.length()) / 2) - 1" />
    <mutant id="mutant_6915" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="(m1.length())" />
    <mutant id="mutant_6916" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="((m1.length()) * ((double)(shorter.length())))" />
    <mutant id="mutant_6917" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="((m1.length()) + ((double)(shorter.length())))" />
    <mutant id="mutant_6918" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="((m1.length()) - ((double)(shorter.length())))" />
    <mutant id="mutant_6919" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="((m1.length()) % ((double)(shorter.length())))" />
    <mutant id="mutant_6910" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="1" />
    <mutant id="mutant_6911" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="((shorter.length()) / 2) * 1" />
    <mutant id="mutant_6909" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="((shorter.length()) / 2) % 1" />
    <mutant id="mutant_6901" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) * 100.0" />
    <mutant id="mutant_6902" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="100.0" />
    <mutant id="mutant_6903" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="(shorter.length())" />
    <mutant id="mutant_6904" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="2" />
    <mutant id="mutant_6905" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="((shorter.length()) + 2)" />
    <mutant id="mutant_6906" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="((shorter.length()) % 2)" />
    <mutant id="mutant_6907" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="((shorter.length()) * 2)" />
    <mutant id="mutant_6908" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="((shorter.length()) - 2)" />
    <mutant id="mutant_6900" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) % 100.0" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="((str.indexOf('e')) % (str.indexOf('E')))" />
    <mutant id="mutant_405" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="((str.indexOf('e')) * (str.indexOf('E')))" />
    <mutant id="mutant_406" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="(str.indexOf('e'))" />
    <mutant id="mutant_407" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="((str.indexOf('e')) - (str.indexOf('E')))" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_401" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_402" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="(str.indexOf('E'))" />
    <mutant id="mutant_403" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="((str.indexOf('e')) / (str.indexOf('E')))" />
    <mutant id="mutant_408" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="(str.indexOf('e')) + (str.indexOf('E'))" />
    <mutant id="mutant_409" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="((str.indexOf('e')) + (str.indexOf('E'))) * 1" />
    <mutant id="mutant_4304" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_5636" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6967" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="1" />
    <mutant id="mutant_4303" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_5637" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6968" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n / 1" />
    <mutant id="mutant_4302" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_5638" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6969" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n" />
    <mutant id="mutant_4301" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_5639" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_4300" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_6960" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n - 1" />
    <mutant id="mutant_5630" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) * srcPos)" />
    <mutant id="mutant_6961" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="1" />
    <mutant id="mutant_4309" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_5631" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) / srcPos)" />
    <mutant id="mutant_6962" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n / 1" />
    <mutant id="mutant_4308" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_5632" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) % srcPos)" />
    <mutant id="mutant_6963" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n" />
    <mutant id="mutant_4307" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_5633" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="srcPos" />
    <mutant id="mutant_6964" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n * 1" />
    <mutant id="mutant_4306" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_5634" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6965" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n % 1" />
    <mutant id="mutant_4305" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_5635" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6966" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="n - 1" />
    <mutant id="mutant_415" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str - &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_416" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str / &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="str" />
    <mutant id="mutant_418" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str * &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_411" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="((str.indexOf('e')) + (str.indexOf('E'))) % 1" />
    <mutant id="mutant_412" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="((str.indexOf('e')) + (str.indexOf('E'))) / 1" />
    <mutant id="mutant_413" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="((str.indexOf('e')) + (str.indexOf('E'))) - 1" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="&quot; is not a valid number.&quot;" />
    <mutant id="mutant_419" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str % &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5625" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) / &quot;, srcPos=&quot;)" />
    <mutant id="mutant_6956" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="1" />
    <mutant id="mutant_5626" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) * &quot;, srcPos=&quot;)" />
    <mutant id="mutant_6957" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="previousMatchingCharacterIndex" />
    <mutant id="mutant_5627" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="&quot;, srcPos=&quot;" />
    <mutant id="mutant_6958" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="(previousMatchingCharacterIndex * 1)" />
    <mutant id="mutant_5628" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) - srcPos)" />
    <mutant id="mutant_6959" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="(previousMatchingCharacterIndex % 1)" />
    <mutant id="mutant_5629" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" />
    <mutant id="mutant_6950" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) - 3.0" />
    <mutant id="mutant_410" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="1" />
    <mutant id="mutant_5620" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="&quot;src.length-srcPos&lt;4: src.length=&quot;" />
    <mutant id="mutant_6951" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))" />
    <mutant id="mutant_5621" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="(&quot;src.length-srcPos&lt;4: src.length=&quot; - (src.length))" />
    <mutant id="mutant_6952" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) + 3.0" />
    <mutant id="mutant_5622" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" />
    <mutant id="mutant_6953" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) % 3.0" />
    <mutant id="mutant_5623" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) - &quot;, srcPos=&quot;)" />
    <mutant id="mutant_6954" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="(previousMatchingCharacterIndex / 1)" />
    <mutant id="mutant_5624" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) % &quot;, srcPos=&quot;)" />
    <mutant id="mutant_6955" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="(previousMatchingCharacterIndex - 1)" />
    <mutant id="mutant_426" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos % 1)" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="1" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos * 1)" />
    <mutant id="mutant_429" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos - 1)" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos * 1)" />
    <mutant id="mutant_423" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos - 1)" />
    <mutant id="mutant_424" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="decPos" />
    <mutant id="mutant_425" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos / 1)" />
    <mutant id="mutant_5614" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="((src.length) + srcPos)" />
    <mutant id="mutant_6945" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) % (((m1.length()) - transpositions) / ((double)(m1.length()))))" />
    <mutant id="mutant_5615" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="((src.length) / srcPos)" />
    <mutant id="mutant_6946" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" />
    <mutant id="mutant_5616" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="(&quot;src.length-srcPos&lt;4: src.length=&quot; / (src.length))" />
    <mutant id="mutant_6947" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) - (((m1.length()) - transpositions) / ((double)(m1.length()))))" />
    <mutant id="mutant_5617" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="(&quot;src.length-srcPos&lt;4: src.length=&quot; * (src.length))" />
    <mutant id="mutant_6948" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) * 3.0" />
    <mutant id="mutant_5618" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="(src.length)" />
    <mutant id="mutant_6949" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="3.0" />
    <mutant id="mutant_5619" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="(&quot;src.length-srcPos&lt;4: src.length=&quot; % (src.length))" />
    <mutant id="mutant_420" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos % 1)" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="1" />
    <mutant id="mutant_6940" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="(((m1.length()) - transpositions) % ((double)(m1.length())))" />
    <mutant id="mutant_5610" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="((src.length) % srcPos)" />
    <mutant id="mutant_6941" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="(((m1.length()) - transpositions) - ((double)(m1.length())))" />
    <mutant id="mutant_5611" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="((src.length) * srcPos)" />
    <mutant id="mutant_6942" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) * (((m1.length()) - transpositions) / ((double)(m1.length()))))" />
    <mutant id="mutant_5612" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="srcPos" />
    <mutant id="mutant_6943" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) / (((m1.length()) - transpositions) / ((double)(m1.length()))))" />
    <mutant id="mutant_5613" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="(src.length)" />
    <mutant id="mutant_6944" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="(((m1.length()) - transpositions) / ((double)(m1.length())))" />
    <mutant id="mutant_437" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str % &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_438" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(str.length())" />
    <mutant id="mutant_439" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_433" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str - &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_434" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str / &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_435" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="str" />
    <mutant id="mutant_436" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="(str * &quot; is not a valid number.&quot;)" />
    <mutant id="mutant_5603" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6934" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="((m1.length()) % transpositions)" />
    <mutant id="mutant_5604" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="(&quot;src.length&gt;8: src.length=&quot; * (src.length))" />
    <mutant id="mutant_6935" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="transpositions" />
    <mutant id="mutant_5605" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="(&quot;src.length&gt;8: src.length=&quot; - (src.length))" />
    <mutant id="mutant_6936" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="((m1.length()) - transpositions)" />
    <mutant id="mutant_5606" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="(&quot;src.length&gt;8: src.length=&quot; % (src.length))" />
    <mutant id="mutant_6937" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="((double)(m1.length()))" />
    <mutant id="mutant_5607" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="src.length" />
    <mutant id="mutant_6938" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="(((m1.length()) - transpositions) + ((double)(m1.length())))" />
    <mutant id="mutant_5608" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="(&quot;src.length&gt;8: src.length=&quot; / (src.length))" />
    <mutant id="mutant_6939" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="(((m1.length()) - transpositions) * ((double)(m1.length())))" />
    <mutant id="mutant_5609" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="&quot;src.length&gt;8: src.length=&quot;" />
    <mutant id="mutant_430" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="decPos" />
    <mutant id="mutant_431" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="(decPos / 1)" />
    <mutant id="mutant_432" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="&quot; is not a valid number.&quot;" />
    <mutant id="mutant_6930" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="(m1.length())" />
    <mutant id="mutant_5600" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6931" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="((m1.length()) + transpositions)" />
    <mutant id="mutant_5601" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6932" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="((m1.length()) / transpositions)" />
    <mutant id="mutant_5602" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6933" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="((m1.length()) * transpositions)" />
    <mutant id="mutant_6770" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="(37 * result) * (minimum.hashCode())" />
    <mutant id="mutant_5440" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6771" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="(37 * result) - (minimum.hashCode())" />
    <mutant id="mutant_4106" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_5438" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6769" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="(37 * result) % (minimum.hashCode())" />
    <mutant id="mutant_4105" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_5439" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_4104" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4103" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4102" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4101" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4100" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_5430" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6761" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="(37 * result) / (getClass().hashCode())" />
    <mutant id="mutant_5431" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6762" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 / result)" />
    <mutant id="mutant_5432" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6763" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 + result)" />
    <mutant id="mutant_5433" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6764" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="37" />
    <mutant id="mutant_5434" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6765" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 - result)" />
    <mutant id="mutant_4109" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_5435" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6766" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 % result)" />
    <mutant id="mutant_4108" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_5436" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6767" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="result" />
    <mutant id="mutant_4107" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_5437" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6768" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="37 * result" />
    <mutant id="mutant_6760" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="getClass().hashCode()" />
    <mutant id="mutant_5427" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6758" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="(37 * result) * (getClass().hashCode())" />
    <mutant id="mutant_5428" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6759" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="(37 * result) - (getClass().hashCode())" />
    <mutant id="mutant_5429" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6750" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 / result)" />
    <mutant id="mutant_5420" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6751" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 + result)" />
    <mutant id="mutant_5421" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6752" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="37" />
    <mutant id="mutant_5422" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6753" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 - result)" />
    <mutant id="mutant_5423" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6754" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 % result)" />
    <mutant id="mutant_5424" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6755" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="result" />
    <mutant id="mutant_5425" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6756" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="37 * result" />
    <mutant id="mutant_5426" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6757" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="(37 * result) % (getClass().hashCode())" />
    <mutant id="mutant_5416" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6747" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) / element2)" />
    <mutant id="mutant_5417" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6748" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) % element2)" />
    <mutant id="mutant_5418" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6749" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" />
    <mutant id="mutant_5419" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6740" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) - &quot;, element2=&quot;)" />
    <mutant id="mutant_5410" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6741" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="(&quot;Elements in a range must not be null: element1=&quot; + element1)" />
    <mutant id="mutant_5411" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6742" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="&quot;, element2=&quot;" />
    <mutant id="mutant_5412" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6743" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) * &quot;, element2=&quot;)" />
    <mutant id="mutant_5413" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6744" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) * element2)" />
    <mutant id="mutant_5414" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6745" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="element2" />
    <mutant id="mutant_5415" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6746" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) - element2)" />
    <mutant id="mutant_5405" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6736" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="(&quot;Elements in a range must not be null: element1=&quot; / element1)" />
    <mutant id="mutant_5406" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6737" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="&quot;Elements in a range must not be null: element1=&quot;" />
    <mutant id="mutant_5407" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6738" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) % &quot;, element2=&quot;)" />
    <mutant id="mutant_5408" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6739" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) / &quot;, element2=&quot;)" />
    <mutant id="mutant_5409" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6730" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="startInclusive" />
    <mutant id="mutant_5400" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6731" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="startInclusive % (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" />
    <mutant id="mutant_5401" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6732" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="(&quot;Elements in a range must not be null: element1=&quot; * element1)" />
    <mutant id="mutant_5402" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6733" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="(&quot;Elements in a range must not be null: element1=&quot; - element1)" />
    <mutant id="mutant_5403" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6734" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="(&quot;Elements in a range must not be null: element1=&quot; % element1)" />
    <mutant id="mutant_5404" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6735" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="element1" />
    <mutant id="mutant_5480" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5481" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_5482" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5483" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5484" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_4153" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_4152" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_4151" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4150" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4149" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4148" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4147" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_4146" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4145" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4144" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4143" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_5474" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5475" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_5476" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5477" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5478" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5479" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_5470" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5471" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5472" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5473" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_4142" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4141" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_4140" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4139" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4138" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4137" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4136" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4135" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_4134" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4133" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4132" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_5463" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6794" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) + 1)" />
    <mutant id="mutant_5464" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6795" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) * 1)" />
    <mutant id="mutant_5465" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6796" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) % 1)" />
    <mutant id="mutant_5466" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6797" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="1" />
    <mutant id="mutant_5467" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6798" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="input.length()" />
    <mutant id="mutant_5468" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6799" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) / 1)" />
    <mutant id="mutant_5469" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6790" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) / (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_5460" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6791" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="1" />
    <mutant id="mutant_5461" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6792" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="input.length()" />
    <mutant id="mutant_5462" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6793" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) / 1)" />
    <mutant id="mutant_4131" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4130" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4128" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4127" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4126" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4125" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4124" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4123" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_4122" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4121" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_5452" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6783" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="(37 * result) - (maximum.hashCode())" />
    <mutant id="mutant_5453" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6784" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="maximum.hashCode()" />
    <mutant id="mutant_5454" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6785" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="(37 * result) / (maximum.hashCode())" />
    <mutant id="mutant_5455" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6786" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) - (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_5456" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6787" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR" />
    <mutant id="mutant_5457" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6788" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) % (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_5458" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6789" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) * (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_4129" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_5459" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_6780" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="37 * result" />
    <mutant id="mutant_5450" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6781" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="(37 * result) % (maximum.hashCode())" />
    <mutant id="mutant_5451" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6782" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="(37 * result) * (maximum.hashCode())" />
    <mutant id="mutant_4120" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4117" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_5449" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_4116" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_4115" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) + 1" />
    <mutant id="mutant_4114" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) * 1" />
    <mutant id="mutant_4113" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_4112" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_4111" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_4110" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_5441" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6772" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="minimum.hashCode()" />
    <mutant id="mutant_5442" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6773" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="(37 * result) / (minimum.hashCode())" />
    <mutant id="mutant_5443" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6774" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 / result)" />
    <mutant id="mutant_5444" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6775" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 + result)" />
    <mutant id="mutant_5445" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6776" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="37" />
    <mutant id="mutant_5446" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6777" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 - result)" />
    <mutant id="mutant_4119" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="Math.min(array.length, endIndexExclusive)" />
    <mutant id="mutant_5447" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6778" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="(37 % result)" />
    <mutant id="mutant_4118" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) % 1" />
    <mutant id="mutant_5448" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6779" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="result" />
    <mutant id="mutant_1919" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="index" />
    <mutant id="mutant_1917" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1918" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1915" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="size" />
    <mutant id="mutant_1916" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_4197" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_4196" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_4195" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_4194" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_4193" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4192" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4191" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_4190" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4189" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4188" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4187" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_1913" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="(index / len)" />
    <mutant id="mutant_1914" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1911" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="index" />
    <mutant id="mutant_1912" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="(index - len)" />
    <mutant id="mutant_1910" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="(index * len)" />
    <mutant id="mutant_1908" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="len" />
    <mutant id="mutant_1909" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="(index % len)" />
    <mutant id="mutant_1906" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="((size) % len)" />
    <mutant id="mutant_1907" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="((size) / len)" />
    <mutant id="mutant_1904" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="size" />
    <mutant id="mutant_1905" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="((size) * len)" />
    <mutant id="mutant_4186" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_4185" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_4184" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_4183" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4182" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_4181" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_4180" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_4179" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_4178" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_4177" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_4176" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_1902" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="((size) - len)" />
    <mutant id="mutant_1903" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="len" />
    <mutant id="mutant_1900" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1901" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="index" />
    <mutant id="mutant_4175" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_4174" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_4173" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_4172" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_4171" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4170" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_4169" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_4168" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_4167" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_4166" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_4165" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_5496" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5497" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_5498" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5499" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_5490" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_5491" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_5492" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_5493" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_5494" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_5495" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_4164" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_4163" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4162" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4161" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4160" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4159" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4158" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_4157" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_4156" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_4155" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_4154" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_5485" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_5486" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_5487" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_5488" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_5489" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_1959" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="(size) * strLen" />
    <mutant id="mutant_1950" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1957" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="(size) % strLen" />
    <mutant id="mutant_1958" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="size" />
    <mutant id="mutant_1955" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="index" />
    <mutant id="mutant_1956" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="(size) / strLen" />
    <mutant id="mutant_1953" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1954" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1951" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="size" />
    <mutant id="mutant_1952" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_1948" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="index" />
    <mutant id="mutant_1949" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="(index / length)" />
    <mutant id="mutant_1946" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="length" />
    <mutant id="mutant_1947" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="(index - length)" />
    <mutant id="mutant_1944" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="(index % length)" />
    <mutant id="mutant_1945" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="(index * length)" />
    <mutant id="mutant_1942" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="((size) * length)" />
    <mutant id="mutant_1943" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="((size) % length)" />
    <mutant id="mutant_1940" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="((size) - length)" />
    <mutant id="mutant_1941" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="((size) / length)" />
    <mutant id="mutant_1939" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="size" />
    <mutant id="mutant_1937" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; * length)" />
    <mutant id="mutant_1938" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="length" />
    <mutant id="mutant_1935" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="length" />
    <mutant id="mutant_1936" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; - length)" />
    <mutant id="mutant_1933" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="&quot;Invalid length: &quot;" />
    <mutant id="mutant_1934" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; / length)" />
    <mutant id="mutant_1931" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="(offset * length)" />
    <mutant id="mutant_1932" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; % length)" />
    <mutant id="mutant_1930" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="offset" />
    <mutant id="mutant_1928" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="(offset / length)" />
    <mutant id="mutant_1929" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="(offset % length)" />
    <mutant id="mutant_1926" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="(offset - length)" />
    <mutant id="mutant_1927" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="length" />
    <mutant id="mutant_4199" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_4198" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_1924" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="(&quot;Invalid offset: &quot; / offset)" />
    <mutant id="mutant_1925" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="&quot;Invalid offset: &quot;" />
    <mutant id="mutant_1922" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="(&quot;Invalid offset: &quot; % offset)" />
    <mutant id="mutant_1923" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="offset" />
    <mutant id="mutant_1920" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="(&quot;Invalid offset: &quot; * offset)" />
    <mutant id="mutant_1921" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="(&quot;Invalid offset: &quot; - offset)" />
    <mutant id="mutant_1993" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index / searchLen)" />
    <mutant id="mutant_1994" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index * searchLen)" />
    <mutant id="mutant_1991" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="(index % replaceLen)" />
    <mutant id="mutant_1992" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="searchLen" />
    <mutant id="mutant_1990" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="(index / replaceLen)" />
    <mutant id="mutant_1999" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="removeLen" />
    <mutant id="mutant_1997" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index - searchLen)" />
    <mutant id="mutant_1998" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="(i / removeLen)" />
    <mutant id="mutant_1995" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index % searchLen)" />
    <mutant id="mutant_1996" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="index" />
    <mutant id="mutant_1982" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index * searchLen)" />
    <mutant id="mutant_1983" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index % searchLen)" />
    <mutant id="mutant_1980" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="searchLen" />
    <mutant id="mutant_1981" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index / searchLen)" />
    <mutant id="mutant_1988" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="replaceLen" />
    <mutant id="mutant_1989" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="index" />
    <mutant id="mutant_1986" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="(index - replaceLen)" />
    <mutant id="mutant_1987" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="(index * replaceLen)" />
    <mutant id="mutant_1984" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="index" />
    <mutant id="mutant_1985" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="(index - searchLen)" />
    <mutant id="mutant_1971" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1972" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1970" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_1979" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="endIndex" />
    <mutant id="mutant_1977" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="(endIndex % startIndex)" />
    <mutant id="mutant_1978" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="startIndex" />
    <mutant id="mutant_1975" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="(endIndex / startIndex)" />
    <mutant id="mutant_1976" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="(endIndex * startIndex)" />
    <mutant id="mutant_1973" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="index" />
    <mutant id="mutant_1974" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="(endIndex + startIndex)" />
    <mutant id="mutant_1960" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="(size) - strLen" />
    <mutant id="mutant_1961" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="strLen" />
    <mutant id="mutant_1968" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1969" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="size" />
    <mutant id="mutant_1966" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="(index - strLen)" />
    <mutant id="mutant_1967" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="strLen" />
    <mutant id="mutant_1964" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="(index / strLen)" />
    <mutant id="mutant_1965" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="index" />
    <mutant id="mutant_1962" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="(index * strLen)" />
    <mutant id="mutant_1963" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="(index % strLen)" />
    <mutant id="mutant_701" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="value" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_703" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_704" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_700" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_709" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_706" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_707" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_711" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_716" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_717" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_718" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_723" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="object.hashCode()" />
    <mutant id="mutant_725" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="((iTotal) * (iConstant)) % (object.hashCode())" />
    <mutant id="mutant_726" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_720" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="((iTotal) * (iConstant)) - (object.hashCode())" />
    <mutant id="mutant_721" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="((iTotal) * (iConstant)) / (object.hashCode())" />
    <mutant id="mutant_722" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="((iTotal) * (iConstant)) * (object.hashCode())" />
    <mutant id="mutant_727" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_728" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_729" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_6802" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) % 1)" />
    <mutant id="mutant_6803" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) % (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_6804" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) / (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_6805" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) * (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_6806" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) - (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" />
    <mutant id="mutant_6807" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR" />
    <mutant id="mutant_6808" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="csLength / 1" />
    <mutant id="mutant_6809" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="1" />
    <mutant id="mutant_6800" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) + 1)" />
    <mutant id="mutant_6801" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="((input.length()) * 1)" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_735" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_736" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_730" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_731" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_732" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_738" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="((iTotal) * (iConstant)) * ((int)((value ^ (value &gt;&gt; 32))))" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="((int)(value ^ (value &gt;&gt; 32)))" />
    <mutant id="mutant_745" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_746" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_748" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_741" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="((iTotal) * (iConstant)) - ((int)((value ^ (value &gt;&gt; 32))))" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_743" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="((iTotal) * (iConstant)) / ((int)((value ^ (value &gt;&gt; 32))))" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_749" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_740" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="((iTotal) * (iConstant)) % ((int)((value ^ (value &gt;&gt; 32))))" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) - value" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) / value" />
    <mutant id="mutant_758" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="value" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) * value" />
    <mutant id="mutant_752" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_754" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_755" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_750" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_751" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_769" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_764" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_765" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_766" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_5515" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6846" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen / 1" />
    <mutant id="mutant_5516" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6847" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen % 1" />
    <mutant id="mutant_5517" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6848" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen * 1" />
    <mutant id="mutant_5518" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6849" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen + 1" />
    <mutant id="mutant_5519" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_760" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_761" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) % value" />
    <mutant id="mutant_6840" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen / 1" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_5510" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6841" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen % 1" />
    <mutant id="mutant_5511" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6842" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen" />
    <mutant id="mutant_5512" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6843" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen + 1" />
    <mutant id="mutant_5513" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6844" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="1" />
    <mutant id="mutant_5514" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6845" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen" />
    <mutant id="mutant_778" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="((iTotal) * (iConstant)) / superHashCode" />
    <mutant id="mutant_779" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="((iTotal) * (iConstant)) % superHashCode" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="superHashCode" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="((iTotal) * (iConstant)) - superHashCode" />
    <mutant id="mutant_776" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="((iTotal) * (iConstant)) * superHashCode" />
    <mutant id="mutant_777" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_5504" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_6835" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="(str.length()) * len" />
    <mutant id="mutant_5505" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_6836" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="(str.length()) + len" />
    <mutant id="mutant_5506" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6837" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="(str.length()) % len" />
    <mutant id="mutant_5507" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6838" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="1" />
    <mutant id="mutant_5508" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6839" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen * 1" />
    <mutant id="mutant_5509" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_770" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_772" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_6830" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_5500" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_6831" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_5501" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_6832" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="(str.length()) / len" />
    <mutant id="mutant_5502" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_6833" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="str.length()" />
    <mutant id="mutant_5503" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_6834" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="len" />
    <mutant id="mutant_789" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) % (spacer(spaces)))" />
    <mutant id="mutant_785" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;{&quot; % (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_786" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="spacer(spaces)" />
    <mutant id="mutant_787" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) / (spacer(spaces)))" />
    <mutant id="mutant_788" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) * (spacer(spaces)))" />
    <mutant id="mutant_6824" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j - 1)" />
    <mutant id="mutant_6825" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j / 1)" />
    <mutant id="mutant_6826" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_6827" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="1" />
    <mutant id="mutant_6828" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="i" />
    <mutant id="mutant_6829" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_781" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;{&quot; - (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_783" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;{&quot; / (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_784" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="&quot;{&quot;" />
    <mutant id="mutant_6820" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="1" />
    <mutant id="mutant_6821" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j % 1)" />
    <mutant id="mutant_6822" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="j" />
    <mutant id="mutant_780" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;{&quot; * (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_6823" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j * 1)" />
    <mutant id="mutant_796" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; % (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_797" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="&quot;,&quot;" />
    <mutant id="mutant_798" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) * (spacer(spaces)))" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_6813" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="csLength * 1" />
    <mutant id="mutant_6814" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="searchLength / 1" />
    <mutant id="mutant_6815" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="1" />
    <mutant id="mutant_6816" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="searchLength % 1" />
    <mutant id="mutant_6817" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="searchLength + 1" />
    <mutant id="mutant_6818" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="searchLength * 1" />
    <mutant id="mutant_6819" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="searchLength" />
    <mutant id="mutant_792" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; / (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_793" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; * (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_794" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; - (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_795" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_6810" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="csLength + 1" />
    <mutant id="mutant_790" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) - (spacer(spaces)))" />
    <mutant id="mutant_6811" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="csLength % 1" />
    <mutant id="mutant_791" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_6812" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="csLength" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(numerator)) + ((float)(denominator))" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(denominator))" />
    <mutant id="mutant_5" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(numerator)) - ((double)(denominator))" />
    <mutant id="mutant_686" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(numerator)) * ((double)(denominator))" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_7" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(numerator))" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_6" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(numerator)) % ((float)(denominator))" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_6650" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="(37 % ((37 * 17) + (getNumerator())))" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="(37 / ((37 * 17) + (getNumerator())))" />
    <mutant id="mutant_87" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="(37 - ((37 * 17) + (getNumerator())))" />
    <mutant id="mutant_86" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="((37 * 17) + (getNumerator()))" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="(37 + ((37 * 17) + (getNumerator())))" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="37" />
    <mutant id="mutant_5317" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="1" />
    <mutant id="mutant_6648" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) * &quot;)&quot;)" />
    <mutant id="mutant_5318" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="((src.length) % 1)" />
    <mutant id="mutant_6649" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) / &quot;)&quot;)" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="(37 * ((37 * 17) + (getNumerator()))) - (getDenominator())" />
    <mutant id="mutant_5319" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="((src.length) * 1)" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="37 * ((37 * 17) + (getNumerator()))" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="(37 * ((37 * 17) + (getNumerator()))) * (getDenominator())" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="(37 * ((37 * 17) + (getNumerator()))) / (getDenominator())" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="(37 * ((37 * 17) + (getNumerator()))) % (getDenominator())" />
    <mutant id="mutant_1" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(numerator))" />
    <mutant id="mutant_682" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="((iTotal) * (iConstant)) % (Float.floatToIntBits(value))" />
    <mutant id="mutant_6640" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="((&quot;Parameter end (&quot; + end) - &quot;) must be greater than start (&quot;)" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(numerator)) % ((double)(denominator))" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_5310" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="(nBytes + 8)" />
    <mutant id="mutant_6641" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="(&quot;Parameter end (&quot; + end)" />
    <mutant id="mutant_3" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(numerator)) + ((double)(denominator))" />
    <mutant id="mutant_684" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_5311" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="(nBytes * 8)" />
    <mutant id="mutant_6642" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) - start)" />
    <mutant id="mutant_2" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="((double)(denominator))" />
    <mutant id="mutant_685" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_5312" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="(nBytes % 8)" />
    <mutant id="mutant_6643" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) * start)" />
    <mutant id="mutant_5313" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="nBytes" />
    <mutant id="mutant_6644" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" />
    <mutant id="mutant_5314" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="8" />
    <mutant id="mutant_6645" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="start" />
    <mutant id="mutant_680" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="((iTotal) * (iConstant)) / (Float.floatToIntBits(value))" />
    <mutant id="mutant_5315" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="(nBytes / 8)" />
    <mutant id="mutant_6646" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) / start)" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="((iTotal) * (iConstant)) * (Float.floatToIntBits(value))" />
    <mutant id="mutant_5316" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="((src.length) / 1)" />
    <mutant id="mutant_6647" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) % start)" />
    <mutant id="mutant_697" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) * value" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) % value" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) - value" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="17" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="(37 - 17)" />
    <mutant id="mutant_76" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="(37 / 17)" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="(37 + 17)" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="((37 * 17) % (getNumerator()))" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="(37 % 17)" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="(getNumerator())" />
    <mutant id="mutant_5306" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="dstPos" />
    <mutant id="mutant_6637" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="((&quot;Parameter end (&quot; + end) / &quot;) must be greater than start (&quot;)" />
    <mutant id="mutant_5307" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="(dstPos / 8)" />
    <mutant id="mutant_6638" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="&quot;) must be greater than start (&quot;" />
    <mutant id="mutant_5308" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="8" />
    <mutant id="mutant_6639" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="((&quot;Parameter end (&quot; + end) % &quot;) must be greater than start (&quot;)" />
    <mutant id="mutant_5309" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="(dstPos - 8)" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="((37 * 17) - (getNumerator()))" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="((37 * 17) / (getNumerator()))" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="((37 * 17) * (getNumerator()))" />
    <mutant id="mutant_82" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="(37 * 17)" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_6630" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="&quot;Parameter end (&quot;" />
    <mutant id="mutant_7960" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="(firstComma - 1)" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_5300" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_6631" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="(&quot;Parameter end (&quot; * end)" />
    <mutant id="mutant_696" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) / value" />
    <mutant id="mutant_5301" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_6632" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="(&quot;Parameter end (&quot; % end)" />
    <mutant id="mutant_5302" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_6633" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="(&quot;Parameter end (&quot; / end)" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_5303" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_6634" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="end" />
    <mutant id="mutant_691" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_5304" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="(dstPos * 8)" />
    <mutant id="mutant_6635" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="(&quot;Parameter end (&quot; - end)" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_5305" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="(dstPos % 8)" />
    <mutant id="mutant_6636" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="((&quot;Parameter end (&quot; + end) * &quot;) must be greater than start (&quot;)" />
    <mutant id="mutant_6626" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="'z'" />
    <mutant id="mutant_7958" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="(firstComma % 1)" />
    <mutant id="mutant_6627" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="'z' - 1" />
    <mutant id="mutant_7957" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="1" />
    <mutant id="mutant_6628" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="'z' * 1" />
    <mutant id="mutant_6629" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="'z' % 1" />
    <mutant id="mutant_7959" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="(firstComma / 1)" />
    <mutant id="mutant_7950" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="v" />
    <mutant id="mutant_6620" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="(&quot;Requested random string length &quot; + count)" />
    <mutant id="mutant_7952" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="(v / 1.0)" />
    <mutant id="mutant_6621" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="&quot; is less than 0.&quot;" />
    <mutant id="mutant_7951" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="1.0" />
    <mutant id="mutant_6622" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="((&quot;Requested random string length &quot; + count) - &quot; is less than 0.&quot;)" />
    <mutant id="mutant_7954" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="(v + 1.0)" />
    <mutant id="mutant_6623" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="((&quot;Requested random string length &quot; + count) / &quot; is less than 0.&quot;)" />
    <mutant id="mutant_7953" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="(v % 1.0)" />
    <mutant id="mutant_6624" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="1" />
    <mutant id="mutant_7956" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="firstComma" />
    <mutant id="mutant_6625" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="'z' / 1" />
    <mutant id="mutant_7955" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="(firstComma * 1)" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="(numerator) % (denominator)" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="getDenominator()" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="denominator" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="numerator" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="(numerator) + (denominator)" />
    <mutant id="mutant_6615" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="(&quot;Requested random string length &quot; - count)" />
    <mutant id="mutant_7947" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="toParse[1]" />
    <mutant id="mutant_6616" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="(&quot;Requested random string length &quot; / count)" />
    <mutant id="mutant_7946" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="(((toParse[0]) + '.') - (toParse[1]))" />
    <mutant id="mutant_6617" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="&quot;Requested random string length &quot;" />
    <mutant id="mutant_7949" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="(v * 1.0)" />
    <mutant id="mutant_6618" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="((&quot;Requested random string length &quot; + count) * &quot; is less than 0.&quot;)" />
    <mutant id="mutant_7948" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="(((toParse[0]) + '.') / (toParse[1]))" />
    <mutant id="mutant_6619" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="((&quot;Requested random string length &quot; + count) % &quot; is less than 0.&quot;)" />
    <mutant id="mutant_7941" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="((toParse[0]) / '.')" />
    <mutant id="mutant_6610" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) * &quot;]&quot;)" />
    <mutant id="mutant_7940" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="(toParse[0])" />
    <mutant id="mutant_6611" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" />
    <mutant id="mutant_7943" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="(((toParse[0]) + '.') % (toParse[1]))" />
    <mutant id="mutant_6612" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="(&quot;Requested random string length &quot; % count)" />
    <mutant id="mutant_7942" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="((toParse[0]) % '.')" />
    <mutant id="mutant_6613" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="count" />
    <mutant id="mutant_7945" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="((toParse[0]) + '.')" />
    <mutant id="mutant_6614" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="(&quot;Requested random string length &quot; * count)" />
    <mutant id="mutant_7944" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="(((toParse[0]) + '.') * (toParse[1]))" />
    <mutant id="mutant_6690" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="((endInclusive - startInclusive) + (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5360" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6691" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="((endInclusive - startInclusive) / (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5361" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6692" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="((endInclusive - startInclusive) - (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5362" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6693" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(endInclusive - startInclusive)" />
    <mutant id="mutant_5363" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6694" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="((endInclusive - startInclusive) % (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_4032" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_4031" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4030" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4029" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4028" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4027" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) - &quot;\', is neither of type Map.Entry nor an Array&quot;)" />
    <mutant id="mutant_4026" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) * &quot;\', is neither of type Map.Entry nor an Array&quot;)" />
    <mutant id="mutant_4025" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" />
    <mutant id="mutant_4024" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) / &quot;\', is neither of type Map.Entry nor an Array&quot;)" />
    <mutant id="mutant_4023" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="&quot;\', is neither of type Map.Entry nor an Array&quot;" />
    <mutant id="mutant_4022" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) % &quot;\', is neither of type Map.Entry nor an Array&quot;)" />
    <mutant id="mutant_5353" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6684" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="(endInclusive % startInclusive)" />
    <mutant id="mutant_5354" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos - 1)" />
    <mutant id="mutant_6685" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="endInclusive" />
    <mutant id="mutant_5355" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos / 1)" />
    <mutant id="mutant_6686" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="(endInclusive + startInclusive)" />
    <mutant id="mutant_5356" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="srcPos" />
    <mutant id="mutant_6687" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="(endInclusive * startInclusive)" />
    <mutant id="mutant_5357" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos % 1)" />
    <mutant id="mutant_6688" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="(endInclusive / startInclusive)" />
    <mutant id="mutant_5358" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6689" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="startInclusive" />
    <mutant id="mutant_5359" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="(srcPos * 1)" />
    <mutant id="mutant_6680" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="56320 * (random.nextInt(128))" />
    <mutant id="mutant_5350" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="srcLen" />
    <mutant id="mutant_6681" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="56320 % (random.nextInt(128))" />
    <mutant id="mutant_5351" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="(4 * srcLen)" />
    <mutant id="mutant_6682" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="56320" />
    <mutant id="mutant_5352" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="1" />
    <mutant id="mutant_6683" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="56320 / (random.nextInt(128))" />
    <mutant id="mutant_4021" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) / object)" />
    <mutant id="mutant_4020" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="object" />
    <mutant id="mutant_4018" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" />
    <mutant id="mutant_4017" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) % object)" />
    <mutant id="mutant_4016" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) * object)" />
    <mutant id="mutant_4015" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) % &quot;, \'&quot;)" />
    <mutant id="mutant_4014" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) / &quot;, \'&quot;)" />
    <mutant id="mutant_4013" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(&quot;Array element &quot; + i)" />
    <mutant id="mutant_4012" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) - &quot;, \'&quot;)" />
    <mutant id="mutant_4011" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) * &quot;, \'&quot;)" />
    <mutant id="mutant_5342" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="(beSrcPos + 1)" />
    <mutant id="mutant_6673" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="55296 % (random.nextInt(128))" />
    <mutant id="mutant_5343" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="((beSrcPos + 1) * srcLen)" />
    <mutant id="mutant_6674" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="55296 / (random.nextInt(128))" />
    <mutant id="mutant_5344" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="((beSrcPos + 1) / srcLen)" />
    <mutant id="mutant_6675" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="55296 - (random.nextInt(128))" />
    <mutant id="mutant_5345" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="((beSrcPos + 1) % srcLen)" />
    <mutant id="mutant_6676" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="55296 * (random.nextInt(128))" />
    <mutant id="mutant_5346" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="(4 / srcLen)" />
    <mutant id="mutant_6677" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="55296" />
    <mutant id="mutant_5347" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="(4 % srcLen)" />
    <mutant id="mutant_6678" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="random.nextInt(128)" />
    <mutant id="mutant_5348" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="(4 + srcLen)" />
    <mutant id="mutant_6679" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="56320 - (random.nextInt(128))" />
    <mutant id="mutant_4019" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) - object)" />
    <mutant id="mutant_5349" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="4" />
    <mutant id="mutant_6670" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="((random.nextInt(gap)) * start)" />
    <mutant id="mutant_5340" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="((beSrcPos + 1) + srcLen)" />
    <mutant id="mutant_6671" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="random.nextInt(gap)" />
    <mutant id="mutant_5341" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="srcLen" />
    <mutant id="mutant_6672" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="random.nextInt(128)" />
    <mutant id="mutant_4010" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="&quot;, \'&quot;" />
    <mutant id="mutant_4007" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; * i)" />
    <mutant id="mutant_5339" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos - 1)" />
    <mutant id="mutant_4006" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; - i)" />
    <mutant id="mutant_4005" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; / i)" />
    <mutant id="mutant_4004" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="i" />
    <mutant id="mutant_4003" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="&quot;\', has a length less than 2&quot;" />
    <mutant id="mutant_4002" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" />
    <mutant id="mutant_4001" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) * &quot;\', has a length less than 2&quot;)" />
    <mutant id="mutant_4000" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) / &quot;\', has a length less than 2&quot;)" />
    <mutant id="mutant_5331" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos % 1)" />
    <mutant id="mutant_6662" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="(random.nextInt(gap)) / start" />
    <mutant id="mutant_5332" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos * 1)" />
    <mutant id="mutant_6663" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="(random.nextInt(gap)) % start" />
    <mutant id="mutant_5333" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos - 1)" />
    <mutant id="mutant_6664" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="(random.nextInt(gap)) * start" />
    <mutant id="mutant_5334" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="1" />
    <mutant id="mutant_6665" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="random.nextInt(gap)" />
    <mutant id="mutant_5335" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos / 1)" />
    <mutant id="mutant_6666" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="((random.nextInt(gap)) - start)" />
    <mutant id="mutant_5336" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="beSrcPos" />
    <mutant id="mutant_6667" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="start" />
    <mutant id="mutant_4009" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; % i)" />
    <mutant id="mutant_5337" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos % 1)" />
    <mutant id="mutant_6668" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="((random.nextInt(gap)) / start)" />
    <mutant id="mutant_4008" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="&quot;Array element &quot;" />
    <mutant id="mutant_5338" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos * 1)" />
    <mutant id="mutant_6669" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="((random.nextInt(gap)) % start)" />
    <mutant id="mutant_6660" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="(random.nextInt(gap)) - start" />
    <mutant id="mutant_5330" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="beSrcPos" />
    <mutant id="mutant_6661" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="start" />
    <mutant id="mutant_5328" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="1" />
    <mutant id="mutant_6659" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="end * start" />
    <mutant id="mutant_5329" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="(beSrcPos / 1)" />
    <mutant id="mutant_5320" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="((src.length) + 1)" />
    <mutant id="mutant_6651" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="&quot;)&quot;" />
    <mutant id="mutant_5321" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="(src.length)" />
    <mutant id="mutant_6652" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) % &quot;)&quot;)" />
    <mutant id="mutant_5322" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="((src.length) - 1) + srcPos" />
    <mutant id="mutant_6653" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) - &quot;)&quot;)" />
    <mutant id="mutant_5323" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="((src.length) - 1) * srcPos" />
    <mutant id="mutant_6654" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="end + start" />
    <mutant id="mutant_5324" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="(src.length) - 1" />
    <mutant id="mutant_6655" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="end % start" />
    <mutant id="mutant_5325" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="srcPos" />
    <mutant id="mutant_6656" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="end / start" />
    <mutant id="mutant_5326" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="((src.length) - 1) / srcPos" />
    <mutant id="mutant_6657" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="start" />
    <mutant id="mutant_5327" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="((src.length) - 1) % srcPos" />
    <mutant id="mutant_6658" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="end" />
    <mutant id="mutant_4076" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4075" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_4074" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4073" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4072" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_4071" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4070" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4069" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4068" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4067" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_4066" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_5397" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_5398" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5399" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5390" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5391" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_5392" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5393" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5394" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5395" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_5396" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_4065" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4064" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4063" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4062" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4061" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4060" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4059" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4058" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4057" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_4056" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_4055" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_5386" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_5387" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5388" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5389" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(other.numerator)) + ((long)(denominator))" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(denominator))" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(other.numerator)) / ((long)(denominator))" />
    <mutant id="mutant_5380" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="srcPos" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(other.numerator)) - ((long)(denominator))" />
    <mutant id="mutant_5381" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos * 3)" />
    <mutant id="mutant_5382" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5383" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_5384" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5385" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_4054" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_4053" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(numerator)) + ((long)(other.denominator))" />
    <mutant id="mutant_4052" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(other.denominator))" />
    <mutant id="mutant_4051" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(numerator)) / ((long)(other.denominator))" />
    <mutant id="mutant_4050" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_22" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(numerator)) - ((long)(other.denominator))" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(other.numerator))" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="((long)(other.numerator)) % ((long)(denominator))" />
    <mutant id="mutant_4049" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_4048" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_4047" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="count" />
    <mutant id="mutant_4046" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_4045" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="1" />
    <mutant id="mutant_4044" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_5375" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_5376" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos - 3)" />
    <mutant id="mutant_5377" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="3" />
    <mutant id="mutant_5378" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos / 3)" />
    <mutant id="mutant_5379" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="(srcPos % 3)" />
    <mutant id="mutant_16" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(x)) % ((long)(y))" />
    <mutant id="mutant_15" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(x)) - ((long)(y))" />
    <mutant id="mutant_18" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(numerator)) % ((long)(other.denominator))" />
    <mutant id="mutant_17" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(x))" />
    <mutant id="mutant_5370" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_5371" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_19" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="((long)(numerator))" />
    <mutant id="mutant_5372" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_5373" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_5374" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_4043" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_4042" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="index" />
    <mutant id="mutant_10" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(numerator)) * ((float)(denominator))" />
    <mutant id="mutant_4041" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4040" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_12" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(y))" />
    <mutant id="mutant_11" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="((float)(numerator)) - ((float)(denominator))" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(x)) * ((long)(y))" />
    <mutant id="mutant_13" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="((long)(x)) / ((long)(y))" />
    <mutant id="mutant_4039" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4038" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4037" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_4036" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4035" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4034" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4033" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_5364" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="2" />
    <mutant id="mutant_6695" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(RandomUtils.RANDOM.nextDouble())" />
    <mutant id="mutant_5365" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos / 2)" />
    <mutant id="mutant_6696" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="startInclusive * ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5366" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos - 2)" />
    <mutant id="mutant_6697" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="startInclusive / ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5367" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos * 2)" />
    <mutant id="mutant_6698" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="startInclusive % ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5368" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="srcPos" />
    <mutant id="mutant_6699" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="startInclusive - ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" />
    <mutant id="mutant_5369" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="(srcPos % 2)" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="2" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="(u % 2)" />
    <mutant id="mutant_1838" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="(index * len)" />
    <mutant id="mutant_1839" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="index" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="(numerator) - (denominator)" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="(numerator) * (denominator)" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="Math.abs(v)" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="Math.abs(u)" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="(Math.abs(u)) - (Math.abs(v))" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="(Math.abs(u)) * (Math.abs(v))" />
    <mutant id="mutant_47" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="(Math.abs(u)) % (Math.abs(v))" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="(Math.abs(u)) / (Math.abs(v))" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="(u * 2)" />
    <mutant id="mutant_1836" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="len" />
    <mutant id="mutant_1837" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="(index % len)" />
    <mutant id="mutant_1834" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_1835" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_1832" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="i" />
    <mutant id="mutant_1833" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_1830" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_1831" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="1" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="denominator" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="numerator" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="(numerator) + (denominator)" />
    <mutant id="mutant_1829" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1827" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1828" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="index" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="numerator" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="((numerator) + (denominator))" />
    <mutant id="mutant_31" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="denominator" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="((numerator) - (denominator))" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="((numerator) * (denominator))" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="(numerator) % (denominator)" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="((numerator) / (denominator))" />
    <mutant id="mutant_4099" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="(Math.min(array.length, endIndexExclusive)) / 1" />
    <mutant id="mutant_1825" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1826" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1823" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="(index / len)" />
    <mutant id="mutant_1824" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="1" />
    <mutant id="mutant_1821" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="index" />
    <mutant id="mutant_1822" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="(index - len)" />
    <mutant id="mutant_1820" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="(index * len)" />
    <mutant id="mutant_4090" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_1818" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="len" />
    <mutant id="mutant_1819" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="(index % len)" />
    <mutant id="mutant_1816" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="start" />
    <mutant id="mutant_1817" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="i % start" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="(v - u) * 2" />
    <mutant id="mutant_4098" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="1" />
    <mutant id="mutant_62" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="(v - u) - 2" />
    <mutant id="mutant_4097" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="(v - u) % 2" />
    <mutant id="mutant_4096" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_64" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="v - u" />
    <mutant id="mutant_4095" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="(-u) % (1 &lt;&lt; k)" />
    <mutant id="mutant_4094" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="(-u) + (1 &lt;&lt; k)" />
    <mutant id="mutant_4093" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_69" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="(-u) - (1 &lt;&lt; k)" />
    <mutant id="mutant_4092" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="-u" />
    <mutant id="mutant_4091" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_70" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="1 &lt;&lt; k" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="37" />
    <mutant id="mutant_4089" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_71" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="(-u) / (1 &lt;&lt; k)" />
    <mutant id="mutant_4088" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_1814" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="i + start" />
    <mutant id="mutant_1815" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="i * start" />
    <mutant id="mutant_1812" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="i / start" />
    <mutant id="mutant_1813" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="i" />
    <mutant id="mutant_1810" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_1811" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_59" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="u" />
    <mutant id="mutant_1809" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_1807" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_1808" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_1805" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="((size) % length)" />
    <mutant id="mutant_1806" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="(u + 2)" />
    <mutant id="mutant_4087" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="(u - 2)" />
    <mutant id="mutant_4086" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="(v * u)" />
    <mutant id="mutant_4085" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="u" />
    <mutant id="mutant_4084" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="(v + u)" />
    <mutant id="mutant_4083" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_55" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="(v / u)" />
    <mutant id="mutant_4082" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="count" />
    <mutant id="mutant_58" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="(v % u)" />
    <mutant id="mutant_4081" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="v" />
    <mutant id="mutant_4080" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="1" />
    <mutant id="mutant_4079" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_61" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="2" />
    <mutant id="mutant_4078" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="(v - u) + 2" />
    <mutant id="mutant_4077" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="index" />
    <mutant id="mutant_1803" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="((size) / length)" />
    <mutant id="mutant_1804" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="((size) * length)" />
    <mutant id="mutant_1801" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="size" />
    <mutant id="mutant_1802" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="((size) - length)" />
    <mutant id="mutant_1800" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="length" />
    <mutant id="mutant_1872" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="(index - 5)" />
    <mutant id="mutant_1873" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="5" />
    <mutant id="mutant_1870" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="((size) - 5)" />
    <mutant id="mutant_1871" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="((size) % 5)" />
    <mutant id="mutant_1878" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1879" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="size" />
    <mutant id="mutant_1876" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="(index / 5)" />
    <mutant id="mutant_1877" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="(index * 5)" />
    <mutant id="mutant_1874" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="(index % 5)" />
    <mutant id="mutant_1875" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="index" />
    <mutant id="mutant_1861" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="size" />
    <mutant id="mutant_1862" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_1860" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1869" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="((size) * 5)" />
    <mutant id="mutant_1867" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="((size) / 5)" />
    <mutant id="mutant_1868" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="5" />
    <mutant id="mutant_1865" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="index" />
    <mutant id="mutant_1866" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="size" />
    <mutant id="mutant_1863" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1864" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1850" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="4" />
    <mutant id="mutant_1851" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="((size) * 4)" />
    <mutant id="mutant_1858" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="(index * 4)" />
    <mutant id="mutant_1859" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="(index % 4)" />
    <mutant id="mutant_1856" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="index" />
    <mutant id="mutant_1857" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="(index / 4)" />
    <mutant id="mutant_1854" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="(index - 4)" />
    <mutant id="mutant_1855" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="4" />
    <mutant id="mutant_1852" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="((size) % 4)" />
    <mutant id="mutant_1853" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="((size) - 4)" />
    <mutant id="mutant_1849" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="size" />
    <mutant id="mutant_1840" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="(index - len)" />
    <mutant id="mutant_1847" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="capacity + 2" />
    <mutant id="mutant_1848" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="((size) / 4)" />
    <mutant id="mutant_1845" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="capacity / 2" />
    <mutant id="mutant_1846" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="capacity - 2" />
    <mutant id="mutant_1843" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="2" />
    <mutant id="mutant_1844" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="capacity % 2" />
    <mutant id="mutant_1841" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="(index / len)" />
    <mutant id="mutant_1842" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="capacity" />
    <mutant id="mutant_1894" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="index" />
    <mutant id="mutant_1895" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1892" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1893" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1890" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="1" />
    <mutant id="mutant_1891" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1898" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_1899" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1896" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1897" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="size" />
    <mutant id="mutant_1883" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="index" />
    <mutant id="mutant_1884" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="1" />
    <mutant id="mutant_1881" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_1882" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_1880" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_1889" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="((size) / 1)" />
    <mutant id="mutant_1887" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="((size) % 1)" />
    <mutant id="mutant_1888" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="size" />
    <mutant id="mutant_1885" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="((size) * 1)" />
    <mutant id="mutant_1886" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="((size) - 1)" />
    <mutant id="mutant_602" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="(initialOddNumber - 2)" />
    <mutant id="mutant_603" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="(initialOddNumber + 2)" />
    <mutant id="mutant_604" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="(initialOddNumber * 2)" />
    <mutant id="mutant_605" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="(initialOddNumber / 2)" />
    <mutant id="mutant_600" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="2" />
    <mutant id="mutant_601" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="initialOddNumber" />
    <mutant id="mutant_606" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="2" />
    <mutant id="mutant_607" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="(multiplierOddNumber + 2)" />
    <mutant id="mutant_608" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="(multiplierOddNumber * 2)" />
    <mutant id="mutant_609" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="multiplierOddNumber" />
    <mutant id="mutant_613" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_614" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_615" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_616" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_610" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="(multiplierOddNumber - 2)" />
    <mutant id="mutant_611" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="(multiplierOddNumber / 2)" />
    <mutant id="mutant_612" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_617" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_618" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="value ? 0 : 1" />
    <mutant id="mutant_619" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="((iTotal) * (iConstant)) - (value ? 0 : 1)" />
    <mutant id="mutant_624" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_625" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_626" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_627" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_620" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="((iTotal) * (iConstant)) / (value ? 0 : 1)" />
    <mutant id="mutant_621" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="((iTotal) * (iConstant)) % (value ? 0 : 1)" />
    <mutant id="mutant_622" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_623" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="((iTotal) * (iConstant)) * (value ? 0 : 1)" />
    <mutant id="mutant_628" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_629" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_635" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_636" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) % value" />
    <mutant id="mutant_637" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) / value" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) * value" />
    <mutant id="mutant_631" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_632" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_633" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_634" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_639" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="value" />
    <mutant id="mutant_630" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_647" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_649" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_642" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_643" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_644" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_645" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_6725" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="startInclusive" />
    <mutant id="mutant_6726" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="startInclusive * (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" />
    <mutant id="mutant_6727" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="startInclusive - (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" />
    <mutant id="mutant_6728" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="RandomUtils.RANDOM.nextInt((endExclusive - startInclusive))" />
    <mutant id="mutant_6729" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="startInclusive / (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" />
    <mutant id="mutant_640" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) - value" />
    <mutant id="mutant_641" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_6720" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="(endExclusive * startInclusive)" />
    <mutant id="mutant_6721" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="endExclusive" />
    <mutant id="mutant_6722" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="(endExclusive + startInclusive)" />
    <mutant id="mutant_6723" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="(endExclusive / startInclusive)" />
    <mutant id="mutant_6724" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="(endExclusive % startInclusive)" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) * value" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="(iTotal) * (iConstant)" />
    <mutant id="mutant_659" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) - value" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_654" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="value" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) % value" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="((iTotal) * (iConstant)) / value" />
    <mutant id="mutant_6714" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="startInclusive" />
    <mutant id="mutant_6715" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat())" />
    <mutant id="mutant_6716" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="startInclusive % ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6717" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="startInclusive - ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6718" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="startInclusive * ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6719" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="startInclusive / ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_650" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_652" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_6710" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="((endInclusive - startInclusive) - (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6711" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="((endInclusive - startInclusive) % (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6712" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="((endInclusive - startInclusive) / (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6713" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(endInclusive - startInclusive)" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_669" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_664" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_666" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_667" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_6703" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="(endInclusive / startInclusive)" />
    <mutant id="mutant_6704" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="endInclusive" />
    <mutant id="mutant_6705" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="(endInclusive + startInclusive)" />
    <mutant id="mutant_6706" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="(endInclusive * startInclusive)" />
    <mutant id="mutant_6707" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="(endInclusive % startInclusive)" />
    <mutant id="mutant_6708" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="((endInclusive - startInclusive) + (RandomUtils.RANDOM.nextFloat()))" />
    <mutant id="mutant_6709" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(RandomUtils.RANDOM.nextFloat())" />
    <mutant id="mutant_660" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="iTotal" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="iConstant" />
    <mutant id="mutant_662" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="(iTotal) / (iConstant)" />
    <mutant id="mutant_663" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="(iTotal) + (iConstant)" />
    <mutant id="mutant_6700" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="startInclusive" />
    <mutant id="mutant_6701" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble())" />
    <mutant id="mutant_6702" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="startInclusive" />
    <mutant id="mutant_679" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="Float.floatToIntBits(value)" />
    <mutant id="mutant_675" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="((iTotal) + (iConstant))" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="((iTotal) % (iConstant))" />
    <mutant id="mutant_677" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="((iTotal) - (iConstant))" />
    <mutant id="mutant_678" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="((iTotal) * (iConstant)) - (Float.floatToIntBits(value))" />
    <mutant id="mutant_671" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="(iTotal) - (iConstant)" />
    <mutant id="mutant_672" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="(iTotal)" />
    <mutant id="mutant_673" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="(iConstant)" />
    <mutant id="mutant_674" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="((iTotal) / (iConstant))" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="(iTotal) % (iConstant)" />
    <mutant id="mutant_7860" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 2003&quot;)" />
    <mutant id="mutant_6527" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_7859" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="&quot; 2003&quot;" />
    <mutant id="mutant_6528" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="((sort.size()) * 1)" />
    <mutant id="mutant_7858" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 2000&quot;)" />
    <mutant id="mutant_6529" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="(sort.size())" />
    <mutant id="mutant_7851" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="end" />
    <mutant id="mutant_6520" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_7850" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="end / closeLen" />
    <mutant id="mutant_6521" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_7853" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="&quot; 2000&quot;" />
    <mutant id="mutant_6522" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_7852" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="end - closeLen" />
    <mutant id="mutant_6523" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_7855" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 2000&quot;)" />
    <mutant id="mutant_6524" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_7854" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 2000&quot;)" />
    <mutant id="mutant_6525" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_7857" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_6526" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_7856" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 2000&quot;)" />
    <mutant id="mutant_6516" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_7848" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="end * closeLen" />
    <mutant id="mutant_6517" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_7847" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="end % closeLen" />
    <mutant id="mutant_6518" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_6519" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_7849" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="closeLen" />
    <mutant id="mutant_7840" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end" />
    <mutant id="mutant_6510" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_7842" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="(strLen / closeLen)" />
    <mutant id="mutant_6511" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_7841" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="(strLen % closeLen)" />
    <mutant id="mutant_6512" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_7844" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="closeLen" />
    <mutant id="mutant_6513" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_7843" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="(strLen * closeLen)" />
    <mutant id="mutant_6514" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_7846" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="strLen" />
    <mutant id="mutant_6515" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_7845" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="(strLen + closeLen)" />
    <mutant id="mutant_6505" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="1" />
    <mutant id="mutant_7837" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end - separatorLength" />
    <mutant id="mutant_6506" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="(split.length) % 1" />
    <mutant id="mutant_7836" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end * separatorLength" />
    <mutant id="mutant_6507" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="(split.length) * 1" />
    <mutant id="mutant_7839" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="separatorLength" />
    <mutant id="mutant_6508" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="(split.length) + 1" />
    <mutant id="mutant_7838" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end / separatorLength" />
    <mutant id="mutant_6509" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="split.length" />
    <mutant id="mutant_7831" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end - separatorLength" />
    <mutant id="mutant_6500" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_7830" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end * separatorLength" />
    <mutant id="mutant_6501" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_7833" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="separatorLength" />
    <mutant id="mutant_6502" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_7832" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end / separatorLength" />
    <mutant id="mutant_6503" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_7835" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end % separatorLength" />
    <mutant id="mutant_6504" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="(split.length) / 1" />
    <mutant id="mutant_7834" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end" />
    <mutant id="mutant_7826" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="tokenStart" />
    <mutant id="mutant_7825" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="((c.length) + tokenStart)" />
    <mutant id="mutant_7828" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="((c.length) % tokenStart)" />
    <mutant id="mutant_7827" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="c.length" />
    <mutant id="mutant_7829" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="end % separatorLength" />
    <mutant id="mutant_7820" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="(pos + tokenStart)" />
    <mutant id="mutant_7822" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="(pos % tokenStart)" />
    <mutant id="mutant_7821" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="tokenStart" />
    <mutant id="mutant_7824" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="((c.length) * tokenStart)" />
    <mutant id="mutant_7823" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="((c.length) / tokenStart)" />
    <mutant id="mutant_6570" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="((sort.size()) - 1)" />
    <mutant id="mutant_5240" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_6571" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="2" />
    <mutant id="mutant_5241" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_6572" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) * 2)" />
    <mutant id="mutant_5242" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_6573" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) - 2)" />
    <mutant id="mutant_5232" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_6563" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Exception cloning Cloneable type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_7895" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="&quot; NT&quot;" />
    <mutant id="mutant_5233" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_6564" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="((sort.size()) * 1)" />
    <mutant id="mutant_7894" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5234" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_6565" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="(sort.size())" />
    <mutant id="mutant_7897" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; NT&quot;)" />
    <mutant id="mutant_5235" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_6566" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="1" />
    <mutant id="mutant_7896" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; NT&quot;)" />
    <mutant id="mutant_5236" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_6567" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="((sort.size()) % 1)" />
    <mutant id="mutant_7899" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5237" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_6568" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="((sort.size()) / 1)" />
    <mutant id="mutant_7898" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; NT&quot;)" />
    <mutant id="mutant_5238" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_6569" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="((sort.size()) + 1)" />
    <mutant id="mutant_5239" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_7891" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; Me&quot;)" />
    <mutant id="mutant_6560" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="obj.getClass().getName()" />
    <mutant id="mutant_7890" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; Me&quot;)" />
    <mutant id="mutant_5230" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_6561" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Exception cloning Cloneable type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_7893" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; Me&quot;)" />
    <mutant id="mutant_5231" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_6562" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="&quot;Exception cloning Cloneable type &quot;" />
    <mutant id="mutant_7892" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; Me&quot;)" />
    <mutant id="mutant_5229" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_5221" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="i * 8" />
    <mutant id="mutant_6552" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="&quot;Cannot clone Cloneable type &quot;" />
    <mutant id="mutant_7884" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 98&quot;)" />
    <mutant id="mutant_5222" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) * srcPos" />
    <mutant id="mutant_6553" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cannot clone Cloneable type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_7883" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 98&quot;)" />
    <mutant id="mutant_5223" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="srcPos" />
    <mutant id="mutant_6554" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="obj.getClass().getName()" />
    <mutant id="mutant_7886" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 98&quot;)" />
    <mutant id="mutant_5224" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) % srcPos" />
    <mutant id="mutant_6555" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cannot clone Cloneable type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_7885" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 98&quot;)" />
    <mutant id="mutant_5225" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) / srcPos" />
    <mutant id="mutant_6556" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cannot clone Cloneable type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_7888" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5226" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_6557" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cannot clone Cloneable type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_7887" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="&quot; 98&quot;" />
    <mutant id="mutant_5227" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_6558" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Exception cloning Cloneable type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_5228" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_6559" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Exception cloning Cloneable type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_7889" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="&quot; Me&quot;" />
    <mutant id="mutant_7880" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 95&quot;)" />
    <mutant id="mutant_6550" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) / &quot; has no clone method&quot;)" />
    <mutant id="mutant_7882" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 95&quot;)" />
    <mutant id="mutant_5220" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) - srcPos" />
    <mutant id="mutant_6551" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="&quot; has no clone method&quot;" />
    <mutant id="mutant_7881" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5218" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_6549" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) % &quot; has no clone method&quot;)" />
    <mutant id="mutant_5219" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_5210" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) / srcPos)" />
    <mutant id="mutant_6541" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cloneable type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_7873" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; Server 2012&quot;)" />
    <mutant id="mutant_5211" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) * srcPos)" />
    <mutant id="mutant_6542" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_7872" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="&quot; Server 2012&quot;" />
    <mutant id="mutant_5212" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="srcPos" />
    <mutant id="mutant_6543" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cloneable type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_7875" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5213" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) % srcPos)" />
    <mutant id="mutant_6544" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cloneable type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_7874" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; Server 2012&quot;)" />
    <mutant id="mutant_5214" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_6545" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="&quot;Cloneable type &quot;" />
    <mutant id="mutant_7877" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 95&quot;)" />
    <mutant id="mutant_5215" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_6546" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) * &quot; has no clone method&quot;)" />
    <mutant id="mutant_7876" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; Server 2012&quot;)" />
    <mutant id="mutant_5216" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_6547" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_7879" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 95&quot;)" />
    <mutant id="mutant_5217" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_6548" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) - &quot; has no clone method&quot;)" />
    <mutant id="mutant_7878" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="&quot; 95&quot;" />
    <mutant id="mutant_7871" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; Server 2012&quot;)" />
    <mutant id="mutant_6540" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="(&quot;Cloneable type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_7870" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; Server 2008&quot;)" />
    <mutant id="mutant_5207" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_6538" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) + 2)" />
    <mutant id="mutant_5208" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) - srcPos)" />
    <mutant id="mutant_6539" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) % 2)" />
    <mutant id="mutant_7869" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; Server 2008&quot;)" />
    <mutant id="mutant_5209" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_6530" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="1" />
    <mutant id="mutant_7862" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 2003&quot;)" />
    <mutant id="mutant_5200" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_6531" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="((sort.size()) % 1)" />
    <mutant id="mutant_7861" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 2003&quot;)" />
    <mutant id="mutant_5201" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_6532" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="((sort.size()) / 1)" />
    <mutant id="mutant_7864" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5202" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_6533" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="((sort.size()) + 1)" />
    <mutant id="mutant_7863" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 2003&quot;)" />
    <mutant id="mutant_5203" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_6534" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="((sort.size()) - 1)" />
    <mutant id="mutant_7866" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; Server 2008&quot;)" />
    <mutant id="mutant_5204" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_6535" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="2" />
    <mutant id="mutant_7865" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; Server 2008&quot;)" />
    <mutant id="mutant_5205" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_6536" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) * 2)" />
    <mutant id="mutant_7868" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_5206" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_6537" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) - 2)" />
    <mutant id="mutant_7867" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="&quot; Server 2008&quot;" />
    <mutant id="mutant_5280" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) - srcPos)" />
    <mutant id="mutant_5281" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_5282" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) / srcPos)" />
    <mutant id="mutant_5283" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) * srcPos)" />
    <mutant id="mutant_5284" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="srcPos" />
    <mutant id="mutant_5285" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) % srcPos)" />
    <mutant id="mutant_5286" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_5276" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_5277" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_5278" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_5279" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_5270" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_5271" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_5272" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_5273" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_5274" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_5275" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_5265" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_6596" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="(hash * 31) % tmpHash" />
    <mutant id="mutant_5266" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_6597" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="(hash * 31) / tmpHash" />
    <mutant id="mutant_5267" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_6598" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="tmpHash" />
    <mutant id="mutant_5268" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_6599" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="hash * 31" />
    <mutant id="mutant_5269" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_6590" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="(hash / 31)" />
    <mutant id="mutant_5260" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) % srcPos" />
    <mutant id="mutant_6591" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="(hash % 31)" />
    <mutant id="mutant_5261" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) / srcPos" />
    <mutant id="mutant_6592" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="(hash - 31)" />
    <mutant id="mutant_5262" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_6593" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="31" />
    <mutant id="mutant_5263" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_6594" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="(hash * 31) - tmpHash" />
    <mutant id="mutant_5264" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_6595" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="(hash * 31) * tmpHash" />
    <mutant id="mutant_5254" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_6585" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) * &quot;]&quot;)" />
    <mutant id="mutant_5255" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_6586" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) / &quot;]&quot;)" />
    <mutant id="mutant_5256" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) - srcPos" />
    <mutant id="mutant_6587" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) - &quot;]&quot;)" />
    <mutant id="mutant_5257" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="i * 8" />
    <mutant id="mutant_6588" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="(hash + 31)" />
    <mutant id="mutant_5258" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) * srcPos" />
    <mutant id="mutant_6589" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="hash" />
    <mutant id="mutant_5259" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="srcPos" />
    <mutant id="mutant_6580" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; / v)" />
    <mutant id="mutant_5250" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_6581" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="v" />
    <mutant id="mutant_5251" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_6582" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" />
    <mutant id="mutant_5252" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_6583" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) % &quot;]&quot;)" />
    <mutant id="mutant_5253" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_6584" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_5243" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_6574" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) + 2)" />
    <mutant id="mutant_5244" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) - srcPos)" />
    <mutant id="mutant_6575" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="(((sort.size()) - 1) % 2)" />
    <mutant id="mutant_5245" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_6576" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; - v)" />
    <mutant id="mutant_5246" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) / srcPos)" />
    <mutant id="mutant_6577" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot;" />
    <mutant id="mutant_5247" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) * srcPos)" />
    <mutant id="mutant_6578" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; % v)" />
    <mutant id="mutant_5248" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="srcPos" />
    <mutant id="mutant_6579" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; * v)" />
    <mutant id="mutant_5249" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="(((nBytes - 1) * 8) % srcPos)" />
    <mutant id="mutant_1719" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="(((buf.arrayOffset()) + (buf.position())) / startIndex)" />
    <mutant id="mutant_1717" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="(((buf.arrayOffset()) + (buf.position())) % startIndex)" />
    <mutant id="mutant_1718" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="startIndex" />
    <mutant id="mutant_1715" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) / (buf.position()))" />
    <mutant id="mutant_1716" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="(((buf.arrayOffset()) + (buf.position())) - startIndex)" />
    <mutant id="mutant_1713" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) - (buf.position()))" />
    <mutant id="mutant_1714" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="(buf.position())" />
    <mutant id="mutant_1711" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="(buf.arrayOffset())" />
    <mutant id="mutant_1712" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) * (buf.position()))" />
    <mutant id="mutant_1710" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) % (buf.position()))" />
    <mutant id="mutant_1708" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_1709" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_1706" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_1707" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_1704" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_1705" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_1702" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_1703" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1700" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1701" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_5298" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5299" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5290" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_5291" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_5292" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) - srcPos" />
    <mutant id="mutant_5293" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="i * 8" />
    <mutant id="mutant_5294" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) * srcPos" />
    <mutant id="mutant_5295" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="srcPos" />
    <mutant id="mutant_5296" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) % srcPos" />
    <mutant id="mutant_5297" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="(i * 8) / srcPos" />
    <mutant id="mutant_5287" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_5288" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_5289" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_1751" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="((size) % width)" />
    <mutant id="mutant_1752" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="(strLen * width)" />
    <mutant id="mutant_1750" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="((size) / width)" />
    <mutant id="mutant_1759" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="width % strLen" />
    <mutant id="mutant_1757" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="(strLen + width)" />
    <mutant id="mutant_1758" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="width * strLen" />
    <mutant id="mutant_1755" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="width" />
    <mutant id="mutant_1756" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="strLen" />
    <mutant id="mutant_1753" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="(strLen / width)" />
    <mutant id="mutant_1754" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="(strLen % width)" />
    <mutant id="mutant_1740" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_1741" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_1748" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="((size) * width)" />
    <mutant id="mutant_1749" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="width" />
    <mutant id="mutant_1746" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="((size) - width)" />
    <mutant id="mutant_1747" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="size" />
    <mutant id="mutant_1744" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_1745" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1742" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1743" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_900" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="((SystemUtils.LINE_SEPARATOR) % &quot;]&quot;)" />
    <mutant id="mutant_901" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="SystemUtils.LINE_SEPARATOR" />
    <mutant id="mutant_902" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_1739" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_907" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="(toString.indexOf(contentStart)) - (contentStart.length())" />
    <mutant id="mutant_908" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="(toString.indexOf(contentStart)) * (contentStart.length())" />
    <mutant id="mutant_909" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="toString.indexOf(contentStart)" />
    <mutant id="mutant_903" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="((SystemUtils.LINE_SEPARATOR) / &quot;]&quot;)" />
    <mutant id="mutant_904" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="((SystemUtils.LINE_SEPARATOR) * &quot;]&quot;)" />
    <mutant id="mutant_905" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="((SystemUtils.LINE_SEPARATOR) - &quot;]&quot;)" />
    <mutant id="mutant_906" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="contentStart.length()" />
    <mutant id="mutant_1730" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1737" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_1738" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_1735" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_1736" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_1733" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1734" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_1731" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_1732" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_910" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="(toString.indexOf(contentStart)) % (contentStart.length())" />
    <mutant id="mutant_911" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="(toString.indexOf(contentStart)) / (contentStart.length())" />
    <mutant id="mutant_912" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="(len * 1)" />
    <mutant id="mutant_913" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="1" />
    <mutant id="mutant_1728" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_1729" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_918" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="((len - 1) * i)" />
    <mutant id="mutant_919" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="i" />
    <mutant id="mutant_914" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="len" />
    <mutant id="mutant_915" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="(len % 1)" />
    <mutant id="mutant_916" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="(len / 1)" />
    <mutant id="mutant_917" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="(len + 1)" />
    <mutant id="mutant_1726" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="strLen" />
    <mutant id="mutant_1727" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="(len * strLen)" />
    <mutant id="mutant_1724" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="(len - strLen)" />
    <mutant id="mutant_1725" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="(len % strLen)" />
    <mutant id="mutant_1722" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="len" />
    <mutant id="mutant_1723" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="(len / strLen)" />
    <mutant id="mutant_1720" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="(((buf.arrayOffset()) + (buf.position())) * startIndex)" />
    <mutant id="mutant_1721" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="((buf.arrayOffset()) + (buf.position()))" />
    <mutant id="mutant_921" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="((len - 1) % i)" />
    <mutant id="mutant_922" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="((len - 1) / i)" />
    <mutant id="mutant_923" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="((len - 1) + i)" />
    <mutant id="mutant_924" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="1" />
    <mutant id="mutant_920" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="(len - 1)" />
    <mutant id="mutant_929" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="sepLen" />
    <mutant id="mutant_925" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="(sepLen / 1)" />
    <mutant id="mutant_926" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="(sepLen * 1)" />
    <mutant id="mutant_927" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="(sepLen % 1)" />
    <mutant id="mutant_928" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="(sepLen + 1)" />
    <mutant id="mutant_1795" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="i" />
    <mutant id="mutant_1796" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="(((size) + strLen) - i)" />
    <mutant id="mutant_1793" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="strLen" />
    <mutant id="mutant_1794" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="(((size) + strLen) % i)" />
    <mutant id="mutant_1791" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="((size) * strLen)" />
    <mutant id="mutant_1792" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="((size) - strLen)" />
    <mutant id="mutant_1790" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="(size)" />
    <mutant id="mutant_1799" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="(((size) + strLen) * i)" />
    <mutant id="mutant_1797" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="((size) + strLen)" />
    <mutant id="mutant_1798" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="(((size) + strLen) / i)" />
    <mutant id="mutant_932" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="i" />
    <mutant id="mutant_933" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="((sepLen - 1) / i)" />
    <mutant id="mutant_934" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="((sepLen - 1) + i)" />
    <mutant id="mutant_935" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="((sepLen - 1) % i)" />
    <mutant id="mutant_930" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="(sepLen - 1)" />
    <mutant id="mutant_931" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="((sepLen - 1) * i)" />
    <mutant id="mutant_936" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="(len / sepLen)" />
    <mutant id="mutant_937" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="(len % sepLen)" />
    <mutant id="mutant_938" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="len" />
    <mutant id="mutant_939" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="(len + sepLen)" />
    <mutant id="mutant_1784" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="width / strLen" />
    <mutant id="mutant_1785" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="width" />
    <mutant id="mutant_1782" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="width * strLen" />
    <mutant id="mutant_1783" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="width % strLen" />
    <mutant id="mutant_1780" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="((size) / width)" />
    <mutant id="mutant_1781" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="((size) % width)" />
    <mutant id="mutant_1788" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="((size) / strLen)" />
    <mutant id="mutant_1789" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="((size) % strLen)" />
    <mutant id="mutant_1786" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="width + strLen" />
    <mutant id="mutant_1787" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="strLen" />
    <mutant id="mutant_943" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="&quot;Exception thrown on toString(): &quot; / (ExceptionUtils.getStackTrace(e))" />
    <mutant id="mutant_944" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="ExceptionUtils.getStackTrace(e)" />
    <mutant id="mutant_945" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="&quot;Exception thrown on toString(): &quot;" />
    <mutant id="mutant_946" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="&quot;Exception thrown on toString(): &quot; * (ExceptionUtils.getStackTrace(e))" />
    <mutant id="mutant_940" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="(len * sepLen)" />
    <mutant id="mutant_941" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="sepLen" />
    <mutant id="mutant_942" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="&quot;Exception thrown on toString(): &quot; - (ExceptionUtils.getStackTrace(e))" />
    <mutant id="mutant_947" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="&quot;Exception thrown on toString(): &quot; % (ExceptionUtils.getStackTrace(e))" />
    <mutant id="mutant_948" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="clsName" />
    <mutant id="mutant_949" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="(clsName / &quot;: &quot;)" />
    <mutant id="mutant_1773" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="size" />
    <mutant id="mutant_1774" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="padLen" />
    <mutant id="mutant_1771" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="((size) * padLen)" />
    <mutant id="mutant_1772" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="((size) - padLen)" />
    <mutant id="mutant_1770" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="((size) % padLen)" />
    <mutant id="mutant_1779" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="width" />
    <mutant id="mutant_1777" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="size" />
    <mutant id="mutant_1778" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="((size) * width)" />
    <mutant id="mutant_1775" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="((size) / padLen)" />
    <mutant id="mutant_1776" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="((size) - width)" />
    <mutant id="mutant_954" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="(clsName + &quot;: &quot;) - (StringUtils.defaultString(msg))" />
    <mutant id="mutant_955" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="clsName + &quot;: &quot;" />
    <mutant id="mutant_956" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="StringUtils.defaultString(msg)" />
    <mutant id="mutant_957" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="(clsName + &quot;: &quot;) % (StringUtils.defaultString(msg))" />
    <mutant id="mutant_950" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="(clsName % &quot;: &quot;)" />
    <mutant id="mutant_951" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="&quot;: &quot;" />
    <mutant id="mutant_952" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="(clsName * &quot;: &quot;)" />
    <mutant id="mutant_953" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="(clsName - &quot;: &quot;)" />
    <mutant id="mutant_958" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="(clsName + &quot;: &quot;) * (StringUtils.defaultString(msg))" />
    <mutant id="mutant_959" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="(clsName + &quot;: &quot;) / (StringUtils.defaultString(msg))" />
    <mutant id="mutant_1762" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="width + strLen" />
    <mutant id="mutant_1763" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="strLen" />
    <mutant id="mutant_1760" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="width / strLen" />
    <mutant id="mutant_1761" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="width" />
    <mutant id="mutant_1768" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="((size) % i)" />
    <mutant id="mutant_1769" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="((size) / i)" />
    <mutant id="mutant_1766" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="size" />
    <mutant id="mutant_1767" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="((size) - i)" />
    <mutant id="mutant_1764" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="((size) * i)" />
    <mutant id="mutant_1765" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="i" />
    <mutant id="mutant_965" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_966" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_967" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_968" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="1" />
    <mutant id="mutant_961" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_962" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="count" />
    <mutant id="mutant_963" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_964" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_969" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="i" />
    <mutant id="mutant_960" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="1" />
    <mutant id="mutant_976" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_977" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_978" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="((ExceptionUtils.WRAPPED_MARKER) % (throwables[i].toString()))" />
    <mutant id="mutant_979" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="ExceptionUtils.WRAPPED_MARKER" />
    <mutant id="mutant_972" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="1" />
    <mutant id="mutant_973" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_974" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="count" />
    <mutant id="mutant_975" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_970" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_971" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_987" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="((list.size()) * 1)" />
    <mutant id="mutant_988" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="list.size()" />
    <mutant id="mutant_989" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="((list.size()) + 1)" />
    <mutant id="mutant_983" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="((ExceptionUtils.WRAPPED_MARKER) / (throwables[i].toString()))" />
    <mutant id="mutant_984" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="((list.size()) / 1)" />
    <mutant id="mutant_985" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="1" />
    <mutant id="mutant_986" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="((list.size()) % 1)" />
    <mutant id="mutant_980" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="((ExceptionUtils.WRAPPED_MARKER) * (throwables[i].toString()))" />
    <mutant id="mutant_981" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="throwables[i].toString()" />
    <mutant id="mutant_982" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="((ExceptionUtils.WRAPPED_MARKER) - (throwables[i].toString()))" />
    <mutant id="mutant_998" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="(wrapperFrames.size()) % 1" />
    <mutant id="mutant_999" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="(wrapperFrames.size()) * 1" />
    <mutant id="mutant_994" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="causeFrames.size()" />
    <mutant id="mutant_995" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="(causeFrames.size()) + 1" />
    <mutant id="mutant_996" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="(wrapperFrames.size()) / 1" />
    <mutant id="mutant_997" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="1" />
    <mutant id="mutant_990" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="(causeFrames.size()) / 1" />
    <mutant id="mutant_991" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="1" />
    <mutant id="mutant_992" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="(causeFrames.size()) % 1" />
    <mutant id="mutant_993" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="(causeFrames.size()) * 1" />
    <mutant id="mutant_6604" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot;" />
    <mutant id="mutant_7936" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" />
    <mutant id="mutant_6605" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="v" />
    <mutant id="mutant_7935" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) / &quot;\'; the SystemUtils property value will default to null.&quot;)" />
    <mutant id="mutant_6606" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) % &quot;]&quot;)" />
    <mutant id="mutant_7938" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="'.'" />
    <mutant id="mutant_6607" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) - &quot;]&quot;)" />
    <mutant id="mutant_7937" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="((toParse[0]) - '.')" />
    <mutant id="mutant_6608" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_6609" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) / &quot;]&quot;)" />
    <mutant id="mutant_7939" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="((toParse[0]) * '.')" />
    <mutant id="mutant_7930" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="(&quot;Caught a SecurityException reading the system property \'&quot; % property)" />
    <mutant id="mutant_6600" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; % v)" />
    <mutant id="mutant_7932" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) * &quot;\'; the SystemUtils property value will default to null.&quot;)" />
    <mutant id="mutant_6601" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; * v)" />
    <mutant id="mutant_7931" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="&quot;\'; the SystemUtils property value will default to null.&quot;" />
    <mutant id="mutant_6602" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; / v)" />
    <mutant id="mutant_7934" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) % &quot;\'; the SystemUtils property value will default to null.&quot;)" />
    <mutant id="mutant_6603" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; - v)" />
    <mutant id="mutant_7933" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) - &quot;\'; the SystemUtils property value will default to null.&quot;)" />
    <mutant id="mutant_7925" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="(&quot;Caught a SecurityException reading the system property \'&quot; - property)" />
    <mutant id="mutant_7924" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_7927" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="&quot;Caught a SecurityException reading the system property \'&quot;" />
    <mutant id="mutant_7926" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="property" />
    <mutant id="mutant_7929" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="(&quot;Caught a SecurityException reading the system property \'&quot; * property)" />
    <mutant id="mutant_7928" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="(&quot;Caught a SecurityException reading the system property \'&quot; / property)" />
    <mutant id="mutant_7921" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="&quot; 8&quot;" />
    <mutant id="mutant_7920" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 8&quot;)" />
    <mutant id="mutant_7923" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 8&quot;)" />
    <mutant id="mutant_7922" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 8&quot;)" />
    <mutant id="mutant_7914" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="&quot; 7&quot;" />
    <mutant id="mutant_7913" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 7&quot;)" />
    <mutant id="mutant_7916" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; 7&quot;)" />
    <mutant id="mutant_7915" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; 7&quot;)" />
    <mutant id="mutant_7918" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_7917" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; 7&quot;)" />
    <mutant id="mutant_7919" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; 8&quot;)" />
    <mutant id="mutant_7910" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; Vista&quot;)" />
    <mutant id="mutant_7912" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="&quot; Vista&quot;" />
    <mutant id="mutant_7911" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_7903" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; XP&quot;)" />
    <mutant id="mutant_7902" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) / &quot; XP&quot;)" />
    <mutant id="mutant_7905" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; XP&quot;)" />
    <mutant id="mutant_7904" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; XP&quot;)" />
    <mutant id="mutant_7907" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) % &quot; Vista&quot;)" />
    <mutant id="mutant_7906" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="SystemUtils.OS_NAME_WINDOWS_PREFIX" />
    <mutant id="mutant_7909" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; Vista&quot;)" />
    <mutant id="mutant_7908" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) - &quot; Vista&quot;)" />
    <mutant id="mutant_7901" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="&quot; XP&quot;" />
    <mutant id="mutant_7900" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="((SystemUtils.OS_NAME_WINDOWS_PREFIX) * &quot; NT&quot;)" />
    <mutant id="mutant_6406" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="((constant.ordinal()) - (Long.SIZE))" />
    <mutant id="mutant_7738" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end % 1)" />
    <mutant id="mutant_6407" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="((constant.ordinal()) + (Long.SIZE))" />
    <mutant id="mutant_7737" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end + 1)" />
    <mutant id="mutant_6408" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) / 1)" />
    <mutant id="mutant_6409" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="1" />
    <mutant id="mutant_7739" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="end" />
    <mutant id="mutant_7730" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end / 1)" />
    <mutant id="mutant_6400" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="(constant.ordinal()) + (Long.SIZE)" />
    <mutant id="mutant_7732" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end % 1)" />
    <mutant id="mutant_6401" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="(constant.ordinal()) % (Long.SIZE)" />
    <mutant id="mutant_7731" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end + 1)" />
    <mutant id="mutant_6402" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="(Long.SIZE)" />
    <mutant id="mutant_7734" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="1" />
    <mutant id="mutant_6403" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="((constant.ordinal()) * (Long.SIZE))" />
    <mutant id="mutant_7733" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="end" />
    <mutant id="mutant_6404" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="(constant.ordinal())" />
    <mutant id="mutant_7736" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end / 1)" />
    <mutant id="mutant_6405" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="((constant.ordinal()) / (Long.SIZE))" />
    <mutant id="mutant_7735" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end * 1)" />
    <mutant id="mutant_7727" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift + strLen)" />
    <mutant id="mutant_7726" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="strLen" />
    <mutant id="mutant_7729" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="(end * 1)" />
    <mutant id="mutant_7728" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="1" />
    <mutant id="mutant_7721" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift + strLen)" />
    <mutant id="mutant_7720" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="strLen" />
    <mutant id="mutant_7723" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="shift" />
    <mutant id="mutant_7722" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift / strLen)" />
    <mutant id="mutant_7725" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift - strLen)" />
    <mutant id="mutant_7724" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift * strLen)" />
    <mutant id="mutant_7716" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift / strLen)" />
    <mutant id="mutant_7715" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i - padLen)" />
    <mutant id="mutant_7718" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift * strLen)" />
    <mutant id="mutant_7717" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="shift" />
    <mutant id="mutant_7719" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="(shift - strLen)" />
    <mutant id="mutant_7710" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i + padLen)" />
    <mutant id="mutant_7712" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="padLen" />
    <mutant id="mutant_7711" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="i" />
    <mutant id="mutant_7714" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i * padLen)" />
    <mutant id="mutant_7713" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i / padLen)" />
    <mutant id="mutant_7705" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size" />
    <mutant id="mutant_7704" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size + strLen" />
    <mutant id="mutant_7707" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size % strLen" />
    <mutant id="mutant_7706" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size / strLen" />
    <mutant id="mutant_7709" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="strLen" />
    <mutant id="mutant_7708" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size * strLen" />
    <mutant id="mutant_7701" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="size / (str.length())" />
    <mutant id="mutant_7700" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="size" />
    <mutant id="mutant_7703" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="size * (str.length())" />
    <mutant id="mutant_7702" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="size + (str.length())" />
    <mutant id="mutant_7781" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="open.length()" />
    <mutant id="mutant_6450" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="1" />
    <mutant id="mutant_7780" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start % (open.length()))" />
    <mutant id="mutant_5120" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="16" />
    <mutant id="mutant_6451" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) * 1" />
    <mutant id="mutant_7783" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start * (open.length()))" />
    <mutant id="mutant_5121" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="(16 / srcPos)" />
    <mutant id="mutant_6452" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) % 1" />
    <mutant id="mutant_7782" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start - (open.length()))" />
    <mutant id="mutant_5119" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="(16 % srcPos)" />
    <mutant id="mutant_5111" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) - srcPos)" />
    <mutant id="mutant_6442" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) + 1)" />
    <mutant id="mutant_7774" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos * (separator.length()))" />
    <mutant id="mutant_5112" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6443" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="(enumClass.getEnumConstants().length)" />
    <mutant id="mutant_7773" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos / (separator.length()))" />
    <mutant id="mutant_5113" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_6444" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(Long.SIZE)" />
    <mutant id="mutant_7776" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start - (open.length()))" />
    <mutant id="mutant_5114" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_6445" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) * (Long.SIZE))" />
    <mutant id="mutant_7775" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="open.length()" />
    <mutant id="mutant_5115" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_6446" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) - (Long.SIZE))" />
    <mutant id="mutant_7778" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start / (open.length()))" />
    <mutant id="mutant_5116" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_6447" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((enumClass.getEnumConstants().length) - 1)" />
    <mutant id="mutant_7777" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start * (open.length()))" />
    <mutant id="mutant_5117" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_6448" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) + (Long.SIZE))" />
    <mutant id="mutant_5118" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="(16 + srcPos)" />
    <mutant id="mutant_6449" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) % (Long.SIZE))" />
    <mutant id="mutant_7779" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="start" />
    <mutant id="mutant_7770" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="separator.length()" />
    <mutant id="mutant_6440" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) % 1)" />
    <mutant id="mutant_7772" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="pos" />
    <mutant id="mutant_5110" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) / srcPos)" />
    <mutant id="mutant_6441" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) * 1)" />
    <mutant id="mutant_7771" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos % (separator.length()))" />
    <mutant id="mutant_5108" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) % srcPos)" />
    <mutant id="mutant_6439" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="1" />
    <mutant id="mutant_5109" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="srcPos" />
    <mutant id="mutant_5100" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6431" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) % (Long.SIZE))" />
    <mutant id="mutant_7763" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos * (separator.length()))" />
    <mutant id="mutant_5101" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_6432" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="(Long.SIZE)" />
    <mutant id="mutant_7762" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos / (separator.length()))" />
    <mutant id="mutant_5102" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_6433" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) * (Long.SIZE))" />
    <mutant id="mutant_7765" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="((str.length()) * (separator.length()))" />
    <mutant id="mutant_5103" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_6434" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="(value.ordinal())" />
    <mutant id="mutant_7764" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="(str.length())" />
    <mutant id="mutant_5104" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_6435" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) / (Long.SIZE))" />
    <mutant id="mutant_7767" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="((str.length()) + (separator.length()))" />
    <mutant id="mutant_5105" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_6436" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) - (Long.SIZE))" />
    <mutant id="mutant_7766" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="((str.length()) / (separator.length()))" />
    <mutant id="mutant_5106" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) * srcPos)" />
    <mutant id="mutant_6437" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) + (Long.SIZE))" />
    <mutant id="mutant_7769" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos - (separator.length()))" />
    <mutant id="mutant_5107" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(nBools - 1)" />
    <mutant id="mutant_6438" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) / 1)" />
    <mutant id="mutant_7768" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="((str.length()) % (separator.length()))" />
    <mutant id="mutant_7761" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="pos" />
    <mutant id="mutant_6430" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) + (Long.SIZE))" />
    <mutant id="mutant_7760" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos % (separator.length()))" />
    <mutant id="mutant_6428" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="value.ordinal()" />
    <mutant id="mutant_6429" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) - (Long.SIZE))" />
    <mutant id="mutant_7759" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="separator.length()" />
    <mutant id="mutant_6420" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="1" />
    <mutant id="mutant_7752" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="str.length()" />
    <mutant id="mutant_6421" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) * 1" />
    <mutant id="mutant_7751" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="(str.length()) % end" />
    <mutant id="mutant_6422" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) % 1" />
    <mutant id="mutant_7754" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="start" />
    <mutant id="mutant_6423" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) - 1" />
    <mutant id="mutant_7753" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="(str.length()) * start" />
    <mutant id="mutant_6424" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)" />
    <mutant id="mutant_7756" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="(str.length()) - start" />
    <mutant id="mutant_6425" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) / 1" />
    <mutant id="mutant_7755" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="(str.length()) % start" />
    <mutant id="mutant_6426" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="Long.SIZE" />
    <mutant id="mutant_7758" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="(pos - (separator.length()))" />
    <mutant id="mutant_6427" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) * (Long.SIZE))" />
    <mutant id="mutant_7757" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="(str.length()) / start" />
    <mutant id="mutant_7750" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="end" />
    <mutant id="mutant_6417" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((enumClass.getEnumConstants().length) - 1)" />
    <mutant id="mutant_7749" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="(str.length()) - end" />
    <mutant id="mutant_6418" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) + (Long.SIZE))" />
    <mutant id="mutant_7748" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="(str.length()) / end" />
    <mutant id="mutant_6419" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) % (Long.SIZE))" />
    <mutant id="mutant_7741" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="(str.length()) * start" />
    <mutant id="mutant_6410" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) % 1)" />
    <mutant id="mutant_7740" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="str.length()" />
    <mutant id="mutant_6411" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) * 1)" />
    <mutant id="mutant_7743" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="(str.length()) % start" />
    <mutant id="mutant_6412" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="((enumClass.getEnumConstants().length) + 1)" />
    <mutant id="mutant_7742" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="start" />
    <mutant id="mutant_6413" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="(enumClass.getEnumConstants().length)" />
    <mutant id="mutant_7745" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="(str.length()) / start" />
    <mutant id="mutant_6414" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(Long.SIZE)" />
    <mutant id="mutant_7744" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="(str.length()) - start" />
    <mutant id="mutant_6415" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) * (Long.SIZE))" />
    <mutant id="mutant_7747" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="(str.length()) * end" />
    <mutant id="mutant_6416" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="(((enumClass.getEnumConstants().length) - 1) - (Long.SIZE))" />
    <mutant id="mutant_7746" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="str.length()" />
    <mutant id="mutant_6490" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_5160" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="1" />
    <mutant id="mutant_6491" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_5161" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="(nHex / 1)" />
    <mutant id="mutant_6492" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5162" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="(nHex * 1)" />
    <mutant id="mutant_6493" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_5163" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="(nHex % 1)" />
    <mutant id="mutant_6494" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_5164" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="(nHex + 1)" />
    <mutant id="mutant_6495" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_5165" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="nHex" />
    <mutant id="mutant_6496" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_5155" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_6486" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5156" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_6487" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_5157" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_6488" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_5158" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_6489" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_5159" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_6480" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5150" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="i / dstPos" />
    <mutant id="mutant_6481" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_5151" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="i - dstPos" />
    <mutant id="mutant_6482" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_5152" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="i % dstPos" />
    <mutant id="mutant_6483" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_5153" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="i * dstPos" />
    <mutant id="mutant_6484" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_5154" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_6485" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_5144" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="(nBools - 1)" />
    <mutant id="mutant_6475" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_5145" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) % dstPos)" />
    <mutant id="mutant_6476" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_5146" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) * dstPos)" />
    <mutant id="mutant_6477" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_5147" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) - dstPos)" />
    <mutant id="mutant_6478" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_5148" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="i" />
    <mutant id="mutant_6479" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_5149" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="dstPos" />
    <mutant id="mutant_6470" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; - str)" />
    <mutant id="mutant_5140" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_6471" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="str" />
    <mutant id="mutant_5141" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_6472" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; * str)" />
    <mutant id="mutant_5142" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="dstPos" />
    <mutant id="mutant_6473" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_5143" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) / dstPos)" />
    <mutant id="mutant_6474" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5133" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_6464" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="(value.ordinal())" />
    <mutant id="mutant_7796" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="(wrapWith + str) * wrapWith" />
    <mutant id="mutant_5134" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_6465" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) / (Long.SIZE))" />
    <mutant id="mutant_7795" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="wrapWith" />
    <mutant id="mutant_5135" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_6466" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) - (Long.SIZE))" />
    <mutant id="mutant_7798" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="wrapWith + str" />
    <mutant id="mutant_5136" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6467" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) + (Long.SIZE))" />
    <mutant id="mutant_7797" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="(wrapWith + str) / wrapWith" />
    <mutant id="mutant_5137" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_6468" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5138" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_6469" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_7799" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="1" />
    <mutant id="mutant_5139" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_7790" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="wrapWith" />
    <mutant id="mutant_6460" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) + (Long.SIZE))" />
    <mutant id="mutant_7792" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="(wrapWith - str)" />
    <mutant id="mutant_5130" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_6461" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) % (Long.SIZE))" />
    <mutant id="mutant_7791" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="(wrapWith * str)" />
    <mutant id="mutant_5131" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_6462" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="(Long.SIZE)" />
    <mutant id="mutant_7794" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="(wrapWith + str) % wrapWith" />
    <mutant id="mutant_5132" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_6463" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="((value.ordinal()) * (Long.SIZE))" />
    <mutant id="mutant_7793" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="(wrapWith + str) - wrapWith" />
    <mutant id="mutant_5122" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="srcPos" />
    <mutant id="mutant_6453" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) - 1" />
    <mutant id="mutant_7785" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="start" />
    <mutant id="mutant_5123" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="(16 * srcPos)" />
    <mutant id="mutant_6454" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)" />
    <mutant id="mutant_7784" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start / (open.length()))" />
    <mutant id="mutant_5124" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="i" />
    <mutant id="mutant_6455" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) / 1" />
    <mutant id="mutant_7787" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="(wrapWith % str)" />
    <mutant id="mutant_5125" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="i % srcPos" />
    <mutant id="mutant_6456" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="Long.SIZE" />
    <mutant id="mutant_7786" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="(start % (open.length()))" />
    <mutant id="mutant_5126" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="i / srcPos" />
    <mutant id="mutant_6457" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) * (Long.SIZE))" />
    <mutant id="mutant_7789" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="str" />
    <mutant id="mutant_5127" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="srcPos" />
    <mutant id="mutant_6458" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="value.ordinal()" />
    <mutant id="mutant_7788" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="(wrapWith / str)" />
    <mutant id="mutant_5128" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="i - srcPos" />
    <mutant id="mutant_6459" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="((value.ordinal()) - (Long.SIZE))" />
    <mutant id="mutant_5129" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="i * srcPos" />
    <mutant id="mutant_2929" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="(century) / twoDigitYear" />
    <mutant id="mutant_2928" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="(century) * twoDigitYear" />
    <mutant id="mutant_2927" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="century" />
    <mutant id="mutant_2926" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="centuryStartYear + (century)" />
    <mutant id="mutant_5199" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_2925" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="centuryStartYear / (century)" />
    <mutant id="mutant_2924" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="centuryStartYear" />
    <mutant id="mutant_2923" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="centuryStartYear % (century)" />
    <mutant id="mutant_2922" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="centuryStartYear * (century)" />
    <mutant id="mutant_2921" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="century" />
    <mutant id="mutant_2920" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="(centuryStartYear / 100) % 100" />
    <mutant id="mutant_5191" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_5192" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_5193" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_5194" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_2919" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="centuryStartYear / 100" />
    <mutant id="mutant_5195" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_2918" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="(centuryStartYear / 100) + 100" />
    <mutant id="mutant_5196" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_2917" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="100" />
    <mutant id="mutant_5197" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_2916" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="(centuryStartYear / 100) - 100" />
    <mutant id="mutant_5198" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_5190" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_2915" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="(centuryStartYear / 100) / 100" />
    <mutant id="mutant_5188" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="(i * 4) % dstPos" />
    <mutant id="mutant_2914" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="(centuryStartYear + 100)" />
    <mutant id="mutant_5189" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="(i * 4) * dstPos" />
    <mutant id="mutant_2913" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="(centuryStartYear % 100)" />
    <mutant id="mutant_2912" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="centuryStartYear" />
    <mutant id="mutant_2911" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="(centuryStartYear - 100)" />
    <mutant id="mutant_2910" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="100" />
    <mutant id="mutant_5180" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_5181" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_5182" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_2909" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="(centuryStartYear * 100)" />
    <mutant id="mutant_5183" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_2908" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="(definingCalendar.get(Calendar.YEAR)) + 80" />
    <mutant id="mutant_5184" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="(i * 4) - dstPos" />
    <mutant id="mutant_2907" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="(definingCalendar.get(Calendar.YEAR)) * 80" />
    <mutant id="mutant_5185" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="i * 4" />
    <mutant id="mutant_2906" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="80" />
    <mutant id="mutant_5186" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="dstPos" />
    <mutant id="mutant_2905" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="(definingCalendar.get(Calendar.YEAR)) / 80" />
    <mutant id="mutant_5187" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="(i * 4) / dstPos" />
    <mutant id="mutant_2904" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="definingCalendar.get(Calendar.YEAR)" />
    <mutant id="mutant_5177" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) - dstPos)" />
    <mutant id="mutant_2903" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="(definingCalendar.get(Calendar.YEAR)) % 80" />
    <mutant id="mutant_5178" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_2902" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="iValue + 1" />
    <mutant id="mutant_5179" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_2901" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="iValue % 1" />
    <mutant id="mutant_2900" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="iValue / 1" />
    <mutant id="mutant_5170" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) % 4)" />
    <mutant id="mutant_5171" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) - 4)" />
    <mutant id="mutant_5172" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) % dstPos)" />
    <mutant id="mutant_5173" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) / dstPos)" />
    <mutant id="mutant_5174" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((nHex - 1) * 4)" />
    <mutant id="mutant_5175" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="dstPos" />
    <mutant id="mutant_5176" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) * dstPos)" />
    <mutant id="mutant_5166" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) + 4)" />
    <mutant id="mutant_6497" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="&quot;Invalid locale format: &quot;" />
    <mutant id="mutant_5167" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) / 4)" />
    <mutant id="mutant_6498" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; / str)" />
    <mutant id="mutant_5168" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="4" />
    <mutant id="mutant_6499" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="(&quot;Invalid locale format: &quot; % str)" />
    <mutant id="mutant_5169" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="(nHex - 1)" />
    <mutant id="mutant_1630" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_2962" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(pattern.hashCode()) * (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1631" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_2961" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="pattern.hashCode()" />
    <mutant id="mutant_2960" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(pattern.hashCode()) % (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1638" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="len" />
    <mutant id="mutant_1639" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="(len / strLen)" />
    <mutant id="mutant_2969" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="((&quot;FastDateParser[&quot; + (pattern)) * &quot;,&quot;)" />
    <mutant id="mutant_1636" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_2968" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="(&quot;FastDateParser[&quot; * (pattern))" />
    <mutant id="mutant_1637" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_2967" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="(pattern)" />
    <mutant id="mutant_1634" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_2966" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="&quot;FastDateParser[&quot;" />
    <mutant id="mutant_1635" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_2965" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="(&quot;FastDateParser[&quot; - (pattern))" />
    <mutant id="mutant_1632" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_2964" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="(&quot;FastDateParser[&quot; / (pattern))" />
    <mutant id="mutant_1633" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_2963" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="(&quot;FastDateParser[&quot; % (pattern))" />
    <mutant id="mutant_1629" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_2951" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(13 % ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1620" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_2950" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="((timeZone.hashCode()) / (13 * (locale.hashCode())))" />
    <mutant id="mutant_1627" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_2959" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(pattern.hashCode()) - (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1628" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_2958" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="13 * ((timeZone.hashCode()) + (13 * (locale.hashCode())))" />
    <mutant id="mutant_1625" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_2957" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(pattern.hashCode()) / (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1626" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_2956" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(13 / ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1623" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_2955" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(13 - ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1624" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_2954" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="(13 + ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" />
    <mutant id="mutant_1621" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_2953" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((timeZone.hashCode()) + (13 * (locale.hashCode())))" />
    <mutant id="mutant_1622" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_2952" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="13" />
    <mutant id="mutant_1618" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="strLen" />
    <mutant id="mutant_1619" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="(len * strLen)" />
    <mutant id="mutant_2949" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="(timeZone.hashCode())" />
    <mutant id="mutant_2940" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="13" />
    <mutant id="mutant_1616" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="(len - strLen)" />
    <mutant id="mutant_2948" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="((timeZone.hashCode()) * (13 * (locale.hashCode())))" />
    <mutant id="mutant_1617" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="(len % strLen)" />
    <mutant id="mutant_2947" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="((timeZone.hashCode()) - (13 * (locale.hashCode())))" />
    <mutant id="mutant_1614" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="len" />
    <mutant id="mutant_2946" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="(13 * (locale.hashCode()))" />
    <mutant id="mutant_1615" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="(len / strLen)" />
    <mutant id="mutant_2945" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="((timeZone.hashCode()) % (13 * (locale.hashCode())))" />
    <mutant id="mutant_1612" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_2944" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="(13 / (locale.hashCode()))" />
    <mutant id="mutant_1613" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_2943" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="(locale.hashCode())" />
    <mutant id="mutant_1610" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_2942" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="(13 - (locale.hashCode()))" />
    <mutant id="mutant_1611" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_2941" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="(13 + (locale.hashCode()))" />
    <mutant id="mutant_1609" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_1607" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; * length)" />
    <mutant id="mutant_2939" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="(13 % (locale.hashCode()))" />
    <mutant id="mutant_1608" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_2938" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="trial - 100" />
    <mutant id="mutant_1605" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="length" />
    <mutant id="mutant_2937" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="trial" />
    <mutant id="mutant_1606" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; - length)" />
    <mutant id="mutant_2936" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="trial * 100" />
    <mutant id="mutant_1603" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="&quot;Invalid length: &quot;" />
    <mutant id="mutant_2935" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="trial / 100" />
    <mutant id="mutant_1604" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; / length)" />
    <mutant id="mutant_2934" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="trial % 100" />
    <mutant id="mutant_1601" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_2933" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="100" />
    <mutant id="mutant_1602" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="(&quot;Invalid length: &quot; % length)" />
    <mutant id="mutant_2932" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="(century) % twoDigitYear" />
    <mutant id="mutant_2931" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="(century) - twoDigitYear" />
    <mutant id="mutant_1600" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_2930" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="twoDigitYear" />
    <mutant id="mutant_800" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="spacer(spaces)" />
    <mutant id="mutant_801" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) / (spacer(spaces)))" />
    <mutant id="mutant_802" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) - (spacer(spaces)))" />
    <mutant id="mutant_803" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) % (spacer(spaces)))" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="indent" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="spaces" />
    <mutant id="mutant_804" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) % (indent))" />
    <mutant id="mutant_805" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) * (indent))" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) + (indent))" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) / (indent))" />
    <mutant id="mutant_1674" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_1675" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_1672" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_1673" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1670" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1671" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_1678" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_1679" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_1676" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_1677" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_811" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) % (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_812" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_813" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(spacer(((spaces) - (indent))))" />
    <mutant id="mutant_814" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) / (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_810" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) * (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_819" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="&quot;}&quot;" />
    <mutant id="mutant_815" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) - (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_816" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) * &quot;}&quot;)" />
    <mutant id="mutant_817" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) % &quot;}&quot;)" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_1663" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="(len / strLen)" />
    <mutant id="mutant_2995" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())" />
    <mutant id="mutant_1664" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="(len - strLen)" />
    <mutant id="mutant_2994" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="&quot;]&quot;" />
    <mutant id="mutant_1661" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_2993" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) % &quot;]&quot;" />
    <mutant id="mutant_1662" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="len" />
    <mutant id="mutant_2992" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) % (timeZone.getID()))" />
    <mutant id="mutant_2991" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" />
    <mutant id="mutant_1660" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_2990" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) / (timeZone.getID()))" />
    <mutant id="mutant_1669" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_1667" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="(len * strLen)" />
    <mutant id="mutant_2999" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="(&quot;(The &quot; / (locale))" />
    <mutant id="mutant_1668" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_2998" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) - &quot;]&quot;" />
    <mutant id="mutant_1665" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="(len % strLen)" />
    <mutant id="mutant_2997" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) * &quot;]&quot;" />
    <mutant id="mutant_1666" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="strLen" />
    <mutant id="mutant_2996" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) / &quot;]&quot;" />
    <mutant id="mutant_822" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;[&quot; * (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_824" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;[&quot; - (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_825" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;[&quot; % (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_820" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) - &quot;}&quot;)" />
    <mutant id="mutant_821" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) / &quot;}&quot;)" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="&quot;[&quot;" />
    <mutant id="mutant_827" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;[&quot; / (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_828" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) % (spacer(spaces)))" />
    <mutant id="mutant_829" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="spacer(spaces)" />
    <mutant id="mutant_1652" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="length" />
    <mutant id="mutant_2984" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_1653" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_2983" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) / &quot;,&quot;)" />
    <mutant id="mutant_1650" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_2982" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" />
    <mutant id="mutant_1651" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="len" />
    <mutant id="mutant_2981" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) * &quot;,&quot;)" />
    <mutant id="mutant_2980" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) % (locale))" />
    <mutant id="mutant_1658" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1659" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_2989" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) * (timeZone.getID()))" />
    <mutant id="mutant_1656" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_2988" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="(timeZone.getID())" />
    <mutant id="mutant_1657" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_2987" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) - (timeZone.getID()))" />
    <mutant id="mutant_1654" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_2986" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) % &quot;,&quot;)" />
    <mutant id="mutant_1655" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_2985" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) - &quot;,&quot;)" />
    <mutant id="mutant_833" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) * (spacer(spaces)))" />
    <mutant id="mutant_834" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; / (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_835" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; * (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_836" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; - (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_830" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) - (spacer(spaces)))" />
    <mutant id="mutant_831" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_832" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) / (spacer(spaces)))" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_838" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="(&quot;,&quot; % (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_839" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="&quot;,&quot;" />
    <mutant id="mutant_1641" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="(len % strLen)" />
    <mutant id="mutant_2973" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="(&quot;FastDateParser[&quot; + (pattern))" />
    <mutant id="mutant_1642" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="strLen" />
    <mutant id="mutant_2972" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="((&quot;FastDateParser[&quot; + (pattern)) / &quot;,&quot;)" />
    <mutant id="mutant_2971" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_1640" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="(len - strLen)" />
    <mutant id="mutant_2970" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="((&quot;FastDateParser[&quot; + (pattern)) - &quot;,&quot;)" />
    <mutant id="mutant_1649" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1647" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_2979" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) - (locale))" />
    <mutant id="mutant_1648" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_2978" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) / (locale))" />
    <mutant id="mutant_1645" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_2977" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" />
    <mutant id="mutant_1646" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_2976" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="(locale)" />
    <mutant id="mutant_1643" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="(len * strLen)" />
    <mutant id="mutant_2975" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) * (locale))" />
    <mutant id="mutant_1644" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_2974" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="((&quot;FastDateParser[&quot; + (pattern)) % &quot;,&quot;)" />
    <mutant id="mutant_844" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) - (spacer(spaces)))" />
    <mutant id="mutant_845" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) % (spacer(spaces)))" />
    <mutant id="mutant_846" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) % (indent))" />
    <mutant id="mutant_847" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) * (indent))" />
    <mutant id="mutant_840" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) * (spacer(spaces)))" />
    <mutant id="mutant_841" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" />
    <mutant id="mutant_842" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="spacer(spaces)" />
    <mutant id="mutant_843" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) / (spacer(spaces)))" />
    <mutant id="mutant_848" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) + (indent))" />
    <mutant id="mutant_849" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="((spaces) / (indent))" />
    <mutant id="mutant_855" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(spacer(((spaces) - (indent))))" />
    <mutant id="mutant_856" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) / (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_857" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) - (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_858" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) * &quot;]&quot;)" />
    <mutant id="mutant_851" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="spaces" />
    <mutant id="mutant_852" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) * (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_853" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="((SystemUtils.LINE_SEPARATOR) % (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_854" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(SystemUtils.LINE_SEPARATOR)" />
    <mutant id="mutant_859" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) % &quot;]&quot;)" />
    <mutant id="mutant_850" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="indent" />
    <mutant id="mutant_866" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="ex.getMessage()" />
    <mutant id="mutant_867" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="(&quot;Unexpected IllegalAccessException: &quot; % (ex.getMessage()))" />
    <mutant id="mutant_868" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="(&quot;Unexpected IllegalAccessException: &quot; * (ex.getMessage()))" />
    <mutant id="mutant_869" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="(&quot;Unexpected IllegalAccessException: &quot; / (ex.getMessage()))" />
    <mutant id="mutant_862" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) - &quot;]&quot;)" />
    <mutant id="mutant_863" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) / &quot;]&quot;)" />
    <mutant id="mutant_864" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="(&quot;Unexpected IllegalAccessException: &quot; - (ex.getMessage()))" />
    <mutant id="mutant_865" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="&quot;Unexpected IllegalAccessException: &quot;" />
    <mutant id="mutant_1696" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="buf.position()" />
    <mutant id="mutant_1697" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) / (buf.position()))" />
    <mutant id="mutant_1694" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) * (buf.position()))" />
    <mutant id="mutant_1695" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) - (buf.position()))" />
    <mutant id="mutant_1692" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="((buf.arrayOffset()) % (buf.position()))" />
    <mutant id="mutant_1693" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="buf.arrayOffset()" />
    <mutant id="mutant_1690" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="(len % length)" />
    <mutant id="mutant_1691" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="(len / length)" />
    <mutant id="mutant_860" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" />
    <mutant id="mutant_861" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_1698" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_1699" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_877" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="(((FIELD_NAME_PREFIX) + fieldName) * (FIELD_NAME_PREFIX))" />
    <mutant id="mutant_878" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="(((FIELD_NAME_PREFIX) + fieldName) % (FIELD_NAME_PREFIX))" />
    <mutant id="mutant_879" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="(((FIELD_NAME_PREFIX) + fieldName) / (FIELD_NAME_PREFIX))" />
    <mutant id="mutant_873" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="((FIELD_NAME_PREFIX) / fieldName)" />
    <mutant id="mutant_874" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="((FIELD_NAME_PREFIX) - fieldName)" />
    <mutant id="mutant_875" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="fieldName" />
    <mutant id="mutant_876" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="((FIELD_NAME_PREFIX) + fieldName)" />
    <mutant id="mutant_1685" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex - length)" />
    <mutant id="mutant_1686" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="(len - length)" />
    <mutant id="mutant_1683" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_1684" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex / length)" />
    <mutant id="mutant_1681" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_1682" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1680" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_870" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="((FIELD_NAME_PREFIX) % fieldName)" />
    <mutant id="mutant_871" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="(FIELD_NAME_PREFIX)" />
    <mutant id="mutant_872" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="((FIELD_NAME_PREFIX) * fieldName)" />
    <mutant id="mutant_1689" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="(len * length)" />
    <mutant id="mutant_1687" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="len" />
    <mutant id="mutant_1688" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="length" />
    <mutant id="mutant_888" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="((&quot;\&quot;&quot; + value) % &quot;\&quot;&quot;)" />
    <mutant id="mutant_889" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="((&quot;\&quot;&quot; + value) * &quot;\&quot;&quot;)" />
    <mutant id="mutant_884" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="(&quot;\&quot;&quot; / value)" />
    <mutant id="mutant_885" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="(&quot;\&quot;&quot; % value)" />
    <mutant id="mutant_886" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="(&quot;\&quot;&quot; * value)" />
    <mutant id="mutant_887" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="value" />
    <mutant id="mutant_7815" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="newTokenStart" />
    <mutant id="mutant_7814" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="(newTokenStart + tokenStart)" />
    <mutant id="mutant_7817" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="(pos / tokenStart)" />
    <mutant id="mutant_7816" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="(newTokenStart % tokenStart)" />
    <mutant id="mutant_7819" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="pos" />
    <mutant id="mutant_7818" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="(pos * tokenStart)" />
    <mutant id="mutant_880" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="FIELD_NAME_PREFIX" />
    <mutant id="mutant_881" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="(((FIELD_NAME_PREFIX) + fieldName) - (FIELD_NAME_PREFIX))" />
    <mutant id="mutant_882" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="(&quot;\&quot;&quot; - value)" />
    <mutant id="mutant_883" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="&quot;\&quot;&quot;" />
    <mutant id="mutant_7811" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="(newTokenStart / tokenStart)" />
    <mutant id="mutant_7810" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="pos / 1" />
    <mutant id="mutant_7813" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="tokenStart" />
    <mutant id="mutant_7812" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="(newTokenStart * tokenStart)" />
    <mutant id="mutant_899" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="&quot;  &quot;" />
    <mutant id="mutant_895" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="((SystemUtils.LINE_SEPARATOR) * &quot;  &quot;)" />
    <mutant id="mutant_896" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="((SystemUtils.LINE_SEPARATOR) - &quot;  &quot;)" />
    <mutant id="mutant_897" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="SystemUtils.LINE_SEPARATOR" />
    <mutant id="mutant_898" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="((SystemUtils.LINE_SEPARATOR) / &quot;  &quot;)" />
    <mutant id="mutant_7804" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="tokenStart - 1" />
    <mutant id="mutant_7803" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="tokenStart % 1" />
    <mutant id="mutant_7806" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="1" />
    <mutant id="mutant_7805" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="pos * 1" />
    <mutant id="mutant_7808" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="pos % 1" />
    <mutant id="mutant_7807" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="pos + 1" />
    <mutant id="mutant_7809" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="pos" />
    <mutant id="mutant_891" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="((&quot;\&quot;&quot; + value) - &quot;\&quot;&quot;)" />
    <mutant id="mutant_892" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="(&quot;\&quot;&quot; + value)" />
    <mutant id="mutant_893" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="&quot;\&quot;&quot;" />
    <mutant id="mutant_894" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="((SystemUtils.LINE_SEPARATOR) % &quot;  &quot;)" />
    <mutant id="mutant_7800" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="tokenStart * 1" />
    <mutant id="mutant_7802" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="tokenStart / 1" />
    <mutant id="mutant_890" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="((&quot;\&quot;&quot; + value) / &quot;\&quot;&quot;)" />
    <mutant id="mutant_7801" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="tokenStart" />
    <mutant id="mutant_7617" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="replLength" />
    <mutant id="mutant_7616" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="(replacement.length()) / replLength" />
    <mutant id="mutant_7619" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="(replacement.length()) + replLength" />
    <mutant id="mutant_7618" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="(replacement.length()) * replLength" />
    <mutant id="mutant_7611" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="(str * separator)" />
    <mutant id="mutant_7610" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="(str % separator)" />
    <mutant id="mutant_7613" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="(str - separator)" />
    <mutant id="mutant_7612" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="(str / separator)" />
    <mutant id="mutant_7615" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="replacement.length()" />
    <mutant id="mutant_7614" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="separator" />
    <mutant id="mutant_7606" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_7605" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="i" />
    <mutant id="mutant_7608" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_7607" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_7609" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="str" />
    <mutant id="mutant_7600" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="repeat * 2" />
    <mutant id="mutant_7602" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="(repeat * 2) / 2" />
    <mutant id="mutant_7601" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="(repeat * 2) + 2" />
    <mutant id="mutant_7604" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="1" />
    <mutant id="mutant_7603" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_7660" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="(replacementList[i].length()) + (searchList[i].length())" />
    <mutant id="mutant_6330" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) - 16)" />
    <mutant id="mutant_7662" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="3 + greater" />
    <mutant id="mutant_5000" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) % (ArrayUtils.toString(parameterTypes)))" />
    <mutant id="mutant_6331" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(nShorts - 1)" />
    <mutant id="mutant_7661" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="(replacementList[i].length()) % (searchList[i].length())" />
    <mutant id="mutant_6329" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts / 1)" />
    <mutant id="mutant_6321" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_7653" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) / replacementLength)" />
    <mutant id="mutant_6322" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_7652" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) % replacementLength)" />
    <mutant id="mutant_6323" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_7655" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) * replacementLength)" />
    <mutant id="mutant_6324" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="1" />
    <mutant id="mutant_7654" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) - replacementLength)" />
    <mutant id="mutant_6325" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts * 1)" />
    <mutant id="mutant_7657" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="replacementList[i].length()" />
    <mutant id="mutant_6326" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="nShorts" />
    <mutant id="mutant_7656" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" />
    <mutant id="mutant_6327" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts % 1)" />
    <mutant id="mutant_7659" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="(replacementList[i].length()) / (searchList[i].length())" />
    <mutant id="mutant_6328" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts + 1)" />
    <mutant id="mutant_7658" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="(replacementList[i].length()) * (searchList[i].length())" />
    <mutant id="mutant_7651" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="replacementLength" />
    <mutant id="mutant_6320" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_7650" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) / &quot; vs &quot;)" />
    <mutant id="mutant_6318" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_6319" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_7649" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" />
    <mutant id="mutant_6310" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_7642" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="(&quot;Search and Replace array lengths don\'t match: &quot; * searchLength)" />
    <mutant id="mutant_6311" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_7641" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="&quot;Search and Replace array lengths don\'t match: &quot;" />
    <mutant id="mutant_6312" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="(i * 4) - dstPos" />
    <mutant id="mutant_7644" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="searchLength" />
    <mutant id="mutant_6313" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="i * 4" />
    <mutant id="mutant_7643" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="(&quot;Search and Replace array lengths don\'t match: &quot; / searchLength)" />
    <mutant id="mutant_6314" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="dstPos" />
    <mutant id="mutant_7646" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) - &quot; vs &quot;)" />
    <mutant id="mutant_6315" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="(i * 4) / dstPos" />
    <mutant id="mutant_7645" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="&quot; vs &quot;" />
    <mutant id="mutant_6316" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="(i * 4) % dstPos" />
    <mutant id="mutant_7648" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) % &quot; vs &quot;)" />
    <mutant id="mutant_6317" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="(i * 4) * dstPos" />
    <mutant id="mutant_7647" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) * &quot; vs &quot;)" />
    <mutant id="mutant_7640" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="(&quot;Search and Replace array lengths don\'t match: &quot; % searchLength)" />
    <mutant id="mutant_6307" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_7639" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="(&quot;Search and Replace array lengths don\'t match: &quot; - searchLength)" />
    <mutant id="mutant_6308" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_7638" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="(&quot;Aborting to protect against StackOverflowError - &quot; - &quot;output of one loop is the input of another&quot;)" />
    <mutant id="mutant_6309" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_7631" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="end" />
    <mutant id="mutant_6300" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) % dstPos)" />
    <mutant id="mutant_7630" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="end * replLength" />
    <mutant id="mutant_6301" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) / dstPos)" />
    <mutant id="mutant_7633" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="(&quot;Aborting to protect against StackOverflowError - &quot; * &quot;output of one loop is the input of another&quot;)" />
    <mutant id="mutant_6302" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((nHex - 1) * 4)" />
    <mutant id="mutant_7632" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="end - replLength" />
    <mutant id="mutant_6303" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="dstPos" />
    <mutant id="mutant_7635" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="(&quot;Aborting to protect against StackOverflowError - &quot; / &quot;output of one loop is the input of another&quot;)" />
    <mutant id="mutant_6304" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) * dstPos)" />
    <mutant id="mutant_7634" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="(&quot;Aborting to protect against StackOverflowError - &quot; % &quot;output of one loop is the input of another&quot;)" />
    <mutant id="mutant_6305" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) - dstPos)" />
    <mutant id="mutant_7637" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="&quot;Aborting to protect against StackOverflowError - &quot;" />
    <mutant id="mutant_6306" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_7636" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="&quot;output of one loop is the input of another&quot;" />
    <mutant id="mutant_7628" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="replLength" />
    <mutant id="mutant_7627" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="end % replLength" />
    <mutant id="mutant_7629" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="end / replLength" />
    <mutant id="mutant_7620" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="(replacement.length()) % replLength" />
    <mutant id="mutant_7622" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="text.length()" />
    <mutant id="mutant_7621" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="((text.length()) % increase)" />
    <mutant id="mutant_7624" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="increase" />
    <mutant id="mutant_7623" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="((text.length()) - increase)" />
    <mutant id="mutant_7626" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="((text.length()) / increase)" />
    <mutant id="mutant_7625" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="((text.length()) * increase)" />
    <mutant id="mutant_6370" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) % 16)" />
    <mutant id="mutant_5040" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; - hexDigit)" />
    <mutant id="mutant_6371" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) + 16)" />
    <mutant id="mutant_5041" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="&quot;Cannot interpret \'&quot;" />
    <mutant id="mutant_6372" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) % srcPos)" />
    <mutant id="mutant_5042" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; % hexDigit)" />
    <mutant id="mutant_6373" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) / srcPos)" />
    <mutant id="mutant_5043" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; * hexDigit)" />
    <mutant id="mutant_6374" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) - srcPos)" />
    <mutant id="mutant_5044" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="hexDigit" />
    <mutant id="mutant_6375" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((nShorts - 1) * 16)" />
    <mutant id="mutant_5034" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(&quot;Cannot interpret \'&quot; + hexDigit)" />
    <mutant id="mutant_6365" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts / 1)" />
    <mutant id="mutant_7697" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="((str.length()) / len)" />
    <mutant id="mutant_5035" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) % &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6366" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) - 16)" />
    <mutant id="mutant_7696" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="((str.length()) * len)" />
    <mutant id="mutant_5036" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="&quot;\' as a hexadecimal digit&quot;" />
    <mutant id="mutant_6367" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(nShorts - 1)" />
    <mutant id="mutant_7699" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="str.length()" />
    <mutant id="mutant_5037" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) / &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6368" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="16" />
    <mutant id="mutant_7698" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="size % (str.length())" />
    <mutant id="mutant_5038" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6369" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) / 16)" />
    <mutant id="mutant_5039" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_7691" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="(timeToLive + 1)" />
    <mutant id="mutant_6360" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="1" />
    <mutant id="mutant_7690" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="(timeToLive / 1)" />
    <mutant id="mutant_5030" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; % hexDigit)" />
    <mutant id="mutant_6361" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts * 1)" />
    <mutant id="mutant_7693" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="((str.length()) % len)" />
    <mutant id="mutant_5031" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; * hexDigit)" />
    <mutant id="mutant_6362" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="nShorts" />
    <mutant id="mutant_7692" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="str.length()" />
    <mutant id="mutant_5032" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="hexDigit" />
    <mutant id="mutant_6363" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts % 1)" />
    <mutant id="mutant_7695" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="((str.length()) + len)" />
    <mutant id="mutant_5033" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; / hexDigit)" />
    <mutant id="mutant_6364" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="(nShorts + 1)" />
    <mutant id="mutant_7694" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="len" />
    <mutant id="mutant_5023" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_6354" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_7686" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="1" />
    <mutant id="mutant_5024" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_6355" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_7685" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="textIndex % (searchList[replaceIndex].length())" />
    <mutant id="mutant_5025" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_6356" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_7688" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="(timeToLive % 1)" />
    <mutant id="mutant_5026" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_6357" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_7687" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="(timeToLive * 1)" />
    <mutant id="mutant_5027" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_6358" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5028" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; - hexDigit)" />
    <mutant id="mutant_6359" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_7689" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="timeToLive" />
    <mutant id="mutant_5029" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="&quot;Cannot interpret \'&quot;" />
    <mutant id="mutant_7680" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="searchList[replaceIndex].length()" />
    <mutant id="mutant_6350" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="i * 16" />
    <mutant id="mutant_7682" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="textIndex" />
    <mutant id="mutant_5020" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="i - srcPos" />
    <mutant id="mutant_6351" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="srcPos" />
    <mutant id="mutant_7681" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="textIndex - (searchList[replaceIndex].length())" />
    <mutant id="mutant_5021" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="i * srcPos" />
    <mutant id="mutant_6352" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) / srcPos" />
    <mutant id="mutant_7684" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="textIndex / (searchList[replaceIndex].length())" />
    <mutant id="mutant_5022" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_6353" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) * srcPos" />
    <mutant id="mutant_7683" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="textIndex * (searchList[replaceIndex].length())" />
    <mutant id="mutant_5012" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) % srcPos)" />
    <mutant id="mutant_6343" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="16" />
    <mutant id="mutant_7675" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="text.length()" />
    <mutant id="mutant_5013" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="srcPos" />
    <mutant id="mutant_6344" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="(i / 16)" />
    <mutant id="mutant_7674" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="((text.length()) % increase)" />
    <mutant id="mutant_5014" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) / srcPos)" />
    <mutant id="mutant_6345" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="(i % 16)" />
    <mutant id="mutant_7677" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="increase" />
    <mutant id="mutant_5015" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) - srcPos)" />
    <mutant id="mutant_6346" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="(i - 16)" />
    <mutant id="mutant_7676" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="((text.length()) - increase)" />
    <mutant id="mutant_5016" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="i" />
    <mutant id="mutant_6347" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="(i + 16)" />
    <mutant id="mutant_7679" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="((text.length()) / increase)" />
    <mutant id="mutant_5017" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="i % srcPos" />
    <mutant id="mutant_6348" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) - srcPos" />
    <mutant id="mutant_7678" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="((text.length()) * increase)" />
    <mutant id="mutant_5018" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="i / srcPos" />
    <mutant id="mutant_6349" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) % srcPos" />
    <mutant id="mutant_5019" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="srcPos" />
    <mutant id="mutant_7671" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="((text.length()) + 5)" />
    <mutant id="mutant_6340" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="srcPos" />
    <mutant id="mutant_7670" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="((text.length()) - 5)" />
    <mutant id="mutant_5010" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) * srcPos)" />
    <mutant id="mutant_6341" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) * srcPos)" />
    <mutant id="mutant_7673" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="((text.length()) * 5)" />
    <mutant id="mutant_5011" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(nBools - 1)" />
    <mutant id="mutant_6342" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="i" />
    <mutant id="mutant_7672" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="((text.length()) % 5)" />
    <mutant id="mutant_5009" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_5001" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" />
    <mutant id="mutant_6332" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="16" />
    <mutant id="mutant_7664" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="3" />
    <mutant id="mutant_5002" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) - (ArrayUtils.toString(parameterTypes)))" />
    <mutant id="mutant_6333" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) / 16)" />
    <mutant id="mutant_7663" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="greater" />
    <mutant id="mutant_5003" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) / (ArrayUtils.toString(parameterTypes)))" />
    <mutant id="mutant_6334" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) % 16)" />
    <mutant id="mutant_7666" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="3 / greater" />
    <mutant id="mutant_5004" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6335" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) + 16)" />
    <mutant id="mutant_7665" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="3 - greater" />
    <mutant id="mutant_5005" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_6336" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) % srcPos)" />
    <mutant id="mutant_7668" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="text.length()" />
    <mutant id="mutant_5006" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_6337" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) / srcPos)" />
    <mutant id="mutant_7667" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="3 % greater" />
    <mutant id="mutant_5007" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_6338" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) - srcPos)" />
    <mutant id="mutant_5008" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_6339" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((nShorts - 1) * 16)" />
    <mutant id="mutant_7669" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="5" />
    <mutant id="mutant_5081" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_5082" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) * srcPos)" />
    <mutant id="mutant_5083" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(nBools - 1)" />
    <mutant id="mutant_5084" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) % srcPos)" />
    <mutant id="mutant_2809" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" />
    <mutant id="mutant_5085" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="srcPos" />
    <mutant id="mutant_2808" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="(printer.getLocale())" />
    <mutant id="mutant_5086" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) / srcPos)" />
    <mutant id="mutant_2807" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) * (printer.getLocale()))" />
    <mutant id="mutant_5087" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) - srcPos)" />
    <mutant id="mutant_2806" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) / &quot;,&quot;)" />
    <mutant id="mutant_5088" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="i" />
    <mutant id="mutant_5080" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_2805" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) - &quot;,&quot;)" />
    <mutant id="mutant_5078" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_2804" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_5079" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_2803" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) % &quot;,&quot;)" />
    <mutant id="mutant_2802" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" />
    <mutant id="mutant_2801" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) * &quot;,&quot;)" />
    <mutant id="mutant_2800" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="(printer.getPattern())" />
    <mutant id="mutant_5070" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5071" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5072" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_5073" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_5074" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5075" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_5076" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_5077" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_5067" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="srcPos" />
    <mutant id="mutant_6398" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="constant.ordinal()" />
    <mutant id="mutant_5068" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="i - srcPos" />
    <mutant id="mutant_6399" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="(constant.ordinal()) - (Long.SIZE)" />
    <mutant id="mutant_5069" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="i * srcPos" />
    <mutant id="mutant_6390" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5060" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) % srcPos)" />
    <mutant id="mutant_6391" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5061" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="srcPos" />
    <mutant id="mutant_6392" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_5062" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) / srcPos)" />
    <mutant id="mutant_6393" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_5063" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) - srcPos)" />
    <mutant id="mutant_6394" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5064" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="i" />
    <mutant id="mutant_6395" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_5065" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="i % srcPos" />
    <mutant id="mutant_6396" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="Long.SIZE" />
    <mutant id="mutant_5066" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="i / srcPos" />
    <mutant id="mutant_6397" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="(constant.ordinal()) * (Long.SIZE)" />
    <mutant id="mutant_5056" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_6387" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="srcPos" />
    <mutant id="mutant_5057" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_6388" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) / srcPos" />
    <mutant id="mutant_5058" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="((nBools - 1) * srcPos)" />
    <mutant id="mutant_6389" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) * srcPos" />
    <mutant id="mutant_5059" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(nBools - 1)" />
    <mutant id="mutant_6380" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="(i / 16)" />
    <mutant id="mutant_5050" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6381" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="(i % 16)" />
    <mutant id="mutant_5051" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6382" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="(i - 16)" />
    <mutant id="mutant_5052" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6383" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="(i + 16)" />
    <mutant id="mutant_5053" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_6384" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) - srcPos" />
    <mutant id="mutant_5054" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_6385" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="(i * 16) % srcPos" />
    <mutant id="mutant_5055" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_6386" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="i * 16" />
    <mutant id="mutant_5045" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; / hexDigit)" />
    <mutant id="mutant_6376" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="srcPos" />
    <mutant id="mutant_5046" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(&quot;Cannot interpret \'&quot; + hexDigit)" />
    <mutant id="mutant_6377" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="(((nShorts - 1) * 16) * srcPos)" />
    <mutant id="mutant_5047" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) % &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_6378" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="i" />
    <mutant id="mutant_5048" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="&quot;\' as a hexadecimal digit&quot;" />
    <mutant id="mutant_6379" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="16" />
    <mutant id="mutant_5049" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) / &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_1519" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) * 1)" />
    <mutant id="mutant_2841" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="((sb.length()) / 1)" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="size" />
    <mutant id="mutant_2840" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="sb.length()" />
    <mutant id="mutant_1517" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="remaining" />
    <mutant id="mutant_2849" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="(&quot;((?iu)&quot; / (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="1" />
    <mutant id="mutant_2848" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="value" />
    <mutant id="mutant_1515" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="((size) - remaining)" />
    <mutant id="mutant_2847" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; * value)" />
    <mutant id="mutant_1516" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="((size) * remaining)" />
    <mutant id="mutant_2846" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; - value)" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="((size) / remaining)" />
    <mutant id="mutant_2845" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="&quot;GMT&quot;" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="size" />
    <mutant id="mutant_2844" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; / value)" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) / 1)" />
    <mutant id="mutant_2843" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; % value)" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="((size) % remaining)" />
    <mutant id="mutant_2842" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="((sb.length()) % 1)" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) - 1)" />
    <mutant id="mutant_1509" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) % 1)" />
    <mutant id="mutant_2839" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="((sb.length()) + 1)" />
    <mutant id="mutant_2830" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) / &quot;]&quot;" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="1" />
    <mutant id="mutant_2838" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="((sb.length()) * 1)" />
    <mutant id="mutant_1507" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) * 1)" />
    <mutant id="mutant_2837" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="1" />
    <mutant id="mutant_1504" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="buffer.length" />
    <mutant id="mutant_2836" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="((regex.length()) % 1)" />
    <mutant id="mutant_1505" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) + (size))" />
    <mutant id="mutant_2835" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="((regex.length()) / 1)" />
    <mutant id="mutant_1502" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) / (size))" />
    <mutant id="mutant_2834" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="regex.length()" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) * (size))" />
    <mutant id="mutant_2833" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="((regex.length()) + 1)" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="size" />
    <mutant id="mutant_2832" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="((regex.length()) * 1)" />
    <mutant id="mutant_1501" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) % (size))" />
    <mutant id="mutant_2831" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="1" />
    <mutant id="mutant_2829" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) - &quot;]&quot;" />
    <mutant id="mutant_2828" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) * &quot;]&quot;" />
    <mutant id="mutant_2827" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="&quot;]&quot;" />
    <mutant id="mutant_2826" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())" />
    <mutant id="mutant_2825" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) % &quot;]&quot;" />
    <mutant id="mutant_2824" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) / (printer.getTimeZone().getID()))" />
    <mutant id="mutant_2823" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) * (printer.getTimeZone().getID()))" />
    <mutant id="mutant_2822" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" />
    <mutant id="mutant_2821" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) - (printer.getTimeZone().getID()))" />
    <mutant id="mutant_2820" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="(printer.getTimeZone().getID())" />
    <mutant id="mutant_5092" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="i - srcPos" />
    <mutant id="mutant_5093" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="i * srcPos" />
    <mutant id="mutant_5094" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5095" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5096" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_2819" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) % (printer.getTimeZone().getID()))" />
    <mutant id="mutant_5097" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_2818" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) / &quot;,&quot;)" />
    <mutant id="mutant_5098" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_2817" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) * &quot;,&quot;)" />
    <mutant id="mutant_5099" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_5090" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="i / srcPos" />
    <mutant id="mutant_5091" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="srcPos" />
    <mutant id="mutant_2816" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) - &quot;,&quot;)" />
    <mutant id="mutant_5089" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="i % srcPos" />
    <mutant id="mutant_2815" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_2814" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) % &quot;,&quot;)" />
    <mutant id="mutant_2813" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" />
    <mutant id="mutant_2812" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) % (printer.getLocale()))" />
    <mutant id="mutant_2811" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) - (printer.getLocale()))" />
    <mutant id="mutant_2810" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) / (printer.getLocale()))" />
    <mutant id="mutant_1553" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="index" />
    <mutant id="mutant_2885" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; % value)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="length" />
    <mutant id="mutant_2884" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)" />
    <mutant id="mutant_1551" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="((size) + index)" />
    <mutant id="mutant_2883" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) * &quot;)&quot;" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="((size) * index)" />
    <mutant id="mutant_2882" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="&quot;)&quot;" />
    <mutant id="mutant_2881" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) % &quot;)&quot;" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="((size) % index)" />
    <mutant id="mutant_2880" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) - &quot;)&quot;" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="((size) % length)" />
    <mutant id="mutant_1557" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="((size) * length)" />
    <mutant id="mutant_2889" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; * value)" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="((size) + length)" />
    <mutant id="mutant_2888" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; - value)" />
    <mutant id="mutant_1555" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="size" />
    <mutant id="mutant_2887" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="&quot;GMT&quot;" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="((size) / length)" />
    <mutant id="mutant_2886" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="(&quot;GMT&quot; / value)" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="(index % length)" />
    <mutant id="mutant_2874" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) * (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" />
    <mutant id="mutant_1543" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="(index * length)" />
    <mutant id="mutant_2873" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="(FastDateParser.TimeZoneStrategy.TZ_DATABASE)" />
    <mutant id="mutant_1540" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="startIndex" />
    <mutant id="mutant_2872" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="endIndex" />
    <mutant id="mutant_2871" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) % &quot;|&quot;)" />
    <mutant id="mutant_2870" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) / &quot;|&quot;)" />
    <mutant id="mutant_1548" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="((size) / index)" />
    <mutant id="mutant_1549" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="size" />
    <mutant id="mutant_2879" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) / &quot;)&quot;" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="index" />
    <mutant id="mutant_2878" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="(index / length)" />
    <mutant id="mutant_2877" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) % (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="length" />
    <mutant id="mutant_2876" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) - (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="(index - length)" />
    <mutant id="mutant_2875" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) / (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" />
    <mutant id="mutant_1531" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="size" />
    <mutant id="mutant_2863" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="(FastDateParser.TimeZoneStrategy.GMT_OPTION)" />
    <mutant id="mutant_1532" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="(size) / oldSize" />
    <mutant id="mutant_2862" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" />
    <mutant id="mutant_2861" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) * (FastDateParser.TimeZoneStrategy.GMT_OPTION))" />
    <mutant id="mutant_1530" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="(size) * oldSize" />
    <mutant id="mutant_2860" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) - &quot;|&quot;)" />
    <mutant id="mutant_1539" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="(endIndex % startIndex)" />
    <mutant id="mutant_1537" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="(endIndex / startIndex)" />
    <mutant id="mutant_2869" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="&quot;|&quot;" />
    <mutant id="mutant_1538" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="(endIndex * startIndex)" />
    <mutant id="mutant_2868" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) * &quot;|&quot;)" />
    <mutant id="mutant_1535" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="(size) + oldSize" />
    <mutant id="mutant_2867" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) - &quot;|&quot;)" />
    <mutant id="mutant_1536" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="(endIndex + startIndex)" />
    <mutant id="mutant_2866" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) % (FastDateParser.TimeZoneStrategy.GMT_OPTION))" />
    <mutant id="mutant_1533" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="(size) % oldSize" />
    <mutant id="mutant_2865" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) - (FastDateParser.TimeZoneStrategy.GMT_OPTION))" />
    <mutant id="mutant_1534" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="oldSize" />
    <mutant id="mutant_2864" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) / (FastDateParser.TimeZoneStrategy.GMT_OPTION))" />
    <mutant id="mutant_1520" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) - 1)" />
    <mutant id="mutant_2852" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="(&quot;((?iu)&quot; * (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" />
    <mutant id="mutant_1521" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) % 1)" />
    <mutant id="mutant_2851" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="(&quot;((?iu)&quot; - (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" />
    <mutant id="mutant_2850" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="(&quot;((?iu)&quot; % (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="buffer.length" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) + (size))" />
    <mutant id="mutant_2859" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) % &quot;|&quot;)" />
    <mutant id="mutant_1526" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) / (size))" />
    <mutant id="mutant_2858" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="&quot;|&quot;" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) * (size))" />
    <mutant id="mutant_2857" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="size" />
    <mutant id="mutant_2856" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) / &quot;|&quot;)" />
    <mutant id="mutant_1525" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="((buffer.length) % (size))" />
    <mutant id="mutant_2855" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) * &quot;|&quot;)" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="size" />
    <mutant id="mutant_2854" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="&quot;((?iu)&quot;" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) / 1)" />
    <mutant id="mutant_2853" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="(FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)" />
    <mutant id="mutant_1597" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="length" />
    <mutant id="mutant_1598" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="(startIndex * length)" />
    <mutant id="mutant_1595" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="&quot;Invalid startIndex: &quot;" />
    <mutant id="mutant_1596" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="(startIndex % length)" />
    <mutant id="mutant_1593" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="(&quot;Invalid startIndex: &quot; * length)" />
    <mutant id="mutant_1594" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="(&quot;Invalid startIndex: &quot; / length)" />
    <mutant id="mutant_1591" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="length" />
    <mutant id="mutant_1592" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="(&quot;Invalid startIndex: &quot; % length)" />
    <mutant id="mutant_1599" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="startIndex" />
    <mutant id="mutant_1590" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="(&quot;Invalid startIndex: &quot; - length)" />
    <mutant id="mutant_1586" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="(len - strLen)" />
    <mutant id="mutant_1587" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="(len % strLen)" />
    <mutant id="mutant_1584" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="len" />
    <mutant id="mutant_1585" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="(len / strLen)" />
    <mutant id="mutant_1582" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="(len - 1)" />
    <mutant id="mutant_1583" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="(len / 1)" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="len" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="(len % 1)" />
    <mutant id="mutant_1588" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="strLen" />
    <mutant id="mutant_1589" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="(len * strLen)" />
    <mutant id="mutant_1575" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="((size) * 5)" />
    <mutant id="mutant_1576" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="((size) - 5)" />
    <mutant id="mutant_1573" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="((size) / 5)" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="5" />
    <mutant id="mutant_1571" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="((size) - 4)" />
    <mutant id="mutant_1572" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="size" />
    <mutant id="mutant_1570" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="((size) % 4)" />
    <mutant id="mutant_1579" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="1" />
    <mutant id="mutant_1577" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="((size) % 5)" />
    <mutant id="mutant_1578" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="(len * 1)" />
    <mutant id="mutant_1564" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="startIndex" />
    <mutant id="mutant_2896" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="(value / &quot; is not a supported timezone name&quot;)" />
    <mutant id="mutant_1565" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="endIndex" />
    <mutant id="mutant_2895" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="value" />
    <mutant id="mutant_1562" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="(endIndex * startIndex)" />
    <mutant id="mutant_2894" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="(value - &quot; is not a supported timezone name&quot;)" />
    <mutant id="mutant_1563" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="(endIndex % startIndex)" />
    <mutant id="mutant_2893" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="(value * &quot; is not a supported timezone name&quot;)" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="(endIndex + startIndex)" />
    <mutant id="mutant_2892" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="(value % &quot; is not a supported timezone name&quot;)" />
    <mutant id="mutant_1561" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="(endIndex / startIndex)" />
    <mutant id="mutant_2891" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="&quot; is not a supported timezone name&quot;" />
    <mutant id="mutant_2890" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="value" />
    <mutant id="mutant_1568" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="4" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="((size) * 4)" />
    <mutant id="mutant_2899" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="iValue" />
    <mutant id="mutant_1566" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="((size) / 4)" />
    <mutant id="mutant_2898" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="iValue * 1" />
    <mutant id="mutant_1567" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="size" />
    <mutant id="mutant_2897" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="1" />
    <mutant id="mutant_7541" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="(len / start)" />
    <mutant id="mutant_6210" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="i" />
    <mutant id="mutant_7540" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="len" />
    <mutant id="mutant_6208" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((nShorts - 1) * 16)" />
    <mutant id="mutant_6209" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) * dstPos)" />
    <mutant id="mutant_7539" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="(len % start)" />
    <mutant id="mutant_6200" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="16" />
    <mutant id="mutant_7532" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos * len)" />
    <mutant id="mutant_6201" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) / 16)" />
    <mutant id="mutant_7531" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos - len)" />
    <mutant id="mutant_6202" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) % 16)" />
    <mutant id="mutant_7534" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="(whitespacesCount &gt; 0 ? 1 : 0)" />
    <mutant id="mutant_6203" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) + 16)" />
    <mutant id="mutant_7533" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="(count % (whitespacesCount &gt; 0 ? 1 : 0))" />
    <mutant id="mutant_6204" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) - dstPos)" />
    <mutant id="mutant_7536" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="count" />
    <mutant id="mutant_6205" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) / dstPos)" />
    <mutant id="mutant_7535" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="(count + (whitespacesCount &gt; 0 ? 1 : 0))" />
    <mutant id="mutant_6206" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) % dstPos)" />
    <mutant id="mutant_7538" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="(count / (whitespacesCount &gt; 0 ? 1 : 0))" />
    <mutant id="mutant_6207" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="dstPos" />
    <mutant id="mutant_7537" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="(count * (whitespacesCount &gt; 0 ? 1 : 0))" />
    <mutant id="mutant_7530" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="pos" />
    <mutant id="mutant_7529" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos % len)" />
    <mutant id="mutant_7528" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos / len)" />
    <mutant id="mutant_7521" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="len" />
    <mutant id="mutant_7520" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i - padLen)" />
    <mutant id="mutant_7523" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos % len)" />
    <mutant id="mutant_7522" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos / len)" />
    <mutant id="mutant_7525" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos - len)" />
    <mutant id="mutant_7524" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="pos" />
    <mutant id="mutant_7527" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="len" />
    <mutant id="mutant_7526" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="(pos * len)" />
    <mutant id="mutant_7518" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i / padLen)" />
    <mutant id="mutant_7517" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="padLen" />
    <mutant id="mutant_7519" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i * padLen)" />
    <mutant id="mutant_7510" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size" />
    <mutant id="mutant_7512" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size % strLen" />
    <mutant id="mutant_7511" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size / strLen" />
    <mutant id="mutant_7514" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="strLen" />
    <mutant id="mutant_7513" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size * strLen" />
    <mutant id="mutant_7516" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="i" />
    <mutant id="mutant_7515" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="(i + padLen)" />
    <mutant id="mutant_7507" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="size + (str.length())" />
    <mutant id="mutant_7506" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="size / (str.length())" />
    <mutant id="mutant_7509" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="size + strLen" />
    <mutant id="mutant_7508" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="size * (str.length())" />
    <mutant id="mutant_7501" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_7500" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_7503" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="size % (str.length())" />
    <mutant id="mutant_7502" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_7505" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="size" />
    <mutant id="mutant_7504" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="str.length()" />
    <mutant id="mutant_7581" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="repeat % 1" />
    <mutant id="mutant_6250" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_7580" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="repeat / 1" />
    <mutant id="mutant_6251" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_7583" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="repeat + 1" />
    <mutant id="mutant_6252" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_7582" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="repeat * 1" />
    <mutant id="mutant_6253" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_7585" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="inputLength / repeat" />
    <mutant id="mutant_6254" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_7584" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="repeat" />
    <mutant id="mutant_6244" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="i % dstPos" />
    <mutant id="mutant_7576" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) / (remove.length()))" />
    <mutant id="mutant_6245" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="i * dstPos" />
    <mutant id="mutant_7575" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) * (remove.length()))" />
    <mutant id="mutant_6246" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_7578" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) % (remove.length()))" />
    <mutant id="mutant_6247" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_7577" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) + (remove.length()))" />
    <mutant id="mutant_6248" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_6249" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_7579" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="1" />
    <mutant id="mutant_7570" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) * (remove.length()))" />
    <mutant id="mutant_6240" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="i" />
    <mutant id="mutant_7572" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) + (remove.length()))" />
    <mutant id="mutant_6241" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="dstPos" />
    <mutant id="mutant_7571" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) / (remove.length()))" />
    <mutant id="mutant_6242" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="i / dstPos" />
    <mutant id="mutant_7574" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="str.length()" />
    <mutant id="mutant_6243" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="i - dstPos" />
    <mutant id="mutant_7573" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="((str.length()) % (remove.length()))" />
    <mutant id="mutant_6233" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_7565" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="(prefix.toString()) / str" />
    <mutant id="mutant_6234" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="dstPos" />
    <mutant id="mutant_7564" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="prefix.toString()" />
    <mutant id="mutant_6235" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) / dstPos)" />
    <mutant id="mutant_7567" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="(prefix.toString()) * str" />
    <mutant id="mutant_6236" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="(nBools - 1)" />
    <mutant id="mutant_7566" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="(prefix.toString()) % str" />
    <mutant id="mutant_6237" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) % dstPos)" />
    <mutant id="mutant_7569" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="str.length()" />
    <mutant id="mutant_6238" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) * dstPos)" />
    <mutant id="mutant_7568" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="(prefix.toString()) - str" />
    <mutant id="mutant_6239" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) - dstPos)" />
    <mutant id="mutant_7561" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="((((len + start) - end) + (overlay.length())) / 1)" />
    <mutant id="mutant_6230" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_7560" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="((((len + start) - end) + (overlay.length())) - 1)" />
    <mutant id="mutant_6231" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_7563" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="str" />
    <mutant id="mutant_6232" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_7562" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="(((len + start) - end) + (overlay.length()))" />
    <mutant id="mutant_6222" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_7554" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="((len + start) - end)" />
    <mutant id="mutant_6223" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_7553" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="(((len + start) - end) - (overlay.length()))" />
    <mutant id="mutant_6224" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_7556" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="(((len + start) - end) * (overlay.length()))" />
    <mutant id="mutant_6225" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_7555" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="(((len + start) - end) / (overlay.length()))" />
    <mutant id="mutant_6226" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_7558" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="1" />
    <mutant id="mutant_6227" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_7557" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="((((len + start) - end) + (overlay.length())) * 1)" />
    <mutant id="mutant_6228" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_6229" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_7559" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="((((len + start) - end) + (overlay.length())) % 1)" />
    <mutant id="mutant_7550" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="(len + start)" />
    <mutant id="mutant_6220" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="i * 16" />
    <mutant id="mutant_7552" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="(((len + start) - end) % (overlay.length()))" />
    <mutant id="mutant_6221" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="(i * 16) - dstPos" />
    <mutant id="mutant_7551" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="(overlay.length())" />
    <mutant id="mutant_6219" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="(i * 16) % dstPos" />
    <mutant id="mutant_6211" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="16" />
    <mutant id="mutant_7543" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="start" />
    <mutant id="mutant_6212" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="(i / 16)" />
    <mutant id="mutant_7542" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="(len - start)" />
    <mutant id="mutant_6213" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="(i % 16)" />
    <mutant id="mutant_7545" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="((len + start) + end)" />
    <mutant id="mutant_6214" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="(i - 16)" />
    <mutant id="mutant_7544" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="(len * start)" />
    <mutant id="mutant_6215" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="(i + 16)" />
    <mutant id="mutant_7547" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="((len + start) % end)" />
    <mutant id="mutant_6216" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="(i * 16) * dstPos" />
    <mutant id="mutant_7546" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="((len + start) / end)" />
    <mutant id="mutant_6217" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="dstPos" />
    <mutant id="mutant_7549" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="end" />
    <mutant id="mutant_6218" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="(i * 16) / dstPos" />
    <mutant id="mutant_7548" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="((len + start) * end)" />
    <mutant id="mutant_6291" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="(nHex % 1)" />
    <mutant id="mutant_6292" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="(nHex + 1)" />
    <mutant id="mutant_6293" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="nHex" />
    <mutant id="mutant_6294" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) + 4)" />
    <mutant id="mutant_6295" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) / 4)" />
    <mutant id="mutant_6296" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="4" />
    <mutant id="mutant_6297" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="(nHex - 1)" />
    <mutant id="mutant_6298" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) % 4)" />
    <mutant id="mutant_6290" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="(nHex * 1)" />
    <mutant id="mutant_6288" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="1" />
    <mutant id="mutant_6289" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="(nHex / 1)" />
    <mutant id="mutant_6280" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="(i * 8) / dstPos" />
    <mutant id="mutant_6281" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="(i * 8) % dstPos" />
    <mutant id="mutant_6282" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_6283" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_6284" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_6285" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_6286" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_6287" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_6277" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="i * 8" />
    <mutant id="mutant_6278" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="dstPos" />
    <mutant id="mutant_6279" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="(i * 8) - dstPos" />
    <mutant id="mutant_6270" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_6271" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_6272" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_6273" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_6274" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_6275" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_6276" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="(i * 8) * dstPos" />
    <mutant id="mutant_6266" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="dstPos" />
    <mutant id="mutant_7598" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="(repeat * 2) % 2" />
    <mutant id="mutant_6267" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) / dstPos)" />
    <mutant id="mutant_7597" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="(repeat * 2) * 2" />
    <mutant id="mutant_6268" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) % dstPos)" />
    <mutant id="mutant_6269" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) * dstPos)" />
    <mutant id="mutant_7599" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="2" />
    <mutant id="mutant_7590" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="repeat" />
    <mutant id="mutant_6260" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_7592" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="2" />
    <mutant id="mutant_6261" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_7591" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="(repeat / 2)" />
    <mutant id="mutant_6262" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_7594" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="(repeat + 2)" />
    <mutant id="mutant_6263" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_7593" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="(repeat - 2)" />
    <mutant id="mutant_6264" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) - dstPos)" />
    <mutant id="mutant_7596" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="repeat" />
    <mutant id="mutant_6265" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_7595" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="(repeat % 2)" />
    <mutant id="mutant_6255" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_7587" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="inputLength % repeat" />
    <mutant id="mutant_6256" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_7586" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="inputLength - repeat" />
    <mutant id="mutant_6257" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_7589" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="inputLength + repeat" />
    <mutant id="mutant_6258" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_7588" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="inputLength" />
    <mutant id="mutant_6259" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_2729" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE)) + (start.get(Calendar.MINUTE))" />
    <mutant id="mutant_2720" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND)) * (start.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_2728" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE)) / (start.get(Calendar.MINUTE))" />
    <mutant id="mutant_2727" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND)) % (start.get(Calendar.SECOND))" />
    <mutant id="mutant_2726" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND)) + (start.get(Calendar.SECOND))" />
    <mutant id="mutant_2725" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND)) * (start.get(Calendar.SECOND))" />
    <mutant id="mutant_2724" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="end.get(Calendar.SECOND)" />
    <mutant id="mutant_2723" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND)) / (start.get(Calendar.SECOND))" />
    <mutant id="mutant_2722" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND)) + (start.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_2721" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND)) % (start.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_2719" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="end.get(Calendar.MILLISECOND)" />
    <mutant id="mutant_2718" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND)) / (start.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_2717" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; - duration" />
    <mutant id="mutant_2716" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; / duration" />
    <mutant id="mutant_2715" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; * duration" />
    <mutant id="mutant_2714" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="duration" />
    <mutant id="mutant_2713" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; % duration" />
    <mutant id="mutant_2712" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot;" />
    <mutant id="mutant_2711" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; - duration" />
    <mutant id="mutant_2710" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; / duration" />
    <mutant id="mutant_2709" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; * duration" />
    <mutant id="mutant_2708" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="duration" />
    <mutant id="mutant_2707" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot; % duration" />
    <mutant id="mutant_2706" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="&quot; &quot;" />
    <mutant id="mutant_2705" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="milliseconds + (seconds * (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_2704" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="milliseconds * (seconds * (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_2703" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="milliseconds % (seconds * (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_2702" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="seconds * (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_2701" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="milliseconds" />
    <mutant id="mutant_2700" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="milliseconds / (seconds * (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_6299" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) - 4)" />
    <mutant id="mutant_1432" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="((size) - strLen) / 1" />
    <mutant id="mutant_2764" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) + (start.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_1433" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="(size) - strLen" />
    <mutant id="mutant_2763" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="start.getActualMaximum(Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_1430" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="((size) - strLen) - 1" />
    <mutant id="mutant_2762" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) * (start.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_1431" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="((size) - strLen) % 1" />
    <mutant id="mutant_2761" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) / (start.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_2760" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="start.get(Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_1438" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="(i / j)" />
    <mutant id="mutant_1439" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="(i * j)" />
    <mutant id="mutant_2769" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="24" />
    <mutant id="mutant_1436" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="j" />
    <mutant id="mutant_2768" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="24 % days" />
    <mutant id="mutant_1437" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="i" />
    <mutant id="mutant_2767" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="24 + days" />
    <mutant id="mutant_1434" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="(i - j)" />
    <mutant id="mutant_2766" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="24 - days" />
    <mutant id="mutant_1435" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="(i % j)" />
    <mutant id="mutant_2765" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="24 / days" />
    <mutant id="mutant_1421" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="(31 * hash) / (buf[i])" />
    <mutant id="mutant_2753" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="12" />
    <mutant id="mutant_1422" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="((size) / strLen)" />
    <mutant id="mutant_2752" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR)) % (start.get(Calendar.YEAR))" />
    <mutant id="mutant_2751" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR)) / (start.get(Calendar.YEAR))" />
    <mutant id="mutant_1420" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="buf[i]" />
    <mutant id="mutant_2750" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR)) + (start.get(Calendar.YEAR))" />
    <mutant id="mutant_1429" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="1" />
    <mutant id="mutant_1427" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="strLen" />
    <mutant id="mutant_2759" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) % (start.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_1428" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="((size) - strLen) * 1" />
    <mutant id="mutant_2758" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="years" />
    <mutant id="mutant_1425" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="(size)" />
    <mutant id="mutant_2757" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="12 % years" />
    <mutant id="mutant_1426" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="((size) * strLen)" />
    <mutant id="mutant_2756" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="12 - years" />
    <mutant id="mutant_1423" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="((size) % strLen)" />
    <mutant id="mutant_2755" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="12 / years" />
    <mutant id="mutant_1424" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="((size) + strLen)" />
    <mutant id="mutant_2754" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="12 + years" />
    <mutant id="mutant_1410" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="hash" />
    <mutant id="mutant_2742" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH)) % (start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_1411" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="(31 / hash)" />
    <mutant id="mutant_2741" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH)) / (start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_2740" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="end.get(Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_1418" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="(31 * hash) * (buf[i])" />
    <mutant id="mutant_1419" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="(31 * hash) % (buf[i])" />
    <mutant id="mutant_2749" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="end.get(Calendar.YEAR)" />
    <mutant id="mutant_1416" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="31 * hash" />
    <mutant id="mutant_2748" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR)) * (start.get(Calendar.YEAR))" />
    <mutant id="mutant_1417" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="(31 * hash) - (buf[i])" />
    <mutant id="mutant_2747" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="end.get(Calendar.MONTH)" />
    <mutant id="mutant_1414" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="(31 - hash)" />
    <mutant id="mutant_2746" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH)) / (start.get(Calendar.MONTH))" />
    <mutant id="mutant_1415" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="31" />
    <mutant id="mutant_2745" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH)) % (start.get(Calendar.MONTH))" />
    <mutant id="mutant_1412" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="(31 % hash)" />
    <mutant id="mutant_2744" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH)) + (start.get(Calendar.MONTH))" />
    <mutant id="mutant_1413" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="(31 + hash)" />
    <mutant id="mutant_2743" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH)) * (start.get(Calendar.MONTH))" />
    <mutant id="mutant_1409" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_2731" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="end.get(Calendar.MINUTE)" />
    <mutant id="mutant_1400" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_2730" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE)) * (start.get(Calendar.MINUTE))" />
    <mutant id="mutant_1407" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="size" />
    <mutant id="mutant_2739" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH)) + (start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_1408" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_2738" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH)) * (start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_1405" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_2737" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY)) % (start.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_1406" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_2736" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY)) + (start.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_1403" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_2735" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY)) * (start.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_1404" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="1" />
    <mutant id="mutant_2734" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="end.get(Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_1401" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_2733" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY)) / (start.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_1402" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_2732" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE)) % (start.get(Calendar.MINUTE))" />
    <mutant id="mutant_1480" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="(i / j)" />
    <mutant id="mutant_1476" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="(i - j)" />
    <mutant id="mutant_1477" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="(i % j)" />
    <mutant id="mutant_1474" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="startIndex - strLen" />
    <mutant id="mutant_1475" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="(startIndex - strLen) - 1" />
    <mutant id="mutant_1472" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="(startIndex - strLen) * 1" />
    <mutant id="mutant_1473" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="(startIndex - strLen) % 1" />
    <mutant id="mutant_1470" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="(startIndex - strLen) / 1" />
    <mutant id="mutant_1471" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="1" />
    <mutant id="mutant_1478" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="j" />
    <mutant id="mutant_1479" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="i" />
    <mutant id="mutant_1465" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="(startIndex % strLen)" />
    <mutant id="mutant_2797" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="(&quot;FastDateFormat[&quot; - (printer.getPattern()))" />
    <mutant id="mutant_1466" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="(startIndex + strLen)" />
    <mutant id="mutant_2796" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="(&quot;FastDateFormat[&quot; % (printer.getPattern()))" />
    <mutant id="mutant_1463" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_2795" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="(&quot;FastDateFormat[&quot; / (printer.getPattern()))" />
    <mutant id="mutant_1464" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="(startIndex / strLen)" />
    <mutant id="mutant_2794" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="(&quot;Unmatched quote in format: &quot; - format)" />
    <mutant id="mutant_1461" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="size" />
    <mutant id="mutant_2793" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="(&quot;Unmatched quote in format: &quot; / format)" />
    <mutant id="mutant_1462" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_2792" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="&quot;Unmatched quote in format: &quot;" />
    <mutant id="mutant_2791" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="format" />
    <mutant id="mutant_1460" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_2790" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="(&quot;Unmatched quote in format: &quot; % format)" />
    <mutant id="mutant_1469" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="strLen" />
    <mutant id="mutant_1467" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="(startIndex * strLen)" />
    <mutant id="mutant_2799" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="(&quot;FastDateFormat[&quot; * (printer.getPattern()))" />
    <mutant id="mutant_1468" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="startIndex" />
    <mutant id="mutant_2798" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="&quot;FastDateFormat[&quot;" />
    <mutant id="mutant_1454" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="((size) % 1)" />
    <mutant id="mutant_2786" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="1000" />
    <mutant id="mutant_1455" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="size" />
    <mutant id="mutant_2785" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="1000 / seconds" />
    <mutant id="mutant_1452" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="1" />
    <mutant id="mutant_2784" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="1000 % seconds" />
    <mutant id="mutant_1453" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="((size) * 1)" />
    <mutant id="mutant_2783" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="1000 - seconds" />
    <mutant id="mutant_1450" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_2782" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="60 / minutes" />
    <mutant id="mutant_1451" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_2781" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="60 % minutes" />
    <mutant id="mutant_2780" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="60" />
    <mutant id="mutant_1458" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="1" />
    <mutant id="mutant_1459" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_2789" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="(&quot;Unmatched quote in format: &quot; * format)" />
    <mutant id="mutant_1456" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="((size) / 1)" />
    <mutant id="mutant_2788" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="seconds" />
    <mutant id="mutant_1457" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="((size) + 1)" />
    <mutant id="mutant_2787" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="1000 + seconds" />
    <mutant id="mutant_1443" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="size" />
    <mutant id="mutant_2775" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="60" />
    <mutant id="mutant_1444" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="((size) / 1)" />
    <mutant id="mutant_2774" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="60 % hours" />
    <mutant id="mutant_1441" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="((size) * 1)" />
    <mutant id="mutant_2773" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="60 - hours" />
    <mutant id="mutant_1442" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="((size) % 1)" />
    <mutant id="mutant_2772" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="hours" />
    <mutant id="mutant_2771" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="60 + hours" />
    <mutant id="mutant_1440" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="1" />
    <mutant id="mutant_2770" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="days" />
    <mutant id="mutant_1449" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="size" />
    <mutant id="mutant_1447" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_2779" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="60 + minutes" />
    <mutant id="mutant_1448" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_2778" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="minutes" />
    <mutant id="mutant_1445" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="((size) + 1)" />
    <mutant id="mutant_2777" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="60 - minutes" />
    <mutant id="mutant_1446" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="1" />
    <mutant id="mutant_2776" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="60 / hours" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="size" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) / 1)" />
    <mutant id="mutant_1496" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) - 1)" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) % 1)" />
    <mutant id="mutant_1494" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="1" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="((size) * 1)" />
    <mutant id="mutant_1492" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="startIndex * 1" />
    <mutant id="mutant_1493" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="startIndex" />
    <mutant id="mutant_1490" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="1" />
    <mutant id="mutant_1491" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="startIndex % 1" />
    <mutant id="mutant_1487" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_1488" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="startIndex / 1" />
    <mutant id="mutant_1485" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="size" />
    <mutant id="mutant_1486" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_1483" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_1484" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_1481" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="(i * j)" />
    <mutant id="mutant_1482" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="1" />
    <mutant id="mutant_1489" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="startIndex - 1" />
    <mutant id="mutant_1298" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="(&quot;Unterminated quoted string at position &quot; / start)" />
    <mutant id="mutant_1299" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="start" />
    <mutant id="mutant_1296" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="&quot;Unterminated quoted string at position &quot;" />
    <mutant id="mutant_1297" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="(&quot;Unterminated quoted string at position &quot; % start)" />
    <mutant id="mutant_1294" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="pos.getIndex()" />
    <mutant id="mutant_1295" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="((pos.getIndex()) / lastHold)" />
    <mutant id="mutant_1292" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="((pos.getIndex()) * lastHold)" />
    <mutant id="mutant_1293" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="((pos.getIndex()) + lastHold)" />
    <mutant id="mutant_1290" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="((pos.getIndex()) % lastHold)" />
    <mutant id="mutant_1291" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="lastHold" />
    <mutant id="mutant_1289" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; / start)" />
    <mutant id="mutant_1287" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="start" />
    <mutant id="mutant_1288" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="&quot;Unterminated format element at position &quot;" />
    <mutant id="mutant_1285" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; - start)" />
    <mutant id="mutant_1286" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; % start)" />
    <mutant id="mutant_1283" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="((pattern.length()) - 2)" />
    <mutant id="mutant_1284" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; * start)" />
    <mutant id="mutant_7420" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_7419" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_7418" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_7411" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_7410" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_7413" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_7412" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_7415" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_7414" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_7417" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_7416" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_7408" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_7407" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_7409" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_7400" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_7402" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_7401" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_7404" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_7403" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_7406" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_7405" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_7460" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6130" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) % 4)" />
    <mutant id="mutant_7462" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_6131" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) - 4)" />
    <mutant id="mutant_7461" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_6132" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) % dstPos)" />
    <mutant id="mutant_7464" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_6133" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) / dstPos)" />
    <mutant id="mutant_7463" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6123" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="(nHex % 1)" />
    <mutant id="mutant_7455" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6124" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="(nHex + 1)" />
    <mutant id="mutant_7454" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_6125" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="nHex" />
    <mutant id="mutant_7457" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_6126" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) + 4)" />
    <mutant id="mutant_7456" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6127" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) / 4)" />
    <mutant id="mutant_7459" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6128" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="4" />
    <mutant id="mutant_7458" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6129" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="(nHex - 1)" />
    <mutant id="mutant_7451" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6120" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="1" />
    <mutant id="mutant_7450" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_6121" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="(nHex / 1)" />
    <mutant id="mutant_7453" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_6122" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="(nHex * 1)" />
    <mutant id="mutant_7452" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_6112" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="(i * 8) / dstPos" />
    <mutant id="mutant_7444" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6113" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="(i * 8) % dstPos" />
    <mutant id="mutant_7443" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6114" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_7446" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6115" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_7445" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_6116" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_7448" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6117" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_7447" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6118" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_6119" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_7449" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_7440" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_6110" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="dstPos" />
    <mutant id="mutant_7442" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_6111" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="(i * 8) - dstPos" />
    <mutant id="mutant_7441" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_6109" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="i * 8" />
    <mutant id="mutant_6101" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) * dstPos)" />
    <mutant id="mutant_7433" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_6102" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="(i - 8)" />
    <mutant id="mutant_7432" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6103" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="(i % 8)" />
    <mutant id="mutant_7435" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6104" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="i" />
    <mutant id="mutant_7434" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6105" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="(i / 8)" />
    <mutant id="mutant_7437" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_6106" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="(i + 8)" />
    <mutant id="mutant_7436" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6107" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="8" />
    <mutant id="mutant_7439" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6108" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="(i * 8) * dstPos" />
    <mutant id="mutant_7438" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_7431" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6100" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) % dstPos)" />
    <mutant id="mutant_7430" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_7429" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_7422" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_7421" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_7424" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_7423" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_7426" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_7425" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_7428" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_7427" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6170" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="((nInts - 1) * 32)" />
    <mutant id="mutant_6171" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="dstPos" />
    <mutant id="mutant_6172" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="(((nInts - 1) * 32) * dstPos)" />
    <mutant id="mutant_6173" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="(((nInts - 1) * 32) / dstPos)" />
    <mutant id="mutant_6174" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="(i - 32)" />
    <mutant id="mutant_6175" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="i" />
    <mutant id="mutant_6176" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="(i / 32)" />
    <mutant id="mutant_6177" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="(i % 32)" />
    <mutant id="mutant_6167" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="32" />
    <mutant id="mutant_7499" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6168" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="(((nInts - 1) * 32) % dstPos)" />
    <mutant id="mutant_7498" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_6169" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="(((nInts - 1) * 32) - dstPos)" />
    <mutant id="mutant_7491" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6160" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="(nInts * 1)" />
    <mutant id="mutant_7490" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_6161" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="(nInts + 1)" />
    <mutant id="mutant_7493" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_6162" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) - 32)" />
    <mutant id="mutant_7492" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6163" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="(nInts - 1)" />
    <mutant id="mutant_7495" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6164" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) + 32)" />
    <mutant id="mutant_7494" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6165" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) % 32)" />
    <mutant id="mutant_7497" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_6166" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) / 32)" />
    <mutant id="mutant_7496" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6156" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="nInts" />
    <mutant id="mutant_7488" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_6157" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="1" />
    <mutant id="mutant_7487" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6158" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="(nInts / 1)" />
    <mutant id="mutant_6159" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="(nInts % 1)" />
    <mutant id="mutant_7489" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_7480" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6150" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_7482" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6151" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_7481" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_6152" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_7484" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6153" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_7483" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6154" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_7486" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_6155" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_7485" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_6145" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="i * 4" />
    <mutant id="mutant_7477" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_6146" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="dstPos" />
    <mutant id="mutant_7476" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="(noOfItems % 16)" />
    <mutant id="mutant_6147" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="(i * 4) / dstPos" />
    <mutant id="mutant_7479" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6148" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="(i * 4) % dstPos" />
    <mutant id="mutant_7478" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_6149" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="(i * 4) * dstPos" />
    <mutant id="mutant_7471" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6140" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_7470" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6141" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_7473" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="(noOfItems + 16)" />
    <mutant id="mutant_6142" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_7472" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="endIndex" />
    <mutant id="mutant_6143" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_7475" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="noOfItems" />
    <mutant id="mutant_6144" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="(i * 4) - dstPos" />
    <mutant id="mutant_7474" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="16" />
    <mutant id="mutant_6134" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((nHex - 1) * 4)" />
    <mutant id="mutant_7466" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems - 16)" />
    <mutant id="mutant_6135" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="dstPos" />
    <mutant id="mutant_7465" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="(noOfItems / 16)" />
    <mutant id="mutant_6136" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) * dstPos)" />
    <mutant id="mutant_7468" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6137" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) - dstPos)" />
    <mutant id="mutant_7467" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6138" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_6139" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_7469" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_2608" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="(max + min)" />
    <mutant id="mutant_2609" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="(max / min)" />
    <mutant id="mutant_3939" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end % index)" />
    <mutant id="mutant_3930" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="(indices.length) + 1" />
    <mutant id="mutant_2606" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="min" />
    <mutant id="mutant_3938" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end + index)" />
    <mutant id="mutant_2607" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="(max * min)" />
    <mutant id="mutant_3937" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end * index)" />
    <mutant id="mutant_2604" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="(max % min)" />
    <mutant id="mutant_3936" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="end" />
    <mutant id="mutant_2605" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="max" />
    <mutant id="mutant_3935" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="index" />
    <mutant id="mutant_2602" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="(val.get(aField[0])) % min" />
    <mutant id="mutant_3934" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end / index)" />
    <mutant id="mutant_2603" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="val.get(aField[0])" />
    <mutant id="mutant_3933" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end % index)" />
    <mutant id="mutant_2600" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="min" />
    <mutant id="mutant_3932" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end + index)" />
    <mutant id="mutant_2601" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="(val.get(aField[0])) + min" />
    <mutant id="mutant_3931" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="indices.length" />
    <mutant id="mutant_3929" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="(indices.length) * 1" />
    <mutant id="mutant_3928" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="(indices.length) % 1" />
    <mutant id="mutant_3927" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="1" />
    <mutant id="mutant_3926" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="(indices.length) / 1" />
    <mutant id="mutant_3925" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="length + diff" />
    <mutant id="mutant_3924" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="diff" />
    <mutant id="mutant_3923" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="length % diff" />
    <mutant id="mutant_3922" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="length * diff" />
    <mutant id="mutant_3921" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="length / diff" />
    <mutant id="mutant_3920" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="length" />
    <mutant id="mutant_6192" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="1" />
    <mutant id="mutant_6193" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="(nShorts * 1)" />
    <mutant id="mutant_6194" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="nShorts" />
    <mutant id="mutant_6195" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="(nShorts % 1)" />
    <mutant id="mutant_6196" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="(nShorts + 1)" />
    <mutant id="mutant_3919" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="(length + diff)" />
    <mutant id="mutant_6197" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="(nShorts / 1)" />
    <mutant id="mutant_3918" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="diff" />
    <mutant id="mutant_6198" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) - 16)" />
    <mutant id="mutant_3917" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="(length % diff)" />
    <mutant id="mutant_6199" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="(nShorts - 1)" />
    <mutant id="mutant_6190" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_6191" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_3916" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="(length * diff)" />
    <mutant id="mutant_6189" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_3915" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="(length / diff)" />
    <mutant id="mutant_3914" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="length" />
    <mutant id="mutant_3913" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) % length)" />
    <mutant id="mutant_3912" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * length)" />
    <mutant id="mutant_3911" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="length" />
    <mutant id="mutant_3910" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" />
    <mutant id="mutant_6181" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="(i * 32) / dstPos" />
    <mutant id="mutant_6182" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="i * 32" />
    <mutant id="mutant_6183" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="dstPos" />
    <mutant id="mutant_6184" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="(i * 32) - dstPos" />
    <mutant id="mutant_3909" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - length)" />
    <mutant id="mutant_6185" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="(i * 32) * dstPos" />
    <mutant id="mutant_3908" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) / length)" />
    <mutant id="mutant_6186" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_3907" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="&quot;, Length: &quot;" />
    <mutant id="mutant_6187" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_3906" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) * &quot;, Length: &quot;)" />
    <mutant id="mutant_6188" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_6180" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="(i * 32) % dstPos" />
    <mutant id="mutant_3905" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) / &quot;, Length: &quot;)" />
    <mutant id="mutant_6178" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="(i + 32)" />
    <mutant id="mutant_3904" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) % &quot;, Length: &quot;)" />
    <mutant id="mutant_6179" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="32" />
    <mutant id="mutant_3903" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(&quot;Index: &quot; + index)" />
    <mutant id="mutant_3902" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) - &quot;, Length: &quot;)" />
    <mutant id="mutant_3901" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; / index)" />
    <mutant id="mutant_3900" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="index" />
    <mutant id="mutant_1311" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="pos.getIndex()" />
    <mutant id="mutant_2642" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="(DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3974" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="((array.length) + 1.5)" />
    <mutant id="mutant_1312" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="((pos.getIndex()) / 1)" />
    <mutant id="mutant_2643" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="(days % (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3973" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcLength % srcIndex" />
    <mutant id="mutant_2640" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="(days - (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3972" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcLength" />
    <mutant id="mutant_1310" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="((pos.getIndex()) % 1)" />
    <mutant id="mutant_2641" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="days" />
    <mutant id="mutant_3971" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcLength / srcIndex" />
    <mutant id="mutant_3970" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcLength * srcIndex" />
    <mutant id="mutant_1319" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="(&quot;Unreadable format element at position &quot; / start)" />
    <mutant id="mutant_1317" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="start" />
    <mutant id="mutant_2648" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="milliseconds" />
    <mutant id="mutant_1318" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="(&quot;Unreadable format element at position &quot; * start)" />
    <mutant id="mutant_2649" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="milliseconds % (days * (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3979" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="((array.length) / 1.5)" />
    <mutant id="mutant_1315" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="(&quot;Unreadable format element at position &quot; % start)" />
    <mutant id="mutant_2646" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="milliseconds / (days * (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3978" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="((array.length) - 1.5)" />
    <mutant id="mutant_1316" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="(&quot;Unreadable format element at position &quot; - start)" />
    <mutant id="mutant_2647" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="milliseconds + (days * (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3977" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="array.length" />
    <mutant id="mutant_1313" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="((pos.getIndex()) - 1)" />
    <mutant id="mutant_2644" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="(days / (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3976" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="1.5" />
    <mutant id="mutant_1314" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="&quot;Unreadable format element at position &quot;" />
    <mutant id="mutant_2645" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="(days + (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3975" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="((array.length) % 1.5)" />
    <mutant id="mutant_1300" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="(&quot;Unterminated quoted string at position &quot; * start)" />
    <mutant id="mutant_2631" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="((&quot;The field &quot; + field) % &quot; is not supported&quot;)" />
    <mutant id="mutant_3963" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="set % srcIndex" />
    <mutant id="mutant_1301" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="(&quot;Unterminated quoted string at position &quot; - start)" />
    <mutant id="mutant_2632" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="((&quot;The field &quot; + field) * &quot; is not supported&quot;)" />
    <mutant id="mutant_3962" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="srcIndex" />
    <mutant id="mutant_3961" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="removals" />
    <mutant id="mutant_2630" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="((&quot;The field &quot; + field) - &quot; is not supported&quot;)" />
    <mutant id="mutant_3960" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="(srcLength % removals)" />
    <mutant id="mutant_1308" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="1" />
    <mutant id="mutant_2639" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="DateUtils.MILLIS_PER_DAY" />
    <mutant id="mutant_1309" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="((pos.getIndex()) * 1)" />
    <mutant id="mutant_1306" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_2637" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="milliseconds - (DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3969" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcIndex" />
    <mutant id="mutant_1307" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_2638" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="milliseconds" />
    <mutant id="mutant_3968" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="srcLength + srcIndex" />
    <mutant id="mutant_1304" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="i" />
    <mutant id="mutant_2635" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="milliseconds % (DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3967" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="set / srcIndex" />
    <mutant id="mutant_1305" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_2636" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="milliseconds * (DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3966" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="set * srcIndex" />
    <mutant id="mutant_1302" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_2633" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="&quot; is not supported&quot;" />
    <mutant id="mutant_3965" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="set" />
    <mutant id="mutant_1303" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="1" />
    <mutant id="mutant_2634" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="milliseconds + (DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3964" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="set + srcIndex" />
    <mutant id="mutant_2620" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="offset" />
    <mutant id="mutant_3952" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2621" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="val.get(aField[0])" />
    <mutant id="mutant_3951" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_3950" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="1" />
    <mutant id="mutant_2628" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="(&quot;The field &quot; + field)" />
    <mutant id="mutant_2629" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="((&quot;The field &quot; + field) / &quot; is not supported&quot;)" />
    <mutant id="mutant_3959" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="(srcLength * removals)" />
    <mutant id="mutant_2626" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="(&quot;The field &quot; - field)" />
    <mutant id="mutant_3958" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="(srcLength / removals)" />
    <mutant id="mutant_2627" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="(&quot;The field &quot; * field)" />
    <mutant id="mutant_3957" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="srcLength" />
    <mutant id="mutant_2624" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="&quot;The field &quot;" />
    <mutant id="mutant_3956" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="(srcLength + removals)" />
    <mutant id="mutant_2625" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="field" />
    <mutant id="mutant_3955" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2622" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="(&quot;The field &quot; % field)" />
    <mutant id="mutant_3954" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="index" />
    <mutant id="mutant_2623" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="(&quot;The field &quot; / field)" />
    <mutant id="mutant_3953" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2619" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="((val.get(aField[0])) / offset)" />
    <mutant id="mutant_3941" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="index" />
    <mutant id="mutant_2610" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="((max - min) * 2)" />
    <mutant id="mutant_3940" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end / index)" />
    <mutant id="mutant_2617" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="((val.get(aField[0])) + offset)" />
    <mutant id="mutant_3949" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="end - index" />
    <mutant id="mutant_2618" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="((val.get(aField[0])) % offset)" />
    <mutant id="mutant_3948" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="(end - index) * 1" />
    <mutant id="mutant_2615" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="(max - min)" />
    <mutant id="mutant_3947" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="(end - index) + 1" />
    <mutant id="mutant_2616" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="((val.get(aField[0])) * offset)" />
    <mutant id="mutant_3946" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="(end - index) % 1" />
    <mutant id="mutant_2613" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="((max - min) % 2)" />
    <mutant id="mutant_3945" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="1" />
    <mutant id="mutant_2614" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="((max - min) - 2)" />
    <mutant id="mutant_3944" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="(end - index) / 1" />
    <mutant id="mutant_2611" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="2" />
    <mutant id="mutant_3943" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="(end * index)" />
    <mutant id="mutant_2612" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="((max - min) + 2)" />
    <mutant id="mutant_3942" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="end" />
    <mutant id="mutant_2690" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="milliseconds + (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1355" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) * (pos)" />
    <mutant id="mutant_2686" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="milliseconds % (minutes * (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1356" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="len" />
    <mutant id="mutant_2687" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="milliseconds * (minutes * (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1353" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) % (pos)" />
    <mutant id="mutant_2684" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="milliseconds" />
    <mutant id="mutant_1354" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) / (pos)" />
    <mutant id="mutant_2685" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="minutes * (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_1351" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="pos" />
    <mutant id="mutant_2682" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="milliseconds + (minutes * (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1352" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) + (pos)" />
    <mutant id="mutant_2683" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="milliseconds / (minutes * (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_2680" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_1350" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="org.apache.commons.lang3.text.StrBuilder.this.size()" />
    <mutant id="mutant_2681" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(minutes - (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1359" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) * len)" />
    <mutant id="mutant_1357" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) % len)" />
    <mutant id="mutant_2688" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="milliseconds * (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1358" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="pos" />
    <mutant id="mutant_2689" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="milliseconds" />
    <mutant id="mutant_1344" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="len" />
    <mutant id="mutant_2675" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="milliseconds % (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_1345" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) % len)" />
    <mutant id="mutant_2676" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(minutes / (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1342" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="off" />
    <mutant id="mutant_2673" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="milliseconds - (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_1343" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off * len)" />
    <mutant id="mutant_2674" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="DateUtils.MILLIS_PER_MINUTE" />
    <mutant id="mutant_1340" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="len" />
    <mutant id="mutant_2671" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="milliseconds" />
    <mutant id="mutant_1341" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off / len)" />
    <mutant id="mutant_2672" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="milliseconds + (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_2670" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="milliseconds * (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_1348" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) - len)" />
    <mutant id="mutant_2679" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="minutes" />
    <mutant id="mutant_1349" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) / len)" />
    <mutant id="mutant_1346" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(pos)" />
    <mutant id="mutant_2677" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(minutes + (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1347" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) * len)" />
    <mutant id="mutant_2678" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(minutes % (DateUtils.MILLIS_PER_MINUTE))" />
    <mutant id="mutant_1333" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off % len)" />
    <mutant id="mutant_2664" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="milliseconds / (hours * (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3996" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="object" />
    <mutant id="mutant_1334" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="len" />
    <mutant id="mutant_2665" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="hours * (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3995" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) - object)" />
    <mutant id="mutant_1331" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="(precision % (_ellipsis.length()))" />
    <mutant id="mutant_2662" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="(hours - (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3994" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" />
    <mutant id="mutant_1332" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off - len)" />
    <mutant id="mutant_2663" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="(hours % (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3993" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) % object)" />
    <mutant id="mutant_2660" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="hours" />
    <mutant id="mutant_3992" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) * object)" />
    <mutant id="mutant_1330" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="(precision + (_ellipsis.length()))" />
    <mutant id="mutant_2661" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="(hours / (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3991" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) % &quot;, \'&quot;)" />
    <mutant id="mutant_3990" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) / &quot;, \'&quot;)" />
    <mutant id="mutant_1339" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off % len)" />
    <mutant id="mutant_1337" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off * len)" />
    <mutant id="mutant_2668" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="milliseconds + (hours * (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_1338" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off - len)" />
    <mutant id="mutant_2669" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="milliseconds % (hours * (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3999" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) % &quot;\', has a length less than 2&quot;)" />
    <mutant id="mutant_1335" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="(off / len)" />
    <mutant id="mutant_2666" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="milliseconds" />
    <mutant id="mutant_3998" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) - &quot;\', has a length less than 2&quot;)" />
    <mutant id="mutant_1336" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="off" />
    <mutant id="mutant_2667" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="milliseconds * (hours * (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_3997" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) / object)" />
    <mutant id="mutant_1322" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="((pos.getIndex()) - len)" />
    <mutant id="mutant_2653" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="milliseconds * (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3985" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; % i)" />
    <mutant id="mutant_1323" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="pos.getIndex()" />
    <mutant id="mutant_2654" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="milliseconds" />
    <mutant id="mutant_3984" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="&quot;Array element &quot;" />
    <mutant id="mutant_1320" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="((pos.getIndex()) * len)" />
    <mutant id="mutant_2651" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="milliseconds * (days * (DateUtils.MILLIS_PER_DAY))" />
    <mutant id="mutant_3983" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; * i)" />
    <mutant id="mutant_1321" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="len" />
    <mutant id="mutant_2652" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="DateUtils.MILLIS_PER_HOUR" />
    <mutant id="mutant_3982" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; - i)" />
    <mutant id="mutant_3981" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="(&quot;Array element &quot; / i)" />
    <mutant id="mutant_2650" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="days * (DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_3980" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="i" />
    <mutant id="mutant_1328" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="(precision / (_ellipsis.length()))" />
    <mutant id="mutant_2659" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="(hours + (DateUtils.MILLIS_PER_HOUR))" />
    <mutant id="mutant_1329" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="precision" />
    <mutant id="mutant_1326" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="(precision * (_ellipsis.length()))" />
    <mutant id="mutant_2657" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="milliseconds % (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3989" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(&quot;Array element &quot; + i)" />
    <mutant id="mutant_1327" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="_ellipsis.length()" />
    <mutant id="mutant_2658" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="(DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3988" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) - &quot;, \'&quot;)" />
    <mutant id="mutant_1324" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="((pos.getIndex()) % len)" />
    <mutant id="mutant_2655" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="milliseconds - (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3987" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="((&quot;Array element &quot; + i) * &quot;, \'&quot;)" />
    <mutant id="mutant_1325" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="((pos.getIndex()) / len)" />
    <mutant id="mutant_2656" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="milliseconds + (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3986" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="&quot;, \'&quot;" />
    <mutant id="mutant_1399" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_1397" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_1398" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_1395" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="size" />
    <mutant id="mutant_1396" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_1393" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_1394" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_1391" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_1392" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="1" />
    <mutant id="mutant_1390" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_1388" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_1389" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="size" />
    <mutant id="mutant_1386" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="1" />
    <mutant id="mutant_1387" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_1384" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="(size) % len" />
    <mutant id="mutant_1385" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="(size) / len" />
    <mutant id="mutant_1382" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="size" />
    <mutant id="mutant_1383" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="(size) * len" />
    <mutant id="mutant_1380" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="(size) + len" />
    <mutant id="mutant_1381" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="len" />
    <mutant id="mutant_1377" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="(str.length()) % (StrBuilder.CAPACITY)" />
    <mutant id="mutant_1378" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="StrBuilder.CAPACITY" />
    <mutant id="mutant_1375" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="(str.length()) * (StrBuilder.CAPACITY)" />
    <mutant id="mutant_1376" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="(str.length()) / (StrBuilder.CAPACITY)" />
    <mutant id="mutant_1373" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) * (pos)" />
    <mutant id="mutant_1374" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="str.length()" />
    <mutant id="mutant_1371" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) % (pos)" />
    <mutant id="mutant_1372" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) / (pos)" />
    <mutant id="mutant_1379" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="(str.length()) - (StrBuilder.CAPACITY)" />
    <mutant id="mutant_1370" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="(org.apache.commons.lang3.text.StrBuilder.this.size()) + (pos)" />
    <mutant id="mutant_1366" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="((pos) % n)" />
    <mutant id="mutant_2697" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="(seconds % (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_1367" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="((pos) / n)" />
    <mutant id="mutant_2698" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="(DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1364" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="((pos) * n)" />
    <mutant id="mutant_2695" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="(seconds / (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_1365" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="((pos) - n)" />
    <mutant id="mutant_2696" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="(seconds + (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_1362" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="n" />
    <mutant id="mutant_2693" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="milliseconds % (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1363" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="(pos)" />
    <mutant id="mutant_2694" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="(seconds - (DateUtils.MILLIS_PER_SECOND))" />
    <mutant id="mutant_1360" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) - len)" />
    <mutant id="mutant_2691" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="milliseconds - (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1361" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="((pos) / len)" />
    <mutant id="mutant_2692" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="DateUtils.MILLIS_PER_SECOND" />
    <mutant id="mutant_1368" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="org.apache.commons.lang3.text.StrBuilder.this.size()" />
    <mutant id="mutant_2699" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="seconds" />
    <mutant id="mutant_1369" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="pos" />
    <mutant id="mutant_1199" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1197" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_1198" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_1195" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_1196" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_1193" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1194" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_1191" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_1192" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_1190" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_1188" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_1189" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_1186" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(index + i)" />
    <mutant id="mutant_1187" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) % 4)" />
    <mutant id="mutant_1184" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) - 4)" />
    <mutant id="mutant_1185" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) * 4)" />
    <mutant id="mutant_1182" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) / 4)" />
    <mutant id="mutant_1183" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="4" />
    <mutant id="mutant_1180" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_1181" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1179" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_1177" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_1178" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_1175" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1176" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_1173" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_1174" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_1171" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_1172" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_1170" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_1168" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_2499" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="(&quot;Could not truncate &quot; - date)" />
    <mutant id="mutant_1169" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1166" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_2497" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="&quot;Could not truncate &quot;" />
    <mutant id="mutant_1167" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_2498" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="(&quot;Could not truncate &quot; / date)" />
    <mutant id="mutant_1164" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_2495" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="date" />
    <mutant id="mutant_1165" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_2496" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="(&quot;Could not truncate &quot; % date)" />
    <mutant id="mutant_1162" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_2493" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="&quot;Could not round &quot;" />
    <mutant id="mutant_1163" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_2494" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="(&quot;Could not round &quot; % date)" />
    <mutant id="mutant_7341" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="2" />
    <mutant id="mutant_6010" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs % 1)" />
    <mutant id="mutant_7340" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="strLen" />
    <mutant id="mutant_6011" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs / 1)" />
    <mutant id="mutant_7343" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="(pads % 2)" />
    <mutant id="mutant_6012" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="4" />
    <mutant id="mutant_7342" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="pads" />
    <mutant id="mutant_6002" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_7334" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="strLen" />
    <mutant id="mutant_6003" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_7333" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="(strLen - (pads / 2))" />
    <mutant id="mutant_6004" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_7336" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="size" />
    <mutant id="mutant_6005" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_7335" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="size + strLen" />
    <mutant id="mutant_6006" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs + 1)" />
    <mutant id="mutant_7338" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="size % strLen" />
    <mutant id="mutant_6007" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="1" />
    <mutant id="mutant_7337" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="size / strLen" />
    <mutant id="mutant_6008" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs * 1)" />
    <mutant id="mutant_6009" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="nHexs" />
    <mutant id="mutant_7339" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="size * strLen" />
    <mutant id="mutant_7330" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="(pads / 2)" />
    <mutant id="mutant_6000" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_7332" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="(strLen / (pads / 2))" />
    <mutant id="mutant_6001" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_7331" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="(strLen % (pads / 2))" />
    <mutant id="mutant_7323" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="2" />
    <mutant id="mutant_7322" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="strLen" />
    <mutant id="mutant_7325" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="(pads % 2)" />
    <mutant id="mutant_7324" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="pads" />
    <mutant id="mutant_7327" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="(pads * 2)" />
    <mutant id="mutant_7326" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="(pads - 2)" />
    <mutant id="mutant_7329" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="(strLen * (pads / 2))" />
    <mutant id="mutant_7328" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="(pads + 2)" />
    <mutant id="mutant_7321" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="size * strLen" />
    <mutant id="mutant_7320" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="size % strLen" />
    <mutant id="mutant_7319" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="size / strLen" />
    <mutant id="mutant_7312" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="str % (suffix.toString())" />
    <mutant id="mutant_7311" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="str - (suffix.toString())" />
    <mutant id="mutant_7314" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="suffix.toString()" />
    <mutant id="mutant_7313" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="str" />
    <mutant id="mutant_7316" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="str / (suffix.toString())" />
    <mutant id="mutant_7315" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="str * (suffix.toString())" />
    <mutant id="mutant_7318" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="size" />
    <mutant id="mutant_7317" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="size + strLen" />
    <mutant id="mutant_7310" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="(str.length()) / (targetSting / 2)" />
    <mutant id="mutant_7309" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="(str.length()) * (targetSting / 2)" />
    <mutant id="mutant_7308" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="targetSting / 2" />
    <mutant id="mutant_7301" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting - 2)" />
    <mutant id="mutant_7300" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting % 2)" />
    <mutant id="mutant_7303" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="targetSting" />
    <mutant id="mutant_7302" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting * 2)" />
    <mutant id="mutant_7305" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="(str.length()) % (targetSting / 2)" />
    <mutant id="mutant_7304" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting + 2)" />
    <mutant id="mutant_7307" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="(str.length()) + (targetSting / 2)" />
    <mutant id="mutant_7306" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="str.length()" />
    <mutant id="mutant_7381" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx / 1)" />
    <mutant id="mutant_6050" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="srcPos" />
    <mutant id="mutant_7380" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx % 1)" />
    <mutant id="mutant_6051" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="(src.length)" />
    <mutant id="mutant_7383" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="(i / limit)" />
    <mutant id="mutant_6052" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="((src.length) + srcPos)" />
    <mutant id="mutant_7382" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx * 1)" />
    <mutant id="mutant_6053" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="((src.length) / srcPos)" />
    <mutant id="mutant_7385" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="i" />
    <mutant id="mutant_6054" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="8" />
    <mutant id="mutant_7384" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="(i * limit)" />
    <mutant id="mutant_6055" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="srcPos" />
    <mutant id="mutant_7387" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="(i + limit)" />
    <mutant id="mutant_6056" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="(srcPos % 8)" />
    <mutant id="mutant_7386" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="(i % limit)" />
    <mutant id="mutant_6046" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_7378" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="lastIdx" />
    <mutant id="mutant_6047" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_7377" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="1" />
    <mutant id="mutant_6048" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="((src.length) % srcPos)" />
    <mutant id="mutant_6049" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="((src.length) * srcPos)" />
    <mutant id="mutant_7379" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx + 1)" />
    <mutant id="mutant_7370" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="strLen" />
    <mutant id="mutant_6040" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_7372" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="lastIdx" />
    <mutant id="mutant_6041" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_7371" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="1" />
    <mutant id="mutant_6042" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_7374" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx % 1)" />
    <mutant id="mutant_6043" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_7373" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx + 1)" />
    <mutant id="mutant_6044" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_7376" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx * 1)" />
    <mutant id="mutant_6045" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_7375" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx / 1)" />
    <mutant id="mutant_6035" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) % srcPos" />
    <mutant id="mutant_7367" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="strLen / 1" />
    <mutant id="mutant_6036" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_7366" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="1" />
    <mutant id="mutant_6037" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_7369" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="strLen + 1" />
    <mutant id="mutant_6038" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_7368" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="strLen * 1" />
    <mutant id="mutant_6039" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_7361" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx + 1)" />
    <mutant id="mutant_6030" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="i * 4" />
    <mutant id="mutant_7360" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="lastIdx" />
    <mutant id="mutant_6031" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) - srcPos" />
    <mutant id="mutant_7363" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx / 1)" />
    <mutant id="mutant_6032" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) / srcPos" />
    <mutant id="mutant_7362" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx % 1)" />
    <mutant id="mutant_6033" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="srcPos" />
    <mutant id="mutant_7365" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="strLen % 1" />
    <mutant id="mutant_6034" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) * srcPos" />
    <mutant id="mutant_7364" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="(lastIdx * 1)" />
    <mutant id="mutant_6024" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_7356" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="(str.length()) + 1" />
    <mutant id="mutant_6025" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_7355" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="(str.length()) / 1" />
    <mutant id="mutant_6026" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_7358" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="(str.length()) * 1" />
    <mutant id="mutant_6027" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_7357" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="(str.length()) % 1" />
    <mutant id="mutant_6028" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_6029" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_7359" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="1" />
    <mutant id="mutant_7350" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="(strLen / (pads / 2))" />
    <mutant id="mutant_6020" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) / srcPos)" />
    <mutant id="mutant_7352" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="strLen" />
    <mutant id="mutant_6021" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="srcPos" />
    <mutant id="mutant_7351" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="(strLen - (pads / 2))" />
    <mutant id="mutant_6022" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) * srcPos)" />
    <mutant id="mutant_7354" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="1" />
    <mutant id="mutant_6023" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) % srcPos)" />
    <mutant id="mutant_7353" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="str.length()" />
    <mutant id="mutant_6013" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) - 4)" />
    <mutant id="mutant_7345" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="(pads * 2)" />
    <mutant id="mutant_6014" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(nHexs - 1)" />
    <mutant id="mutant_7344" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="(pads - 2)" />
    <mutant id="mutant_6015" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) / 4)" />
    <mutant id="mutant_7347" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="(strLen * (pads / 2))" />
    <mutant id="mutant_6016" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) % 4)" />
    <mutant id="mutant_7346" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="(pads + 2)" />
    <mutant id="mutant_6017" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) + 4)" />
    <mutant id="mutant_7349" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="(strLen % (pads / 2))" />
    <mutant id="mutant_6018" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((nHexs - 1) * 4)" />
    <mutant id="mutant_7348" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="(pads / 2)" />
    <mutant id="mutant_6019" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) - srcPos)" />
    <mutant id="mutant_6093" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="8" />
    <mutant id="mutant_6094" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) - 8)" />
    <mutant id="mutant_6095" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="(nBytes - 1)" />
    <mutant id="mutant_6096" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) - dstPos)" />
    <mutant id="mutant_6097" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((nBytes - 1) * 8)" />
    <mutant id="mutant_6098" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="dstPos" />
    <mutant id="mutant_3819" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - length)" />
    <mutant id="mutant_6099" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="(((nBytes - 1) * 8) / dstPos)" />
    <mutant id="mutant_3818" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) / length)" />
    <mutant id="mutant_6090" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) + 8)" />
    <mutant id="mutant_6091" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) % 8)" />
    <mutant id="mutant_6092" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="((nBytes - 1) / 8)" />
    <mutant id="mutant_3817" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="&quot;, Length: &quot;" />
    <mutant id="mutant_3816" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) * &quot;, Length: &quot;)" />
    <mutant id="mutant_3815" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) / &quot;, Length: &quot;)" />
    <mutant id="mutant_3814" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) % &quot;, Length: &quot;)" />
    <mutant id="mutant_3813" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(&quot;Index: &quot; + index)" />
    <mutant id="mutant_3812" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) - &quot;, Length: &quot;)" />
    <mutant id="mutant_3811" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; / index)" />
    <mutant id="mutant_3810" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="index" />
    <mutant id="mutant_6082" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_6083" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_6084" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="1" />
    <mutant id="mutant_6085" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="(nBytes / 1)" />
    <mutant id="mutant_6086" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="(nBytes + 1)" />
    <mutant id="mutant_3809" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="&quot;Index: &quot;" />
    <mutant id="mutant_6087" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="nBytes" />
    <mutant id="mutant_3808" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; % index)" />
    <mutant id="mutant_6088" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="(nBytes * 1)" />
    <mutant id="mutant_3807" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; - index)" />
    <mutant id="mutant_6089" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="(nBytes % 1)" />
    <mutant id="mutant_6080" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_6081" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_3806" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; * index)" />
    <mutant id="mutant_6079" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_3805" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="&quot;, Length: 0&quot;" />
    <mutant id="mutant_3804" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="((&quot;Index: &quot; + index) - &quot;, Length: 0&quot;)" />
    <mutant id="mutant_3803" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="((&quot;Index: &quot; + index) % &quot;, Length: 0&quot;)" />
    <mutant id="mutant_3802" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="((&quot;Index: &quot; + index) / &quot;, Length: 0&quot;)" />
    <mutant id="mutant_3801" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="(&quot;Index: &quot; + index)" />
    <mutant id="mutant_3800" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="((&quot;Index: &quot; + index) * &quot;, Length: 0&quot;)" />
    <mutant id="mutant_6071" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) - dstPos)" />
    <mutant id="mutant_6072" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="i" />
    <mutant id="mutant_6073" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="dstPos" />
    <mutant id="mutant_6074" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="i / dstPos" />
    <mutant id="mutant_6075" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="i - dstPos" />
    <mutant id="mutant_6076" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="i % dstPos" />
    <mutant id="mutant_6077" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="i * dstPos" />
    <mutant id="mutant_6078" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_6070" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) * dstPos)" />
    <mutant id="mutant_6068" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="(nBools - 1)" />
    <mutant id="mutant_6069" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) % dstPos)" />
    <mutant id="mutant_7399" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="startIndex" />
    <mutant id="mutant_6060" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="(nBools + 1)" />
    <mutant id="mutant_7392" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="(i % limit)" />
    <mutant id="mutant_6061" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="1" />
    <mutant id="mutant_7391" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="i" />
    <mutant id="mutant_6062" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="(nBools % 1)" />
    <mutant id="mutant_7394" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="limit" />
    <mutant id="mutant_6063" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="(nBools * 1)" />
    <mutant id="mutant_7393" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="(i - limit)" />
    <mutant id="mutant_6064" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="nBools" />
    <mutant id="mutant_7396" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="endIndex / startIndex" />
    <mutant id="mutant_6065" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="(nBools / 1)" />
    <mutant id="mutant_7395" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="endIndex + startIndex" />
    <mutant id="mutant_6066" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="dstPos" />
    <mutant id="mutant_7398" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="endIndex % startIndex" />
    <mutant id="mutant_6067" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="((nBools - 1) / dstPos)" />
    <mutant id="mutant_7397" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="endIndex * startIndex" />
    <mutant id="mutant_7390" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="(i * limit)" />
    <mutant id="mutant_6057" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="(srcPos / 8)" />
    <mutant id="mutant_7389" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="(i / limit)" />
    <mutant id="mutant_6058" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="(srcPos - 8)" />
    <mutant id="mutant_7388" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="limit" />
    <mutant id="mutant_6059" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="(srcPos * 8)" />
    <mutant id="mutant_2521" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="(focus.get(Calendar.DAY_OF_WEEK)) * 3" />
    <mutant id="mutant_3853" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; / index)" />
    <mutant id="mutant_2522" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="3" />
    <mutant id="mutant_3852" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="index" />
    <mutant id="mutant_3851" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="&quot;Index: &quot;" />
    <mutant id="mutant_2520" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="focus.get(Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_3850" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; % index)" />
    <mutant id="mutant_2529" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="(&quot;The range style &quot; * rangeStyle)" />
    <mutant id="mutant_2527" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="(&quot;The range style &quot; - rangeStyle)" />
    <mutant id="mutant_3859" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="&quot;, Length: &quot;" />
    <mutant id="mutant_2528" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="(&quot;The range style &quot; % rangeStyle)" />
    <mutant id="mutant_3858" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) * &quot;, Length: &quot;)" />
    <mutant id="mutant_2525" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="(focus.get(Calendar.DAY_OF_WEEK)) - 3" />
    <mutant id="mutant_3857" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) / &quot;, Length: &quot;)" />
    <mutant id="mutant_2526" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="rangeStyle" />
    <mutant id="mutant_3856" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) % &quot;, Length: &quot;)" />
    <mutant id="mutant_2523" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="(focus.get(Calendar.DAY_OF_WEEK)) % 3" />
    <mutant id="mutant_3855" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(&quot;Index: &quot; + index)" />
    <mutant id="mutant_2524" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="(focus.get(Calendar.DAY_OF_WEEK)) / 3" />
    <mutant id="mutant_3854" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="((&quot;Index: &quot; + index) - &quot;, Length: &quot;)" />
    <mutant id="mutant_2510" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="startCutoff * 1" />
    <mutant id="mutant_3842" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="1" />
    <mutant id="mutant_2511" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="startCutoff" />
    <mutant id="mutant_3841" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="(length * index)" />
    <mutant id="mutant_3840" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="index" />
    <mutant id="mutant_2518" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="(focus.get(Calendar.DAY_OF_WEEK)) / 3" />
    <mutant id="mutant_2519" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="(focus.get(Calendar.DAY_OF_WEEK)) + 3" />
    <mutant id="mutant_3849" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; - index)" />
    <mutant id="mutant_2516" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="3" />
    <mutant id="mutant_3848" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; * index)" />
    <mutant id="mutant_2517" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="(focus.get(Calendar.DAY_OF_WEEK)) % 3" />
    <mutant id="mutant_3847" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="(arrayLength - 1)" />
    <mutant id="mutant_2514" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="focus.get(Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_3846" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="(arrayLength / 1)" />
    <mutant id="mutant_2515" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="(focus.get(Calendar.DAY_OF_WEEK)) * 3" />
    <mutant id="mutant_3845" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="arrayLength" />
    <mutant id="mutant_2512" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="startCutoff % 1" />
    <mutant id="mutant_3844" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="(arrayLength * 1)" />
    <mutant id="mutant_2513" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="startCutoff + 1" />
    <mutant id="mutant_3843" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="(arrayLength % 1)" />
    <mutant id="mutant_2509" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="1" />
    <mutant id="mutant_3831" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2500" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="(&quot;Could not truncate &quot; * date)" />
    <mutant id="mutant_3830" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="1" />
    <mutant id="mutant_2507" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="&quot;Could not iterate based on &quot;" />
    <mutant id="mutant_3839" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="(length % index)" />
    <mutant id="mutant_2508" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="startCutoff / 1" />
    <mutant id="mutant_3838" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="(length + index)" />
    <mutant id="mutant_2505" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="(&quot;Could not iterate based on &quot; - focus)" />
    <mutant id="mutant_3837" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="(length / index)" />
    <mutant id="mutant_2506" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="(&quot;Could not iterate based on &quot; * focus)" />
    <mutant id="mutant_3836" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="length" />
    <mutant id="mutant_2503" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="focus" />
    <mutant id="mutant_3835" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2504" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="(&quot;Could not iterate based on &quot; / focus)" />
    <mutant id="mutant_3834" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="index" />
    <mutant id="mutant_2501" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="date" />
    <mutant id="mutant_3833" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2502" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="(&quot;Could not iterate based on &quot; % focus)" />
    <mutant id="mutant_3832" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_3829" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="(length % 1)" />
    <mutant id="mutant_3820" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" />
    <mutant id="mutant_3828" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="(length * 1)" />
    <mutant id="mutant_3827" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="(length - 1)" />
    <mutant id="mutant_3826" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="(length / 1)" />
    <mutant id="mutant_3825" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="length" />
    <mutant id="mutant_3824" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="1" />
    <mutant id="mutant_3823" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) % length)" />
    <mutant id="mutant_3822" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * length)" />
    <mutant id="mutant_3821" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="length" />
    <mutant id="mutant_1234" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="result" />
    <mutant id="mutant_2565" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="time * millisecs" />
    <mutant id="mutant_3897" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; - index)" />
    <mutant id="mutant_1235" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) - result)" />
    <mutant id="mutant_2566" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="millisecs" />
    <mutant id="mutant_3896" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; * index)" />
    <mutant id="mutant_1232" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) + result)" />
    <mutant id="mutant_2563" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="time + millisecs" />
    <mutant id="mutant_3895" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="((length - index) * 1)" />
    <mutant id="mutant_1233" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(ExtendedMessageFormat.HASH_SEED)" />
    <mutant id="mutant_2564" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="time % millisecs" />
    <mutant id="mutant_3894" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="((length - index) % 1)" />
    <mutant id="mutant_1230" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) / result)" />
    <mutant id="mutant_2561" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="&quot; is not supported&quot;" />
    <mutant id="mutant_3893" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="(length - index)" />
    <mutant id="mutant_1231" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) % result)" />
    <mutant id="mutant_2562" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="time / millisecs" />
    <mutant id="mutant_3892" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="1" />
    <mutant id="mutant_3891" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="((length - index) / 1)" />
    <mutant id="mutant_2560" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="((&quot;The fragment &quot; + fragment) * &quot; is not supported&quot;)" />
    <mutant id="mutant_3890" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="((length - index) + 1)" />
    <mutant id="mutant_1238" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="((ExtendedMessageFormat.HASH_SEED) * result) - (ObjectUtils.hashCode(registry))" />
    <mutant id="mutant_2569" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="1000L" />
    <mutant id="mutant_1239" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="ObjectUtils.hashCode(registry)" />
    <mutant id="mutant_1236" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="(ExtendedMessageFormat.HASH_SEED) * result" />
    <mutant id="mutant_2567" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="time" />
    <mutant id="mutant_3899" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="&quot;Index: &quot;" />
    <mutant id="mutant_1237" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="((ExtendedMessageFormat.HASH_SEED) * result) * (ObjectUtils.hashCode(registry))" />
    <mutant id="mutant_2568" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="(seconds - 1000L)" />
    <mutant id="mutant_3898" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; % index)" />
    <mutant id="mutant_1223" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="(&quot;Less than 4 hex digits in unicode value: \'&quot; / (input.subSequence(index, input.length())))" />
    <mutant id="mutant_2554" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="(&quot;The fragment &quot; * fragment)" />
    <mutant id="mutant_3886" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="(length + index)" />
    <mutant id="mutant_1224" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) / &quot;\' due to end of CharSequence&quot;)" />
    <mutant id="mutant_2555" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="(&quot;The fragment &quot; % fragment)" />
    <mutant id="mutant_3885" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="(length / index)" />
    <mutant id="mutant_1221" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="(&quot;Less than 4 hex digits in unicode value: \'&quot; - (input.subSequence(index, input.length())))" />
    <mutant id="mutant_2552" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="(&quot;The fragment &quot; - fragment)" />
    <mutant id="mutant_3884" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="length" />
    <mutant id="mutant_1222" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="(&quot;Less than 4 hex digits in unicode value: \'&quot; * (input.subSequence(index, input.length())))" />
    <mutant id="mutant_2553" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="fragment" />
    <mutant id="mutant_3883" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2550" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="(&quot;The fragment &quot; / fragment)" />
    <mutant id="mutant_3882" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_1220" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="&quot;Less than 4 hex digits in unicode value: \'&quot;" />
    <mutant id="mutant_2551" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="&quot;The fragment &quot;" />
    <mutant id="mutant_3881" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_3880" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1229" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" />
    <mutant id="mutant_1227" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) * &quot;\' due to end of CharSequence&quot;)" />
    <mutant id="mutant_2558" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="((&quot;The fragment &quot; + fragment) - &quot; is not supported&quot;)" />
    <mutant id="mutant_1228" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) % &quot;\' due to end of CharSequence&quot;)" />
    <mutant id="mutant_2559" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="((&quot;The fragment &quot; + fragment) % &quot; is not supported&quot;)" />
    <mutant id="mutant_3889" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="(length * index)" />
    <mutant id="mutant_1225" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) - &quot;\' due to end of CharSequence&quot;)" />
    <mutant id="mutant_2556" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="((&quot;The fragment &quot; + fragment) / &quot; is not supported&quot;)" />
    <mutant id="mutant_3888" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="index" />
    <mutant id="mutant_1226" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="&quot;\' due to end of CharSequence&quot;" />
    <mutant id="mutant_2557" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="(&quot;The fragment &quot; + fragment)" />
    <mutant id="mutant_3887" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="(length % index)" />
    <mutant id="mutant_1212" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="i / 4" />
    <mutant id="mutant_2543" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="((calendar.get(Calendar.DAY_OF_YEAR)) + offset)" />
    <mutant id="mutant_3875" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length + 1)" />
    <mutant id="mutant_1213" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="i" />
    <mutant id="mutant_2544" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="((calendar.get(Calendar.DAY_OF_MONTH)) / offset)" />
    <mutant id="mutant_3874" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length / 1)" />
    <mutant id="mutant_1210" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="unicode" />
    <mutant id="mutant_2541" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="((calendar.get(Calendar.DAY_OF_YEAR)) * offset)" />
    <mutant id="mutant_3873" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="length" />
    <mutant id="mutant_1211" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="(&quot;Unable to parse unicode value: &quot; * unicode)" />
    <mutant id="mutant_2542" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="((calendar.get(Calendar.DAY_OF_YEAR)) / offset)" />
    <mutant id="mutant_3872" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="1" />
    <mutant id="mutant_3871" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length % 1)" />
    <mutant id="mutant_2540" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="offset" />
    <mutant id="mutant_3870" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length * 1)" />
    <mutant id="mutant_1218" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="(input.subSequence(index, input.length()))" />
    <mutant id="mutant_2549" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="((calendar.get(Calendar.DAY_OF_MONTH)) + offset)" />
    <mutant id="mutant_1219" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="(&quot;Less than 4 hex digits in unicode value: \'&quot; % (input.subSequence(index, input.length())))" />
    <mutant id="mutant_1216" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="i % 4" />
    <mutant id="mutant_2547" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="calendar.get(Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_3879" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1217" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="i - 4" />
    <mutant id="mutant_2548" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="offset" />
    <mutant id="mutant_3878" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_1214" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="i * 4" />
    <mutant id="mutant_2545" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="((calendar.get(Calendar.DAY_OF_MONTH)) % offset)" />
    <mutant id="mutant_3877" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length % 1)" />
    <mutant id="mutant_1215" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="4" />
    <mutant id="mutant_2546" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="((calendar.get(Calendar.DAY_OF_MONTH)) * offset)" />
    <mutant id="mutant_3876" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length * 1)" />
    <mutant id="mutant_1201" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="4" />
    <mutant id="mutant_2532" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="((&quot;The range style &quot; + rangeStyle) / &quot; is not valid.&quot;)" />
    <mutant id="mutant_3864" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * length)" />
    <mutant id="mutant_1202" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) - 4)" />
    <mutant id="mutant_2533" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="(&quot;The range style &quot; + rangeStyle)" />
    <mutant id="mutant_3863" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="length" />
    <mutant id="mutant_2530" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="&quot;The range style &quot;" />
    <mutant id="mutant_3862" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" />
    <mutant id="mutant_1200" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) / 4)" />
    <mutant id="mutant_2531" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="(&quot;The range style &quot; / rangeStyle)" />
    <mutant id="mutant_3861" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - length)" />
    <mutant id="mutant_3860" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) / length)" />
    <mutant id="mutant_1209" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="(&quot;Unable to parse unicode value: &quot; % unicode)" />
    <mutant id="mutant_1207" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="(&quot;Unable to parse unicode value: &quot; / unicode)" />
    <mutant id="mutant_2538" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="((calendar.get(Calendar.DAY_OF_YEAR)) % offset)" />
    <mutant id="mutant_1208" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="(&quot;Unable to parse unicode value: &quot; - unicode)" />
    <mutant id="mutant_2539" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="calendar.get(Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_3869" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length + 1)" />
    <mutant id="mutant_1205" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) % 4)" />
    <mutant id="mutant_2536" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="((&quot;The range style &quot; + rangeStyle) % &quot; is not valid.&quot;)" />
    <mutant id="mutant_3868" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="(length / 1)" />
    <mutant id="mutant_1206" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="&quot;Unable to parse unicode value: &quot;" />
    <mutant id="mutant_2537" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="((&quot;The range style &quot; + rangeStyle) - &quot; is not valid.&quot;)" />
    <mutant id="mutant_3867" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="length" />
    <mutant id="mutant_1203" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="((index + i) * 4)" />
    <mutant id="mutant_2534" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="&quot; is not valid.&quot;" />
    <mutant id="mutant_3866" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="1" />
    <mutant id="mutant_1204" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(index + i)" />
    <mutant id="mutant_2535" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="((&quot;The range style &quot; + rangeStyle) * &quot; is not valid.&quot;)" />
    <mutant id="mutant_3865" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) % length)" />
    <mutant id="mutant_1281" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="((pattern.length()) + 2)" />
    <mutant id="mutant_1282" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="((pattern.length()) % 2)" />
    <mutant id="mutant_1280" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="((pattern.length()) / 2)" />
    <mutant id="mutant_1278" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="pattern.length()" />
    <mutant id="mutant_1279" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="2" />
    <mutant id="mutant_1276" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="&quot;Unterminated format element at position &quot;" />
    <mutant id="mutant_1277" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; / start)" />
    <mutant id="mutant_1274" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; % start)" />
    <mutant id="mutant_1275" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="start" />
    <mutant id="mutant_1272" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; * start)" />
    <mutant id="mutant_1273" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="(&quot;Unterminated format element at position &quot; - start)" />
    <mutant id="mutant_1270" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) / (pattern.substring(start, pos.getIndex())))" />
    <mutant id="mutant_1271" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" />
    <mutant id="mutant_1267" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) - (pattern.substring(start, pos.getIndex())))" />
    <mutant id="mutant_2598" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="(val.get(aField[0])) * min" />
    <mutant id="mutant_1268" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) * (pattern.substring(start, pos.getIndex())))" />
    <mutant id="mutant_2599" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="(val.get(aField[0])) / min" />
    <mutant id="mutant_1265" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="(&quot;Invalid format argument index at position &quot; + start)" />
    <mutant id="mutant_2596" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="(val.get(Calendar.DATE)) / 1" />
    <mutant id="mutant_1266" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="pattern.substring(start, pos.getIndex())" />
    <mutant id="mutant_2597" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="(val.get(Calendar.DATE)) + 1" />
    <mutant id="mutant_1263" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="((&quot;Invalid format argument index at position &quot; + start) * &quot;: &quot;)" />
    <mutant id="mutant_2594" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="val.get(Calendar.DATE)" />
    <mutant id="mutant_1264" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="((&quot;Invalid format argument index at position &quot; + start) - &quot;: &quot;)" />
    <mutant id="mutant_2595" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="(val.get(Calendar.DATE)) * 1" />
    <mutant id="mutant_1261" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="((&quot;Invalid format argument index at position &quot; + start) % &quot;: &quot;)" />
    <mutant id="mutant_2592" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="1" />
    <mutant id="mutant_1262" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="&quot;: &quot;" />
    <mutant id="mutant_2593" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="(val.get(Calendar.DATE)) % 1" />
    <mutant id="mutant_1269" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) % (pattern.substring(start, pos.getIndex())))" />
    <mutant id="mutant_2590" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="time / (minutes * 60000L)" />
    <mutant id="mutant_1260" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="((&quot;Invalid format argument index at position &quot; + start) / &quot;: &quot;)" />
    <mutant id="mutant_2591" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="minutes * 60000L" />
    <mutant id="mutant_1256" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="(&quot;Invalid format argument index at position &quot; / start)" />
    <mutant id="mutant_2587" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="time * (minutes * 60000L)" />
    <mutant id="mutant_1257" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="(&quot;Invalid format argument index at position &quot; % start)" />
    <mutant id="mutant_2588" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="time + (minutes * 60000L)" />
    <mutant id="mutant_1254" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="(&quot;Invalid format argument index at position &quot; * start)" />
    <mutant id="mutant_2585" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="(minutes % 60000L)" />
    <mutant id="mutant_1255" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="start" />
    <mutant id="mutant_2586" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="time % (minutes * 60000L)" />
    <mutant id="mutant_1252" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="ObjectUtils.hashCode(toPattern)" />
    <mutant id="mutant_2583" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="(minutes - 60000L)" />
    <mutant id="mutant_1253" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="((ExtendedMessageFormat.HASH_SEED) * result) % (ObjectUtils.hashCode(toPattern))" />
    <mutant id="mutant_2584" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="(minutes + 60000L)" />
    <mutant id="mutant_1250" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="(ExtendedMessageFormat.HASH_SEED) * result" />
    <mutant id="mutant_2581" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="minutes" />
    <mutant id="mutant_1251" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="((ExtendedMessageFormat.HASH_SEED) * result) / (ObjectUtils.hashCode(toPattern))" />
    <mutant id="mutant_2582" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="60000L" />
    <mutant id="mutant_1258" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="(&quot;Invalid format argument index at position &quot; - start)" />
    <mutant id="mutant_2589" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="time" />
    <mutant id="mutant_1259" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="&quot;Invalid format argument index at position &quot;" />
    <mutant id="mutant_2580" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="(minutes / 60000L)" />
    <mutant id="mutant_1245" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(ExtendedMessageFormat.HASH_SEED)" />
    <mutant id="mutant_2576" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="seconds * 1000L" />
    <mutant id="mutant_1246" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="result" />
    <mutant id="mutant_2577" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="time + (seconds * 1000L)" />
    <mutant id="mutant_1243" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) % result)" />
    <mutant id="mutant_2574" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="time * (seconds * 1000L)" />
    <mutant id="mutant_1244" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) + result)" />
    <mutant id="mutant_2575" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="time % (seconds * 1000L)" />
    <mutant id="mutant_1241" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="((ExtendedMessageFormat.HASH_SEED) * result) % (ObjectUtils.hashCode(registry))" />
    <mutant id="mutant_2572" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="(seconds + 1000L)" />
    <mutant id="mutant_1242" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) / result)" />
    <mutant id="mutant_2573" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="seconds" />
    <mutant id="mutant_2570" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="(seconds / 1000L)" />
    <mutant id="mutant_1240" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="((ExtendedMessageFormat.HASH_SEED) * result) / (ObjectUtils.hashCode(registry))" />
    <mutant id="mutant_2571" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="(seconds % 1000L)" />
    <mutant id="mutant_1249" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="((ExtendedMessageFormat.HASH_SEED) * result) - (ObjectUtils.hashCode(toPattern))" />
    <mutant id="mutant_1247" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="((ExtendedMessageFormat.HASH_SEED) - result)" />
    <mutant id="mutant_2578" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="time" />
    <mutant id="mutant_1248" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="((ExtendedMessageFormat.HASH_SEED) * result) * (ObjectUtils.hashCode(toPattern))" />
    <mutant id="mutant_2579" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="time / (seconds * 1000L)" />
    <mutant id="mutant_1083" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="(((2 + end) - start) / (isHex ? 1 : 0))" />
    <mutant id="mutant_1084" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="(((2 + end) - start) % (isHex ? 1 : 0))" />
    <mutant id="mutant_1081" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="(isHex ? 1 : 0)" />
    <mutant id="mutant_1082" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="(((2 + end) - start) - (isHex ? 1 : 0))" />
    <mutant id="mutant_1080" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="(((2 + end) - start) * (isHex ? 1 : 0))" />
    <mutant id="mutant_1078" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="start" />
    <mutant id="mutant_1079" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="((2 + end) / start)" />
    <mutant id="mutant_1076" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="((2 + end) + start)" />
    <mutant id="mutant_1077" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="((2 + end) % start)" />
    <mutant id="mutant_1074" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="(2 + end)" />
    <mutant id="mutant_1075" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="((2 + end) * start)" />
    <mutant id="mutant_1072" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="(2 % end)" />
    <mutant id="mutant_1073" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="end" />
    <mutant id="mutant_1070" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="(2 * end)" />
    <mutant id="mutant_1071" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="2" />
    <mutant id="mutant_1069" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="(2 - end)" />
    <mutant id="mutant_1067" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2398" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; / type)" />
    <mutant id="mutant_1068" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="(2 / end)" />
    <mutant id="mutant_2399" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="&quot;found an unhandled type: &quot;" />
    <mutant id="mutant_1065" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2396" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; - type)" />
    <mutant id="mutant_1066" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index" />
    <mutant id="mutant_2397" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="type" />
    <mutant id="mutant_1063" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2394" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; * type)" />
    <mutant id="mutant_1064" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2395" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; % type)" />
    <mutant id="mutant_1061" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2392" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) / (cls.getName()))" />
    <mutant id="mutant_1062" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="2" />
    <mutant id="mutant_2393" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) - (cls.getName()))" />
    <mutant id="mutant_2390" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" />
    <mutant id="mutant_1060" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="index" />
    <mutant id="mutant_2391" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="cls.getName()" />
    <mutant id="mutant_1058" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2389" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) * (cls.getName()))" />
    <mutant id="mutant_1059" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1056" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="1" />
    <mutant id="mutant_2387" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="&quot;() on class: &quot;" />
    <mutant id="mutant_1057" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2388" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) % (cls.getName()))" />
    <mutant id="mutant_1054" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="(seqEnd / 2)" />
    <mutant id="mutant_2385" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) / &quot;() on class: &quot;)" />
    <mutant id="mutant_1055" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="(seqEnd * 2)" />
    <mutant id="mutant_2386" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) % &quot;() on class: &quot;)" />
    <mutant id="mutant_1052" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="(seqEnd % 2)" />
    <mutant id="mutant_2383" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) * &quot;() on class: &quot;)" />
    <mutant id="mutant_1053" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="seqEnd" />
    <mutant id="mutant_2384" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(&quot;No such accessible method: &quot; + methodName)" />
    <mutant id="mutant_1050" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="2" />
    <mutant id="mutant_2381" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; * methodName)" />
    <mutant id="mutant_1051" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="(seqEnd + 2)" />
    <mutant id="mutant_2382" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) - &quot;() on class: &quot;)" />
    <mutant id="mutant_2380" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; - methodName)" />
    <mutant id="mutant_1047" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_2378" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; % methodName)" />
    <mutant id="mutant_1048" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_2379" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; / methodName)" />
    <mutant id="mutant_1045" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_2376" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="&quot;No such accessible method: &quot;" />
    <mutant id="mutant_1046" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_2377" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="methodName" />
    <mutant id="mutant_1043" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="(input.length()) + index" />
    <mutant id="mutant_2374" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) * (object.getClass().getName()))" />
    <mutant id="mutant_1044" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_2375" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) - (object.getClass().getName()))" />
    <mutant id="mutant_1041" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="(input.length()) % index" />
    <mutant id="mutant_2372" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" />
    <mutant id="mutant_1042" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="index" />
    <mutant id="mutant_2373" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="object.getClass().getName()" />
    <mutant id="mutant_1049" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_1098" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="1" />
    <mutant id="mutant_1099" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="((input.length()) - index) / 1" />
    <mutant id="mutant_1096" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="index" />
    <mutant id="mutant_1097" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="((input.length()) + index)" />
    <mutant id="mutant_1094" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="(input.length())" />
    <mutant id="mutant_1095" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="((input.length()) % index)" />
    <mutant id="mutant_1092" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="((input.length()) / index)" />
    <mutant id="mutant_1093" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="((input.length()) * index)" />
    <mutant id="mutant_1090" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="(((2 + end) - start) + (isHex ? 1 : 0)) * (semiNext ? 1 : 0)" />
    <mutant id="mutant_1091" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="((2 + end) - start) + (isHex ? 1 : 0)" />
    <mutant id="mutant_1089" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="(((2 + end) - start) + (isHex ? 1 : 0)) % (semiNext ? 1 : 0)" />
    <mutant id="mutant_1087" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="(((2 + end) - start) + (isHex ? 1 : 0)) / (semiNext ? 1 : 0)" />
    <mutant id="mutant_1088" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="(((2 + end) - start) + (isHex ? 1 : 0)) - (semiNext ? 1 : 0)" />
    <mutant id="mutant_1085" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="((2 + end) - start)" />
    <mutant id="mutant_1086" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="semiNext ? 1 : 0" />
    <mutant id="mutant_7220" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth / 3)" />
    <mutant id="mutant_7222" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="(str.substring(0, (maxWidth - 3))) - abrevMarker" />
    <mutant id="mutant_7221" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="(str.substring(0, (maxWidth - 3))) / abrevMarker" />
    <mutant id="mutant_7213" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="(str.length()) % (maxWidth - 3)" />
    <mutant id="mutant_7212" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="(str.length()) * (maxWidth - 3)" />
    <mutant id="mutant_7215" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth * 3)" />
    <mutant id="mutant_7214" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="maxWidth - 3" />
    <mutant id="mutant_7217" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth % 3)" />
    <mutant id="mutant_7216" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="3" />
    <mutant id="mutant_7219" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth + 3)" />
    <mutant id="mutant_7218" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="maxWidth" />
    <mutant id="mutant_7211" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="(str.length()) / (maxWidth - 3)" />
    <mutant id="mutant_7210" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="str.length()" />
    <mutant id="mutant_7209" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="(str.length()) + (maxWidth - 3)" />
    <mutant id="mutant_7202" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth / 3)" />
    <mutant id="mutant_7201" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth + 3)" />
    <mutant id="mutant_7204" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="3" />
    <mutant id="mutant_7203" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth * 3)" />
    <mutant id="mutant_7206" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="maxWidth" />
    <mutant id="mutant_7205" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth % 3)" />
    <mutant id="mutant_7208" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth / 3)" />
    <mutant id="mutant_7207" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth + 3)" />
    <mutant id="mutant_7200" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="maxWidth" />
    <mutant id="mutant_7260" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="((str.length()) * (maxWidth - 3))" />
    <mutant id="mutant_7262" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="(maxWidth - 3)" />
    <mutant id="mutant_7261" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="((str.length()) % (maxWidth - 3))" />
    <mutant id="mutant_7264" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="abrevMarker" />
    <mutant id="mutant_7263" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="str.substring(((str.length()) - (maxWidth - 3)))" />
    <mutant id="mutant_7266" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="abrevMarker * (str.substring(((str.length()) - (maxWidth - 3))))" />
    <mutant id="mutant_7265" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="abrevMarker / (str.substring(((str.length()) - (maxWidth - 3))))" />
    <mutant id="mutant_7257" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="((str.length()) + (maxWidth - 3))" />
    <mutant id="mutant_7256" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth / 3)" />
    <mutant id="mutant_7259" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="((str.length()) / (maxWidth - 3))" />
    <mutant id="mutant_7258" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="str.length()" />
    <mutant id="mutant_7251" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth * 3)" />
    <mutant id="mutant_7250" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3))" />
    <mutant id="mutant_7253" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth % 3)" />
    <mutant id="mutant_7252" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="3" />
    <mutant id="mutant_7255" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth + 3)" />
    <mutant id="mutant_7254" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="maxWidth" />
    <mutant id="mutant_7246" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="abrevMarker % (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" />
    <mutant id="mutant_7245" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="abrevMarker * (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" />
    <mutant id="mutant_7248" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="abrevMarker / (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" />
    <mutant id="mutant_7247" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="abrevMarker" />
    <mutant id="mutant_7249" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="abrevMarker - (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" />
    <mutant id="mutant_7240" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="3" />
    <mutant id="mutant_7242" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="maxWidth" />
    <mutant id="mutant_7241" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth % 3)" />
    <mutant id="mutant_7244" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth / 3)" />
    <mutant id="mutant_7243" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth + 3)" />
    <mutant id="mutant_7235" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="((offset + maxWidth) + 3)" />
    <mutant id="mutant_7234" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="3" />
    <mutant id="mutant_7237" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="((offset + maxWidth) * 3)" />
    <mutant id="mutant_7236" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="((offset + maxWidth) / 3)" />
    <mutant id="mutant_7239" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth * 3)" />
    <mutant id="mutant_7238" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="((offset + maxWidth) % 3)" />
    <mutant id="mutant_7231" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="offset" />
    <mutant id="mutant_7230" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="(offset - maxWidth)" />
    <mutant id="mutant_7233" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="(offset + maxWidth)" />
    <mutant id="mutant_7232" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="(offset * maxWidth)" />
    <mutant id="mutant_7224" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="str.substring(0, (maxWidth - 3))" />
    <mutant id="mutant_7223" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="(str.substring(0, (maxWidth - 3))) % abrevMarker" />
    <mutant id="mutant_7226" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="(str.substring(0, (maxWidth - 3))) * abrevMarker" />
    <mutant id="mutant_7225" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="abrevMarker" />
    <mutant id="mutant_7228" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="(offset % maxWidth)" />
    <mutant id="mutant_7227" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="(offset / maxWidth)" />
    <mutant id="mutant_7229" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="maxWidth" />
    <mutant id="mutant_7293" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="(targetSting / 2) % (targetSting % 2)" />
    <mutant id="mutant_7292" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="(targetSting + 2)" />
    <mutant id="mutant_7295" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="targetSting / 2" />
    <mutant id="mutant_7294" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="targetSting % 2" />
    <mutant id="mutant_7297" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="(targetSting / 2) * (targetSting % 2)" />
    <mutant id="mutant_7296" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="(targetSting / 2) / (targetSting % 2)" />
    <mutant id="mutant_7299" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="2" />
    <mutant id="mutant_7298" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="(targetSting / 2) - (targetSting % 2)" />
    <mutant id="mutant_7291" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="targetSting" />
    <mutant id="mutant_7290" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="(targetSting * 2)" />
    <mutant id="mutant_7289" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="(targetSting - 2)" />
    <mutant id="mutant_7282" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting % 2)" />
    <mutant id="mutant_7281" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="2" />
    <mutant id="mutant_7284" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting * 2)" />
    <mutant id="mutant_7283" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting - 2)" />
    <mutant id="mutant_7286" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="(targetSting + 2)" />
    <mutant id="mutant_7285" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="targetSting" />
    <mutant id="mutant_7288" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="(targetSting / 2)" />
    <mutant id="mutant_7287" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="2" />
    <mutant id="mutant_7280" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="length / (middle.length())" />
    <mutant id="mutant_7279" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="length + (middle.length())" />
    <mutant id="mutant_7278" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="length * (middle.length())" />
    <mutant id="mutant_7271" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="((middle.length()) / 2)" />
    <mutant id="mutant_7270" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="2" />
    <mutant id="mutant_7273" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="((middle.length()) * 2)" />
    <mutant id="mutant_7272" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="((middle.length()) % 2)" />
    <mutant id="mutant_7275" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="length % (middle.length())" />
    <mutant id="mutant_7274" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="((middle.length()) - 2)" />
    <mutant id="mutant_7277" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="length" />
    <mutant id="mutant_7276" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="middle.length()" />
    <mutant id="mutant_7268" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="abrevMarker - (str.substring(((str.length()) - (maxWidth - 3))))" />
    <mutant id="mutant_7267" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="abrevMarker % (str.substring(((str.length()) - (maxWidth - 3))))" />
    <mutant id="mutant_7269" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="(middle.length())" />
    <mutant id="mutant_2400" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; * type)" />
    <mutant id="mutant_3732" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_2401" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; % type)" />
    <mutant id="mutant_3731" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_3730" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_2408" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="toType" />
    <mutant id="mutant_2409" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="(&quot;found an unhandled type: &quot; / toType)" />
    <mutant id="mutant_3739" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_2406" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="(&quot;found an unhandled type: &quot; - toType)" />
    <mutant id="mutant_3738" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_2407" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="(&quot;found an unhandled type: &quot; % toType)" />
    <mutant id="mutant_3737" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_2404" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; / type)" />
    <mutant id="mutant_3736" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_2405" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="&quot;found an unhandled type: &quot;" />
    <mutant id="mutant_3735" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_2402" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; - type)" />
    <mutant id="mutant_3734" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_2403" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="type" />
    <mutant id="mutant_3733" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_3721" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind % tolerance" />
    <mutant id="mutant_3720" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind + tolerance" />
    <mutant id="mutant_3729" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_3728" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="tolerance" />
    <mutant id="mutant_3727" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind % tolerance" />
    <mutant id="mutant_3726" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind - tolerance" />
    <mutant id="mutant_3725" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind / tolerance" />
    <mutant id="mutant_3724" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind" />
    <mutant id="mutant_3723" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind * tolerance" />
    <mutant id="mutant_3722" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="tolerance" />
    <mutant id="mutant_3719" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind / tolerance" />
    <mutant id="mutant_3710" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_3718" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind" />
    <mutant id="mutant_3717" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind * tolerance" />
    <mutant id="mutant_3716" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_3715" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_3714" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_3713" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_3712" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_3711" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_3709" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_3708" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_3707" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_3706" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_3705" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_3704" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_3703" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_3702" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_3701" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_3700" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_1113" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2444" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="(&quot;missing assignment type for type variable &quot; - type)" />
    <mutant id="mutant_3776" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="1" />
    <mutant id="mutant_1114" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="index" />
    <mutant id="mutant_2445" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="(&quot;missing assignment type for type variable &quot; / type)" />
    <mutant id="mutant_3775" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_1111" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2442" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="&quot;missing assignment type for type variable &quot;" />
    <mutant id="mutant_3774" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_1112" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2443" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="(&quot;missing assignment type for type variable &quot; * type)" />
    <mutant id="mutant_3773" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="index" />
    <mutant id="mutant_2440" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" />
    <mutant id="mutant_3772" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_1110" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="1" />
    <mutant id="mutant_2441" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="midType" />
    <mutant id="mutant_3771" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_3770" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_1119" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1117" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2448" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; * type)" />
    <mutant id="mutant_1118" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2449" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; % type)" />
    <mutant id="mutant_3779" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_1115" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2446" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="(&quot;missing assignment type for type variable &quot; % type)" />
    <mutant id="mutant_3778" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="count" />
    <mutant id="mutant_1116" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="2" />
    <mutant id="mutant_2447" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="type" />
    <mutant id="mutant_3777" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_1102" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="((input.length()) - index) % 1" />
    <mutant id="mutant_2433" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="&quot; interface type found: &quot;" />
    <mutant id="mutant_3765" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_1103" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="(input.length()) - index" />
    <mutant id="mutant_2434" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="(&quot;Unexpected generic&quot; / &quot; interface type found: &quot;)" />
    <mutant id="mutant_3764" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_1100" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="((input.length()) - index) * 1" />
    <mutant id="mutant_2431" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="(&quot;Unexpected generic&quot; - &quot; interface type found: &quot;)" />
    <mutant id="mutant_3763" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_1101" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="((input.length()) - index) + 1" />
    <mutant id="mutant_2432" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="&quot;Unexpected generic&quot;" />
    <mutant id="mutant_3762" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_3761" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_2430" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="(&quot;Unexpected generic&quot; % &quot; interface type found: &quot;)" />
    <mutant id="mutant_3760" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_1108" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="index" />
    <mutant id="mutant_2439" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) % midType)" />
    <mutant id="mutant_1109" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1106" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2437" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) * midType)" />
    <mutant id="mutant_3769" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_1107" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2438" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) - midType)" />
    <mutant id="mutant_3768" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_1104" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="1" />
    <mutant id="mutant_2435" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="(&quot;Unexpected generic&quot; * &quot; interface type found: &quot;)" />
    <mutant id="mutant_3767" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_1105" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2436" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) / midType)" />
    <mutant id="mutant_3766" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_2422" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="(&quot;Wait... What!? Type of rawType: &quot; / rawType)" />
    <mutant id="mutant_3754" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_2423" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="(&quot;Wait... What!? Type of rawType: &quot; * rawType)" />
    <mutant id="mutant_3753" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_2420" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="&quot;Wait... What!? Type of rawType: &quot;" />
    <mutant id="mutant_3752" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_2421" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="(&quot;Wait... What!? Type of rawType: &quot; - rawType)" />
    <mutant id="mutant_3751" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_3750" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_2428" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="type" />
    <mutant id="mutant_2429" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="(&quot;unknown type: &quot; % type)" />
    <mutant id="mutant_3759" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_2426" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="&quot;unknown type: &quot;" />
    <mutant id="mutant_3758" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_2427" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="(&quot;unknown type: &quot; / type)" />
    <mutant id="mutant_3757" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_2424" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="(&quot;unknown type: &quot; * type)" />
    <mutant id="mutant_3756" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_2425" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="(&quot;unknown type: &quot; - type)" />
    <mutant id="mutant_3755" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_2411" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="&quot;found an unhandled type: &quot;" />
    <mutant id="mutant_3743" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_2412" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; * type)" />
    <mutant id="mutant_3742" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_3741" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_2410" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="(&quot;found an unhandled type: &quot; * toType)" />
    <mutant id="mutant_3740" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_2419" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="(&quot;Wait... What!? Type of rawType: &quot; % rawType)" />
    <mutant id="mutant_2417" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="&quot;found an unhandled type: &quot;" />
    <mutant id="mutant_3749" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_2418" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="rawType" />
    <mutant id="mutant_3748" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_2415" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="type" />
    <mutant id="mutant_3747" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_2416" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; / type)" />
    <mutant id="mutant_3746" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_2413" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; % type)" />
    <mutant id="mutant_3745" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_2414" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; - type)" />
    <mutant id="mutant_3744" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_1160" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_2491" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="(&quot;Could not round &quot; - date)" />
    <mutant id="mutant_1161" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_2492" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="(&quot;Could not round &quot; / date)" />
    <mutant id="mutant_2490" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="(&quot;Could not round &quot; * date)" />
    <mutant id="mutant_1157" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index / i)" />
    <mutant id="mutant_2488" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="(&quot;Unable to parse the date: &quot; / str)" />
    <mutant id="mutant_1158" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_2489" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="(&quot;Unable to parse the date: &quot; * str)" />
    <mutant id="mutant_1155" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index * i)" />
    <mutant id="mutant_2486" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="&quot;Unable to parse the date: &quot;" />
    <mutant id="mutant_1156" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="index" />
    <mutant id="mutant_2487" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="str" />
    <mutant id="mutant_1153" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_2484" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="(&quot;Unable to parse the date: &quot; - str)" />
    <mutant id="mutant_1154" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index % i)" />
    <mutant id="mutant_2485" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="(&quot;Unable to parse the date: &quot; % str)" />
    <mutant id="mutant_1151" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2482" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="((pattern.length()) % 1)" />
    <mutant id="mutant_1152" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="i" />
    <mutant id="mutant_2483" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="((pattern.length()) * 1)" />
    <mutant id="mutant_1159" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="(index - i)" />
    <mutant id="mutant_2480" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="((pattern.length()) / 1)" />
    <mutant id="mutant_1150" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="index" />
    <mutant id="mutant_2481" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="((pattern.length()) + 1)" />
    <mutant id="mutant_1146" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="1" />
    <mutant id="mutant_2477" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="(&quot;Could not find ceiling of for type: &quot; % (date.getClass()))" />
    <mutant id="mutant_1147" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2478" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="pattern.length()" />
    <mutant id="mutant_1144" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="index" />
    <mutant id="mutant_2475" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="(&quot;Could not find ceiling of for type: &quot; / (date.getClass()))" />
    <mutant id="mutant_1145" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2476" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="date.getClass()" />
    <mutant id="mutant_1142" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2473" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="&quot;Could not find ceiling of for type: &quot;" />
    <mutant id="mutant_1143" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2474" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="(&quot;Could not find ceiling of for type: &quot; * (date.getClass()))" />
    <mutant id="mutant_1140" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="1" />
    <mutant id="mutant_2471" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="24 + (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_1141" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2472" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="(&quot;Could not find ceiling of for type: &quot; - (date.getClass()))" />
    <mutant id="mutant_1148" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2479" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="1" />
    <mutant id="mutant_1149" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2470" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="24 % (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_1135" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="&quot;\\u&quot; * (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" />
    <mutant id="mutant_2466" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="24" />
    <mutant id="mutant_3798" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="index" />
    <mutant id="mutant_1136" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="&quot;\\u&quot;" />
    <mutant id="mutant_2467" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="DateUtils.MILLIS_PER_HOUR" />
    <mutant id="mutant_3797" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="&quot;Index: &quot;" />
    <mutant id="mutant_1133" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="1 / (builder.length())" />
    <mutant id="mutant_2464" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="DateUtils.MILLIS_PER_MINUTE" />
    <mutant id="mutant_3796" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; % index)" />
    <mutant id="mutant_1134" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="&quot;\\u&quot; / (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" />
    <mutant id="mutant_2465" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="60 / (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_3795" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; - index)" />
    <mutant id="mutant_1131" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="1 * (builder.length())" />
    <mutant id="mutant_2462" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="60 - (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_3794" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; * index)" />
    <mutant id="mutant_1132" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="builder.length()" />
    <mutant id="mutant_2463" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="60" />
    <mutant id="mutant_3793" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_2460" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="60 % (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_3792" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_1130" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="1" />
    <mutant id="mutant_2461" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="60 + (DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_3791" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_1139" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="&quot;\\u&quot; - (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" />
    <mutant id="mutant_1137" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="&quot;\\u&quot; % (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" />
    <mutant id="mutant_2468" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="24 - (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_1138" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint)" />
    <mutant id="mutant_2469" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="24 / (DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_3799" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="(&quot;Index: &quot; / index)" />
    <mutant id="mutant_3790" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_1124" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="index" />
    <mutant id="mutant_2455" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="60 - (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_3787" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_1125" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="index / 3" />
    <mutant id="mutant_2456" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="60" />
    <mutant id="mutant_3786" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_1122" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="index - 3" />
    <mutant id="mutant_2453" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="&quot;found an unhandled type: &quot;" />
    <mutant id="mutant_3785" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_1123" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="3" />
    <mutant id="mutant_2454" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="60 % (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_3784" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_1120" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index" />
    <mutant id="mutant_2451" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="type" />
    <mutant id="mutant_3783" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_1121" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2452" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; / type)" />
    <mutant id="mutant_3782" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_3781" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_2450" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="(&quot;found an unhandled type: &quot; - type)" />
    <mutant id="mutant_3780" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_1128" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="1 - (builder.length())" />
    <mutant id="mutant_2459" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="60 + (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_1129" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="1 % (builder.length())" />
    <mutant id="mutant_1126" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="index * 3" />
    <mutant id="mutant_2457" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="DateUtils.MILLIS_PER_SECOND" />
    <mutant id="mutant_3789" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_1127" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="index % 3" />
    <mutant id="mutant_2458" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="60 / (DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_3788" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_2293" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; % (cls.getName()))" />
    <mutant id="mutant_2294" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="cls.getName()" />
    <mutant id="mutant_2291" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; * (cls.getName()))" />
    <mutant id="mutant_2292" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; / (cls.getName()))" />
    <mutant id="mutant_2290" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; - (cls.getName()))" />
    <mutant id="mutant_2288" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="cls.getName()" />
    <mutant id="mutant_2289" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="&quot;No such accessible constructor on object: &quot;" />
    <mutant id="mutant_2286" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; / (cls.getName()))" />
    <mutant id="mutant_2287" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; % (cls.getName()))" />
    <mutant id="mutant_2284" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt" />
    <mutant id="mutant_2285" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt % 1" />
    <mutant id="mutant_2282" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt - 1" />
    <mutant id="mutant_2283" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt * 1" />
    <mutant id="mutant_2280" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt / 1" />
    <mutant id="mutant_2281" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="1" />
    <mutant id="mutant_2279" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength - offset)" />
    <mutant id="mutant_2277" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength / offset)" />
    <mutant id="mutant_2278" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="offset" />
    <mutant id="mutant_2275" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength * offset)" />
    <mutant id="mutant_2276" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="wrapLength" />
    <mutant id="mutant_2273" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength - offset)" />
    <mutant id="mutant_2274" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength % offset)" />
    <mutant id="mutant_2271" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength / offset)" />
    <mutant id="mutant_2272" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="offset" />
    <mutant id="mutant_2270" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="wrapLength" />
    <mutant id="mutant_2268" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength % offset)" />
    <mutant id="mutant_2269" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength * offset)" />
    <mutant id="mutant_3599" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_2266" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt" />
    <mutant id="mutant_3598" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_2267" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt % 1" />
    <mutant id="mutant_3597" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_2264" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt - 1" />
    <mutant id="mutant_3596" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_2265" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt * 1" />
    <mutant id="mutant_3595" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_2262" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="spaceToWrapAt / 1" />
    <mutant id="mutant_3594" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_2263" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="1" />
    <mutant id="mutant_3593" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_2260" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="offset" />
    <mutant id="mutant_3592" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_2261" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength - offset)" />
    <mutant id="mutant_3591" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_3590" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_2257" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength * offset)" />
    <mutant id="mutant_3589" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="count" />
    <mutant id="mutant_2258" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="wrapLength" />
    <mutant id="mutant_3588" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_2255" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="(inputLineLength / offset)" />
    <mutant id="mutant_3587" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="1" />
    <mutant id="mutant_2256" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength % offset)" />
    <mutant id="mutant_3586" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_2253" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="inputLineLength" />
    <mutant id="mutant_3585" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_2254" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="(inputLineLength % offset)" />
    <mutant id="mutant_3584" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="index" />
    <mutant id="mutant_2251" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="(inputLineLength * offset)" />
    <mutant id="mutant_3583" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_2252" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="offset" />
    <mutant id="mutant_3582" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_2259" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="(wrapLength / offset)" />
    <mutant id="mutant_2299" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="(&quot;Reference to field %s is ambiguous relative to %s&quot; / &quot;; a matching field exists on two or more implemented interfaces.&quot;)" />
    <mutant id="mutant_2297" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; * (cls.getName()))" />
    <mutant id="mutant_2298" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="&quot;; a matching field exists on two or more implemented interfaces.&quot;" />
    <mutant id="mutant_2295" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="&quot;No such accessible constructor on object: &quot;" />
    <mutant id="mutant_2296" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="(&quot;No such accessible constructor on object: &quot; - (cls.getName()))" />
    <mutant id="mutant_7101" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen % 1" />
    <mutant id="mutant_7100" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen / 1" />
    <mutant id="mutant_7141" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="1" />
    <mutant id="mutant_7140" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_7143" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_7142" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="i" />
    <mutant id="mutant_7145" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_7144" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_7136" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="i" />
    <mutant id="mutant_7135" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="1" />
    <mutant id="mutant_7138" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_7137" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_7139" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_7130" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="j" />
    <mutant id="mutant_7132" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="(j - 1)" />
    <mutant id="mutant_7131" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="(j * 1)" />
    <mutant id="mutant_7134" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_7133" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="(j / 1)" />
    <mutant id="mutant_7125" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen % 1" />
    <mutant id="mutant_7124" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen / 1" />
    <mutant id="mutant_7127" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen + 1" />
    <mutant id="mutant_7126" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen * 1" />
    <mutant id="mutant_7129" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="(j % 1)" />
    <mutant id="mutant_7128" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="1" />
    <mutant id="mutant_7121" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen + 1" />
    <mutant id="mutant_7120" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen" />
    <mutant id="mutant_7123" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen" />
    <mutant id="mutant_7122" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="1" />
    <mutant id="mutant_7114" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_7113" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_7116" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="1" />
    <mutant id="mutant_7115" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_7118" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen / 1" />
    <mutant id="mutant_7117" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen * 1" />
    <mutant id="mutant_7119" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen % 1" />
    <mutant id="mutant_7110" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_7112" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="i" />
    <mutant id="mutant_7111" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="1" />
    <mutant id="mutant_7103" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen + 1" />
    <mutant id="mutant_7102" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen * 1" />
    <mutant id="mutant_7105" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j % 1)" />
    <mutant id="mutant_7104" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="1" />
    <mutant id="mutant_7107" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j * 1)" />
    <mutant id="mutant_7106" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="j" />
    <mutant id="mutant_7109" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j / 1)" />
    <mutant id="mutant_7108" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="(j - 1)" />
    <mutant id="mutant_7183" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="index" />
    <mutant id="mutant_7182" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="(index % (searchStr.length()))" />
    <mutant id="mutant_7185" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="transpositions - 2" />
    <mutant id="mutant_7184" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="(index * (searchStr.length()))" />
    <mutant id="mutant_7187" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="transpositions % 2" />
    <mutant id="mutant_4909" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="packageLevels" />
    <mutant id="mutant_7186" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="2" />
    <mutant id="mutant_4908" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="1" />
    <mutant id="mutant_7189" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="transpositions + 2" />
    <mutant id="mutant_4907" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) / (className.substring((lastDotIndex + 1))))" />
    <mutant id="mutant_7188" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="transpositions * 2" />
    <mutant id="mutant_7181" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="(index / (searchStr.length()))" />
    <mutant id="mutant_7180" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="searchStr.length()" />
    <mutant id="mutant_4906" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) % (className.substring((lastDotIndex + 1))))" />
    <mutant id="mutant_4905" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="className.substring((lastDotIndex + 1))" />
    <mutant id="mutant_7179" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="(index - (searchStr.length()))" />
    <mutant id="mutant_4904" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) * (className.substring((lastDotIndex + 1))))" />
    <mutant id="mutant_4903" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) - (className.substring((lastDotIndex + 1))))" />
    <mutant id="mutant_4902" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_4901" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="(lastDotIndex - 1)" />
    <mutant id="mutant_4900" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="(lastDotIndex % 1)" />
    <mutant id="mutant_7172" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="(str.length()) * (searchStr.length())" />
    <mutant id="mutant_7171" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="(str.length()) % (searchStr.length())" />
    <mutant id="mutant_7174" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="searchStr.length()" />
    <mutant id="mutant_7173" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="(index + (searchStr.length()))" />
    <mutant id="mutant_7176" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="(index % (searchStr.length()))" />
    <mutant id="mutant_7175" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="(index / (searchStr.length()))" />
    <mutant id="mutant_7178" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="(index * (searchStr.length()))" />
    <mutant id="mutant_7177" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="index" />
    <mutant id="mutant_7170" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="(str.length()) + (searchStr.length())" />
    <mutant id="mutant_7169" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="(str.length()) / (searchStr.length())" />
    <mutant id="mutant_7168" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="str.length()" />
    <mutant id="mutant_7161" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="((str.length()) - (searchStr.length())) % 1" />
    <mutant id="mutant_7160" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="((str.length()) - (searchStr.length())) - 1" />
    <mutant id="mutant_7163" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(str.length())" />
    <mutant id="mutant_7162" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="((str.length()) - (searchStr.length())) * 1" />
    <mutant id="mutant_7165" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) + (searchStr.length()))" />
    <mutant id="mutant_7164" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) / (searchStr.length()))" />
    <mutant id="mutant_7167" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) * (searchStr.length()))" />
    <mutant id="mutant_7166" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) % (searchStr.length()))" />
    <mutant id="mutant_7158" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="(str.length()) - (searchStr.length())" />
    <mutant id="mutant_7157" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="((str.length()) - (searchStr.length())) / 1" />
    <mutant id="mutant_7159" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="1" />
    <mutant id="mutant_7150" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_7152" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(str.length())" />
    <mutant id="mutant_7151" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_7154" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) + (searchStr.length()))" />
    <mutant id="mutant_7153" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) / (searchStr.length()))" />
    <mutant id="mutant_7156" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) * (searchStr.length()))" />
    <mutant id="mutant_7155" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="((str.length()) % (searchStr.length()))" />
    <mutant id="mutant_7147" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="1" />
    <mutant id="mutant_7146" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_7149" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_7148" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="i" />
    <mutant id="mutant_3611" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4942" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="(className.length()) % 1" />
    <mutant id="mutant_3610" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4941" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="(className.length()) + 1" />
    <mutant id="mutant_4940" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="(className.length()) / 1" />
    <mutant id="mutant_3619" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="index" />
    <mutant id="mutant_3618" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4949" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) * 1)" />
    <mutant id="mutant_3617" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_4948" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) % 1)" />
    <mutant id="mutant_3616" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4947" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) + 1)" />
    <mutant id="mutant_3615" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4946" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) / 1)" />
    <mutant id="mutant_3614" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_4945" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="1" />
    <mutant id="mutant_3613" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4944" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="className.length()" />
    <mutant id="mutant_3612" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4943" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="(className.length()) * 1" />
    <mutant id="mutant_3609" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_3600" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4931" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="endIndex" />
    <mutant id="mutant_4930" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="(endIndex / 1)" />
    <mutant id="mutant_3608" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4939" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="1" />
    <mutant id="mutant_3607" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4938" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="className.length()" />
    <mutant id="mutant_3606" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4937" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="startIndex" />
    <mutant id="mutant_3605" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4936" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="startIndex + 1" />
    <mutant id="mutant_3604" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4935" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="startIndex * 1" />
    <mutant id="mutant_3603" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4934" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="startIndex % 1" />
    <mutant id="mutant_3602" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4933" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="1" />
    <mutant id="mutant_3601" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4932" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="startIndex / 1" />
    <mutant id="mutant_4929" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="(endIndex * 1)" />
    <mutant id="mutant_4920" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="(startIndex / 1)" />
    <mutant id="mutant_4928" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="(endIndex - 1)" />
    <mutant id="mutant_4927" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="(endIndex % 1)" />
    <mutant id="mutant_4926" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="1" />
    <mutant id="mutant_4925" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="startIndex" />
    <mutant id="mutant_4924" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="(startIndex * 1)" />
    <mutant id="mutant_4923" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="(startIndex % 1)" />
    <mutant id="mutant_4922" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="1" />
    <mutant id="mutant_4921" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="(startIndex - 1)" />
    <mutant id="mutant_7194" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="((str.length()) * offset)" />
    <mutant id="mutant_7193" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="offset" />
    <mutant id="mutant_7196" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="((str.length()) % offset)" />
    <mutant id="mutant_7195" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="((str.length()) / offset)" />
    <mutant id="mutant_7198" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="3" />
    <mutant id="mutant_7197" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth * 3)" />
    <mutant id="mutant_4919" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="(className.length()) * 1" />
    <mutant id="mutant_4918" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="(className.length()) % 1" />
    <mutant id="mutant_7199" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="(maxWidth % 3)" />
    <mutant id="mutant_7190" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="transpositions" />
    <mutant id="mutant_7192" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="((str.length()) + offset)" />
    <mutant id="mutant_7191" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="(str.length())" />
    <mutant id="mutant_4917" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="(className.length()) + 1" />
    <mutant id="mutant_4916" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="(className.length()) / 1" />
    <mutant id="mutant_4915" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="1" />
    <mutant id="mutant_4914" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="className.length()" />
    <mutant id="mutant_4913" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="packageLevels - 1" />
    <mutant id="mutant_4912" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="packageLevels * 1" />
    <mutant id="mutant_4911" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="packageLevels % 1" />
    <mutant id="mutant_4910" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="packageLevels / 1" />
    <mutant id="mutant_2323" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="methodName" />
    <mutant id="mutant_3655" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_4986" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="(&quot;Can\'t find a public method for &quot; / methodName)" />
    <mutant id="mutant_2324" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; % methodName)" />
    <mutant id="mutant_3654" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="index" />
    <mutant id="mutant_4985" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="((className.length()) * 2)" />
    <mutant id="mutant_2321" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_3653" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4984" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="((className.length()) % 2)" />
    <mutant id="mutant_2322" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="&quot;No such accessible method: &quot;" />
    <mutant id="mutant_3652" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_4983" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="((className.length()) + 2)" />
    <mutant id="mutant_3651" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4982" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="((className.length()) / 2)" />
    <mutant id="mutant_2320" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_3650" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4981" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="2" />
    <mutant id="mutant_4980" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="className.length()" />
    <mutant id="mutant_2329" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) * &quot;() on object: &quot;)" />
    <mutant id="mutant_2327" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; * methodName)" />
    <mutant id="mutant_3659" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="count" />
    <mutant id="mutant_2328" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) - &quot;() on object: &quot;)" />
    <mutant id="mutant_3658" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_4989" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="(&quot;Can\'t find a public method for &quot; * methodName)" />
    <mutant id="mutant_2325" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; / methodName)" />
    <mutant id="mutant_3657" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="1" />
    <mutant id="mutant_4988" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="&quot;Can\'t find a public method for &quot;" />
    <mutant id="mutant_2326" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; - methodName)" />
    <mutant id="mutant_3656" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_4987" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="methodName" />
    <mutant id="mutant_2312" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) % 1)" />
    <mutant id="mutant_3644" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_4975" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="out / arrayPrefix" />
    <mutant id="mutant_2313" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) * 1)" />
    <mutant id="mutant_3643" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4974" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="out" />
    <mutant id="mutant_2310" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) / 1)" />
    <mutant id="mutant_3642" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4973" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="(lastDotIdx * 1)" />
    <mutant id="mutant_2311" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="1" />
    <mutant id="mutant_3641" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4972" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="(lastDotIdx % 1)" />
    <mutant id="mutant_3640" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4971" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="lastDotIdx" />
    <mutant id="mutant_4970" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="(lastDotIdx - 1)" />
    <mutant id="mutant_2318" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="i" />
    <mutant id="mutant_2319" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_3649" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_2316" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_3648" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4979" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="out - arrayPrefix" />
    <mutant id="mutant_2317" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="1" />
    <mutant id="mutant_3647" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4978" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="out % arrayPrefix" />
    <mutant id="mutant_2314" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) + 1)" />
    <mutant id="mutant_3646" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4977" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="arrayPrefix" />
    <mutant id="mutant_2315" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" />
    <mutant id="mutant_3645" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4976" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="out * arrayPrefix" />
    <mutant id="mutant_2301" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="(&quot;Reference to field %s is ambiguous relative to %s&quot; % &quot;; a matching field exists on two or more implemented interfaces.&quot;)" />
    <mutant id="mutant_3633" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_4964" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="lastDotIdx - 1" />
    <mutant id="mutant_2302" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="(&quot;Reference to field %s is ambiguous relative to %s&quot; - &quot;; a matching field exists on two or more implemented interfaces.&quot;)" />
    <mutant id="mutant_3632" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_4963" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="1" />
    <mutant id="mutant_3631" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_4962" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="lastDotIdx / 1" />
    <mutant id="mutant_2300" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="(&quot;Reference to field %s is ambiguous relative to %s&quot; * &quot;; a matching field exists on two or more implemented interfaces.&quot;)" />
    <mutant id="mutant_3630" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_4961" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) * 1)" />
    <mutant id="mutant_4960" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) % 1)" />
    <mutant id="mutant_2309" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="d" />
    <mutant id="mutant_2307" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="d - 1" />
    <mutant id="mutant_3639" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_2308" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="d * 1" />
    <mutant id="mutant_3638" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4969" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="1" />
    <mutant id="mutant_2305" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="d / 1" />
    <mutant id="mutant_3637" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4968" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="(lastDotIdx / 1)" />
    <mutant id="mutant_2306" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="d % 1" />
    <mutant id="mutant_3636" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4967" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="lastDotIdx * 1" />
    <mutant id="mutant_2303" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="&quot;Reference to field %s is ambiguous relative to %s&quot;" />
    <mutant id="mutant_3635" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4966" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="lastDotIdx % 1" />
    <mutant id="mutant_2304" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="1" />
    <mutant id="mutant_3634" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_4965" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="lastDotIdx" />
    <mutant id="mutant_3622" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="1" />
    <mutant id="mutant_4953" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) + 1)" />
    <mutant id="mutant_3621" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_4952" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) / 1)" />
    <mutant id="mutant_3620" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_4951" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="1" />
    <mutant id="mutant_4950" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="className.length()" />
    <mutant id="mutant_3629" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_3628" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_4959" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) + 1)" />
    <mutant id="mutant_3627" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_4958" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) / 1)" />
    <mutant id="mutant_3626" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_4957" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="1" />
    <mutant id="mutant_3625" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_4956" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="className.length()" />
    <mutant id="mutant_3624" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="count" />
    <mutant id="mutant_4955" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) * 1)" />
    <mutant id="mutant_3623" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_4954" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="((className.length()) % 1)" />
    <mutant id="mutant_2370" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) % (object.getClass().getName()))" />
    <mutant id="mutant_1040" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="input.length()" />
    <mutant id="mutant_2371" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) / (object.getClass().getName()))" />
    <mutant id="mutant_1036" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="(index - (longest))" />
    <mutant id="mutant_2367" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="&quot;() on object: &quot;" />
    <mutant id="mutant_3699" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_1037" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="(index * (longest))" />
    <mutant id="mutant_2368" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(&quot;No such accessible method: &quot; + methodName)" />
    <mutant id="mutant_3698" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_1034" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="(longest)" />
    <mutant id="mutant_2365" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) * &quot;() on object: &quot;)" />
    <mutant id="mutant_3697" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_1035" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="index" />
    <mutant id="mutant_2366" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) / &quot;() on object: &quot;)" />
    <mutant id="mutant_3696" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_1032" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="(index / (longest))" />
    <mutant id="mutant_2363" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; * methodName)" />
    <mutant id="mutant_3695" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_1033" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="(index % (longest))" />
    <mutant id="mutant_2364" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) - &quot;() on object: &quot;)" />
    <mutant id="mutant_3694" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_1030" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1])" />
    <mutant id="mutant_2361" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; / methodName)" />
    <mutant id="mutant_3693" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_1031" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) / (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" />
    <mutant id="mutant_2362" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; - methodName)" />
    <mutant id="mutant_3692" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="array.length" />
    <mutant id="mutant_1038" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="(input.length()) / index" />
    <mutant id="mutant_2369" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) % &quot;() on object: &quot;)" />
    <mutant id="mutant_1039" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="(input.length()) * index" />
    <mutant id="mutant_3691" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="(array.length) + 1" />
    <mutant id="mutant_2360" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; % methodName)" />
    <mutant id="mutant_3690" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="(array.length) * 1" />
    <mutant id="mutant_1025" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) * &quot;\\u&quot;)" />
    <mutant id="mutant_2356" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) / (cls.getName()))" />
    <mutant id="mutant_3688" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="1" />
    <mutant id="mutant_1026" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;" />
    <mutant id="mutant_2357" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) - (cls.getName()))" />
    <mutant id="mutant_3687" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="(array.length) / 1" />
    <mutant id="mutant_1023" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) / &quot;\\u&quot;)" />
    <mutant id="mutant_2354" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" />
    <mutant id="mutant_3686" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="tolerance" />
    <mutant id="mutant_1024" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" />
    <mutant id="mutant_2355" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="cls.getName()" />
    <mutant id="mutant_3685" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind % tolerance" />
    <mutant id="mutant_1021" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) - &quot;\\u&quot;)" />
    <mutant id="mutant_2352" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) % (cls.getName()))" />
    <mutant id="mutant_3684" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind - tolerance" />
    <mutant id="mutant_1022" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="&quot;\\u&quot;" />
    <mutant id="mutant_2353" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) * (cls.getName()))" />
    <mutant id="mutant_3683" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind / tolerance" />
    <mutant id="mutant_2350" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) % &quot;() on class: &quot;)" />
    <mutant id="mutant_3682" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind" />
    <mutant id="mutant_1020" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) % &quot;\\u&quot;)" />
    <mutant id="mutant_2351" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="&quot;() on class: &quot;" />
    <mutant id="mutant_3681" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="valueToFind * tolerance" />
    <mutant id="mutant_1029" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) * (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" />
    <mutant id="mutant_1027" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) % (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" />
    <mutant id="mutant_2358" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="&quot;No such accessible method: &quot;" />
    <mutant id="mutant_1028" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) - (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" />
    <mutant id="mutant_2359" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="methodName" />
    <mutant id="mutant_3689" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="(array.length) % 1" />
    <mutant id="mutant_3680" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="tolerance" />
    <mutant id="mutant_1014" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="(&quot;\\u&quot; % (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" />
    <mutant id="mutant_2345" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; * methodName)" />
    <mutant id="mutant_3677" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind / tolerance" />
    <mutant id="mutant_1015" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="&quot;\\u&quot;" />
    <mutant id="mutant_2346" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) - &quot;() on class: &quot;)" />
    <mutant id="mutant_3676" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind" />
    <mutant id="mutant_1012" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="(translators.length) - 1" />
    <mutant id="mutant_2343" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; / methodName)" />
    <mutant id="mutant_3675" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind * tolerance" />
    <mutant id="mutant_1013" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="translators.length" />
    <mutant id="mutant_2344" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; - methodName)" />
    <mutant id="mutant_3674" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_1010" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="(translators.length) % 1" />
    <mutant id="mutant_2341" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="methodName" />
    <mutant id="mutant_3673" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_1011" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="(translators.length) * 1" />
    <mutant id="mutant_2342" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="(&quot;No such accessible method: &quot; % methodName)" />
    <mutant id="mutant_3672" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_3671" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_2340" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="&quot;No such accessible method: &quot;" />
    <mutant id="mutant_3670" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_1018" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="(&quot;\\u&quot; - (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" />
    <mutant id="mutant_2349" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) / &quot;() on class: &quot;)" />
    <mutant id="mutant_1019" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))" />
    <mutant id="mutant_1016" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="(&quot;\\u&quot; / (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" />
    <mutant id="mutant_2347" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) * &quot;() on class: &quot;)" />
    <mutant id="mutant_3679" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind % tolerance" />
    <mutant id="mutant_1017" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="(&quot;\\u&quot; * (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" />
    <mutant id="mutant_2348" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(&quot;No such accessible method: &quot; + methodName)" />
    <mutant id="mutant_3678" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="valueToFind + tolerance" />
    <mutant id="mutant_1003" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="2" />
    <mutant id="mutant_2334" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) % (object.getClass().getName()))" />
    <mutant id="mutant_3666" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_4997" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="((&quot;Can\'t find a public method for &quot; + methodName) * &quot; &quot;)" />
    <mutant id="mutant_1004" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="((input.length()) + 2)" />
    <mutant id="mutant_2335" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) / (object.getClass().getName()))" />
    <mutant id="mutant_3665" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_4996" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="((&quot;Can\'t find a public method for &quot; + methodName) - &quot; &quot;)" />
    <mutant id="mutant_1001" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="(wrapperFrames.size()) + 1" />
    <mutant id="mutant_2332" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(&quot;No such accessible method: &quot; + methodName)" />
    <mutant id="mutant_3664" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_4995" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="((&quot;Can\'t find a public method for &quot; + methodName) / &quot; &quot;)" />
    <mutant id="mutant_1002" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="input.length()" />
    <mutant id="mutant_2333" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) % &quot;() on object: &quot;)" />
    <mutant id="mutant_3663" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_4994" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="(&quot;Can\'t find a public method for &quot; + methodName)" />
    <mutant id="mutant_2330" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="((&quot;No such accessible method: &quot; + methodName) / &quot;() on object: &quot;)" />
    <mutant id="mutant_3662" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_4993" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="&quot; &quot;" />
    <mutant id="mutant_1000" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="wrapperFrames.size()" />
    <mutant id="mutant_2331" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="&quot;() on object: &quot;" />
    <mutant id="mutant_3661" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_4992" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="((&quot;Can\'t find a public method for &quot; + methodName) % &quot; &quot;)" />
    <mutant id="mutant_3660" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_4991" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="(&quot;Can\'t find a public method for &quot; % methodName)" />
    <mutant id="mutant_4990" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="(&quot;Can\'t find a public method for &quot; - methodName)" />
    <mutant id="mutant_1009" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="1" />
    <mutant id="mutant_1007" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="((input.length()) - 2)" />
    <mutant id="mutant_2338" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) * (object.getClass().getName()))" />
    <mutant id="mutant_1008" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="(translators.length) / 1" />
    <mutant id="mutant_2339" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) - (object.getClass().getName()))" />
    <mutant id="mutant_3669" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_1005" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="((input.length()) / 2)" />
    <mutant id="mutant_2336" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" />
    <mutant id="mutant_3668" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_4999" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) * (ArrayUtils.toString(parameterTypes)))" />
    <mutant id="mutant_1006" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="((input.length()) % 2)" />
    <mutant id="mutant_2337" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="object.getClass().getName()" />
    <mutant id="mutant_3667" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_4998" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="ArrayUtils.toString(parameterTypes)" />
    <mutant id="mutant_2172" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos - i)" />
    <mutant id="mutant_2173" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="i" />
    <mutant id="mutant_2170" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="offset" />
    <mutant id="mutant_2171" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="(offset * length)" />
    <mutant id="mutant_2169" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="(offset % length)" />
    <mutant id="mutant_2167" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="length" />
    <mutant id="mutant_3499" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_2168" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="(offset / length)" />
    <mutant id="mutant_3498" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_2165" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="((priorVariables.size()) + 1)" />
    <mutant id="mutant_3497" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_2166" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="(offset - length)" />
    <mutant id="mutant_3496" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_2163" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="((priorVariables.size()) * 1)" />
    <mutant id="mutant_3495" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_2164" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="priorVariables.size()" />
    <mutant id="mutant_3494" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_2161" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="1" />
    <mutant id="mutant_3493" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_2162" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="((priorVariables.size()) % 1)" />
    <mutant id="mutant_3492" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_3491" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_2160" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="((priorVariables.size()) / 1)" />
    <mutant id="mutant_3490" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_2158" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="(change + varLen) % (endPos - startPos)" />
    <mutant id="mutant_2159" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="endPos - startPos" />
    <mutant id="mutant_3489" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_2156" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="change + varLen" />
    <mutant id="mutant_3488" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_2157" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="(change + varLen) + (endPos - startPos)" />
    <mutant id="mutant_3487" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_2154" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="(change + varLen) / (endPos - startPos)" />
    <mutant id="mutant_3486" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_2155" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="(change + varLen) * (endPos - startPos)" />
    <mutant id="mutant_3485" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_2152" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="(endPos % startPos)" />
    <mutant id="mutant_3484" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="count" />
    <mutant id="mutant_2153" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="(endPos + startPos)" />
    <mutant id="mutant_3483" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x))" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(y))" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) + ((long)(y))" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) + ((long)(y))" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) / ((long)(y))" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) - ((long)(y))" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) % ((long)(y))" />
    <mutant id="mutant_2150" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="(endPos / startPos)" />
    <mutant id="mutant_3482" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="1" />
    <mutant id="mutant_2151" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="endPos" />
    <mutant id="mutant_3481" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_3480" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_2147" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="change" />
    <mutant id="mutant_3479" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="index" />
    <mutant id="mutant_2148" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="(endPos * startPos)" />
    <mutant id="mutant_3478" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_2145" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="(change * varLen)" />
    <mutant id="mutant_3477" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_2146" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="(change % varLen)" />
    <mutant id="mutant_3476" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_2143" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="varLen" />
    <mutant id="mutant_3475" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" />
    <mutant id="mutant_2144" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="(change / varLen)" />
    <mutant id="mutant_3474" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="type1.getName()" />
    <mutant id="mutant_2141" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="(i - valueDelimiterMatchLen)" />
    <mutant id="mutant_3473" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) * (type1.getName()))" />
    <mutant id="mutant_2142" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="(change - varLen)" />
    <mutant id="mutant_3472" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) / (type1.getName()))" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="(numerator) * (denominator)" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="(numerator) - (denominator)" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(y))" />
    <mutant id="mutant_2149" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="startPos" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(x)) % ((long)(y))" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(x))" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(y))" />
    <mutant id="mutant_115" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(x)) + ((long)(y))" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(x)) / ((long)(y))" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="((long)(x)) * ((long)(y))" />
    <mutant id="mutant_3471" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) % (type1.getName()))" />
    <mutant id="mutant_2140" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="(i % valueDelimiterMatchLen)" />
    <mutant id="mutant_3470" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) - (type1.getName()))" />
    <mutant id="mutant_2136" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="i" />
    <mutant id="mutant_3468" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="((&quot;Cannot store &quot; + (type2.getName())) - &quot; in an array of &quot;)" />
    <mutant id="mutant_4799" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="(83 + (start)) + (7 * (end))" />
    <mutant id="mutant_2137" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="valueDelimiterMatchLen" />
    <mutant id="mutant_3467" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="((&quot;Cannot store &quot; + (type2.getName())) * &quot; in an array of &quot;)" />
    <mutant id="mutant_4798" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="((83 + (start)) + (7 * (end))) % (negated ? 1 : 0)" />
    <mutant id="mutant_2134" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="((pos - startPos) * startMatchLen)" />
    <mutant id="mutant_3466" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="((&quot;Cannot store &quot; + (type2.getName())) % &quot; in an array of &quot;)" />
    <mutant id="mutant_4797" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="negated ? 1 : 0" />
    <mutant id="mutant_2135" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="(pos - startPos)" />
    <mutant id="mutant_3465" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="(&quot;Cannot store &quot; + (type2.getName()))" />
    <mutant id="mutant_4796" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="((83 + (start)) + (7 * (end))) * (negated ? 1 : 0)" />
    <mutant id="mutant_2132" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="((pos - startPos) % startMatchLen)" />
    <mutant id="mutant_3464" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="&quot; in an array of &quot;" />
    <mutant id="mutant_4795" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="((83 + (start)) + (7 * (end))) / (negated ? 1 : 0)" />
    <mutant id="mutant_2133" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="((pos - startPos) + startMatchLen)" />
    <mutant id="mutant_3463" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="(&quot;Cannot store &quot; % (type2.getName()))" />
    <mutant id="mutant_4794" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="((83 + (start)) + (7 * (end))) - (negated ? 1 : 0)" />
    <mutant id="mutant_2130" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="startMatchLen" />
    <mutant id="mutant_3462" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="(&quot;Cannot store &quot; - (type2.getName()))" />
    <mutant id="mutant_4793" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="(83 + (start))" />
    <mutant id="mutant_2131" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="((pos - startPos) / startMatchLen)" />
    <mutant id="mutant_3461" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="(&quot;Cannot store &quot; / (type2.getName()))" />
    <mutant id="mutant_4792" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="((83 + (start)) % (7 * (end)))" />
    <mutant id="mutant_110" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) / ((long)(y))" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) - ((long)(y))" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x)) % ((long)(y))" />
    <mutant id="mutant_113" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="((long)(x))" />
    <mutant id="mutant_2138" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="(i / valueDelimiterMatchLen)" />
    <mutant id="mutant_2139" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="(i * valueDelimiterMatchLen)" />
    <mutant id="mutant_3469" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="((&quot;Cannot store &quot; + (type2.getName())) / &quot; in an array of &quot;)" />
    <mutant id="mutant_129" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="((long)(numerator)) + (denominator)" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="((-1) - (denominator))" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="((long)(numerator)) % (denominator)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="((long)(numerator))" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="denominator" />
    <mutant id="mutant_121" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="(denominator)" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="((-1) + (denominator))" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="(-1)" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="((-1) / (denominator))" />
    <mutant id="mutant_120" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="((-1) % (denominator))" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="d1" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="((fraction.denominator) - d1)" />
    <mutant id="mutant_138" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) * d1)" />
    <mutant id="mutant_139" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="denominator" />
    <mutant id="mutant_2198" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="start" />
    <mutant id="mutant_2199" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="start * delimLen" />
    <mutant id="mutant_2196" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="delimLen" />
    <mutant id="mutant_2197" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="start % delimLen" />
    <mutant id="mutant_132" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="((fraction.denominator) * d1)" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="fraction.denominator" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="((fraction.denominator) % d1)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="((fraction.denominator) + d1)" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="((long)(numerator)) * (denominator)" />
    <mutant id="mutant_131" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="((long)(numerator)) - (denominator)" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) + d1)" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="d1" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) - d1)" />
    <mutant id="mutant_2194" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="tokenPos" />
    <mutant id="mutant_2195" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="(tokenPos) + 1" />
    <mutant id="mutant_2192" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="(tokenPos) % 1" />
    <mutant id="mutant_2193" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="(tokenPos) * 1" />
    <mutant id="mutant_2190" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="(tokenPos) / 1" />
    <mutant id="mutant_2191" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="1" />
    <mutant id="mutant_2189" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="(quoteStart * i)" />
    <mutant id="mutant_2187" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="(quoteStart % i)" />
    <mutant id="mutant_2188" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="(quoteStart / i)" />
    <mutant id="mutant_2185" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="quoteStart" />
    <mutant id="mutant_2186" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="(quoteStart - i)" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) - d1)" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) * d1)" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="denominator" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) % d1)" />
    <mutant id="mutant_140" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) % d1)" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="((denominator) + d1)" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="d1" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="value % a1" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="value * a1" />
    <mutant id="mutant_2183" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos / i)" />
    <mutant id="mutant_2184" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="i" />
    <mutant id="mutant_2181" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos % i)" />
    <mutant id="mutant_2182" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos * i)" />
    <mutant id="mutant_2180" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="pos" />
    <mutant id="mutant_2178" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos - i)" />
    <mutant id="mutant_2179" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="i" />
    <mutant id="mutant_2176" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos * i)" />
    <mutant id="mutant_2177" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos / i)" />
    <mutant id="mutant_2174" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="pos" />
    <mutant id="mutant_2175" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="(pos % i)" />
    <mutant id="mutant_154" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="((fraction.denominator) % d2)" />
    <mutant id="mutant_155" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="d2" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="a1" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="value / a1" />
    <mutant id="mutant_150" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="((fraction.denominator) - d2)" />
    <mutant id="mutant_151" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="((fraction.denominator) + d2)" />
    <mutant id="mutant_152" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="((fraction.denominator) * d2)" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="fraction.denominator" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="a2" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="value + a1" />
    <mutant id="mutant_165" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="x1 % y1" />
    <mutant id="mutant_166" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="x1" />
    <mutant id="mutant_167" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="x1 + y1" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="(a2 + y1)" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="value" />
    <mutant id="mutant_162" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="x1 * y1" />
    <mutant id="mutant_163" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="y1" />
    <mutant id="mutant_164" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="x1 - y1" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="y1" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="(a2 / y1)" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="x1 / (a2 * y1)" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="x1 + (a2 * y1)" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="x1" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="x1 * (a2 * y1)" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="(a2 - y1)" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="(a2 % y1)" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="a2 * y1" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="x1 % (a2 * y1)" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="numer1" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="a1" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="(a1 + numer1)" />
    <mutant id="mutant_187" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="(a1 * numer1) % numer0" />
    <mutant id="mutant_188" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="numer0" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="a1 * numer1" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="(a1 - numer1)" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="(a1 % numer1)" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="(a1 / numer1)" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="(a1 * numer1) / numer0" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="(a1 * numer1) - numer0" />
    <mutant id="mutant_191" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="(a1 * numer1) * numer0" />
    <mutant id="mutant_192" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="a1" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="(a1 / denom1)" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="(a1 * denom1) / denom0" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="(a1 * denom1) % denom0" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="(a1 + denom1)" />
    <mutant id="mutant_195" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="denom1" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="(a1 % denom1)" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="(a1 - denom1)" />
    <mutant id="mutant_7020" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n - 1" />
    <mutant id="mutant_7022" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n / 1" />
    <mutant id="mutant_7021" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="1" />
    <mutant id="mutant_7024" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n * 1" />
    <mutant id="mutant_7023" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n" />
    <mutant id="mutant_7015" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="1" />
    <mutant id="mutant_7014" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n - 1" />
    <mutant id="mutant_7017" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n" />
    <mutant id="mutant_7016" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n / 1" />
    <mutant id="mutant_7019" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n % 1" />
    <mutant id="mutant_7018" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n * 1" />
    <mutant id="mutant_7011" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="((p[(i - 1)]) - cost)" />
    <mutant id="mutant_7010" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="((p[(i - 1)]) / cost)" />
    <mutant id="mutant_7013" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="((p[(i - 1)]) % cost)" />
    <mutant id="mutant_7012" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="p[(i - 1)]" />
    <mutant id="mutant_7004" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="1" />
    <mutant id="mutant_7003" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_7006" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_7005" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="i" />
    <mutant id="mutant_7008" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="((p[(i - 1)]) * cost)" />
    <mutant id="mutant_7007" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_7009" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="cost" />
    <mutant id="mutant_7000" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="((p[i]) * 1)" />
    <mutant id="mutant_7002" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_7001" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="((p[i]) % 1)" />
    <mutant id="mutant_7062" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_7061" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="(min % 1)" />
    <mutant id="mutant_7064" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="1" />
    <mutant id="mutant_7063" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_7066" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_7065" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="i" />
    <mutant id="mutant_7068" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_7067" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_7060" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="min" />
    <mutant id="mutant_7059" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="(min / 1)" />
    <mutant id="mutant_7058" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="(min * 1)" />
    <mutant id="mutant_7051" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="(j % threshold)" />
    <mutant id="mutant_7050" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="(j / threshold)" />
    <mutant id="mutant_7053" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="threshold" />
    <mutant id="mutant_7052" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="j" />
    <mutant id="mutant_7055" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="(j - threshold)" />
    <mutant id="mutant_7054" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="(j * threshold)" />
    <mutant id="mutant_7057" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="(min + 1)" />
    <mutant id="mutant_7056" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="1" />
    <mutant id="mutant_7048" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="((Integer.MAX_VALUE) / threshold)" />
    <mutant id="mutant_7047" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="((Integer.MAX_VALUE) % threshold)" />
    <mutant id="mutant_7049" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="(Integer.MAX_VALUE)" />
    <mutant id="mutant_7040" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="(j + threshold)" />
    <mutant id="mutant_7042" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="threshold" />
    <mutant id="mutant_7041" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="j" />
    <mutant id="mutant_7044" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="((Integer.MAX_VALUE) + threshold)" />
    <mutant id="mutant_7043" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="(j * threshold)" />
    <mutant id="mutant_7046" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="threshold" />
    <mutant id="mutant_7045" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="((Integer.MAX_VALUE) * threshold)" />
    <mutant id="mutant_7037" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="(j / 1)" />
    <mutant id="mutant_7036" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="(j + 1)" />
    <mutant id="mutant_7039" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="(j % threshold)" />
    <mutant id="mutant_7038" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="(j / threshold)" />
    <mutant id="mutant_7031" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="(Math.min(n, threshold)) * 1" />
    <mutant id="mutant_7030" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="(Math.min(n, threshold)) % 1" />
    <mutant id="mutant_7033" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="(j % 1)" />
    <mutant id="mutant_7032" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="1" />
    <mutant id="mutant_7035" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="(j * 1)" />
    <mutant id="mutant_7034" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="j" />
    <mutant id="mutant_7026" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="(Math.min(n, threshold)) / 1" />
    <mutant id="mutant_7025" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="n % 1" />
    <mutant id="mutant_7028" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="Math.min(n, threshold)" />
    <mutant id="mutant_7027" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="1" />
    <mutant id="mutant_7029" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="(Math.min(n, threshold)) - 1" />
    <mutant id="mutant_4821" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos - 2)" />
    <mutant id="mutant_4820" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos % 2)" />
    <mutant id="mutant_4829" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_4828" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_4827" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_4826" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_4825" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_4824" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_4823" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos / 2)" />
    <mutant id="mutant_4822" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="pos" />
    <mutant id="mutant_7095" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen % 1" />
    <mutant id="mutant_7094" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen / 1" />
    <mutant id="mutant_7097" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen + 1" />
    <mutant id="mutant_7096" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen" />
    <mutant id="mutant_7099" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="searchLen" />
    <mutant id="mutant_7098" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="1" />
    <mutant id="mutant_4819" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="2" />
    <mutant id="mutant_7091" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="1 * (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" />
    <mutant id="mutant_7090" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="1 % (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" />
    <mutant id="mutant_7093" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="csLen * 1" />
    <mutant id="mutant_7092" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="1" />
    <mutant id="mutant_4810" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="89 - (set.hashCode())" />
    <mutant id="mutant_4818" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos * 2)" />
    <mutant id="mutant_4817" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="len % pos" />
    <mutant id="mutant_4816" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="len / pos" />
    <mutant id="mutant_4815" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="pos" />
    <mutant id="mutant_4814" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="len + pos" />
    <mutant id="mutant_4813" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="len * pos" />
    <mutant id="mutant_4812" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="len" />
    <mutant id="mutant_4811" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="89 % (set.hashCode())" />
    <mutant id="mutant_7084" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_7083" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="i" />
    <mutant id="mutant_7086" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)])" />
    <mutant id="mutant_7085" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_7088" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="1 / (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" />
    <mutant id="mutant_7087" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="1" />
    <mutant id="mutant_4809" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="89 / (set.hashCode())" />
    <mutant id="mutant_4808" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="89 * (set.hashCode())" />
    <mutant id="mutant_7089" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="1 - (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" />
    <mutant id="mutant_7080" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_7082" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="1" />
    <mutant id="mutant_7081" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_4807" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="set.hashCode()" />
    <mutant id="mutant_4806" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="89" />
    <mutant id="mutant_4805" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="sz * 1" />
    <mutant id="mutant_4804" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="sz" />
    <mutant id="mutant_4803" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="sz % 1" />
    <mutant id="mutant_4802" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="sz + 1" />
    <mutant id="mutant_4801" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="sz / 1" />
    <mutant id="mutant_4800" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="1" />
    <mutant id="mutant_7073" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_7072" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_7075" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_7074" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_7077" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="i" />
    <mutant id="mutant_7076" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="1" />
    <mutant id="mutant_7079" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_7078" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_7071" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="i" />
    <mutant id="mutant_7070" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="1" />
    <mutant id="mutant_7069" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_2202" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="(start * quoteLen)" />
    <mutant id="mutant_3534" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_4865" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="(&quot;The character &quot; / ch)" />
    <mutant id="mutant_2203" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="start" />
    <mutant id="mutant_3533" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4864" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="(&quot;The character &quot; % ch)" />
    <mutant id="mutant_2200" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="start - delimLen" />
    <mutant id="mutant_3532" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4863" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="(&quot;The character &quot; * ch)" />
    <mutant id="mutant_2201" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="start / delimLen" />
    <mutant id="mutant_3531" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4862" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="(&quot;The character &quot; - ch)" />
    <mutant id="mutant_3530" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4861" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="ch" />
    <mutant id="mutant_4860" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="&quot;The character &quot;" />
    <mutant id="mutant_2208" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="(pos * quoteLen)" />
    <mutant id="mutant_2209" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="pos" />
    <mutant id="mutant_3539" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_2206" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="(start - quoteLen)" />
    <mutant id="mutant_3538" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4869" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="((&quot;The character &quot; + ch) % &quot; is not in the range \'0\' - \'9\'&quot;)" />
    <mutant id="mutant_2207" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="(start % quoteLen)" />
    <mutant id="mutant_3537" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4868" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="((&quot;The character &quot; + ch) * &quot; is not in the range \'0\' - \'9\'&quot;)" />
    <mutant id="mutant_2204" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="quoteLen" />
    <mutant id="mutant_3536" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4867" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="(&quot;The character &quot; + ch)" />
    <mutant id="mutant_2205" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="(start / quoteLen)" />
    <mutant id="mutant_3535" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4866" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="((&quot;The character &quot; + ch) - &quot; is not in the range \'0\' - \'9\'&quot;)" />
    <mutant id="mutant_3523" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_4854" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="x * y" />
    <mutant id="mutant_3522" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_4853" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_3521" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_4852" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_3520" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_4851" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_4850" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_3529" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_3528" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_4859" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="x + y" />
    <mutant id="mutant_3527" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_4858" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="x % y" />
    <mutant id="mutant_3526" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_4857" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="x" />
    <mutant id="mutant_3525" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_4856" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="y" />
    <mutant id="mutant_3524" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_4855" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="x / y" />
    <mutant id="mutant_3512" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_4843" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="2" />
    <mutant id="mutant_3511" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4842" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos * 2)" />
    <mutant id="mutant_3510" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4841" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_4840" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_3519" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="count" />
    <mutant id="mutant_3518" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_4849" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_3517" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="1" />
    <mutant id="mutant_4848" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_3516" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_4847" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos / 2)" />
    <mutant id="mutant_3515" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_4846" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="pos" />
    <mutant id="mutant_3514" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="index" />
    <mutant id="mutant_4845" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos - 2)" />
    <mutant id="mutant_3513" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4844" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="(pos % 2)" />
    <mutant id="mutant_3501" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4832" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="(pos % 3)" />
    <mutant id="mutant_3500" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4831" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="3" />
    <mutant id="mutant_4830" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="(pos * 3)" />
    <mutant id="mutant_3509" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_3508" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4839" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_3507" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4838" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_3506" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4837" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_3505" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4836" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_3504" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_4835" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="(pos / 3)" />
    <mutant id="mutant_3503" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4834" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="(pos - 3)" />
    <mutant id="mutant_3502" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_4833" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="pos" />
    <mutant id="mutant_3581" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_2250" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="(inputLineLength + offset)" />
    <mutant id="mutant_3580" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_2246" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="(inputLineLength / 32)" />
    <mutant id="mutant_3578" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_2247" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="(inputLineLength * 32)" />
    <mutant id="mutant_3577" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_2244" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="(inputLineLength - 32)" />
    <mutant id="mutant_3576" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_2245" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="(inputLineLength % 32)" />
    <mutant id="mutant_3575" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_2242" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="(strLen / 2) / 1" />
    <mutant id="mutant_3574" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_2243" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="strLen / 2" />
    <mutant id="mutant_3573" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_2240" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="(strLen / 2) % 1" />
    <mutant id="mutant_3572" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_2241" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="(strLen / 2) * 1" />
    <mutant id="mutant_3571" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_2248" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="inputLineLength" />
    <mutant id="mutant_2249" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="32" />
    <mutant id="mutant_3579" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_3570" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_2235" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="(strLen * 2)" />
    <mutant id="mutant_3567" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_4898" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="lastDotIndex" />
    <mutant id="mutant_2236" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="(strLen + 2)" />
    <mutant id="mutant_3566" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_4897" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="(lastDotIndex / 1)" />
    <mutant id="mutant_2233" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="2" />
    <mutant id="mutant_3565" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_4896" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="1" />
    <mutant id="mutant_2234" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="(strLen - 2)" />
    <mutant id="mutant_3564" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_4895" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="((className.substring(0, lastDotIndex)) - (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_2231" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="&quot;StrTokenizer&quot;" />
    <mutant id="mutant_3563" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="indices[(count - 1)]" />
    <mutant id="mutant_4894" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="((className.substring(0, lastDotIndex)) * (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_2232" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="(strLen % 2)" />
    <mutant id="mutant_3562" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) - 1)" />
    <mutant id="mutant_4893" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(className.substring(0, lastDotIndex))" />
    <mutant id="mutant_3561" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) * 1)" />
    <mutant id="mutant_4892" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(ClassUtils.INNER_CLASS_SEPARATOR_CHAR)" />
    <mutant id="mutant_2230" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="&quot;StrTokenizer&quot; * (getTokenList())" />
    <mutant id="mutant_3560" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) / 1)" />
    <mutant id="mutant_4891" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="((className.substring(0, lastDotIndex)) / (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_2239" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="(strLen / 2) - 1" />
    <mutant id="mutant_2237" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="strLen" />
    <mutant id="mutant_3569" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_2238" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="1" />
    <mutant id="mutant_3568" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_4899" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="(lastDotIndex * 1)" />
    <mutant id="mutant_4890" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="((className.substring(0, lastDotIndex)) % (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_2224" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="pos % delimLen" />
    <mutant id="mutant_3556" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="(count * 1)" />
    <mutant id="mutant_4887" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="&quot;[&quot; % (ClassUtils.abbreviationMap.get(className))" />
    <mutant id="mutant_2225" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="pos * delimLen" />
    <mutant id="mutant_3555" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="(count + 1)" />
    <mutant id="mutant_4886" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="&quot;[&quot;" />
    <mutant id="mutant_2222" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="pos" />
    <mutant id="mutant_3554" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="count" />
    <mutant id="mutant_4885" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="&quot;[&quot; - (ClassUtils.abbreviationMap.get(className))" />
    <mutant id="mutant_2223" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="pos - delimLen" />
    <mutant id="mutant_3553" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="(count / 1)" />
    <mutant id="mutant_4884" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="ClassUtils.abbreviationMap.get(className)" />
    <mutant id="mutant_2220" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="delimLen" />
    <mutant id="mutant_3552" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="1" />
    <mutant id="mutant_4883" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="ch * 48" />
    <mutant id="mutant_2221" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="pos / delimLen" />
    <mutant id="mutant_3551" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="(array.length) * index" />
    <mutant id="mutant_4882" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="ch + 48" />
    <mutant id="mutant_3550" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="(array.length) + index" />
    <mutant id="mutant_4881" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="ch % 48" />
    <mutant id="mutant_4880" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="ch / 48" />
    <mutant id="mutant_2228" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="&quot;StrTokenizer&quot; % (getTokenList())" />
    <mutant id="mutant_2229" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="&quot;StrTokenizer&quot; / (getTokenList())" />
    <mutant id="mutant_3559" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="1" />
    <mutant id="mutant_2226" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="getTokenList()" />
    <mutant id="mutant_3558" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="((indices[(count - 1)]) % 1)" />
    <mutant id="mutant_4889" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="&quot;[&quot; * (ClassUtils.abbreviationMap.get(className))" />
    <mutant id="mutant_2227" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="&quot;StrTokenizer&quot; - (getTokenList())" />
    <mutant id="mutant_3557" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="(count % 1)" />
    <mutant id="mutant_4888" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="&quot;[&quot; / (ClassUtils.abbreviationMap.get(className))" />
    <mutant id="mutant_2213" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="(pos - quoteLen)" />
    <mutant id="mutant_3545" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="(array1.length) % (array2.length)" />
    <mutant id="mutant_4876" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="ch + 48" />
    <mutant id="mutant_2214" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="2" />
    <mutant id="mutant_3544" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="array1.length" />
    <mutant id="mutant_4875" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="ch % 48" />
    <mutant id="mutant_2211" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="(pos % quoteLen)" />
    <mutant id="mutant_3543" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="(array1.length) - (array2.length)" />
    <mutant id="mutant_4874" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="ch / 48" />
    <mutant id="mutant_2212" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="quoteLen" />
    <mutant id="mutant_3542" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="(array1.length) / (array2.length)" />
    <mutant id="mutant_4873" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="48" />
    <mutant id="mutant_3541" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="(array1.length) * (array2.length)" />
    <mutant id="mutant_4872" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="ch" />
    <mutant id="mutant_2210" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="(pos / quoteLen)" />
    <mutant id="mutant_3540" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4871" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="&quot; is not in the range \'0\' - \'9\'&quot;" />
    <mutant id="mutant_4870" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="((&quot;The character &quot; + ch) / &quot; is not in the range \'0\' - \'9\'&quot;)" />
    <mutant id="mutant_2219" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="quoteLen % 2" />
    <mutant id="mutant_2217" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="quoteLen + 2" />
    <mutant id="mutant_3549" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="index" />
    <mutant id="mutant_2218" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="quoteLen" />
    <mutant id="mutant_3548" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="array.length" />
    <mutant id="mutant_4879" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="48" />
    <mutant id="mutant_2215" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="quoteLen / 2" />
    <mutant id="mutant_3547" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="(array.length) / index" />
    <mutant id="mutant_4878" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="ch" />
    <mutant id="mutant_2216" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="quoteLen - 2" />
    <mutant id="mutant_3546" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="(array.length) % index" />
    <mutant id="mutant_4877" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="ch * 48" />
    <mutant id="mutant_2051" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="endIndex" />
    <mutant id="mutant_3383" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="(value % 10)" />
    <mutant id="mutant_2052" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="(endIndex + startIndex)" />
    <mutant id="mutant_3382" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="((value % 10) % '0')" />
    <mutant id="mutant_3381" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="((value % 10) - '0')" />
    <mutant id="mutant_2050" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="((size) / endIndex)" />
    <mutant id="mutant_3380" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="10" />
    <mutant id="mutant_2048" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="((size) + endIndex)" />
    <mutant id="mutant_2049" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="((size) % endIndex)" />
    <mutant id="mutant_3379" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="value" />
    <mutant id="mutant_2046" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="((size) * endIndex)" />
    <mutant id="mutant_3378" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="(value + 10)" />
    <mutant id="mutant_2047" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="size" />
    <mutant id="mutant_3377" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="(value - 10)" />
    <mutant id="mutant_2044" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="(len / 1)" />
    <mutant id="mutant_3376" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="(value * 10)" />
    <mutant id="mutant_2045" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="(len + 1)" />
    <mutant id="mutant_3375" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="(value / 10)" />
    <mutant id="mutant_2042" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="len" />
    <mutant id="mutant_3374" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="'0'" />
    <mutant id="mutant_2043" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="(len % 1)" />
    <mutant id="mutant_3373" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="((value / 10) % '0')" />
    <mutant id="mutant_2040" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="(len * 1)" />
    <mutant id="mutant_3372" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="(value / 10)" />
    <mutant id="mutant_2041" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="1" />
    <mutant id="mutant_3371" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="((value / 10) * '0')" />
    <mutant id="mutant_3370" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="((value / 10) / '0')" />
    <mutant id="mutant_2037" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="size" />
    <mutant id="mutant_3369" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="((value / 10) - '0')" />
    <mutant id="mutant_2038" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="(size) / 1" />
    <mutant id="mutant_3368" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="10" />
    <mutant id="mutant_4699" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_2035" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="(size) * 1" />
    <mutant id="mutant_3367" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="value" />
    <mutant id="mutant_4698" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_2036" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="(size) % 1" />
    <mutant id="mutant_3366" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="(value + 10)" />
    <mutant id="mutant_4697" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_2033" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="(size) + 2" />
    <mutant id="mutant_3365" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="(value - 10)" />
    <mutant id="mutant_4696" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_2034" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="1" />
    <mutant id="mutant_3364" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="(value * 10)" />
    <mutant id="mutant_4695" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_2031" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="(size) - 2" />
    <mutant id="mutant_3363" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="(value % 10)" />
    <mutant id="mutant_4694" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_2032" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="(size) % 2" />
    <mutant id="mutant_3362" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="token" />
    <mutant id="mutant_4693" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_2039" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="(size) + 1" />
    <mutant id="mutant_3361" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="(&quot;Illegal pattern component: &quot; / token)" />
    <mutant id="mutant_4692" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_2030" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="size" />
    <mutant id="mutant_3360" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="(&quot;Illegal pattern component: &quot; % token)" />
    <mutant id="mutant_4691" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_4690" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_2026" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="(i + replaceLen) + 1" />
    <mutant id="mutant_3358" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="&quot;Illegal pattern component: &quot;" />
    <mutant id="mutant_4689" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_2027" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="i + replaceLen" />
    <mutant id="mutant_3357" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="(&quot;Illegal pattern component: &quot; * token)" />
    <mutant id="mutant_4688" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_2024" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="(i + replaceLen) * 1" />
    <mutant id="mutant_3356" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="(&quot;Unknown class: &quot; - (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" />
    <mutant id="mutant_4687" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_2025" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="(i + replaceLen) % 1" />
    <mutant id="mutant_3355" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="(&quot;Unknown class: &quot; / (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" />
    <mutant id="mutant_4686" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_2022" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="1" />
    <mutant id="mutant_3354" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="(&quot;Unknown class: &quot; % (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" />
    <mutant id="mutant_4685" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_2023" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="(i + replaceLen) / 1" />
    <mutant id="mutant_3353" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="(&quot;Unknown class: &quot; * (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" />
    <mutant id="mutant_4684" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_2020" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="(i - replaceLen)" />
    <mutant id="mutant_3352" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="(obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName())" />
    <mutant id="mutant_4683" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_2021" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="(i / replaceLen)" />
    <mutant id="mutant_3351" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="&quot;Unknown class: &quot;" />
    <mutant id="mutant_4682" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_2028" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="2" />
    <mutant id="mutant_2029" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="(size) * 2" />
    <mutant id="mutant_3359" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="(&quot;Illegal pattern component: &quot; - token)" />
    <mutant id="mutant_3350" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) % &quot;]&quot;" />
    <mutant id="mutant_4681" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4680" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_2015" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="(to - removeLen) * replaceLen" />
    <mutant id="mutant_3347" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) / &quot;]&quot;" />
    <mutant id="mutant_4678" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_2016" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="(i * replaceLen)" />
    <mutant id="mutant_3346" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) - &quot;]&quot;" />
    <mutant id="mutant_4677" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_2013" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="(to - removeLen) - replaceLen" />
    <mutant id="mutant_3345" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())" />
    <mutant id="mutant_4676" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_2014" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="(to - removeLen) / replaceLen" />
    <mutant id="mutant_3344" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) - (mTimeZone.getID()))" />
    <mutant id="mutant_4675" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_2011" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="(to - removeLen) % replaceLen" />
    <mutant id="mutant_3343" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) % (mTimeZone.getID()))" />
    <mutant id="mutant_4674" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_2012" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="to - removeLen" />
    <mutant id="mutant_3342" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) / (mTimeZone.getID()))" />
    <mutant id="mutant_4673" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3341" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) * (mTimeZone.getID()))" />
    <mutant id="mutant_4672" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_2010" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="replaceLen" />
    <mutant id="mutant_3340" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" />
    <mutant id="mutant_4671" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_2019" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="replaceLen" />
    <mutant id="mutant_2017" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="i" />
    <mutant id="mutant_3349" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) * &quot;]&quot;" />
    <mutant id="mutant_2018" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="(i % replaceLen)" />
    <mutant id="mutant_3348" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="&quot;]&quot;" />
    <mutant id="mutant_4679" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_2095" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="length" />
    <mutant id="mutant_2096" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="(offset / length)" />
    <mutant id="mutant_2093" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="(offset * length)" />
    <mutant id="mutant_2094" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="(offset - length)" />
    <mutant id="mutant_2091" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="(offset % length)" />
    <mutant id="mutant_2092" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="offset" />
    <mutant id="mutant_2090" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="(offset / length)" />
    <mutant id="mutant_2088" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="(offset - length)" />
    <mutant id="mutant_2089" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="length" />
    <mutant id="mutant_2086" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="(pos - len)" />
    <mutant id="mutant_2087" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="(pos * len)" />
    <mutant id="mutant_2084" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="(pos % len)" />
    <mutant id="mutant_2085" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="pos" />
    <mutant id="mutant_2082" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="len" />
    <mutant id="mutant_2083" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="(pos / len)" />
    <mutant id="mutant_2080" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="((size) / endIndex)" />
    <mutant id="mutant_2081" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="endIndex" />
    <mutant id="mutant_2079" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="((size) % endIndex)" />
    <mutant id="mutant_2077" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="size" />
    <mutant id="mutant_2078" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="((size) + endIndex)" />
    <mutant id="mutant_2075" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="(startIndex * insertLen)" />
    <mutant id="mutant_2076" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="((size) * endIndex)" />
    <mutant id="mutant_2073" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="(startIndex / insertLen)" />
    <mutant id="mutant_2074" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="startIndex" />
    <mutant id="mutant_2071" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="(startIndex % insertLen)" />
    <mutant id="mutant_2072" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="insertLen" />
    <mutant id="mutant_2070" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="(startIndex - insertLen)" />
    <mutant id="mutant_2068" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="((size) - removeLen) / insertLen" />
    <mutant id="mutant_2069" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="(size) - removeLen" />
    <mutant id="mutant_3399" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="(&quot;No date time pattern for locale: &quot; * locale)" />
    <mutant id="mutant_2066" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="insertLen" />
    <mutant id="mutant_3398" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="(rc * 7) / (key.hashCode())" />
    <mutant id="mutant_2067" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="((size) - removeLen) * insertLen" />
    <mutant id="mutant_3397" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="key.hashCode()" />
    <mutant id="mutant_2064" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="((size) - removeLen) % insertLen" />
    <mutant id="mutant_3396" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="(rc * 7) - (key.hashCode())" />
    <mutant id="mutant_2065" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="((size) - removeLen) - insertLen" />
    <mutant id="mutant_3395" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="(rc * 7) * (key.hashCode())" />
    <mutant id="mutant_2062" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="((size) % removeLen)" />
    <mutant id="mutant_3394" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="(rc * 7) % (key.hashCode())" />
    <mutant id="mutant_2063" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="((size) + removeLen)" />
    <mutant id="mutant_3393" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="rc * 7" />
    <mutant id="mutant_2060" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="(size)" />
    <mutant id="mutant_3392" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="(rc + 7)" />
    <mutant id="mutant_2061" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="((size) / removeLen)" />
    <mutant id="mutant_3391" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="(rc - 7)" />
    <mutant id="mutant_3390" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="(rc / 7)" />
    <mutant id="mutant_2059" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="((size) * removeLen)" />
    <mutant id="mutant_2057" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="endIndex" />
    <mutant id="mutant_3389" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="7" />
    <mutant id="mutant_2058" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="removeLen" />
    <mutant id="mutant_3388" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="rc" />
    <mutant id="mutant_2055" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="(endIndex % startIndex)" />
    <mutant id="mutant_3387" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="(rc % 7)" />
    <mutant id="mutant_2056" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="startIndex" />
    <mutant id="mutant_3386" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="((value % 10) / '0')" />
    <mutant id="mutant_2053" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="(endIndex / startIndex)" />
    <mutant id="mutant_3385" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="'0'" />
    <mutant id="mutant_2054" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="(endIndex * startIndex)" />
    <mutant id="mutant_3384" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="((value % 10) * '0')" />
    <mutant id="mutant_2099" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="(offset * length)" />
    <mutant id="mutant_2097" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="(offset % length)" />
    <mutant id="mutant_2098" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="offset" />
    <mutant id="mutant_4709" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4700" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_4708" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_4707" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4706" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_4705" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4704" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_4703" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4702" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_4701" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_3413" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="(System.nanoTime()) % (this.startTime)" />
    <mutant id="mutant_4744" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3412" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="(System.nanoTime()) + (this.startTime)" />
    <mutant id="mutant_4743" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_3411" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="(System.nanoTime()) / (this.startTime)" />
    <mutant id="mutant_4742" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3410" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) * (this.startTime)" />
    <mutant id="mutant_4741" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_4740" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3419" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) / (this.startTime)" />
    <mutant id="mutant_3418" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="this.stopTime" />
    <mutant id="mutant_4749" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="(range.end) * 1" />
    <mutant id="mutant_3417" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) + (this.startTime)" />
    <mutant id="mutant_4748" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="(range.end) / 1" />
    <mutant id="mutant_3416" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="System.nanoTime()" />
    <mutant id="mutant_4747" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="(range.end) - 1" />
    <mutant id="mutant_3415" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="(System.nanoTime()) * (this.startTime)" />
    <mutant id="mutant_4746" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="1" />
    <mutant id="mutant_3414" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="this.startTime" />
    <mutant id="mutant_4745" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3402" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="(&quot;No date time pattern for locale: &quot; / locale)" />
    <mutant id="mutant_4733" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_3401" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="&quot;No date time pattern for locale: &quot;" />
    <mutant id="mutant_4732" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_3400" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="(&quot;No date time pattern for locale: &quot; % locale)" />
    <mutant id="mutant_4731" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4730" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3409" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="this.startTime" />
    <mutant id="mutant_3408" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) % (this.startTime)" />
    <mutant id="mutant_4739" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3407" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) / (this.startTime)" />
    <mutant id="mutant_4738" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3406" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="this.stopTime" />
    <mutant id="mutant_4737" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_3405" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) + (this.startTime)" />
    <mutant id="mutant_4736" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3404" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="(&quot;No date time pattern for locale: &quot; - locale)" />
    <mutant id="mutant_4735" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_3403" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="locale" />
    <mutant id="mutant_4734" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_4722" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_4721" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_4720" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_4729" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4728" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_4727" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4726" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_4725" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4724" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_4723" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4711" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_4710" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_4719" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_4718" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_4717" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_4716" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_4715" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_4714" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_4713" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_4712" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3460" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="(type2.getName())" />
    <mutant id="mutant_4791" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="((83 + (start)) * (7 * (end)))" />
    <mutant id="mutant_4790" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="((83 + (start)) / (7 * (end)))" />
    <mutant id="mutant_2125" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="(pos / startPos)" />
    <mutant id="mutant_3457" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="((array1.length) % (array2.length))" />
    <mutant id="mutant_4788" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="((83 + (start)) - (7 * (end)))" />
    <mutant id="mutant_2126" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="(pos % startPos)" />
    <mutant id="mutant_3456" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="array1.length" />
    <mutant id="mutant_4787" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="(end)" />
    <mutant id="mutant_2123" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="(startPos % startMatchLen)" />
    <mutant id="mutant_3455" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="((array1.length) - (array2.length))" />
    <mutant id="mutant_4786" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="(7 % (end))" />
    <mutant id="mutant_2124" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="startPos" />
    <mutant id="mutant_3454" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="((array1.length) / (array2.length))" />
    <mutant id="mutant_4785" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="(7 - (end))" />
    <mutant id="mutant_2121" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="startMatchLen" />
    <mutant id="mutant_3453" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="((array1.length) * (array2.length))" />
    <mutant id="mutant_4784" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="7" />
    <mutant id="mutant_2122" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="(startPos - startMatchLen)" />
    <mutant id="mutant_3452" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="newArray.length" />
    <mutant id="mutant_4783" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="(7 + (end))" />
    <mutant id="mutant_3451" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="((newArray.length) + 1)" />
    <mutant id="mutant_4782" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="(7 / (end))" />
    <mutant id="mutant_2120" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="(startPos / startMatchLen)" />
    <mutant id="mutant_3450" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="((newArray.length) * 1)" />
    <mutant id="mutant_4781" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="(start)" />
    <mutant id="mutant_2129" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="(pos + startPos)" />
    <mutant id="mutant_2127" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="(pos * startPos)" />
    <mutant id="mutant_3459" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="&quot;Cannot store &quot;" />
    <mutant id="mutant_2128" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="pos" />
    <mutant id="mutant_3458" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="(&quot;Cannot store &quot; * (type2.getName()))" />
    <mutant id="mutant_4789" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="(7 * (end))" />
    <mutant id="mutant_4780" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="(83 / (start))" />
    <mutant id="mutant_2114" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos + 1)" />
    <mutant id="mutant_3446" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="(name.hashCode()) - 127" />
    <mutant id="mutant_4777" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="(83 - (start))" />
    <mutant id="mutant_2115" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos % 1)" />
    <mutant id="mutant_3445" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="(name.hashCode()) + 127" />
    <mutant id="mutant_4776" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="(83 % (start))" />
    <mutant id="mutant_2112" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos * 1)" />
    <mutant id="mutant_3444" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="(name.hashCode()) % 127" />
    <mutant id="mutant_4775" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) - 1" />
    <mutant id="mutant_2113" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="1" />
    <mutant id="mutant_3443" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="127" />
    <mutant id="mutant_4774" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) / 1" />
    <mutant id="mutant_2110" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="pos" />
    <mutant id="mutant_3442" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="name.hashCode()" />
    <mutant id="mutant_4773" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) * 1" />
    <mutant id="mutant_2111" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos / 1)" />
    <mutant id="mutant_3441" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="(name.hashCode()) / 127" />
    <mutant id="mutant_4772" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) % 1" />
    <mutant id="mutant_3440" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="System.nanoTime()" />
    <mutant id="mutant_4771" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="1" />
    <mutant id="mutant_4770" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="current" />
    <mutant id="mutant_2118" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="startPos" />
    <mutant id="mutant_2119" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="(startPos * startMatchLen)" />
    <mutant id="mutant_3449" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="((newArray.length) % 1)" />
    <mutant id="mutant_2116" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="pos" />
    <mutant id="mutant_3448" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="1" />
    <mutant id="mutant_4779" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="83" />
    <mutant id="mutant_2117" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos / 1)" />
    <mutant id="mutant_3447" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="((newArray.length) / 1)" />
    <mutant id="mutant_4778" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="(83 * (start))" />
    <mutant id="mutant_2103" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="offset % length" />
    <mutant id="mutant_3435" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="this.stopTime" />
    <mutant id="mutant_4766" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) % 1" />
    <mutant id="mutant_2104" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="offset" />
    <mutant id="mutant_3434" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getNanoTime()) * (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4765" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="1" />
    <mutant id="mutant_2101" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="length" />
    <mutant id="mutant_3433" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="StopWatch.NANO_2_MILLIS" />
    <mutant id="mutant_4764" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="current" />
    <mutant id="mutant_2102" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="offset / length" />
    <mutant id="mutant_3432" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="getNanoTime()" />
    <mutant id="mutant_4763" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="range.end" />
    <mutant id="mutant_3431" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getNanoTime()) % (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4762" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="(range.end) % 1" />
    <mutant id="mutant_2100" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="offset - length" />
    <mutant id="mutant_3430" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getNanoTime()) + (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4761" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="(range.end) * 1" />
    <mutant id="mutant_4760" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="(range.end) / 1" />
    <mutant id="mutant_2109" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos % 1)" />
    <mutant id="mutant_2107" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="1" />
    <mutant id="mutant_3439" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="(System.nanoTime()) * (this.stopTime)" />
    <mutant id="mutant_2108" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos + 1)" />
    <mutant id="mutant_3438" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="(System.nanoTime()) % (this.stopTime)" />
    <mutant id="mutant_4769" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) - 1" />
    <mutant id="mutant_2105" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="offset * length" />
    <mutant id="mutant_3437" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="(System.nanoTime()) + (this.stopTime)" />
    <mutant id="mutant_4768" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) / 1" />
    <mutant id="mutant_2106" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="(pos * 1)" />
    <mutant id="mutant_3436" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="(System.nanoTime()) / (this.stopTime)" />
    <mutant id="mutant_4767" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="(current) * 1" />
    <mutant id="mutant_3424" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getSplitNanoTime()) % (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4755" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="((current) * 1)" />
    <mutant id="mutant_3423" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getSplitNanoTime()) + (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4754" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="((current) % 1)" />
    <mutant id="mutant_3422" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) * (this.startTime)" />
    <mutant id="mutant_4753" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="1" />
    <mutant id="mutant_3421" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="this.startTime" />
    <mutant id="mutant_4752" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="(current)" />
    <mutant id="mutant_3420" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="(this.stopTime) % (this.startTime)" />
    <mutant id="mutant_4751" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="range.end" />
    <mutant id="mutant_4750" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="(range.end) % 1" />
    <mutant id="mutant_3429" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getNanoTime()) - (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_3428" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getSplitNanoTime()) - (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4759" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="(range.end) - 1" />
    <mutant id="mutant_3427" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="getSplitNanoTime()" />
    <mutant id="mutant_4758" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="1" />
    <mutant id="mutant_3426" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="StopWatch.NANO_2_MILLIS" />
    <mutant id="mutant_4757" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="((current) - 1)" />
    <mutant id="mutant_3425" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="(getSplitNanoTime()) * (StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_4756" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="((current) / 1)" />
    <mutant id="mutant_327" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="((numerator) + gcd)" />
    <mutant id="mutant_328" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="((numerator) - gcd)" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="((numerator) % gcd)" />
    <mutant id="mutant_323" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power * 2)" />
    <mutant id="mutant_324" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="numerator" />
    <mutant id="mutant_325" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="gcd" />
    <mutant id="mutant_326" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="((numerator) * gcd)" />
    <mutant id="mutant_3262" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value % '0')" />
    <mutant id="mutant_4593" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_3261" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value - '0')" />
    <mutant id="mutant_4592" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3260" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) / 1)" />
    <mutant id="mutant_4591" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_4590" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3259" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="calendar.get(Calendar.MONTH)" />
    <mutant id="mutant_3258" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) * 1)" />
    <mutant id="mutant_4589" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_3257" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) - 1)" />
    <mutant id="mutant_4588" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_3256" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) % 1)" />
    <mutant id="mutant_4587" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_3255" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="1" />
    <mutant id="mutant_4586" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3254" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="'0'" />
    <mutant id="mutant_4585" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_3253" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="value" />
    <mutant id="mutant_4584" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_3252" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value / '0')" />
    <mutant id="mutant_4583" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_320" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power + 2)" />
    <mutant id="mutant_321" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power % 2)" />
    <mutant id="mutant_322" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="power" />
    <mutant id="mutant_338" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="(str.length()) / 1" />
    <mutant id="mutant_339" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="(str.length()) + 1" />
    <mutant id="mutant_334" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="((denominator) * gcd)" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="((denominator) % gcd)" />
    <mutant id="mutant_336" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="str.length()" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="1" />
    <mutant id="mutant_3251" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value * '0')" />
    <mutant id="mutant_4582" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_3250" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value % '0')" />
    <mutant id="mutant_4581" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4580" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3248" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="calendar.get(Calendar.YEAR)" />
    <mutant id="mutant_4579" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_3247" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="((calendar.get(Calendar.YEAR)) * 100)" />
    <mutant id="mutant_4578" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_3246" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="((calendar.get(Calendar.YEAR)) + 100)" />
    <mutant id="mutant_4577" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3245" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="100" />
    <mutant id="mutant_4576" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3244" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="((calendar.get(Calendar.YEAR)) - 100)" />
    <mutant id="mutant_4575" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_3243" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="((calendar.get(Calendar.YEAR)) / 100)" />
    <mutant id="mutant_4574" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3242" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) / 1)" />
    <mutant id="mutant_4573" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_3241" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="calendar.get(Calendar.MONTH)" />
    <mutant id="mutant_4572" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_330" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="gcd" />
    <mutant id="mutant_331" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="((denominator) - gcd)" />
    <mutant id="mutant_332" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="((denominator) + gcd)" />
    <mutant id="mutant_333" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="denominator" />
    <mutant id="mutant_3249" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value - '0')" />
    <mutant id="mutant_349" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start % 1)" />
    <mutant id="mutant_345" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="start" />
    <mutant id="mutant_346" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start * 1)" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start / 1)" />
    <mutant id="mutant_348" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="1" />
    <mutant id="mutant_3240" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) * 1)" />
    <mutant id="mutant_4571" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_4570" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3237" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="1" />
    <mutant id="mutant_4568" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3236" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) * 1" />
    <mutant id="mutant_4567" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_3235" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) % 1" />
    <mutant id="mutant_4566" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3234" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="calendar.getMaximum(Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_4565" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_3233" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) / 1" />
    <mutant id="mutant_4564" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_3232" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) - 1" />
    <mutant id="mutant_4563" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_3231" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="1" />
    <mutant id="mutant_4562" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3230" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="(calendar.getLeastMaximum(Calendar.HOUR)) * 1" />
    <mutant id="mutant_4561" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="(str.length()) * 1" />
    <mutant id="mutant_5892" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((nHexs - 1) * 4)" />
    <mutant id="mutant_342" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="1" />
    <mutant id="mutant_5893" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) - srcPos)" />
    <mutant id="mutant_343" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start % 1)" />
    <mutant id="mutant_5894" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) / srcPos)" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start - 1)" />
    <mutant id="mutant_5895" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="srcPos" />
    <mutant id="mutant_5896" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) * srcPos)" />
    <mutant id="mutant_5897" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) % srcPos)" />
    <mutant id="mutant_3239" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) - 1)" />
    <mutant id="mutant_5898" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_340" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="(str.length()) % 1" />
    <mutant id="mutant_3238" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="((calendar.get(Calendar.MONTH)) % 1)" />
    <mutant id="mutant_4569" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_5899" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_356" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start - 1)" />
    <mutant id="mutant_357" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="start" />
    <mutant id="mutant_358" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start * 1)" />
    <mutant id="mutant_5890" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) % 4)" />
    <mutant id="mutant_359" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start / 1)" />
    <mutant id="mutant_5891" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) + 4)" />
    <mutant id="mutant_4560" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_3226" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="1" />
    <mutant id="mutant_4557" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5889" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) / 4)" />
    <mutant id="mutant_3225" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="(calendar.getLeastMaximum(Calendar.HOUR)) / 1" />
    <mutant id="mutant_4556" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3224" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) * (60 * hours)" />
    <mutant id="mutant_4555" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_3223" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) / (60 * hours)" />
    <mutant id="mutant_4554" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_3222" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="60 * hours" />
    <mutant id="mutant_4553" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3221" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) % (60 * hours)" />
    <mutant id="mutant_4552" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3220" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) + (60 * hours)" />
    <mutant id="mutant_4551" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_4550" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_352" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start * 1)" />
    <mutant id="mutant_5881" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="1" />
    <mutant id="mutant_353" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start / 1)" />
    <mutant id="mutant_5882" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs * 1)" />
    <mutant id="mutant_354" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="1" />
    <mutant id="mutant_5883" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="nHexs" />
    <mutant id="mutant_355" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start % 1)" />
    <mutant id="mutant_5884" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs % 1)" />
    <mutant id="mutant_5885" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs / 1)" />
    <mutant id="mutant_3229" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="(calendar.getLeastMaximum(Calendar.HOUR)) - 1" />
    <mutant id="mutant_5886" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="4" />
    <mutant id="mutant_350" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start - 1)" />
    <mutant id="mutant_3228" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="calendar.getLeastMaximum(Calendar.HOUR)" />
    <mutant id="mutant_4559" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5887" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) - 4)" />
    <mutant id="mutant_351" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="start" />
    <mutant id="mutant_3227" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="(calendar.getLeastMaximum(Calendar.HOUR)) % 1" />
    <mutant id="mutant_4558" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5888" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(nHexs - 1)" />
    <mutant id="mutant_367" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start % 1)" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start - 1)" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="start" />
    <mutant id="mutant_3299" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="i" />
    <mutant id="mutant_3298" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="1" />
    <mutant id="mutant_3297" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_3296" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_363" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="start" />
    <mutant id="mutant_364" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="start * 2" />
    <mutant id="mutant_365" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="start / 2" />
    <mutant id="mutant_366" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="1" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="start % 2" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="2" />
    <mutant id="mutant_362" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="start - 2" />
    <mutant id="mutant_378" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="1" />
    <mutant id="mutant_379" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="(sz / 1)" />
    <mutant id="mutant_3295" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_3294" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_3293" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="i" />
    <mutant id="mutant_3292" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="1" />
    <mutant id="mutant_3291" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_3290" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(mPattern.hashCode()) * (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3289" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="mPattern.hashCode()" />
    <mutant id="mutant_3288" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(mPattern.hashCode()) % (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3287" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(mPattern.hashCode()) - (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3286" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3285" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(mPattern.hashCode()) / (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_374" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="start - 1" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="start" />
    <mutant id="mutant_376" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="start * 1" />
    <mutant id="mutant_377" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="start / 1" />
    <mutant id="mutant_370" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start * 1)" />
    <mutant id="mutant_371" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="(start / 1)" />
    <mutant id="mutant_372" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="1" />
    <mutant id="mutant_373" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="start % 1" />
    <mutant id="mutant_389" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="x * y" />
    <mutant id="mutant_3284" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(13 / ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3283" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(13 - ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3282" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(13 + ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_3281" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3280" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="13" />
    <mutant id="mutant_3279" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="(13 % ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" />
    <mutant id="mutant_380" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="(sz % 1)" />
    <mutant id="mutant_3278" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="((mTimeZone.hashCode()) / (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3277" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="(mTimeZone.hashCode())" />
    <mutant id="mutant_3276" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="((mTimeZone.hashCode()) * (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3275" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="((mTimeZone.hashCode()) - (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3274" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="(13 * (mLocale.hashCode()))" />
    <mutant id="mutant_385" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="x + y" />
    <mutant id="mutant_386" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="x" />
    <mutant id="mutant_387" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="y" />
    <mutant id="mutant_388" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="x % y" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="sz" />
    <mutant id="mutant_382" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="(sz * 1)" />
    <mutant id="mutant_383" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="(sz - 1)" />
    <mutant id="mutant_384" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="x / y" />
    <mutant id="mutant_3273" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="((mTimeZone.hashCode()) % (13 * (mLocale.hashCode())))" />
    <mutant id="mutant_3272" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="(13 / (mLocale.hashCode()))" />
    <mutant id="mutant_3271" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="(mLocale.hashCode())" />
    <mutant id="mutant_3270" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="(13 - (mLocale.hashCode()))" />
    <mutant id="mutant_3269" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="(13 + (mLocale.hashCode()))" />
    <mutant id="mutant_390" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="str.length()" />
    <mutant id="mutant_3268" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="13" />
    <mutant id="mutant_4599" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_391" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="(str.length()) % pfxLen" />
    <mutant id="mutant_3267" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="(13 % (mLocale.hashCode()))" />
    <mutant id="mutant_4598" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3266" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="'0'" />
    <mutant id="mutant_4597" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_3265" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="value" />
    <mutant id="mutant_4596" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3264" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value / '0')" />
    <mutant id="mutant_4595" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_3263" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(value * '0')" />
    <mutant id="mutant_4594" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_396" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="str.length()" />
    <mutant id="mutant_397" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_398" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_399" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_392" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="(str.length()) / pfxLen" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="(str.length()) + pfxLen" />
    <mutant id="mutant_394" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="(str.length()) * pfxLen" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="pfxLen" />
    <mutant id="mutant_5919" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_5911" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5912" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_5913" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_5914" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5915" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_5916" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5917" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_5918" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_5910" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5908" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) * srcPos" />
    <mutant id="mutant_5909" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) % srcPos" />
    <mutant id="mutant_5900" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_5901" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_5902" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_5903" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_5904" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="i * 4" />
    <mutant id="mutant_5905" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) - srcPos" />
    <mutant id="mutant_5906" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) / srcPos" />
    <mutant id="mutant_5907" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="srcPos" />
    <mutant id="mutant_4623" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_5955" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_4622" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_5956" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_4621" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5957" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_4620" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5958" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_5959" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_4629" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4628" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5950" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) * srcPos" />
    <mutant id="mutant_4627" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_5951" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) % srcPos" />
    <mutant id="mutant_4626" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5952" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_4625" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5953" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_4624" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_5954" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_4612" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5944" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_4611" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5945" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_4610" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5946" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="i * 4" />
    <mutant id="mutant_5947" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) - srcPos" />
    <mutant id="mutant_5948" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) / srcPos" />
    <mutant id="mutant_5949" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="srcPos" />
    <mutant id="mutant_4619" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_4618" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_4617" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_4616" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_5940" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_4615" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5941" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_4614" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5942" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_4613" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5943" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_4601" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5933" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) + 4)" />
    <mutant id="mutant_4600" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_5934" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((nHexs - 1) * 4)" />
    <mutant id="mutant_5935" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) - srcPos)" />
    <mutant id="mutant_5936" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) / srcPos)" />
    <mutant id="mutant_5937" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="srcPos" />
    <mutant id="mutant_5938" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) * srcPos)" />
    <mutant id="mutant_5939" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) % srcPos)" />
    <mutant id="mutant_4609" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4608" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_4607" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4606" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_4605" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_4604" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5930" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(nHexs - 1)" />
    <mutant id="mutant_4603" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_5931" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) / 4)" />
    <mutant id="mutant_4602" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5932" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) % 4)" />
    <mutant id="mutant_5922" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs + 1)" />
    <mutant id="mutant_5923" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="1" />
    <mutant id="mutant_5924" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs * 1)" />
    <mutant id="mutant_5925" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="nHexs" />
    <mutant id="mutant_5926" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs % 1)" />
    <mutant id="mutant_5927" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs / 1)" />
    <mutant id="mutant_5928" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="4" />
    <mutant id="mutant_5929" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) - 4)" />
    <mutant id="mutant_5920" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5921" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_4670" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_2004" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="(to * removeLen)" />
    <mutant id="mutant_3336" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_4667" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5999" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_2005" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="removeLen" />
    <mutant id="mutant_3335" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) * &quot;,&quot;)" />
    <mutant id="mutant_4666" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_2002" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="(i % removeLen)" />
    <mutant id="mutant_3334" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) / &quot;,&quot;)" />
    <mutant id="mutant_4665" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_2003" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="(i - removeLen)" />
    <mutant id="mutant_3333" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) - &quot;,&quot;)" />
    <mutant id="mutant_4664" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_2000" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="(i * removeLen)" />
    <mutant id="mutant_3332" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" />
    <mutant id="mutant_4663" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_2001" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="i" />
    <mutant id="mutant_3331" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) % (mLocale))" />
    <mutant id="mutant_4662" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3330" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) * (mLocale))" />
    <mutant id="mutant_4661" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4660" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5991" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="srcPos" />
    <mutant id="mutant_5992" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) * srcPos" />
    <mutant id="mutant_5993" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) % srcPos" />
    <mutant id="mutant_5994" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_2008" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="to" />
    <mutant id="mutant_5995" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_2009" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="(to + removeLen)" />
    <mutant id="mutant_3339" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="(mTimeZone.getID())" />
    <mutant id="mutant_5996" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_2006" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="(to / removeLen)" />
    <mutant id="mutant_3338" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) % &quot;,&quot;)" />
    <mutant id="mutant_4669" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5997" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_2007" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="(to % removeLen)" />
    <mutant id="mutant_3337" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" />
    <mutant id="mutant_4668" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5998" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_5990" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) / srcPos" />
    <mutant id="mutant_3325" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="((&quot;FastDatePrinter[&quot; + (mPattern)) / &quot;,&quot;)" />
    <mutant id="mutant_4656" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5988" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="i * 4" />
    <mutant id="mutant_3324" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="((&quot;FastDatePrinter[&quot; + (mPattern)) * &quot;,&quot;)" />
    <mutant id="mutant_4655" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5989" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="(i * 4) - srcPos" />
    <mutant id="mutant_3323" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="&quot;,&quot;" />
    <mutant id="mutant_4654" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_3322" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="((&quot;FastDatePrinter[&quot; + (mPattern)) - &quot;,&quot;)" />
    <mutant id="mutant_4653" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_3321" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="((&quot;FastDatePrinter[&quot; + (mPattern)) % &quot;,&quot;)" />
    <mutant id="mutant_4652" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3320" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="(&quot;FastDatePrinter[&quot; % (mPattern))" />
    <mutant id="mutant_4651" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4650" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5980" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) * srcPos)" />
    <mutant id="mutant_5981" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) % srcPos)" />
    <mutant id="mutant_5982" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_5983" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_3329" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="(mLocale)" />
    <mutant id="mutant_5984" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_3328" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) - (mLocale))" />
    <mutant id="mutant_4659" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5985" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_3327" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) / (mLocale))" />
    <mutant id="mutant_4658" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5986" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_3326" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="(&quot;FastDatePrinter[&quot; + (mPattern))" />
    <mutant id="mutant_4657" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_5987" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_305" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power * 2)" />
    <mutant id="mutant_306" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="2" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="(power - 2)" />
    <mutant id="mutant_308" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="(power + 2)" />
    <mutant id="mutant_301" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power - 2)" />
    <mutant id="mutant_302" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power + 2)" />
    <mutant id="mutant_303" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power % 2)" />
    <mutant id="mutant_304" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="power" />
    <mutant id="mutant_309" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="power" />
    <mutant id="mutant_3314" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_4645" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5977" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) - srcPos)" />
    <mutant id="mutant_3313" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_4644" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5978" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="(((nHexs - 1) * 4) / srcPos)" />
    <mutant id="mutant_3312" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_4643" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5979" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="srcPos" />
    <mutant id="mutant_3311" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="i" />
    <mutant id="mutant_4642" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_3310" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="1" />
    <mutant id="mutant_4641" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_4640" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_5970" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="4" />
    <mutant id="mutant_5971" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) - 4)" />
    <mutant id="mutant_300" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="2" />
    <mutant id="mutant_3319" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="(&quot;FastDatePrinter[&quot; / (mPattern))" />
    <mutant id="mutant_5972" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(nHexs - 1)" />
    <mutant id="mutant_3318" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="&quot;FastDatePrinter[&quot;" />
    <mutant id="mutant_4649" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5973" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) / 4)" />
    <mutant id="mutant_3317" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="(&quot;FastDatePrinter[&quot; - (mPattern))" />
    <mutant id="mutant_4648" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_5974" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) % 4)" />
    <mutant id="mutant_3316" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="(mPattern)" />
    <mutant id="mutant_4647" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_5975" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="((nHexs - 1) + 4)" />
    <mutant id="mutant_3315" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="(&quot;FastDatePrinter[&quot; * (mPattern))" />
    <mutant id="mutant_4646" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_5976" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((nHexs - 1) * 4)" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="power" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power * 2)" />
    <mutant id="mutant_318" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="2" />
    <mutant id="mutant_319" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power - 2)" />
    <mutant id="mutant_312" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="2" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power - 2)" />
    <mutant id="mutant_314" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power + 2)" />
    <mutant id="mutant_315" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="(power % 2)" />
    <mutant id="mutant_3303" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_4634" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5966" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs * 1)" />
    <mutant id="mutant_3302" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_4633" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_5967" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="nHexs" />
    <mutant id="mutant_3301" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_4632" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5968" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs % 1)" />
    <mutant id="mutant_3300" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_4631" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5969" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs / 1)" />
    <mutant id="mutant_4630" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_310" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="(power * 2)" />
    <mutant id="mutant_3309" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_5960" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_311" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="(power / 2)" />
    <mutant id="mutant_3308" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_4639" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5961" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_3307" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_4638" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5962" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_3306" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_4637" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5963" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_3305" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="i" />
    <mutant id="mutant_4636" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5964" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs + 1)" />
    <mutant id="mutant_3304" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="1" />
    <mutant id="mutant_4635" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5965" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="1" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(denom2))" />
    <mutant id="mutant_207" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(numer2)) + ((double)(denom2))" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(numer2)) - ((double)(denom2))" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(numer2))" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="(a1 * denom1) * denom0" />
    <mutant id="mutant_203" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="a1 * denom1" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(numer2)) % ((double)(denom2))" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="((double)(numer2)) * ((double)(denom2))" />
    <mutant id="mutant_3141" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) * (60 * hours)" />
    <mutant id="mutant_4472" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_3140" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) / (60 * hours)" />
    <mutant id="mutant_4471" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_4470" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_3138" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) % (60 * hours)" />
    <mutant id="mutant_4469" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_3137" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="(offset / (60 * 1000)) + (60 * hours)" />
    <mutant id="mutant_4468" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_3136" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="offset / (60 * 1000)" />
    <mutant id="mutant_4467" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_3135" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 / hours)" />
    <mutant id="mutant_4466" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_3134" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="60" />
    <mutant id="mutant_4465" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_3133" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 % hours)" />
    <mutant id="mutant_4464" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_3132" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 - hours)" />
    <mutant id="mutant_4463" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_3131" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="hours" />
    <mutant id="mutant_4462" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_5793" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="(i % 4)" />
    <mutant id="mutant_5794" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="(i - 4)" />
    <mutant id="mutant_200" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="(a1 * denom1) - denom0" />
    <mutant id="mutant_5795" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="(i + 4)" />
    <mutant id="mutant_201" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="denom0" />
    <mutant id="mutant_5796" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="(i * 4) - dstPos" />
    <mutant id="mutant_5797" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="i * 4" />
    <mutant id="mutant_5798" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="dstPos" />
    <mutant id="mutant_5799" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="(i * 4) / dstPos" />
    <mutant id="mutant_3139" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="60 * hours" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="(wholeNumber % denom0)" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="denom0" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="(wholeNumber - denom0)" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="(value / fraction)" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="(value * fraction)" />
    <mutant id="mutant_5790" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="(i / 4)" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="value" />
    <mutant id="mutant_5791" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="i" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="(wholeNumber / denom0)" />
    <mutant id="mutant_5792" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="4" />
    <mutant id="mutant_3130" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 + hours)" />
    <mutant id="mutant_4461" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_4460" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_3127" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset % (60 * 1000))" />
    <mutant id="mutant_4458" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_3126" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="offset" />
    <mutant id="mutant_4457" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_3125" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset - (60 * 1000))" />
    <mutant id="mutant_4456" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_3124" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(60 * 1000)" />
    <mutant id="mutant_4455" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_3123" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 + 1000)" />
    <mutant id="mutant_4454" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_3122" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 - 1000)" />
    <mutant id="mutant_4453" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_3121" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 % 1000)" />
    <mutant id="mutant_4452" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_3120" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="60" />
    <mutant id="mutant_4451" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_5782" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) % 4)" />
    <mutant id="mutant_210" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="fraction" />
    <mutant id="mutant_5783" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) - 4)" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="(value + fraction)" />
    <mutant id="mutant_5784" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) % dstPos)" />
    <mutant id="mutant_212" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="(value % fraction)" />
    <mutant id="mutant_5785" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) / dstPos)" />
    <mutant id="mutant_5786" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((nHex - 1) * 4)" />
    <mutant id="mutant_5787" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="dstPos" />
    <mutant id="mutant_3129" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset + (60 * 1000))" />
    <mutant id="mutant_5788" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) * dstPos)" />
    <mutant id="mutant_3128" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset * (60 * 1000))" />
    <mutant id="mutant_4459" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_5789" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="(((nHex - 1) * 4) - dstPos)" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="((numer0 + (wholeNumber * denom0)) / sign)" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="((numer0 + (wholeNumber * denom0)) % sign)" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="(numer0 / (wholeNumber * denom0))" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="(numer0 * (wholeNumber * denom0))" />
    <mutant id="mutant_226" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="(wholeNumber * denom0)" />
    <mutant id="mutant_5780" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="4" />
    <mutant id="mutant_227" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="(numer0 % (wholeNumber * denom0))" />
    <mutant id="mutant_5781" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="(nHex - 1)" />
    <mutant id="mutant_4450" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_3116" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset + ((60 * 60) * 1000)" />
    <mutant id="mutant_4447" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_5779" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) / 4)" />
    <mutant id="mutant_3115" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset" />
    <mutant id="mutant_4446" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_3114" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset % ((60 * 60) * 1000)" />
    <mutant id="mutant_4445" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_3113" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(60 * 60) * 1000" />
    <mutant id="mutant_4444" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_3112" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset - ((60 * 60) * 1000)" />
    <mutant id="mutant_4443" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3111" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) - 1000)" />
    <mutant id="mutant_4442" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_3110" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) % 1000)" />
    <mutant id="mutant_4441" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4440" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_220" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="wholeNumber" />
    <mutant id="mutant_5771" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_221" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="(wholeNumber + denom0)" />
    <mutant id="mutant_5772" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="1" />
    <mutant id="mutant_222" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="numer0" />
    <mutant id="mutant_5773" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="(nHex / 1)" />
    <mutant id="mutant_223" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="(numer0 - (wholeNumber * denom0))" />
    <mutant id="mutant_5774" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="(nHex * 1)" />
    <mutant id="mutant_5775" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="(nHex % 1)" />
    <mutant id="mutant_3119" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="1000" />
    <mutant id="mutant_5776" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="(nHex + 1)" />
    <mutant id="mutant_3118" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 / 1000)" />
    <mutant id="mutant_4449" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_5777" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="nHex" />
    <mutant id="mutant_3117" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset * ((60 * 60) * 1000)" />
    <mutant id="mutant_4448" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_5778" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="((nHex - 1) + 4)" />
    <mutant id="mutant_239" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((long)(denominator))" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="whole" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole / ((long)(denominator)))" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole - ((long)(denominator)))" />
    <mutant id="mutant_238" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole + ((long)(denominator)))" />
    <mutant id="mutant_5770" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_3105" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 - 60)" />
    <mutant id="mutant_4436" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5768" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="&quot;\' as a hexadecimal digit&quot;" />
    <mutant id="mutant_3104" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 + 60)" />
    <mutant id="mutant_4435" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_5769" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) / &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_3103" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="60" />
    <mutant id="mutant_4434" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3102" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 % 60)" />
    <mutant id="mutant_4433" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_3101" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 / 60)" />
    <mutant id="mutant_4432" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_3100" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="zoneOffset % (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_4431" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_4430" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_231" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="((numer0 + (wholeNumber * denom0)) + sign)" />
    <mutant id="mutant_5760" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; - hexDigit)" />
    <mutant id="mutant_232" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="(numer0 + (wholeNumber * denom0))" />
    <mutant id="mutant_5761" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="&quot;Cannot interpret \'&quot;" />
    <mutant id="mutant_233" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="sign" />
    <mutant id="mutant_5762" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; % hexDigit)" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole % ((long)(denominator)))" />
    <mutant id="mutant_5763" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; * hexDigit)" />
    <mutant id="mutant_3109" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) + 1000)" />
    <mutant id="mutant_5764" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="hexDigit" />
    <mutant id="mutant_3108" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(60 * 60)" />
    <mutant id="mutant_4439" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5765" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="(&quot;Cannot interpret \'&quot; / hexDigit)" />
    <mutant id="mutant_3107" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="1000" />
    <mutant id="mutant_4438" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5766" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(&quot;Cannot interpret \'&quot; + hexDigit)" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="((numer0 + (wholeNumber * denom0)) - sign)" />
    <mutant id="mutant_3106" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) / 1000)" />
    <mutant id="mutant_4437" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5767" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="((&quot;Cannot interpret \'&quot; + hexDigit) % &quot;\' as a hexadecimal digit&quot;)" />
    <mutant id="mutant_246" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole % ((long)(denominator)))" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="whole" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole / ((long)(denominator)))" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole - ((long)(denominator)))" />
    <mutant id="mutant_3185" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 % 60)" />
    <mutant id="mutant_3184" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 / 60)" />
    <mutant id="mutant_3183" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET)) * (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3182" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="calendar.get(Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_3181" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET)) % (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3180" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="calendar.get(Calendar.DST_OFFSET)" />
    <mutant id="mutant_3179" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET)) / (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3178" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET)) - (calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_3177" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="mTimeZone.hashCode()" />
    <mutant id="mutant_3176" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="((((mStyle) * 31) + (mLocale.hashCode())) * 31) / (mTimeZone.hashCode())" />
    <mutant id="mutant_3175" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="((((mStyle) * 31) + (mLocale.hashCode())) * 31) - (mTimeZone.hashCode())" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="(whole * ((long)(denominator))) + numerator" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="(whole * ((long)(denominator))) / numerator" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="(whole * ((long)(denominator))) % numerator" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="(whole * ((long)(denominator))) * numerator" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="whole * ((long)(denominator))" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="numerator" />
    <mutant id="mutant_257" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="(whole * ((long)(denominator))) - numerator" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_259" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_3174" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="((((mStyle) * 31) + (mLocale.hashCode())) * 31) * (mTimeZone.hashCode())" />
    <mutant id="mutant_3173" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="(((mStyle) * 31) + (mLocale.hashCode())) * 31" />
    <mutant id="mutant_3172" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="((((mStyle) * 31) + (mLocale.hashCode())) * 31) % (mTimeZone.hashCode())" />
    <mutant id="mutant_3171" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="((((mStyle) * 31) + (mLocale.hashCode())) / 31)" />
    <mutant id="mutant_3170" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="31" />
    <mutant id="mutant_3169" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="((((mStyle) * 31) + (mLocale.hashCode())) - 31)" />
    <mutant id="mutant_3168" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="((((mStyle) * 31) + (mLocale.hashCode())) + 31)" />
    <mutant id="mutant_4499" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive / startIndexInclusive" />
    <mutant id="mutant_3167" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="(((mStyle) * 31) + (mLocale.hashCode()))" />
    <mutant id="mutant_4498" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="startIndexInclusive" />
    <mutant id="mutant_3166" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="((((mStyle) * 31) + (mLocale.hashCode())) % 31)" />
    <mutant id="mutant_4497" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive % startIndexInclusive" />
    <mutant id="mutant_3165" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="(((mStyle) * 31) / (mLocale.hashCode()))" />
    <mutant id="mutant_4496" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive * startIndexInclusive" />
    <mutant id="mutant_3164" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="(mLocale.hashCode())" />
    <mutant id="mutant_4495" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="numerator" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="(whole * ((long)(denominator))) / numerator" />
    <mutant id="mutant_255" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="(whole * ((long)(denominator))) % numerator" />
    <mutant id="mutant_256" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="(whole * ((long)(denominator))) * numerator" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="(whole + ((long)(denominator)))" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((long)(denominator))" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="whole * ((long)(denominator))" />
    <mutant id="mutant_268" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_269" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_3163" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="((mStyle) * 31)" />
    <mutant id="mutant_4494" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="endIndexExclusive + startIndexInclusive" />
    <mutant id="mutant_3162" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="(((mStyle) * 31) - (mLocale.hashCode()))" />
    <mutant id="mutant_4493" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="(array.length)" />
    <mutant id="mutant_3161" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="(((mStyle) * 31) * (mLocale.hashCode()))" />
    <mutant id="mutant_4492" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="((array.length) + 1)" />
    <mutant id="mutant_3160" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="(((mStyle) * 31) % (mLocale.hashCode()))" />
    <mutant id="mutant_4491" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="((array.length) * 1)" />
    <mutant id="mutant_4490" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="((array.length) % 1)" />
    <mutant id="mutant_3159" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="31" />
    <mutant id="mutant_3158" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="((mStyle) + 31)" />
    <mutant id="mutant_4489" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="1" />
    <mutant id="mutant_3157" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="((mStyle) / 31)" />
    <mutant id="mutant_4488" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="((array.length) / 1)" />
    <mutant id="mutant_3156" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="((mStyle) % 31)" />
    <mutant id="mutant_4487" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_3155" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="((mStyle) - 31)" />
    <mutant id="mutant_4486" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_3154" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="(mStyle)" />
    <mutant id="mutant_4485" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3153" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="'0'" />
    <mutant id="mutant_4484" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_265" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_266" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_267" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_260" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_261" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_262" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_279" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="((numerator) - d1)" />
    <mutant id="mutant_3152" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="('0' % (value % 10))" />
    <mutant id="mutant_4483" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_3151" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="('0' * (value % 10))" />
    <mutant id="mutant_4482" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3150" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="(value % 10)" />
    <mutant id="mutant_4481" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_4480" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_3149" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="('0' - (value % 10))" />
    <mutant id="mutant_3148" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="('0' / (value % 10))" />
    <mutant id="mutant_4479" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_3147" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="10" />
    <mutant id="mutant_4478" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_270" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos * 1)" />
    <mutant id="mutant_3146" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="value" />
    <mutant id="mutant_4477" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_3145" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="(value + 10)" />
    <mutant id="mutant_4476" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_3144" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="(value - 10)" />
    <mutant id="mutant_4475" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_3143" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="(value * 10)" />
    <mutant id="mutant_4474" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_3142" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="(value / 10)" />
    <mutant id="mutant_4473" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_275" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos / 1)" />
    <mutant id="mutant_276" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="((numerator) % d1)" />
    <mutant id="mutant_277" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="((numerator) + d1)" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="numerator" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="1" />
    <mutant id="mutant_272" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos % 1)" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="(pos - 1)" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="pos" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="((numerator) * d1)" />
    <mutant id="mutant_281" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="d1" />
    <mutant id="mutant_286" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="((fraction.numerator) - d2)" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="d2" />
    <mutant id="mutant_288" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="((denominator) - d2)" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="((denominator) + d2)" />
    <mutant id="mutant_282" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="((fraction.numerator) + d2)" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="((fraction.numerator) % d2)" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="fraction.numerator" />
    <mutant id="mutant_285" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="((fraction.numerator) * d2)" />
    <mutant id="mutant_290" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="((denominator) * d2)" />
    <mutant id="mutant_291" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="denominator" />
    <mutant id="mutant_292" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="((denominator) % d2)" />
    <mutant id="mutant_297" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="((fraction.denominator) + d1)" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="d1" />
    <mutant id="mutant_299" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="((fraction.denominator) - d1)" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="d2" />
    <mutant id="mutant_294" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="((fraction.denominator) * d1)" />
    <mutant id="mutant_295" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="fraction.denominator" />
    <mutant id="mutant_296" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="((fraction.denominator) % d1)" />
    <mutant id="mutant_3199" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset + ((60 * 60) * 1000)" />
    <mutant id="mutant_3198" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset" />
    <mutant id="mutant_3197" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset % ((60 * 60) * 1000)" />
    <mutant id="mutant_3196" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(60 * 60) * 1000" />
    <mutant id="mutant_3195" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset - ((60 * 60) * 1000)" />
    <mutant id="mutant_3194" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) - 1000)" />
    <mutant id="mutant_3193" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) % 1000)" />
    <mutant id="mutant_3192" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) + 1000)" />
    <mutant id="mutant_3191" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(60 * 60)" />
    <mutant id="mutant_3190" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="1000" />
    <mutant id="mutant_3189" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="((60 * 60) / 1000)" />
    <mutant id="mutant_3188" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 - 60)" />
    <mutant id="mutant_3187" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="(60 + 60)" />
    <mutant id="mutant_3186" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="60" />
    <mutant id="mutant_4502" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="n" />
    <mutant id="mutant_5834" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="(i * 16) / dstPos" />
    <mutant id="mutant_4501" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="n * offset" />
    <mutant id="mutant_5835" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="(i * 16) % dstPos" />
    <mutant id="mutant_4500" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="n / offset" />
    <mutant id="mutant_5836" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="i * 16" />
    <mutant id="mutant_5837" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="(i * 16) - dstPos" />
    <mutant id="mutant_5838" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_5839" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_4509" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive - n)" />
    <mutant id="mutant_4508" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="n" />
    <mutant id="mutant_4507" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive * n)" />
    <mutant id="mutant_4506" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive % n)" />
    <mutant id="mutant_5830" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="(i - 16)" />
    <mutant id="mutant_4505" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="offset" />
    <mutant id="mutant_5831" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="(i + 16)" />
    <mutant id="mutant_4504" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="n + offset" />
    <mutant id="mutant_5832" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="(i * 16) * dstPos" />
    <mutant id="mutant_4503" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="n % offset" />
    <mutant id="mutant_5833" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="dstPos" />
    <mutant id="mutant_5823" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="dstPos" />
    <mutant id="mutant_5824" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((nShorts - 1) * 16)" />
    <mutant id="mutant_5825" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) * dstPos)" />
    <mutant id="mutant_5826" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="i" />
    <mutant id="mutant_5827" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="16" />
    <mutant id="mutant_5828" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="(i / 16)" />
    <mutant id="mutant_5829" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="(i % 16)" />
    <mutant id="mutant_5820" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) - dstPos)" />
    <mutant id="mutant_5821" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) / dstPos)" />
    <mutant id="mutant_5822" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="(((nShorts - 1) * 16) % dstPos)" />
    <mutant id="mutant_5812" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="(nShorts + 1)" />
    <mutant id="mutant_5813" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="(nShorts / 1)" />
    <mutant id="mutant_5814" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) - 16)" />
    <mutant id="mutant_5815" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="(nShorts - 1)" />
    <mutant id="mutant_5816" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="16" />
    <mutant id="mutant_5817" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) / 16)" />
    <mutant id="mutant_5818" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) % 16)" />
    <mutant id="mutant_5819" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="((nShorts - 1) + 16)" />
    <mutant id="mutant_5810" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="nShorts" />
    <mutant id="mutant_5811" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="(nShorts % 1)" />
    <mutant id="mutant_5809" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="(nShorts * 1)" />
    <mutant id="mutant_5801" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="(i * 4) * dstPos" />
    <mutant id="mutant_5802" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="i" />
    <mutant id="mutant_5803" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="(i % srcPos)" />
    <mutant id="mutant_5804" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_5805" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_5806" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_5807" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_5808" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="1" />
    <mutant id="mutant_5800" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="(i * 4) % dstPos" />
    <mutant id="mutant_5880" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="(nHexs + 1)" />
    <mutant id="mutant_3215" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 - hours)" />
    <mutant id="mutant_4546" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 - i)" />
    <mutant id="mutant_5878" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="(dstPos * i)" />
    <mutant id="mutant_3214" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="hours" />
    <mutant id="mutant_4545" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="offset2" />
    <mutant id="mutant_5879" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="(dstPos - i)" />
    <mutant id="mutant_3213" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 + hours)" />
    <mutant id="mutant_4544" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="i" />
    <mutant id="mutant_3212" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset + (60 * 1000))" />
    <mutant id="mutant_4543" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_3211" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset * (60 * 1000))" />
    <mutant id="mutant_4542" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_3210" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset % (60 * 1000))" />
    <mutant id="mutant_4541" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_4540" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5870" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="i * 32" />
    <mutant id="mutant_5871" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="(i * 32) - srcPos" />
    <mutant id="mutant_5872" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="srcPos" />
    <mutant id="mutant_5873" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="(i * 32) / srcPos" />
    <mutant id="mutant_3219" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="offset / (60 * 1000)" />
    <mutant id="mutant_5874" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="(dstPos / i)" />
    <mutant id="mutant_3218" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 / hours)" />
    <mutant id="mutant_4549" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 * i)" />
    <mutant id="mutant_5875" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="i" />
    <mutant id="mutant_3217" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="60" />
    <mutant id="mutant_4548" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 % i)" />
    <mutant id="mutant_5876" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="dstPos" />
    <mutant id="mutant_3216" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="(60 % hours)" />
    <mutant id="mutant_4547" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="(offset2 / i)" />
    <mutant id="mutant_5877" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="(dstPos % i)" />
    <mutant id="mutant_3204" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 % 1000)" />
    <mutant id="mutant_4535" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 % i)" />
    <mutant id="mutant_5867" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="32" />
    <mutant id="mutant_3203" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="60" />
    <mutant id="mutant_4534" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 * i)" />
    <mutant id="mutant_5868" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="(i * 32) * srcPos" />
    <mutant id="mutant_3202" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="1000" />
    <mutant id="mutant_4533" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5869" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="(i * 32) % srcPos" />
    <mutant id="mutant_3201" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 / 1000)" />
    <mutant id="mutant_4532" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_3200" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="offset * ((60 * 60) * 1000)" />
    <mutant id="mutant_4531" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_4530" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5860" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="srcPos" />
    <mutant id="mutant_5861" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="(((nInts - 1) * 32) - srcPos)" />
    <mutant id="mutant_3209" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="offset" />
    <mutant id="mutant_5862" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="(i - 32)" />
    <mutant id="mutant_3208" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(offset - (60 * 1000))" />
    <mutant id="mutant_4539" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="offset1" />
    <mutant id="mutant_5863" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="i" />
    <mutant id="mutant_3207" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="(60 * 1000)" />
    <mutant id="mutant_4538" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="i" />
    <mutant id="mutant_5864" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="(i / 32)" />
    <mutant id="mutant_3206" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 + 1000)" />
    <mutant id="mutant_4537" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 - i)" />
    <mutant id="mutant_5865" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="(i % 32)" />
    <mutant id="mutant_3205" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="(60 - 1000)" />
    <mutant id="mutant_4536" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="(offset1 / i)" />
    <mutant id="mutant_5866" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="(i + 32)" />
    <mutant id="mutant_4524" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_5856" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="(((nInts - 1) * 32) % srcPos)" />
    <mutant id="mutant_4523" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5857" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="(((nInts - 1) * 32) / srcPos)" />
    <mutant id="mutant_4522" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5858" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="((nInts - 1) * 32)" />
    <mutant id="mutant_4521" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5859" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="(((nInts - 1) * 32) * srcPos)" />
    <mutant id="mutant_4520" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5850" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) - 32)" />
    <mutant id="mutant_4529" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive - n_offset)" />
    <mutant id="mutant_5851" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="(nInts - 1)" />
    <mutant id="mutant_4528" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="n_offset" />
    <mutant id="mutant_5852" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) + 32)" />
    <mutant id="mutant_4527" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="startIndexInclusive" />
    <mutant id="mutant_5853" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) % 32)" />
    <mutant id="mutant_4526" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive / n_offset)" />
    <mutant id="mutant_5854" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="((nInts - 1) / 32)" />
    <mutant id="mutant_4525" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_5855" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="32" />
    <mutant id="mutant_4513" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) * n_offset)" />
    <mutant id="mutant_5845" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="1" />
    <mutant id="mutant_4512" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) + n_offset)" />
    <mutant id="mutant_5846" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="(nInts / 1)" />
    <mutant id="mutant_4511" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="startIndexInclusive" />
    <mutant id="mutant_5847" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="(nInts % 1)" />
    <mutant id="mutant_4510" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="(startIndexInclusive / n)" />
    <mutant id="mutant_5848" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="(nInts * 1)" />
    <mutant id="mutant_5849" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="(nInts + 1)" />
    <mutant id="mutant_4519" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive % n_offset)" />
    <mutant id="mutant_4518" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="(startIndexInclusive * n_offset)" />
    <mutant id="mutant_5840" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="(i / srcPos)" />
    <mutant id="mutant_4517" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(startIndexInclusive + n)" />
    <mutant id="mutant_5841" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="srcPos" />
    <mutant id="mutant_4516" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) / n_offset)" />
    <mutant id="mutant_5842" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="(i - srcPos)" />
    <mutant id="mutant_4515" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="n_offset" />
    <mutant id="mutant_5843" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="(i * srcPos)" />
    <mutant id="mutant_4514" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="((startIndexInclusive + n) % n_offset)" />
    <mutant id="mutant_5844" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="nInts" />
  </mutants>
</mutation>
