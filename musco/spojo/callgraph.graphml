<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="USES_REFLEXION" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="221">
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.setType(com.github.sworm.spojo.enums.RuleType)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.setExtendsFrom(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.makeFilteredCollection(java.lang.String[],java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.add(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.merge(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.metadataToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.convertAnnotation2Impl(com.github.sworm.spojo.annotations.Rule)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.exceptions.RuleNotFoundException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMetadata(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.RuleMetadata.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClassNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$RuleAnn(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest$RuleAnn(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.config.SpojoConfigurationTest.testSetRuleNameByClazzMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.exceptions.RuleException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty(com.github.sworm.spojo.data.Property,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.setDefinition(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.containsChild(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getDefinition()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.hasParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.isComplexType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.add(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getParentRoot()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getParentRoot()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getDefinition()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.compareTo(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.isComplexType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.hasParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getCanonicalName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.extractNameFromDefinition(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.createProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.removeProperty(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicProperty(com.github.sworm.spojo.data.Property,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicProperty.createProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.addCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.Property.containsChild(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.canonicalName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.AbstractProperty.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.merge()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.simplePropertyRoot()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.toarray1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.enums.RuleType#INCLUDE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.enums.RuleType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.enums.RuleType#EXCLUDE">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.enums.RuleType#DISABLED">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.matchesRuleFilter(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.matchesBasicFilter(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory,org.springframework.core.type.filter.TypeFilter[])">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getSpojoConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesCollection(java.util.Collection,java.util.Collection,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.instantiateArray(java.lang.Class,int)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.instantiate(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesArray(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(java.beans.PropertyDescriptor)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.makeMethodAccessible(java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludeList()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayStr()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrStr()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.setListaProbe(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getListaProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListStr()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getListaStr()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayInt()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayProbe()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayStr()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude7()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithInclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.deriveClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.findClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.inmutableClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtils.addImmutableClass(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiate1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiate2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiateArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.utils.SpojoUtilsTest.makeMethodAccessible()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="com.github.sworm.spojo.model.Chef()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Chef(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Client()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.BaseModel()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Person.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.getChef()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Shop.getClients()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Gender#UNDEFINED">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Gender()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Gender#MAN">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.model.Gender#WOMAN">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo(com.github.sworm.spojo.config.SpojoConfiguration)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.setConfiguration(com.github.sworm.spojo.config.SpojoConfiguration)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.checkConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.getConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.internalShrink(T,com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.buildMetadataMap(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.config()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExcludeNullFilterName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkCollectionNullSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkListNullSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkSetNullSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNull2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest$Employee()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest$Employee.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest$Employee.getGender()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringDisabled1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.getRandomGender()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringNullFilterName()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringNullSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="com.github.sworm.spojo.SpojoTest.testShrinkTStringUnDerivableSource()">
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2" source="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])" target="com.github.sworm.spojo.config.RuleMetadataImpl.setType(com.github.sworm.spojo.enums.RuleType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3" source="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])" target="com.github.sworm.spojo.config.RuleMetadataImpl.setExtendsFrom(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4" source="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])" target="com.github.sworm.spojo.config.RuleMetadataImpl.makeFilteredCollection(java.lang.String[],java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5" source="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])" target="com.github.sworm.spojo.data.Property.add(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6" source="com.github.sworm.spojo.config.RuleMetadataImpl.getName()" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7" source="com.github.sworm.spojo.config.RuleMetadataImpl.toString()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8" source="com.github.sworm.spojo.config.RuleMetadataImpl.makeFilteredCollection(java.lang.String[],java.lang.String)" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9" source="com.github.sworm.spojo.config.RuleMetadataImpl.makeFilteredCollection(java.lang.String[],java.lang.String)" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e10" source="com.github.sworm.spojo.config.RuleMetadataImpl.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.data.Property.merge(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e11" source="com.github.sworm.spojo.config.RuleMetadataImpl.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e12" source="com.github.sworm.spojo.config.RuleMetadataTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e13" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e14" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e15" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e16" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e17" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e18" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e19" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e20" source="com.github.sworm.spojo.config.RuleMetadataTest.extendFromMetadata()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e21" source="com.github.sworm.spojo.config.RuleMetadataTest.metadataToString()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e22" source="com.github.sworm.spojo.config.RuleMetadataTest.metadataToString()" target="com.github.sworm.spojo.config.RuleMetadataImpl.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e23" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e24" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e25" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e26" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e27" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e28" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e29" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleEmpty()" target="com.github.sworm.spojo.data.Property.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e30" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e31" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e32" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e33" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e34" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e35" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e36" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleExtends()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e37" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e38" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e39" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e40" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e41" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e42" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e43" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleProperties()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e44" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e45" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e46" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e47" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e48" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e49" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.config.RuleMetadataImpl.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e50" source="com.github.sworm.spojo.config.RuleMetadataTest.ruleType()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e51" source="com.github.sworm.spojo.config.SpojoConfiguration()" target="com.github.sworm.spojo.config.SpojoConfiguration(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e52" source="com.github.sworm.spojo.config.SpojoConfiguration(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e53" source="com.github.sworm.spojo.config.SpojoConfiguration(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e54" source="com.github.sworm.spojo.config.SpojoConfiguration(java.util.Map)" target="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e55" source="com.github.sworm.spojo.config.SpojoConfiguration.convertAnnotation2Impl(com.github.sworm.spojo.annotations.Rule)" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e56" source="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e57" source="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)" target="com.github.sworm.spojo.exceptions.RuleNotFoundException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e58" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e59" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e60" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e61" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e62" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e63" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e64" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e65" source="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e66" source="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMetadata(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e67" source="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e68" source="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)" target="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e69" source="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e70" source="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.convertAnnotation2Impl(com.github.sworm.spojo.annotations.Rule)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e71" source="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e72" source="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e73" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e74" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e75" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e76" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e77" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e78" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e79" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e80" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e81" source="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)" target="com.github.sworm.spojo.config.RuleMetadata.extendFromMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e82" source="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e83" source="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e84" source="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)" target="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e85" source="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e86" source="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e87" source="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e88" source="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass2()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e89" source="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass3()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e90" source="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass4()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e91" source="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass5()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$TestClass4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e92" source="com.github.sworm.spojo.config.SpojoConfigurationTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e93" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e94" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e95" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e96" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e97" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e98" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e99" source="com.github.sworm.spojo.config.SpojoConfigurationTest.getmetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e100" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e101" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass1()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e102" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass1()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e103" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e104" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e105" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e106" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e107" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e108" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e109" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e110" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e111" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e112" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass2()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e113" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e114" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e115" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e116" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e117" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e118" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e119" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e120" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e121" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e122" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass3()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e123" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e124" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e125" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e126" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e127" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e128" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e129" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e130" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e131" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e132" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClass5WithOneAnnotation()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e133" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClassNull()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e134" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddClassNull()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e135" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$RuleAnn(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e136" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e137" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e138" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e139" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e140" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e141" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e142" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e143" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e144" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e145" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRule1()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e146" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleEmpty()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e147" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleEmpty()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e148" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e149" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata1()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e150" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e151" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e152" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e153" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e154" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e155" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e156" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e157" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e158" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e159" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e160" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e161" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e162" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata5()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e163" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e164" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e165" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRuleMetadata(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e166" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e167" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e168" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e169" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e170" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e171" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e172" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e173" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleMetadata6()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e174" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleNull()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e175" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testAddRuleNull()" target="com.github.sworm.spojo.config.SpojoConfiguration.addRule(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e176" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e177" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$RuleAnn(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e178" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.SpojoConfiguration.convertAnnotation2Impl(com.github.sworm.spojo.annotations.Rule)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e179" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e180" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e181" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e182" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e183" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e184" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testConvertAnnotation2Impl()" target="com.github.sworm.spojo.config.SpojoConfigurationTest$RuleAnn(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e185" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e186" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata1()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e187" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e188" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e189" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e190" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e191" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata2()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e192" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata3()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e193" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata3()" target="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e194" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testGetRuleMetadata3()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e195" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e196" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom1()" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e197" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e198" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom2()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e199" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom2()" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e200" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom3()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e201" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom3()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e202" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom3()" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e203" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom4()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e204" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom4()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e205" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom4()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e206" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom4()" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e207" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e208" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e209" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e210" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.SpojoConfiguration.iterateExtendsFrom(com.github.sworm.spojo.config.RuleMetadata,java.util.Map,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e211" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e212" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e213" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e214" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e215" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e216" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e217" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testIterateExtendsFrom5()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e218" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules1()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e219" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules1()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e220" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e221" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules2()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e222" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e223" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e224" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e225" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e226" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.BaseTestCase.assertCollectionEquals(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e227" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadata.getExtendsFrom()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e228" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e229" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e230" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e231" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadata.hasInheritance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e232" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendedRules3()" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e233" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e234" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e235" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e236" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e237" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e238" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e239" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e240" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e241" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e242" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.config.SpojoConfiguration.processExtendedRules(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e243" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e244" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testProcessExtendsRules2()" target="com.github.sworm.spojo.data.Property.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e245" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testSetRuleNameByClazzMap()" target="com.github.sworm.spojo.config.SpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e246" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testSetRuleNameByClazzMap()" target="com.github.sworm.spojo.config.SpojoConfiguration.setRuleMapByName(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e247" source="com.github.sworm.spojo.config.SpojoConfigurationTest.testSetRuleNameByClazzMap()" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMapByName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e248" source="com.github.sworm.spojo.exceptions.RuleException(java.lang.String)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e249" source="com.github.sworm.spojo.exceptions.RuleNotFoundException(java.lang.String)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e250" source="com.github.sworm.spojo.data.AbstractProperty(com.github.sworm.spojo.data.Property,java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.setDefinition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e251" source="com.github.sworm.spojo.data.AbstractProperty(com.github.sworm.spojo.data.Property,java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e252" source="com.github.sworm.spojo.data.AbstractProperty(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.setDefinition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e253" source="com.github.sworm.spojo.data.AbstractProperty.toArray(T[])" target="com.github.sworm.spojo.data.AbstractProperty.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e254" source="com.github.sworm.spojo.data.AbstractProperty.containsChild(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e255" source="com.github.sworm.spojo.data.AbstractProperty.equals(java.lang.Object)" target="com.github.sworm.spojo.data.AbstractProperty.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e256" source="com.github.sworm.spojo.data.AbstractProperty.equals(java.lang.Object)" target="com.github.sworm.spojo.data.AbstractProperty.getDefinition()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e257" source="com.github.sworm.spojo.data.AbstractProperty.hasParent()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e258" source="com.github.sworm.spojo.data.AbstractProperty.isComplexType()" target="com.github.sworm.spojo.data.AbstractProperty.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e259" source="com.github.sworm.spojo.data.AbstractProperty.isEmpty()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e260" source="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e261" source="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e262" source="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e263" source="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e264" source="com.github.sworm.spojo.data.AbstractProperty.add(java.util.Collection)" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e265" source="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e266" source="com.github.sworm.spojo.data.AbstractProperty.getParentRoot()" target="com.github.sworm.spojo.data.AbstractProperty.hasParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e267" source="com.github.sworm.spojo.data.AbstractProperty.getParentRoot()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e268" source="com.github.sworm.spojo.data.AbstractProperty.getParentRoot()" target="com.github.sworm.spojo.data.Property.getParentRoot()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e269" source="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e270" source="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e271" source="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e272" source="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getDefinition()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e273" source="com.github.sworm.spojo.data.AbstractProperty.merge(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.merge(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e274" source="com.github.sworm.spojo.data.AbstractProperty.compareTo(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.AbstractProperty.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e275" source="com.github.sworm.spojo.data.AbstractProperty.compareTo(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e276" source="com.github.sworm.spojo.data.AbstractProperty.size()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e277" source="com.github.sworm.spojo.data.AbstractProperty.toArray()" target="com.github.sworm.spojo.data.AbstractProperty.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e278" source="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e279" source="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e280" source="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.hasParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e281" source="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e282" source="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e283" source="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()" target="com.github.sworm.spojo.data.Property.getCanonicalName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e284" source="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()" target="com.github.sworm.spojo.data.AbstractProperty.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e285" source="com.github.sworm.spojo.data.AbstractProperty.toString()" target="com.github.sworm.spojo.data.AbstractProperty.generate2String(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e286" source="com.github.sworm.spojo.data.AbstractProperty.getProperties()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e287" source="com.github.sworm.spojo.data.AbstractProperty.iterator()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e288" source="com.github.sworm.spojo.data.AbstractProperty.clear()" target="com.github.sworm.spojo.data.AbstractProperty.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e289" source="com.github.sworm.spojo.data.AbstractProperty.clear()" target="com.github.sworm.spojo.data.Property.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e290" source="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)" target="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e291" source="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.extractNameFromDefinition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e292" source="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.createProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e293" source="com.github.sworm.spojo.data.AbstractProperty.createPropertyHierachy(java.lang.String)" target="com.github.sworm.spojo.data.Property.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e294" source="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e295" source="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e296" source="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e297" source="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e298" source="com.github.sworm.spojo.data.AbstractProperty.setDefinition(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty.extractNameFromDefinition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e299" source="com.github.sworm.spojo.data.AbstractProperty.setParent(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e300" source="com.github.sworm.spojo.data.AbstractProperty.setParent(com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.removeProperty(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e301" source="com.github.sworm.spojo.data.BasicProperty(com.github.sworm.spojo.data.Property,java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty(com.github.sworm.spojo.data.Property,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e302" source="com.github.sworm.spojo.data.BasicProperty(java.lang.String)" target="com.github.sworm.spojo.data.AbstractProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e303" source="com.github.sworm.spojo.data.BasicProperty.createProperty(java.lang.String)" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e304" source="com.github.sworm.spojo.data.BasicPropertyTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e305" source="com.github.sworm.spojo.data.BasicPropertyTest.addCollection()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e306" source="com.github.sworm.spojo.data.BasicPropertyTest.addCollection()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e307" source="com.github.sworm.spojo.data.BasicPropertyTest.addCollection()" target="com.github.sworm.spojo.data.Property.containsChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e308" source="com.github.sworm.spojo.data.BasicPropertyTest.addCollection()" target="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e309" source="com.github.sworm.spojo.data.BasicPropertyTest.canonicalName()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e310" source="com.github.sworm.spojo.data.BasicPropertyTest.canonicalName()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e311" source="com.github.sworm.spojo.data.BasicPropertyTest.canonicalName()" target="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e312" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e313" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e314" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.AbstractProperty.setParent(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e315" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.AbstractProperty.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e316" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e317" source="com.github.sworm.spojo.data.BasicPropertyTest.changeParent()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e318" source="com.github.sworm.spojo.data.BasicPropertyTest.clear()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e319" source="com.github.sworm.spojo.data.BasicPropertyTest.clear()" target="com.github.sworm.spojo.data.AbstractProperty.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e320" source="com.github.sworm.spojo.data.BasicPropertyTest.clear()" target="com.github.sworm.spojo.data.AbstractProperty.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e321" source="com.github.sworm.spojo.data.BasicPropertyTest.clear()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e322" source="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e323" source="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()" target="com.github.sworm.spojo.data.BasicProperty(com.github.sworm.spojo.data.Property,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e324" source="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()" target="com.github.sworm.spojo.data.AbstractProperty.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e325" source="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()" target="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e326" source="com.github.sworm.spojo.data.BasicPropertyTest.createWithParent()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e327" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e328" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty()" target="com.github.sworm.spojo.data.AbstractProperty.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e329" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e330" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty2()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e331" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e332" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty3()" target="com.github.sworm.spojo.data.AbstractProperty.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e333" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty3()" target="com.github.sworm.spojo.data.AbstractProperty.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e334" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty4()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e335" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty4()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e336" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty5()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e337" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty5()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e338" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty6()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e339" source="com.github.sworm.spojo.data.BasicPropertyTest.equalsProperty7()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e340" source="com.github.sworm.spojo.data.BasicPropertyTest.merge()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e341" source="com.github.sworm.spojo.data.BasicPropertyTest.merge()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e342" source="com.github.sworm.spojo.data.BasicPropertyTest.merge()" target="com.github.sworm.spojo.data.Property.merge(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e343" source="com.github.sworm.spojo.data.BasicPropertyTest.merge()" target="com.github.sworm.spojo.data.Property.containsChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e344" source="com.github.sworm.spojo.data.BasicPropertyTest.merge()" target="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e345" source="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e346" source="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e347" source="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()" target="com.github.sworm.spojo.data.AbstractProperty.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e348" source="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()" target="com.github.sworm.spojo.data.AbstractProperty.removeProperty(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e349" source="com.github.sworm.spojo.data.BasicPropertyTest.removeProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e350" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e351" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e352" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e353" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e354" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e355" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e356" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e357" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e358" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e359" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty()" target="com.github.sworm.spojo.data.AbstractProperty.hasParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e360" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e361" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e362" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e363" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.getChildMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e364" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e365" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.getCanonicalName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e366" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e367" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e368" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e369" source="com.github.sworm.spojo.data.BasicPropertyTest.simpleProperty1Child()" target="com.github.sworm.spojo.data.AbstractProperty.hasParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e370" source="com.github.sworm.spojo.data.BasicPropertyTest.simplePropertyRoot()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e371" source="com.github.sworm.spojo.data.BasicPropertyTest.simplePropertyRoot()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e372" source="com.github.sworm.spojo.data.BasicPropertyTest.simplePropertyRoot()" target="com.github.sworm.spojo.data.AbstractProperty.getParentRoot()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e373" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e374" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray1()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e375" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray1()" target="com.github.sworm.spojo.data.AbstractProperty.toArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e376" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray1()" target="com.github.sworm.spojo.data.AbstractProperty.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e377" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e378" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e379" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()" target="com.github.sworm.spojo.data.AbstractProperty.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e380" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()" target="com.github.sworm.spojo.data.AbstractProperty.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e381" source="com.github.sworm.spojo.data.BasicPropertyTest.toarray2()" target="com.github.sworm.spojo.data.AbstractProperty.toArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e382" source="com.github.sworm.spojo.enums.RuleType#INCLUDE" target="com.github.sworm.spojo.enums.RuleType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e383" source="com.github.sworm.spojo.enums.RuleType#EXCLUDE" target="com.github.sworm.spojo.enums.RuleType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e384" source="com.github.sworm.spojo.enums.RuleType#DISABLED" target="com.github.sworm.spojo.enums.RuleType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e385" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.matchesRuleFilter(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)" target="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.matchesBasicFilter(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory,org.springframework.core.type.filter.TypeFilter[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e386" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getConfiguration()" target="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e387" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getConfiguration()" target="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getSpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e388" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getSpojoConfiguration()" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e389" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()" target="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.getSpojoConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e390" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()" target="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.matchesRuleFilter(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e391" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()" target="com.github.sworm.spojo.config.SpojoConfiguration.addClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e392" source="com.github.sworm.spojo.factories.impl.AnnotationLoaderFactoryBean.scanPackages()" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e393" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesCollection(java.util.Collection,java.util.Collection,com.github.sworm.spojo.data.Property,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e394" source="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e395" source="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e396" source="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e397" source="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e398" source="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)" target="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e399" source="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)" target="com.github.sworm.spojo.utils.SpojoUtils.instantiateArray(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e400" source="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)" target="com.github.sworm.spojo.utils.SpojoUtils.instantiate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e401" source="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e402" source="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e403" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesArray(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)" target="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e404" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesCollection(java.util.Collection,java.util.Collection,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e405" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesArray(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e406" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(java.beans.PropertyDescriptor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e407" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e408" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.makeMethodAccessible(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e409" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e410" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e411" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e412" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e413" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesCollection(java.util.Collection,java.util.Collection,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e414" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesArray(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e415" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e416" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.hasWritableMethod(java.beans.PropertyDescriptor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e417" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.containsChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e418" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.isPropertyCopyable(java.beans.PropertyDescriptor,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e419" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.makeMethodAccessible(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e420" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.getChild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e421" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.data.Property.isComplexType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e422" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.utils.SpojoUtils.copyComplexProperty(com.github.sworm.spojo.data.Property,java.lang.reflect.Method,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e423" source="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e424" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e425" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e426" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e427" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e428" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e429" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e430" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e431" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e432" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e433" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e434" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e435" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e436" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e437" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e438" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e439" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e440" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e441" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e442" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e443" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e444" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e445" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e446" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e447" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e448" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e449" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e450" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e451" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e452" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e453" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e454" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e455" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e456" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e457" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e458" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e459" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e460" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e461" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e462" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e463" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e464" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e465" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e466" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e467" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e468" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e469" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e470" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e471" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e472" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e473" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e474" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e475" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e476" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e477" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e478" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e479" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e480" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e481" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e482" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e483" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e484" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e485" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e486" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e487" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e488" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e489" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e490" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e491" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e492" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e493" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e494" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e495" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e496" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e497" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e498" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e499" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e500" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e501" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e502" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e503" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e504" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e505" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e506" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e507" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e508" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e509" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e510" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e511" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e512" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e513" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e514" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e515" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e516" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e517" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e518" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e519" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e520" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e521" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e522" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e523" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e524" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e525" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e526" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e527" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e528" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e529" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e530" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e531" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e532" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e533" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e534" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e535" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e536" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e537" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.createProbe3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e538" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e539" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e540" source="com.github.sworm.spojo.utils.SpojoUtilsMoreTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsMoreTest$Probe3.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e541" source="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e542" source="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e543" source="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e544" source="com.github.sworm.spojo.utils.SpojoUtilsTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e545" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e546" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e547" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e548" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e549" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e550" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExclude2ndLevelAllProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e551" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludeList()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e552" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludeList()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e553" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludeList()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e554" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayInt()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e555" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayInt()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e556" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayInt()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e557" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayInt()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrInt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e558" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e559" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e560" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e561" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e562" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e563" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayStr()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e564" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayStr()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e565" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayStr()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e566" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropArrayStr()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getArrStr()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e567" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e568" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.setListaProbe(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e569" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e570" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e571" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getListaProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e572" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListStr()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e573" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListStr()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e574" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListStr()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e575" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyExcludePropertiesListStr()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getListaStr()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e576" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e577" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e578" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e579" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e580" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e581" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e582" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel1Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e583" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e584" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e585" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e586" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e587" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e588" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e589" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevel2Property()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e590" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e591" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e592" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e593" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e594" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e595" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e596" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyInclude2ndLevelComplexProperty()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e597" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayInt()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e598" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayInt()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e599" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e600" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayProbe()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e601" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayProbe()" target="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e602" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayStr()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e603" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropArrayStr()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e604" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e605" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e606" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e607" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e608" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInner()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e609" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e610" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e611" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e612" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e613" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProbe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e614" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e615" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesInnerExclude()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e616" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e617" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e618" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e619" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e620" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e621" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e622" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e623" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e624" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e625" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e626" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e627" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e628" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e629" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e630" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e631" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e632" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertiesWithInclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e633" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e634" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e635" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.data.AbstractProperty.add(com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e636" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e637" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e638" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude1()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e639" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e640" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e641" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e642" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e643" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e644" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude2()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e645" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e646" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e647" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e648" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e649" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude3()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e650" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e651" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e652" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.data.AbstractProperty.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e653" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e654" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e655" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e656" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e657" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e658" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e659" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude5()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e660" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude6()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e661" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude6()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e662" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude6()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e663" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude7()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e664" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude7()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithExclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e665" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithExclude7()" target="com.github.sworm.spojo.data.BasicProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e666" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest.createProbe(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e667" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtils.copyPropertiesWithInclude(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e668" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e669" source="com.github.sworm.spojo.utils.SpojoUtilsTest.copyPropertieswithInclude4()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe.getProp2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e670" source="com.github.sworm.spojo.utils.SpojoUtilsTest.deriveClass()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e671" source="com.github.sworm.spojo.utils.SpojoUtilsTest.deriveClass()" target="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e672" source="com.github.sworm.spojo.utils.SpojoUtilsTest.findClass()" target="com.github.sworm.spojo.utils.SpojoUtils.findClazztype2instantiate(java.lang.reflect.Method,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e673" source="com.github.sworm.spojo.utils.SpojoUtilsTest.inmutableClass()" target="com.github.sworm.spojo.utils.SpojoUtils.isImmutable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e674" source="com.github.sworm.spojo.utils.SpojoUtilsTest.inmutableClass()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e675" source="com.github.sworm.spojo.utils.SpojoUtilsTest.inmutableClass()" target="com.github.sworm.spojo.utils.SpojoUtils.addImmutableClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e676" source="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiate1()" target="com.github.sworm.spojo.utils.SpojoUtils.instantiate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e677" source="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiate2()" target="com.github.sworm.spojo.utils.SpojoUtils.instantiate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e678" source="com.github.sworm.spojo.utils.SpojoUtilsTest.instantiateArray()" target="com.github.sworm.spojo.utils.SpojoUtils.instantiateArray(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e679" source="com.github.sworm.spojo.utils.SpojoUtilsTest.makeMethodAccessible()" target="com.github.sworm.spojo.utils.SpojoUtilsTest$Probe4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e680" source="com.github.sworm.spojo.utils.SpojoUtilsTest.makeMethodAccessible()" target="com.github.sworm.spojo.utils.SpojoUtils.makeMethodAccessible(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e681" source="com.github.sworm.spojo.model.Chef()" target="com.github.sworm.spojo.model.Person()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e682" source="com.github.sworm.spojo.model.Chef(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)" target="com.github.sworm.spojo.model.Person(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e683" source="com.github.sworm.spojo.model.Client()" target="com.github.sworm.spojo.model.Person()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e684" source="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)" target="com.github.sworm.spojo.model.Person(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e685" source="com.github.sworm.spojo.model.Person()" target="com.github.sworm.spojo.model.BaseModel()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e686" source="com.github.sworm.spojo.model.Person(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)" target="com.github.sworm.spojo.model.BaseModel()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e687" source="com.github.sworm.spojo.model.Person.toString()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e688" source="com.github.sworm.spojo.model.Person.toString()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e689" source="com.github.sworm.spojo.model.Person.toString()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e690" source="com.github.sworm.spojo.model.Person.toString()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e691" source="com.github.sworm.spojo.model.Shop()" target="com.github.sworm.spojo.model.BaseModel()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e692" source="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef)" target="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e693" source="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)" target="com.github.sworm.spojo.model.BaseModel()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e694" source="com.github.sworm.spojo.model.Shop.equals(java.lang.Object)" target="com.github.sworm.spojo.model.Person.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e695" source="com.github.sworm.spojo.model.Shop.toString()" target="com.github.sworm.spojo.model.Shop.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e696" source="com.github.sworm.spojo.model.Shop.toString()" target="com.github.sworm.spojo.model.Shop.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e697" source="com.github.sworm.spojo.model.Shop.toString()" target="com.github.sworm.spojo.model.Shop.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e698" source="com.github.sworm.spojo.model.Shop.toString()" target="com.github.sworm.spojo.model.Shop.getChef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e699" source="com.github.sworm.spojo.model.Shop.toString()" target="com.github.sworm.spojo.model.Shop.getClients()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e700" source="com.github.sworm.spojo.model.Gender#UNDEFINED" target="com.github.sworm.spojo.model.Gender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e701" source="com.github.sworm.spojo.model.Gender#MAN" target="com.github.sworm.spojo.model.Gender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e702" source="com.github.sworm.spojo.model.Gender#WOMAN" target="com.github.sworm.spojo.model.Gender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e703" source="com.github.sworm.spojo.Spojo(com.github.sworm.spojo.config.SpojoConfiguration)" target="com.github.sworm.spojo.Spojo.setConfiguration(com.github.sworm.spojo.config.SpojoConfiguration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e704" source="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" target="com.github.sworm.spojo.Spojo.checkConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e705" source="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" target="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e706" source="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" target="com.github.sworm.spojo.Spojo.getConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e707" source="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e708" source="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)" target="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e709" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.RuleMetadata.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e710" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.utils.SpojoUtils.copyProperties(java.lang.Object,java.lang.Object,com.github.sworm.spojo.data.Property,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e711" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.RuleMetadata.getProperty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e712" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e713" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.exceptions.RuleException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e714" source="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e715" source="com.github.sworm.spojo.Spojo.internalShrink(T,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.utils.SpojoUtils.instantiateAs(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e716" source="com.github.sworm.spojo.Spojo.internalShrink(T,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.Spojo.internalShrink(T,E,com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e717" source="com.github.sworm.spojo.Spojo.internalShrink(T,com.github.sworm.spojo.config.RuleMetadata)" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e718" source="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)" target="com.github.sworm.spojo.Spojo.checkConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e719" source="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)" target="com.github.sworm.spojo.utils.SpojoUtils.deriveClassFromSource(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e720" source="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)" target="com.github.sworm.spojo.Spojo.getConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e721" source="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)" target="com.github.sworm.spojo.config.SpojoConfiguration.getRuleMetadata(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e722" source="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)" target="com.github.sworm.spojo.Spojo.internalShrink(T,com.github.sworm.spojo.config.RuleMetadata)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e723" source="com.github.sworm.spojo.Spojo.checkConfiguration()" target="com.github.sworm.spojo.Spojo.getConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e724" source="com.github.sworm.spojo.Spojo.checkConfiguration()" target="com.github.sworm.spojo.exceptions.SpojoException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e725" source="com.github.sworm.spojo.SpojoTest()" target="com.github.sworm.spojo.BaseTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e726" source="com.github.sworm.spojo.SpojoTest.buildMetadataMap(java.util.List)" target="com.github.sworm.spojo.config.RuleMetadata.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e727" source="com.github.sworm.spojo.SpojoTest.config()" target="com.github.sworm.spojo.config.RuleMetadataImpl(java.lang.String,com.github.sworm.spojo.enums.RuleType,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e728" source="com.github.sworm.spojo.SpojoTest.config()" target="com.github.sworm.spojo.SpojoTest.buildMetadataMap(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e729" source="com.github.sworm.spojo.SpojoTest.config()" target="com.github.sworm.spojo.config.SpojoConfiguration(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e730" source="com.github.sworm.spojo.SpojoTest.config()" target="com.github.sworm.spojo.Spojo(com.github.sworm.spojo.config.SpojoConfiguration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e731" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e732" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e733" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e734" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e735" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e736" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude1()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e737" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e738" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e739" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e740" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e741" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e742" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude2()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e743" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e744" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e745" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e746" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e747" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e748" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExclude3()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e749" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExcludeNullFilterName()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e750" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionExcludeNullFilterName()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e751" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e752" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e753" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e754" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e755" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e756" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude1()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e757" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e758" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e759" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e760" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e761" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e762" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude2()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e763" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e764" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e765" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e766" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e767" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e768" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionInclude3()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e769" source="com.github.sworm.spojo.SpojoTest.testShrinkCollectionNullSource()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e770" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e771" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e772" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e773" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e774" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e775" source="com.github.sworm.spojo.SpojoTest.testShrinkListExclude1()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e776" source="com.github.sworm.spojo.SpojoTest.testShrinkListNullSource()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e777" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e778" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e779" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e780" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e781" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e782" source="com.github.sworm.spojo.SpojoTest.testShrinkSet()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e783" source="com.github.sworm.spojo.SpojoTest.testShrinkSetNullSource()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e784" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNull()" target="com.github.sworm.spojo.Spojo(com.github.sworm.spojo.config.SpojoConfiguration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e785" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNull()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e786" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNull2()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e787" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e788" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource1()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e789" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource2()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e790" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource2()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e791" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringNullSource3()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e792" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e793" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.Spojo.shrink(T,E,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e794" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.SpojoTest$Employee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e795" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e796" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.SpojoTest$Employee.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e797" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e798" source="com.github.sworm.spojo.SpojoTest.testShrinkTEStringSource1()" target="com.github.sworm.spojo.SpojoTest$Employee.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e799" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringDisabled1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e800" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringDisabled1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e801" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e802" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e803" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e804" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e805" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e806" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude1()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e807" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e808" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e809" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e810" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e811" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e812" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude2()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e813" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e814" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e815" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e816" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e817" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e818" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude3()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e819" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e820" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e821" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e822" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e823" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e824" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude4()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e825" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e826" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.SpojoTest.getRandomGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e827" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e828" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Chef(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e829" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e830" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e831" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e832" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e833" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e834" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop.getChef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e835" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e836" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e837" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e838" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude5()" target="com.github.sworm.spojo.model.Shop.getClients()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e839" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e840" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.SpojoTest.getRandomGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e841" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e842" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Chef(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e843" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e844" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e845" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e846" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e847" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e848" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop.getChef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e849" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e850" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e851" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e852" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringExclude6()" target="com.github.sworm.spojo.model.Shop.getClients()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e853" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e854" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e855" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e856" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e857" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e858" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude1()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e859" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e860" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e861" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e862" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e863" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e864" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude2()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e865" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e866" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e867" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e868" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e869" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e870" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude3()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e871" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e872" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.model.Person.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e873" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e874" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.model.Person.getGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e875" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.model.Person.getBirthday()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e876" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude4()" target="com.github.sworm.spojo.model.Person.getStreet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e877" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e878" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.SpojoTest.getRandomGender()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e879" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Chef(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e880" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop(java.lang.Long,java.lang.String,java.lang.String,com.github.sworm.spojo.model.Chef,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e881" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e882" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e883" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e884" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e885" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop.getChef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e886" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringInclude5()" target="com.github.sworm.spojo.model.Shop.getClients()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e887" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringNullFilterName()" target="com.github.sworm.spojo.model.Client(java.lang.String,com.github.sworm.spojo.model.Gender,java.util.Date,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e888" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringNullFilterName()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e889" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringNullSource()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e890" source="com.github.sworm.spojo.SpojoTest.testShrinkTStringUnDerivableSource()" target="com.github.sworm.spojo.Spojo.shrink(T,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
  </graph>
</graphml>
