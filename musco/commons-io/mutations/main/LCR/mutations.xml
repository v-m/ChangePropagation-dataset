<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="LCR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="37933">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_327" viable="false" in="org.apache.commons.io.FileCleaningTracker$Reaper.run()" from="((exitWhenFinished) == false) || ((trackers.size()) &gt; 0)" to="true" />
    <mutant id="mutant_569" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ','))" to="false" />
    <mutant id="mutant_328" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file1.exists())" to="file1.exists()" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(exists) &amp;&amp; (!(directory))" to="false" />
    <mutant id="mutant_323" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(url != null) &amp;&amp; ((url.indexOf('%')) &gt;= 0)" to="false" />
    <mutant id="mutant_565" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null)) &amp;&amp; (line1.equals(line2))" to="(line1 != null) &amp;&amp; (line2 != null)" />
    <mutant id="mutant_324" viable="false" in="?" from="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" to="(((osName.indexOf(&quot;linux&quot;)) != (-1)) &amp;&amp; ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" />
    <mutant id="mutant_566" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="true" />
    <mutant id="mutant_325" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" from="(caseSensitivity == null) || (caseSensitivity.equals(IOCase.SYSTEM))" to="caseSensitivity == null" />
    <mutant id="mutant_567" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0))" to="true" />
    <mutant id="mutant_326" viable="false" in="?" from="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" to="((osName.indexOf(&quot;freebsd&quot;)) != (-1))" />
    <mutant id="mutant_568" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="!(encoderOut.hasRemaining())" />
    <mutant id="mutant_561" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="((data[(k + j)]) &gt;= ' ') &amp;&amp; ((data[(k + j)]) &lt; 127)" to="false" />
    <mutant id="mutant_320" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0)) || ((off + len) &gt; (b.length))" to="(len &lt; 0) || (off &lt; 0)" />
    <mutant id="mutant_562" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="(lastCoderResult.isUnderflow())" />
    <mutant id="mutant_321" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read()" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="true" />
    <mutant id="mutant_563" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(exclusionList == null) || (!(exclusionList.contains(srcFile.getCanonicalPath())))" to="(exclusionList == null) &amp;&amp; (!(exclusionList.contains(srcFile.getCanonicalPath())))" />
    <mutant id="mutant_322" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ','))" to="true" />
    <mutant id="mutant_564" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" to="((mime.equals(&quot;application/xml&quot;)) &amp;&amp; (mime.equals(&quot;application/xml-dtd&quot;)))" />
    <mutant id="mutant_560" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="(!isLastFilePart) &amp;&amp; (i &lt; (avoidNewlineSplitBufferSize))" to="true" />
    <mutant id="mutant_338" viable="false" in="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="createDestDir" />
    <mutant id="mutant_339" viable="true" in="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" from="(dir != null) &amp;&amp; (new File(dir , name).isDirectory())" to="false" />
    <mutant id="mutant_334" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="((mime.startsWith(&quot;text/&quot;)) || (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_576" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)" from="((comparator) != null) &amp;&amp; ((children.length) &gt; 1)" to="false" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0))" to="(index &lt; 0)" />
    <mutant id="mutant_577" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) || ((osName.indexOf(&quot;solaris&quot;)) != (-1))" to="(osName.indexOf(&quot;solaris&quot;)) != (-1)" />
    <mutant id="mutant_336" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="false" />
    <mutant id="mutant_578" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2))" to="false" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) &amp;&amp; ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" to="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) || ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_579" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="((data[(k + j)]) &gt;= ' ') &amp;&amp; ((data[(k + j)]) &lt; 127)" to="(data[(k + j)]) &lt; 127" />
    <mutant id="mutant_330" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) &amp;&amp; (wildcardMatcher == null)" to="(filename == null) || (wildcardMatcher == null)" />
    <mutant id="mutant_572" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) &amp;&amp; (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" />
    <mutant id="mutant_331" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((off &lt; 0) || (off &gt; (b.length)))" to="((off &lt; 0) &amp;&amp; (off &gt; (b.length)))" />
    <mutant id="mutant_573" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="((array[(i - 2)]) == separator)" />
    <mutant id="mutant_332" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null))" to="true" />
    <mutant id="mutant_574" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0))" to="((length &lt; 0) &amp;&amp; (offset &lt; 0))" />
    <mutant id="mutant_333" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) || (wildcardMatcher == null)" to="filename == null" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(bytesRead == 0) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="!(this.cbuf.hasRemaining())" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(len &lt; 0) || ((off + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_571" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(((exists) != origExists) || ((lastModified) != origLastModified))" to="true" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="str2 == null" />
    <mutant id="mutant_349" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) &amp;&amp; ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="(i == (prefix + 2)) || ((array[(i - 3)]) == separator)" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="isLastFilePart &amp;&amp; ((leftOver) != null)" to="isLastFilePart || ((leftOver) != null)" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(ch0 &gt;= 'A') &amp;&amp; (ch0 &lt;= 'Z')" to="(ch0 &gt;= 'A') || (ch0 &lt;= 'Z')" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(wcsIdx == (wcs.length)) &amp;&amp; (textIdx == (filename.length()))" to="(wcsIdx == (wcs.length)) || (textIdx == (filename.length()))" />
    <mutant id="mutant_345" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="!(xmlGuessEnc.equals(bomEnc))" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" from="(urls == null) || ((urls.length) == 0)" to="true" />
    <mutant id="mutant_104" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_346" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ','))" to="(c != ',')" />
    <mutant id="mutant_588" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="false" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" to="false" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" from="(caseSensitivity != null) &amp;&amp; (!(caseSensitivity.isCaseSensitive()))" to="caseSensitivity != null" />
    <mutant id="mutant_589" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" to="true" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="true" />
    <mutant id="mutant_348" viable="true" in="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" from="(caseSensitivity != null) &amp;&amp; (!(caseSensitivity.isCaseSensitive()))" to="true" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" from="((tok.countTokens()) == 1) &amp;&amp; ((lines.size()) &gt;= 3)" to="false" />
    <mutant id="mutant_583" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1)))" to="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;unix&quot;)) != (-1)))" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="false" />
    <mutant id="mutant_342" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1)))" to="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" />
    <mutant id="mutant_584" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" to="false" />
    <mutant id="mutant_101" viable="false" in="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)" from="(!(parent.mkdirs())) &amp;&amp; (!(parent.isDirectory()))" to="!(parent.mkdirs())" />
    <mutant id="mutant_343" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length)))" to="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) &amp;&amp; ((off + len) &gt; (b.length)))" />
    <mutant id="mutant_585" viable="true" in="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()" from="(!(slashNSeen)) &amp;&amp; (!(slashRSeen))" to="true" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(ch0 &gt;= 'A') &amp;&amp; (ch0 &lt;= 'Z')" to="false" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="(!isLastFilePart) &amp;&amp; (i &lt; (avoidNewlineSplitBufferSize))" to="(!isLastFilePart) || (i &lt; (avoidNewlineSplitBufferSize))" />
    <mutant id="mutant_586" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" from="(charset == (Charsets.UTF_16BE)) || (charset == (Charsets.UTF_16LE))" to="true" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="(destDir.isDirectory()) == false" />
    <mutant id="mutant_581" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="(!isLastFilePart) &amp;&amp; (i &lt; (avoidNewlineSplitBufferSize))" to="false" />
    <mutant id="mutant_340" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(len &lt; 0) || ((off + len) &gt; (b.length))" to="(off + len) &gt; (b.length)" />
    <mutant id="mutant_582" viable="false" in="org.apache.commons.io.FileUtils.toFile(java.net.URL)" from="(url == null) || (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" to="true" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)" from="(k &gt;= 0) &amp;&amp; ((data[k]) == (newLineSequence[j]))" to="k &gt;= 0" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" from="(fileToDelete.exists()) &amp;&amp; ((doDelete(fileToDelete)) == false)" to="false" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" from="(charset == (Charsets.UTF_16BE)) || (charset == (Charsets.UTF_16LE))" to="charset == (Charsets.UTF_16BE)" />
    <mutant id="mutant_356" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) &amp;&amp; (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" to="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) || (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" />
    <mutant id="mutant_598" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(!appXml) &amp;&amp; (!textXml)" to="false" />
    <mutant id="mutant_115" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="(ch == '?') || (ch == '*')" to="ch == '?'" />
    <mutant id="mutant_357" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" to="true" />
    <mutant id="mutant_599" viable="true" in="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="filter1 == null" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="lenient &amp;&amp; (xmlEnc != null)" to="lenient || (xmlEnc != null)" />
    <mutant id="mutant_358" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="false" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" from="((depthLimit) &lt; 0) || (childDepth &lt;= (depthLimit))" to="true" />
    <mutant id="mutant_359" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" to="(((off &lt; 0) || (off &gt; (b.length))) &amp;&amp; (len &lt; 0))" />
    <mutant id="mutant_110" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(!(destDir.mkdirs())) &amp;&amp; (!(destDir.isDirectory()))" to="!(destDir.isDirectory())" />
    <mutant id="mutant_352" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1))) &amp;&amp; (offset &lt; (XmlStreamReader.BUFFER_SIZE))" to="(c != (-1)) &amp;&amp; (firstGT == (-1))" />
    <mutant id="mutant_594" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(len &lt; 0) || ((off + len) &gt; (b.length))" to="len &lt; 0" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" from="((path.length()) &gt; 0) &amp;&amp; ((path.charAt(0)) != '\&quot;')" to="(path.charAt(0)) != '\&quot;'" />
    <mutant id="mutant_353" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) == 0)" to="false" />
    <mutant id="mutant_595" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile()))" to="((file != null) || (file.isFile()))" />
    <mutant id="mutant_112" viable="false" in="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" from="(srcFiles != null) &amp;&amp; ((srcFiles.length) &gt; 0)" to="true" />
    <mutant id="mutant_354" viable="false" in="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)" from="(!(directory.exists())) || (!(child.exists()))" to="!(directory.exists())" />
    <mutant id="mutant_596" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc == null) || (xmlEnc == null)" to="(xmlGuessEnc == null) &amp;&amp; (xmlEnc == null)" />
    <mutant id="mutant_113" viable="false" in="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="true" />
    <mutant id="mutant_355" viable="false" in="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)" from="(!(parent.mkdirs())) &amp;&amp; (!(parent.isDirectory()))" to="true" />
    <mutant id="mutant_597" viable="false" in="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" from="(boms == null) || ((boms.length) == 0)" to="(boms == null) &amp;&amp; ((boms.length) == 0)" />
    <mutant id="mutant_590" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(wcsIdx == (wcs.length)) &amp;&amp; (textIdx == (filename.length()))" to="false" />
    <mutant id="mutant_591" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(!(parentFile.mkdirs())) &amp;&amp; (!(parentFile.isDirectory()))" to="!(parentFile.mkdirs())" />
    <mutant id="mutant_350" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) || ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" to="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" />
    <mutant id="mutant_592" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(length &gt; 0) &amp;&amp; (length &lt; bufferLength)" to="false" />
    <mutant id="mutant_351" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="(endOfInput) || (!(encoderOut.hasRemaining()))" />
    <mutant id="mutant_593" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="(ch == '?') || (ch == '*')" to="true" />
    <mutant id="mutant_129" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(bytes == null) || ((bytes.length) == 0)" to="(bytes == null) &amp;&amp; ((bytes.length) == 0)" />
    <mutant id="mutant_125" viable="false" in="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" from="(urls == null) || ((urls.length) == 0)" to="urls == null" />
    <mutant id="mutant_367" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="filename2 == null" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="lenient &amp;&amp; (xmlEnc != null)" to="lenient" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1)))" to="((c != (-1)) || (firstGT == (-1)))" />
    <mutant id="mutant_127" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(exclusionList == null) || (!(exclusionList.contains(srcFile.getCanonicalPath())))" to="!(exclusionList.contains(srcFile.getCanonicalPath()))" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))" to="(posUnix == (FilenameUtils.NOT_FOUND)) || (posWin == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) &amp;&amp; (c != '.')" to="false" />
    <mutant id="mutant_121" viable="false" in="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="true" />
    <mutant id="mutant_363" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0))" to="(off &lt; 0)" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) &amp;&amp; ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="false" />
    <mutant id="mutant_364" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(mime != null) &amp;&amp; (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="false" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE))" />
    <mutant id="mutant_365" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) == 0)" to="(comparator.compare(entry.getFile(), files[c])) == 0" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.io.FilenameUtils.isSeparator(char)" from="(ch == (FilenameUtils.UNIX_SEPARATOR)) || (ch == (FilenameUtils.WINDOWS_SEPARATOR))" to="false" />
    <mutant id="mutant_366" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(!(destDir.mkdirs())) &amp;&amp; (!(destDir.isDirectory()))" to="!(destDir.mkdirs())" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) &amp;&amp; ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc == null) || (xmlEnc == null)" to="false" />
    <mutant id="mutant_120" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file1.exists())" to="sumDirectoryContents" />
    <mutant id="mutant_362" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="endOfInput" />
    <mutant id="mutant_136" viable="false" in="?" from="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" to="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;irix&quot;)) != (-1)))" />
    <mutant id="mutant_378" viable="true" in="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="filter2 == null" />
    <mutant id="mutant_137" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(i &lt; n) &amp;&amp; ((url.charAt(i)) == '%')" to="false" />
    <mutant id="mutant_379" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) &amp;&amp; ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="true" />
    <mutant id="mutant_138" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory))" to="((((exists) != origExists) || ((lastModified) != origLastModified)) &amp;&amp; ((directory) != origDirectory))" />
    <mutant id="mutant_139" viable="true" in="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" from="(caseSensitivity != null) &amp;&amp; (!(caseSensitivity.isCaseSensitive()))" to="false" />
    <mutant id="mutant_132" viable="false" in="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" from="((byteOrderMark) != null) &amp;&amp; (getBOM().equals(bom))" to="false" />
    <mutant id="mutant_374" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(read == 0) &amp;&amp; (endOfInput)" to="(read == 0) || (endOfInput)" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)" from="(k &gt;= 0) &amp;&amp; ((data[k]) == (newLineSequence[j]))" to="true" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) &amp;&amp; (filename2 == null)" to="false" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="xmlEnc != null" />
    <mutant id="mutant_376" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="(i == (prefix + 1))" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" to="bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16)" />
    <mutant id="mutant_377" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" from="(caseSensitivity == null) || (caseSensitivity.equals(IOCase.SYSTEM))" to="(caseSensitivity == null) &amp;&amp; (caseSensitivity.equals(IOCase.SYSTEM))" />
    <mutant id="mutant_370" viable="false" in="?" from="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" to="((osName.indexOf(&quot;digital unix&quot;)) != (-1))" />
    <mutant id="mutant_371" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(!appXml) &amp;&amp; (!textXml)" to="!textXml" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="true" />
    <mutant id="mutant_372" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" to="(mime.equals(&quot;text/xml-external-parsed-entity&quot;))" />
    <mutant id="mutant_131" viable="false" in="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; (destFile.isDirectory())" to="destFile.isDirectory()" />
    <mutant id="mutant_373" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(!(endOfInput)) &amp;&amp; (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="false" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException))" to="false" />
    <mutant id="mutant_389" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="(index &lt; 0) || (index &gt;= (data.length))" to="index &gt;= (data.length)" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2))" to="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) &amp;&amp; (posUnix == 2))" />
    <mutant id="mutant_149" viable="false" in="?" from="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" to="((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))" />
    <mutant id="mutant_380" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(!(endOfInput)) &amp;&amp; (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="!(endOfInput)" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) &amp;&amp; ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="false" />
    <mutant id="mutant_385" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="(((array[i]) == separator) || ((array[(i - 1)]) == '.'))" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) &amp;&amp; (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" to="true" />
    <mutant id="mutant_386" viable="true" in="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" from="((depthLimit) &lt; 0) || (childDepth &lt;= (depthLimit))" to="childDepth &lt;= (depthLimit)" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" from="(conn instanceof java.net.HttpURLConnection) || (contentType != null)" to="false" />
    <mutant id="mutant_387" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) || ((length) != origLength)" to="false" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" from="((tok.countTokens()) == 1) &amp;&amp; ((lines.size()) &gt;= 3)" to="(lines.size()) &gt;= 3" />
    <mutant id="mutant_388" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read()" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="endOfInput" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="false" />
    <mutant id="mutant_140" viable="false" in="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" from="(len &gt; 0) &amp;&amp; (b &gt;= 0)" to="true" />
    <mutant id="mutant_382" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) &amp;&amp; ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file2.exists())" to="(sumDirectoryContents) || (file2.exists())" />
    <mutant id="mutant_383" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="(!(this.bbuf.hasRemaining())) || (!(this.cbuf.hasRemaining()))" />
    <mutant id="mutant_142" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(read == 0) &amp;&amp; (endOfInput)" to="false" />
    <mutant id="mutant_384" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == separator)" to="true" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) == 0)" to="true" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" from="(fileToDelete.exists()) &amp;&amp; ((doDelete(fileToDelete)) == false)" to="(fileToDelete.exists()) || ((doDelete(fileToDelete)) == false)" />
    <mutant id="mutant_390" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == separator)" to="false" />
    <mutant id="mutant_391" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="((array[(i - 1)]) == '.')" />
    <mutant id="mutant_154" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) || (wildcardMatcher == null)" to="false" />
    <mutant id="mutant_396" viable="true" in="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" from="(directoryFilter == null) &amp;&amp; (fileFilter == null)" to="directoryFilter == null" />
    <mutant id="mutant_155" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(pos) &gt;= (max)" />
    <mutant id="mutant_397" viable="false" in="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)" from="(offset &lt; size) &amp;&amp; ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" to="(readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF)" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" from="(httpContentType != null) &amp;&amp; (httpContentType.startsWith(&quot;text/html&quot;))" to="httpContentType.startsWith(&quot;text/html&quot;)" />
    <mutant id="mutant_398" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; ((destFile.canWrite()) == false)" to="(destFile.exists()) || ((destFile.canWrite()) == false)" />
    <mutant id="mutant_157" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="false" />
    <mutant id="mutant_399" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) &amp;&amp; ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.')) || ((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" />
    <mutant id="mutant_150" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="true" />
    <mutant id="mutant_392" viable="false" in="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="true" />
    <mutant id="mutant_151" viable="false" in="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" from="(getRun()) &amp;&amp; ((num = reader.read(inbuf)) != (IOUtils.EOF))" to="true" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.io.input.BoundedReader.read()" from="((markedAt) &gt;= 0) &amp;&amp; (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" to="((charsRead) - (markedAt)) &gt;= (readAheadLimit)" />
    <mutant id="mutant_152" viable="false" in="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" from="(len &gt; 0) &amp;&amp; (b &gt;= 0)" to="len &gt; 0" />
    <mutant id="mutant_394" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" to="false" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="false" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" from="(extensions == null) || ((extensions.length) == 0)" to="extensions == null" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" to="(org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.'))" to="true" />
    <mutant id="mutant_165" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="(index &lt; 0) || (index &gt;= (data.length))" to="true" />
    <mutant id="mutant_166" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(url != null) &amp;&amp; ((url.indexOf('%')) &gt;= 0)" to="(url != null) || ((url.indexOf('%')) &gt;= 0)" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0))" to="((prefix &gt;= (filename.length())) &amp;&amp; (index &lt; 0))" />
    <mutant id="mutant_168" viable="false" in="?" from="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) || ((osName.indexOf(&quot;aix&quot;)) != (-1))" to="false" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" from="(directoryFilter == null) &amp;&amp; (fileFilter == null)" to="fileFilter == null" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" to="c &lt; (files.length)" />
    <mutant id="mutant_163" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read()" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="true" />
    <mutant id="mutant_164" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null)) &amp;&amp; (line1.equals(line2))" to="true" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="(path == null) &amp;&amp; ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_171" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; ((destFile.canWrite()) == false)" to="(destFile.canWrite()) == false" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="!(xmlEnc.equals(bomEnc))" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0)) || (prefix &gt;= endIndex)" to="((prefix &gt;= (filename.length())) || (index &lt; 0)) &amp;&amp; (prefix &gt;= endIndex)" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" from="(extension == null) || (extension.isEmpty())" to="extension == null" />
    <mutant id="mutant_179" viable="false" in="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)" from="(!(directory.exists())) || (!(child.exists()))" to="false" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" from="(extension == null) || (extension.isEmpty())" to="(extension == null) &amp;&amp; (extension.isEmpty())" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) &amp;&amp; (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" to="(tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)" />
    <mutant id="mutant_174" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(bytesRead == 0) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="true" />
    <mutant id="mutant_175" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="true" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="(path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()" from="(!(slashNSeen)) &amp;&amp; (!(slashRSeen))" to="(!(slashNSeen)) || (!(slashRSeen))" />
    <mutant id="mutant_187" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(len &lt; 0) || ((off + len) &gt; (b.length))" to="(len &lt; 0) &amp;&amp; ((off + len) &gt; (b.length))" />
    <mutant id="mutant_188" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0)) || ((off + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_189" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(length &gt; 0) &amp;&amp; (length &lt; (buffer.length))" to="length &lt; (buffer.length)" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) || ((length) != origLength)" to="(((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)" />
    <mutant id="mutant_184" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(i &lt; n) &amp;&amp; ((url.charAt(i)) == '%')" to="(i &lt; n) || ((url.charAt(i)) == '%')" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="isLastFilePart &amp;&amp; ((leftOver) != null)" to="(leftOver) != null" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="true" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)" from="(k &gt;= 0) &amp;&amp; ((data[k]) == (newLineSequence[j]))" to="(data[k]) == (newLineSequence[j])" />
    <mutant id="mutant_191" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(bytes == null) || ((bytes.length) == 0)" to="true" />
    <mutant id="mutant_192" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(length &gt; 0) &amp;&amp; (length &lt; bufferLength)" to="length &lt; bufferLength" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="true" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) &amp;&amp; (c != '.')" to="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) || (c != '.')" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) &amp;&amp; ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" to="(text.indexOf('?')) == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_194" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reader == null)" to="true" />
    <mutant id="mutant_195" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(url != null) &amp;&amp; ((url.indexOf('%')) &gt;= 0)" to="(url.indexOf('%')) &gt;= 0" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="true" />
    <mutant id="mutant_197" viable="false" in="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)" from="(!(parent.mkdirs())) &amp;&amp; (!(parent.isDirectory()))" to="!(parent.isDirectory())" />
    <mutant id="mutant_701" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="false" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile())) &amp;&amp; (file.canRead())" to="false" />
    <mutant id="mutant_703" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)" />
    <mutant id="mutant_704" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" to="(!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))" />
    <mutant id="mutant_700" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) || (posWin == 2)" to="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)" />
    <mutant id="mutant_709" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0)) || ((offset + length) &gt; (array.length))" to="((length &lt; 0) || (offset &lt; 0)) &amp;&amp; ((offset + length) &gt; (array.length))" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException))" to="(throwable instanceof org.apache.commons.io.TaggedIOException)" />
    <mutant id="mutant_706" viable="false" in="org.apache.commons.io.input.BoundedInputStream.available()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(pos) &gt;= (max)" />
    <mutant id="mutant_707" viable="false" in="?" from="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)" from="((comparator) != null) &amp;&amp; ((children.length) &gt; 1)" to="(comparator) != null" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="(ch == '?') || (ch == '*')" to="false" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="false" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" from="(caseSensitivity == null) || (caseSensitivity.equals(IOCase.SYSTEM))" to="true" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="(filename1 == null) &amp;&amp; (filename2 == null)" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) || (posWin == 2)" to="true" />
    <mutant id="mutant_711" viable="false" in="org.apache.commons.io.FileCleaningTracker$Reaper.run()" from="((exitWhenFinished) == false) || ((trackers.size()) &gt; 0)" to="((exitWhenFinished) == false) &amp;&amp; ((trackers.size()) &gt; 0)" />
    <mutant id="mutant_716" viable="false" in="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)" from="(!(directory.exists())) || (!(child.exists()))" to="(!(directory.exists())) &amp;&amp; (!(child.exists()))" />
    <mutant id="mutant_717" viable="true" in="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" from="(caseSensitivity != null) &amp;&amp; (!(caseSensitivity.isCaseSensitive()))" to="(caseSensitivity != null) || (!(caseSensitivity.isCaseSensitive()))" />
    <mutant id="mutant_718" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) || ((osName.indexOf(&quot;solaris&quot;)) != (-1))" to="((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile()))" to="(file != null)" />
    <mutant id="mutant_723" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) &amp;&amp; (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" to="false" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="true" />
    <mutant id="mutant_725" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0)) || ((offset + length) &gt; (array.length))" to="false" />
    <mutant id="mutant_726" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" to="(xmlEnc != null)" />
    <mutant id="mutant_720" viable="false" in="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" from="(urls == null) || ((urls.length) == 0)" to="false" />
    <mutant id="mutant_721" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(pos) &gt;= (max)" />
    <mutant id="mutant_722" viable="false" in="org.apache.commons.io.FileUtils.toFile(java.net.URL)" from="(url == null) || (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" to="!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol()))" />
    <mutant id="mutant_727" viable="true" in="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" from="(dir != null) &amp;&amp; (new File(dir , name).isDirectory())" to="(dir != null) || (new File(dir , name).isDirectory())" />
    <mutant id="mutant_728" viable="false" in="org.apache.commons.io.FileCleaningTracker$Reaper.run()" from="((exitWhenFinished) == false) || ((trackers.size()) &gt; 0)" to="(exitWhenFinished) == false" />
    <mutant id="mutant_729" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(!(endOfInput)) &amp;&amp; (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="(!(endOfInput)) || (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)" from="(files == null) || ((files.length) == 0)" to="true" />
    <mutant id="mutant_735" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)" />
    <mutant id="mutant_736" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="(ch == '?') || (ch == '*')" to="ch == '*'" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="isLastFilePart &amp;&amp; ((leftOver) != null)" to="isLastFilePart" />
    <mutant id="mutant_730" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reader == null)" to="false" />
    <mutant id="mutant_731" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(ch0 &gt;= 'A') &amp;&amp; (ch0 &lt;= 'Z')" to="ch0 &lt;= 'Z'" />
    <mutant id="mutant_732" viable="false" in="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" from="(getRun()) &amp;&amp; ((num = reader.read(inbuf)) != (IOUtils.EOF))" to="(num = reader.read(inbuf)) != (IOUtils.EOF)" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="lastIsDirectory &amp;&amp; keepSeparator" to="keepSeparator" />
    <mutant id="mutant_738" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null)) &amp;&amp; (line1.equals(line2))" to="((line1 != null) &amp;&amp; (line2 != null)) || (line1.equals(line2))" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException))" to="((tag != null) || (throwable instanceof org.apache.commons.io.TaggedIOException))" />
    <mutant id="mutant_503" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) &amp;&amp; (filename2 == null)" to="(filename1 == null) || (filename2 == null)" />
    <mutant id="mutant_745" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile())) &amp;&amp; (file.canRead())" to="true" />
    <mutant id="mutant_504" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" to="(posUnix == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_746" viable="true" in="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" from="(!(thresholdExceeded)) &amp;&amp; (((written) + count) &gt; (threshold))" to="((written) + count) &gt; (threshold)" />
    <mutant id="mutant_505" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE)" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="false" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1))) &amp;&amp; (offset &lt; (XmlStreamReader.BUFFER_SIZE))" to="offset &lt; (XmlStreamReader.BUFFER_SIZE)" />
    <mutant id="mutant_748" viable="false" in="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="false" />
    <mutant id="mutant_741" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(length &gt; 0) &amp;&amp; (length &lt; bufferLength)" to="true" />
    <mutant id="mutant_500" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" from="(caseSensitivity == null) || (caseSensitivity.equals(IOCase.SYSTEM))" to="caseSensitivity.equals(IOCase.SYSTEM)" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(ch0 &gt;= 'A') &amp;&amp; (ch0 &lt;= 'Z')" to="true" />
    <mutant id="mutant_501" viable="false" in="?" from="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" to="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" />
    <mutant id="mutant_743" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="true" />
    <mutant id="mutant_502" viable="false" in="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" from="(len &gt; 0) &amp;&amp; (b &gt;= 0)" to="(len &gt; 0) || (b &gt;= 0)" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" to="((posUnix == (FilenameUtils.NOT_FOUND)) || (posWin == (FilenameUtils.NOT_FOUND)))" />
    <mutant id="mutant_507" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) &amp;&amp; (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" to="org.apache.commons.io.FilenameUtils.isSeparator(ch1)" />
    <mutant id="mutant_749" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(mime != null) &amp;&amp; (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="true" />
    <mutant id="mutant_508" viable="false" in="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="false" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" from="((byteOrderMark) != null) &amp;&amp; (getBOM().equals(bom))" to="(byteOrderMark) != null" />
    <mutant id="mutant_740" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="(index &lt; 0) || (index &gt;= (data.length))" to="false" />
    <mutant id="mutant_514" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="false" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)" from="(k &gt;= 0) &amp;&amp; ((data[k]) == (newLineSequence[j]))" to="false" />
    <mutant id="mutant_515" viable="false" in="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="(destDir.isDirectory()) == false" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" from="(dir != null) &amp;&amp; (new File(dir , name).isDirectory())" to="dir != null" />
    <mutant id="mutant_516" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" from="(extensions == null) || ((extensions.length) == 0)" to="(extensions == null) &amp;&amp; ((extensions.length) == 0)" />
    <mutant id="mutant_758" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="bytesToRead &gt; 0" />
    <mutant id="mutant_517" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="isLastFilePart &amp;&amp; ((leftOver) != null)" to="false" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(exists) &amp;&amp; (!(directory))" to="exists" />
    <mutant id="mutant_510" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read()" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="(endOfInput) || (!(encoderOut.hasRemaining()))" />
    <mutant id="mutant_752" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(read == 0) &amp;&amp; (endOfInput)" to="read == 0" />
    <mutant id="mutant_511" viable="true" in="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="filter2 == null" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" from="(conn instanceof java.net.HttpURLConnection) || (contentType != null)" to="contentType != null" />
    <mutant id="mutant_512" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" to="((xmlEnc != null) || (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" />
    <mutant id="mutant_754" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null)) &amp;&amp; (line1.equals(line2))" to="line1.equals(line2)" />
    <mutant id="mutant_513" viable="true" in="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" from="(!(thresholdExceeded)) &amp;&amp; (((written) + count) &gt; (threshold))" to="(!(thresholdExceeded)) || (((written) + count) &gt; (threshold))" />
    <mutant id="mutant_755" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="false" />
    <mutant id="mutant_518" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(!(endOfInput)) &amp;&amp; (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="((lastCoderResult) == null) || (lastCoderResult.isUnderflow())" />
    <mutant id="mutant_519" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(srcDir.exists()) &amp;&amp; ((srcDir.isDirectory()) == false)" to="(srcDir.isDirectory()) == false" />
    <mutant id="mutant_750" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reOpen)" to="false" />
    <mutant id="mutant_751" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0))" to="true" />
    <mutant id="mutant_525" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="(mime.endsWith(&quot;+xml&quot;))" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) || (!(xmlEnc.equals(bomEnc)))" />
    <mutant id="mutant_526" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) &amp;&amp; (filename2 == null)" to="filename2 == null" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(((exists) != origExists) || ((lastModified) != origLastModified))" to="((exists) != origExists)" />
    <mutant id="mutant_527" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="false" />
    <mutant id="mutant_769" viable="false" in="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" from="((byteOrderMark) != null) &amp;&amp; (getBOM().equals(bom))" to="getBOM().equals(bom)" />
    <mutant id="mutant_528" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) &amp;&amp; (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" to="org.apache.commons.io.FilenameUtils.isSeparator(ch0)" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" from="(line != null) &amp;&amp; ((lines.size()) &lt; max)" to="false" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" to="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" />
    <mutant id="mutant_522" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))" />
    <mutant id="mutant_764" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" to="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) &amp;&amp; ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" />
    <mutant id="mutant_523" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)" from="((comparator) != null) &amp;&amp; ((children.length) &gt; 1)" to="(children.length) &gt; 1" />
    <mutant id="mutant_765" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_524" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(exists) &amp;&amp; (!(directory))" to="!(directory)" />
    <mutant id="mutant_766" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) || ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" to="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" from="(boms == null) || ((boms.length) == 0)" to="(boms.length) == 0" />
    <mutant id="mutant_760" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="(bytesToRead &gt; 0) || ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" />
    <mutant id="mutant_761" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(exclusionList == null) || (!(exclusionList.contains(srcFile.getCanonicalPath())))" to="exclusionList == null" />
    <mutant id="mutant_520" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" from="(extensions == null) || (extensions.isEmpty())" to="true" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0)) || (prefix &gt;= endIndex)" to="true" />
    <mutant id="mutant_536" viable="true" in="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)" from="(files == null) || ((files.length) == 0)" to="files == null" />
    <mutant id="mutant_778" viable="false" in="org.apache.commons.io.FileCleaningTracker$Reaper.run()" from="((exitWhenFinished) == false) || ((trackers.size()) &gt; 0)" to="(trackers.size()) &gt; 0" />
    <mutant id="mutant_537" viable="true" in="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="false" />
    <mutant id="mutant_779" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="destDir.exists()" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)" from="(!(parent.mkdirs())) &amp;&amp; (!(parent.isDirectory()))" to="false" />
    <mutant id="mutant_539" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" to="(c &lt; (files.length)) || ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" />
    <mutant id="mutant_532" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)" from="((comparator) != null) &amp;&amp; ((children.length) &gt; 1)" to="true" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile())) &amp;&amp; (file.canRead())" to="file.canRead()" />
    <mutant id="mutant_533" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="((data[(k + j)]) &gt;= ' ') &amp;&amp; ((data[(k + j)]) &lt; 127)" to="((data[(k + j)]) &gt;= ' ') || ((data[(k + j)]) &lt; 127)" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(mime != null) &amp;&amp; (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="(mime != null) || (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read()" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="!(this.bbuf.hasRemaining())" />
    <mutant id="mutant_776" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0))" to="false" />
    <mutant id="mutant_535" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" to="(mime.equals(&quot;text/xml&quot;))" />
    <mutant id="mutant_777" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" to="((off &lt; 0) || (off &gt; (b.length)))" />
    <mutant id="mutant_770" viable="false" in="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" from="(file1.isDirectory()) || (file2.isDirectory())" to="file1.isDirectory()" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="(str1 == null) &amp;&amp; (str2 == null)" />
    <mutant id="mutant_530" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')" to="true" />
    <mutant id="mutant_772" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length)))" to="((off + len) &gt; (b.length))" />
    <mutant id="mutant_531" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="xmlGuessEnc != null" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')" to="false" />
    <mutant id="mutant_305" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0))" to="(offset &lt; 0)" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0)) || ((offset + length) &gt; (array.length))" to="(length &lt; 0) || (offset &lt; 0)" />
    <mutant id="mutant_789" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" to="(bomEnc != null) || (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" />
    <mutant id="mutant_306" viable="false" in="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" from="(len &gt; 0) &amp;&amp; (b &gt;= 0)" to="false" />
    <mutant id="mutant_548" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(bytesRead == 0) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="(bytesRead == 0) || (!(this.cbuf.hasRemaining()))" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="filter1 == null" />
    <mutant id="mutant_549" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)" from="((comparator) != null) &amp;&amp; ((children.length) &gt; 1)" to="((comparator) != null) || ((children.length) &gt; 1)" />
    <mutant id="mutant_308" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_301" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="xmlGuessEnc != null" />
    <mutant id="mutant_543" viable="true" in="org.apache.commons.io.input.BoundedReader.read()" from="((markedAt) &gt;= 0) &amp;&amp; (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" to="true" />
    <mutant id="mutant_785" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" from="((path.length()) &gt; 0) &amp;&amp; ((path.charAt(0)) != '\&quot;')" to="true" />
    <mutant id="mutant_302" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" from="(extension == null) || (extension.isEmpty())" to="false" />
    <mutant id="mutant_544" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" to="true" />
    <mutant id="mutant_786" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; ((destFile.canWrite()) == false)" to="true" />
    <mutant id="mutant_303" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc == null) || (xmlEnc == null)" to="true" />
    <mutant id="mutant_545" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="bytesToRead &gt; 0" />
    <mutant id="mutant_787" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="(((lastCoderResult) == null) &amp;&amp; (lastCoderResult.isUnderflow()))" />
    <mutant id="mutant_304" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reader == null)" to="reader == null" />
    <mutant id="mutant_546" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="false" />
    <mutant id="mutant_788" viable="true" in="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" from="(line != null) &amp;&amp; ((lines.size()) &lt; max)" to="line != null" />
    <mutant id="mutant_309" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) || (posWin == 2)" to="posWin == 2" />
    <mutant id="mutant_781" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" to="true" />
    <mutant id="mutant_540" viable="false" in="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="destDir.exists()" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" from="(fileToDelete == null) || ((fileToDelete.exists()) == false)" to="false" />
    <mutant id="mutant_541" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="false" />
    <mutant id="mutant_783" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((off &lt; 0) || (off &gt; (b.length)))" to="false" />
    <mutant id="mutant_300" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.'))" to="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" />
    <mutant id="mutant_542" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null))" to="(line1 != null)" />
    <mutant id="mutant_784" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="false" />
    <mutant id="mutant_780" viable="false" in="?" from="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" to="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="(((array[i]) == separator) || ((array[(i - 1)]) == '.'))" />
    <mutant id="mutant_558" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) &amp;&amp; (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" />
    <mutant id="mutant_559" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(!(destDir.mkdirs())) &amp;&amp; (!(destDir.isDirectory()))" to="true" />
    <mutant id="mutant_318" viable="false" in="?" from="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_319" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null)) &amp;&amp; (line1.equals(line2))" to="false" />
    <mutant id="mutant_312" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="false" />
    <mutant id="mutant_554" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" from="(extensions == null) || (extensions.isEmpty())" to="extensions.isEmpty()" />
    <mutant id="mutant_796" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(bytes == null) || ((bytes.length) == 0)" to="(bytes.length) == 0" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.io.FilenameUtils.isSeparator(char)" from="(ch == (FilenameUtils.UNIX_SEPARATOR)) || (ch == (FilenameUtils.WINDOWS_SEPARATOR))" to="ch == (FilenameUtils.UNIX_SEPARATOR)" />
    <mutant id="mutant_555" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" to="bomEnc != null" />
    <mutant id="mutant_797" viable="false" in="?" from="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_314" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" to="false" />
    <mutant id="mutant_556" viable="false" in="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; (destFile.isDirectory())" to="(destFile.exists()) || (destFile.isDirectory())" />
    <mutant id="mutant_798" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" to="(posWin == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_315" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="(IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead))" />
    <mutant id="mutant_557" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="((data[(k + j)]) &gt;= ' ') &amp;&amp; ((data[(k + j)]) &lt; 127)" to="(data[(k + j)]) &gt;= ' '" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" from="(directoryFilter == null) &amp;&amp; (fileFilter == null)" to="false" />
    <mutant id="mutant_550" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) &amp;&amp; ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" />
    <mutant id="mutant_792" viable="false" in="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="(!(destDir.exists())) || createDestDir" />
    <mutant id="mutant_551" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="lastIsDirectory &amp;&amp; keepSeparator" to="false" />
    <mutant id="mutant_793" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" from="(extension == null) || (extension.isEmpty())" to="extension.isEmpty()" />
    <mutant id="mutant_310" viable="false" in="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" from="(file1.isDirectory()) || (file2.isDirectory())" to="(file1.isDirectory()) &amp;&amp; (file2.isDirectory())" />
    <mutant id="mutant_552" viable="true" in="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="str2 == null" />
    <mutant id="mutant_794" viable="true" in="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" from="(conn instanceof java.net.HttpURLConnection) || (contentType != null)" to="conn instanceof java.net.HttpURLConnection" />
    <mutant id="mutant_311" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(length &gt; 0) &amp;&amp; (length &lt; (buffer.length))" to="true" />
    <mutant id="mutant_553" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" to="(xmlEnc != null)" />
    <mutant id="mutant_795" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(!(parentFile.mkdirs())) &amp;&amp; (!(parentFile.isDirectory()))" to="false" />
    <mutant id="mutant_790" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))" to="false" />
    <mutant id="mutant_791" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" to="((osName.indexOf(&quot;sun os&quot;)) != (-1))" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE)" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(bytes == null) || ((bytes.length) == 0)" to="false" />
    <mutant id="mutant_448" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="lenient &amp;&amp; (xmlEnc != null)" to="false" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file2.exists())" to="sumDirectoryContents" />
    <mutant id="mutant_207" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((off &lt; 0) || (off &gt; (b.length)))" to="true" />
    <mutant id="mutant_449" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="isLastFilePart &amp;&amp; ((leftOver) != null)" to="true" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(mime != null) &amp;&amp; (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="mime != null" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="false" />
    <mutant id="mutant_5" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2))" to="(posUnix == 2)" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)" from="previousWasSlashR || (!(ensureLineFeedAtEndOfFile))" to="!(ensureLineFeedAtEndOfFile)" />
    <mutant id="mutant_444" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="((array[i]) == separator)" />
    <mutant id="mutant_686" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) || ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" to="(osName.indexOf(&quot;mac os x&quot;)) != (-1)" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="xmlGuessEnc != null" />
    <mutant id="mutant_203" viable="false" in="org.apache.commons.io.FileCleaningTracker$Reaper.run()" from="((exitWhenFinished) == false) || ((trackers.size()) &gt; 0)" to="false" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" from="(!(thresholdExceeded)) &amp;&amp; (((written) + count) &gt; (threshold))" to="false" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" from="(caseSensitivity != null) &amp;&amp; (!(caseSensitivity.isCaseSensitive()))" to="!(caseSensitivity.isCaseSensitive())" />
    <mutant id="mutant_7" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1)))" to="(c != (-1))" />
    <mutant id="mutant_204" viable="false" in="org.apache.commons.io.input.BoundedInputStream.available()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(max) &gt;= 0" />
    <mutant id="mutant_446" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="(IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead))" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) &amp;&amp; ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" to="(text.indexOf('*')) == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_6" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(srcDir.exists()) &amp;&amp; ((srcDir.isDirectory()) == false)" to="srcDir.exists()" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)" />
    <mutant id="mutant_447" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) &amp;&amp; ((off + len) &lt; 0)" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="false" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="true" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" to="((mime.equals(&quot;text/xml&quot;)) &amp;&amp; (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" />
    <mutant id="mutant_87" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(srcDir.exists()) &amp;&amp; ((srcDir.isDirectory()) == false)" to="(srcDir.exists()) || ((srcDir.isDirectory()) == false)" />
    <mutant id="mutant_86" viable="false" in="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" from="(srcFiles != null) &amp;&amp; ((srcFiles.length) &gt; 0)" to="false" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="true" />
    <mutant id="mutant_88" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="(!(this.bbuf.hasRemaining())) || (!(this.cbuf.hasRemaining()))" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" from="(extensions == null) || (extensions.isEmpty())" to="(extensions == null) &amp;&amp; (extensions.isEmpty())" />
    <mutant id="mutant_92" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="true" />
    <mutant id="mutant_91" viable="false" in="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="(destDir.exists()) || ((destDir.isDirectory()) == false)" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(exists) &amp;&amp; (!(directory))" to="true" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8))" />
    <mutant id="mutant_1" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="true" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.read()" from="previousWasSlashR &amp;&amp; (slashNSeen)" to="false" />
    <mutant id="mutant_682" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(!(destDir.mkdirs())) &amp;&amp; (!(destDir.isDirectory()))" to="false" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) == 0)" to="c &lt; (files.length)" />
    <mutant id="mutant_441" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0))" to="false" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="false" />
    <mutant id="mutant_3" viable="false" in="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="createDestDir" />
    <mutant id="mutant_200" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0)) || ((off + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" to="(mime.equals(&quot;application/xml&quot;))" />
    <mutant id="mutant_684" viable="false" in="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)" from="(!(parent.mkdirs())) &amp;&amp; (!(parent.isDirectory()))" to="(!(parent.mkdirs())) || (!(parent.isDirectory()))" />
    <mutant id="mutant_2" viable="true" in="org.apache.commons.io.FilenameUtils.isSeparator(char)" from="(ch == (FilenameUtils.UNIX_SEPARATOR)) || (ch == (FilenameUtils.WINDOWS_SEPARATOR))" to="ch == (FilenameUtils.WINDOWS_SEPARATOR)" />
    <mutant id="mutant_201" viable="false" in="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" from="(file1.isDirectory()) || (file2.isDirectory())" to="file1.isDirectory()" />
    <mutant id="mutant_443" viable="true" in="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" from="(httpContentType != null) &amp;&amp; (httpContentType.startsWith(&quot;text/html&quot;))" to="false" />
    <mutant id="mutant_685" viable="false" in="org.apache.commons.io.FileUtils.toFile(java.net.URL)" from="(url == null) || (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" to="url == null" />
    <mutant id="mutant_680" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="!(this.bbuf.hasRemaining())" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) || ((length) != origLength)" to="true" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" to="(!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))" />
    <mutant id="mutant_459" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)" from="(k &gt;= 0) &amp;&amp; ((data[k]) == (newLineSequence[j]))" to="(k &gt;= 0) || ((data[k]) == (newLineSequence[j]))" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory))" to="false" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()" from="(!(slashNSeen)) &amp;&amp; (!(slashRSeen))" to="!(slashNSeen)" />
    <mutant id="mutant_213" viable="false" in="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; (destFile.isDirectory())" to="true" />
    <mutant id="mutant_455" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) &amp;&amp; (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" />
    <mutant id="mutant_697" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="((lastCoderResult) == null)" />
    <mutant id="mutant_214" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null))" to="(line2 != null)" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="true" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="true" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.read()" from="previousWasSlashR &amp;&amp; (slashNSeen)" to="previousWasSlashR" />
    <mutant id="mutant_457" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile())) &amp;&amp; (file.canRead())" to="(file != null) &amp;&amp; (file.isFile())" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')" />
    <mutant id="mutant_216" viable="false" in="?" from="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) || ((osName.indexOf(&quot;aix&quot;)) != (-1))" to="true" />
    <mutant id="mutant_458" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(wcsIdx == (wcs.length)) &amp;&amp; (textIdx == (filename.length()))" to="textIdx == (filename.length())" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="(!isLastFilePart) &amp;&amp; (i &lt; (avoidNewlineSplitBufferSize))" to="i &lt; (avoidNewlineSplitBufferSize)" />
    <mutant id="mutant_73" viable="false" in="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" from="(getRun()) &amp;&amp; ((num = reader.read(inbuf)) != (IOUtils.EOF))" to="getRun()" />
    <mutant id="mutant_76" viable="false" in="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" from="(srcFiles != null) &amp;&amp; ((srcFiles.length) &gt; 0)" to="(srcFiles.length) &gt; 0" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile()))" to="(file.isFile())" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="((data[(k + j)]) &gt;= ' ') &amp;&amp; ((data[(k + j)]) &lt; 127)" to="true" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(exists) &amp;&amp; (!(directory))" to="(exists) || (!(directory))" />
    <mutant id="mutant_79" viable="false" in="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" from="(file1.isDirectory()) || (file2.isDirectory())" to="true" />
    <mutant id="mutant_81" viable="false" in="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="!(destDir.exists())" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1)))" to="true" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="true" />
    <mutant id="mutant_82" viable="false" in="?" from="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" to="((osName.indexOf(&quot;linux&quot;)) != (-1))" />
    <mutant id="mutant_451" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0))" to="true" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="false" />
    <mutant id="mutant_210" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="true" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="(xmlGuessEnc != null) || (!(xmlGuessEnc.equals(bomEnc)))" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="true" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" to="true" />
    <mutant id="mutant_453" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" from="(charset == (Charsets.UTF_16BE)) || (charset == (Charsets.UTF_16LE))" to="(charset == (Charsets.UTF_16BE)) &amp;&amp; (charset == (Charsets.UTF_16LE))" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" to="(len == 2) &amp;&amp; ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" />
    <mutant id="mutant_212" viable="false" in="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" from="(boms == null) || ((boms.length) == 0)" to="true" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="(filename1 == null) &amp;&amp; (filename2 == null)" />
    <mutant id="mutant_696" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="true" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) &amp;&amp; (wildcardMatcher == null)" to="wildcardMatcher == null" />
    <mutant id="mutant_691" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="true" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" from="(dir != null) &amp;&amp; (new File(dir , name).isDirectory())" to="true" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file1.exists())" to="false" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file1.exists())" to="(sumDirectoryContents) || (file1.exists())" />
    <mutant id="mutant_229" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) || ((osName.indexOf(&quot;solaris&quot;)) != (-1))" to="false" />
    <mutant id="mutant_224" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="!(this.bbuf.hasRemaining())" />
    <mutant id="mutant_466" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(mime != null) &amp;&amp; ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="true" />
    <mutant id="mutant_467" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))" to="true" />
    <mutant id="mutant_226" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0))" to="(length &lt; 0)" />
    <mutant id="mutant_468" viable="false" in="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" from="(getRun()) &amp;&amp; ((num = reader.read(inbuf)) != (IOUtils.EOF))" to="false" />
    <mutant id="mutant_227" viable="false" in="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" from="(urls == null) || ((urls.length) == 0)" to="(urls == null) &amp;&amp; ((urls.length) == 0)" />
    <mutant id="mutant_469" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" from="(extension == null) || (extension.isEmpty())" to="true" />
    <mutant id="mutant_220" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((off &lt; 0) || (off &gt; (b.length)))" to="(off &gt; (b.length))" />
    <mutant id="mutant_462" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.read()" from="previousWasSlashR &amp;&amp; (slashNSeen)" to="slashNSeen" />
    <mutant id="mutant_221" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(bytesRead == 0) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="false" />
    <mutant id="mutant_463" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(length &gt; 0) &amp;&amp; (length &lt; bufferLength)" to="(length &gt; 0) || (length &lt; bufferLength)" />
    <mutant id="mutant_222" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" />
    <mutant id="mutant_464" viable="false" in="?" from="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" to="((osName.indexOf(&quot;irix&quot;)) != (-1))" />
    <mutant id="mutant_223" viable="false" in="org.apache.commons.io.input.BOMInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((readFirstBytes()) &gt;= 0)" to="(readFirstBytes()) &gt;= 0" />
    <mutant id="mutant_465" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(((exists) != origExists) || ((lastModified) != origLastModified))" to="(((exists) != origExists) &amp;&amp; ((lastModified) != origLastModified))" />
    <mutant id="mutant_460" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="!(xmlEnc.equals(bomEnc))" />
    <mutant id="mutant_461" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')" to="((buf.charAt(k)) == ',') &amp;&amp; ((buf.charAt(k)) == '.')" />
    <mutant id="mutant_239" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(!(parentFile.mkdirs())) &amp;&amp; (!(parentFile.isDirectory()))" to="!(parentFile.isDirectory())" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) &amp;&amp; (filename2 == null)" to="filename1 == null" />
    <mutant id="mutant_477" viable="false" in="org.apache.commons.io.FileUtils.toFile(java.net.URL)" from="(url == null) || (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" to="false" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)" />
    <mutant id="mutant_478" viable="false" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1))) &amp;&amp; (offset &lt; (XmlStreamReader.BUFFER_SIZE))" to="false" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" from="(line != null) &amp;&amp; ((lines.size()) &lt; max)" to="(line != null) || ((lines.size()) &lt; max)" />
    <mutant id="mutant_479" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2))" to="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" />
    <mutant id="mutant_238" viable="false" in="?" from="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" to="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" />
    <mutant id="mutant_96" viable="false" in="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; (destFile.isDirectory())" to="false" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="path == null" />
    <mutant id="mutant_98" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="false" />
    <mutant id="mutant_97" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((off &lt; 0) || (off &gt; (b.length)))" to="(off &lt; 0)" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" from="(httpContentType != null) &amp;&amp; (httpContentType.startsWith(&quot;text/html&quot;))" to="(httpContentType != null) || (httpContentType.startsWith(&quot;text/html&quot;))" />
    <mutant id="mutant_231" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0)) || ((offset + length) &gt; (array.length))" to="true" />
    <mutant id="mutant_473" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) &amp;&amp; (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" to="false" />
    <mutant id="mutant_232" viable="false" in="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="(!(destDir.exists())) || createDestDir" />
    <mutant id="mutant_474" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0)) || (prefix &gt;= endIndex)" to="prefix &gt;= endIndex" />
    <mutant id="mutant_233" viable="false" in="org.apache.commons.io.FileUtils.toFile(java.net.URL)" from="(url == null) || (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" to="(url == null) &amp;&amp; (!(&quot;file&quot;.equalsIgnoreCase(url.getProtocol())))" />
    <mutant id="mutant_475" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0))" to="(prefix &gt;= (filename.length()))" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" to="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) &amp;&amp; (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" />
    <mutant id="mutant_476" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file1.exists())" to="true" />
    <mutant id="mutant_470" viable="true" in="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" from="(fileToDelete == null) || ((fileToDelete.exists()) == false)" to="fileToDelete == null" />
    <mutant id="mutant_471" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(ch0 &gt;= 'A') &amp;&amp; (ch0 &lt;= 'Z')" to="ch0 &gt;= 'A'" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) &amp;&amp; ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)" />
    <mutant id="mutant_472" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(org.apache.commons.io.FilenameUtils.isSeparator(ch0)) &amp;&amp; (org.apache.commons.io.FilenameUtils.isSeparator(ch1))" to="true" />
    <mutant id="mutant_246" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reOpen)" to="true" />
    <mutant id="mutant_488" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) || (wildcardMatcher == null)" to="true" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == separator)" to="(array[(i - 1)]) == separator" />
    <mutant id="mutant_489" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException))" to="true" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="!(xmlGuessEnc.equals(bomEnc))" />
    <mutant id="mutant_249" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reOpen)" to="(getRun()) || (reOpen)" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="false" />
    <mutant id="mutant_484" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read()" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="false" />
    <mutant id="mutant_243" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) || ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" to="true" />
    <mutant id="mutant_485" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="lastIsDirectory &amp;&amp; keepSeparator" to="lastIsDirectory" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2))" to="true" />
    <mutant id="mutant_486" viable="false" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" to="true" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(bytes == null) || ((bytes.length) == 0)" to="bytes == null" />
    <mutant id="mutant_487" viable="true" in="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" from="(fileToDelete == null) || ((fileToDelete.exists()) == false)" to="(fileToDelete == null) &amp;&amp; ((fileToDelete.exists()) == false)" />
    <mutant id="mutant_480" viable="true" in="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" from="(fileToDelete == null) || ((fileToDelete.exists()) == false)" to="true" />
    <mutant id="mutant_481" viable="true" in="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" from="(conn instanceof java.net.HttpURLConnection) || (contentType != null)" to="(conn instanceof java.net.HttpURLConnection) &amp;&amp; (contentType != null)" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" to="false" />
    <mutant id="mutant_482" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="false" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ','))" to="((!(Character.isDigit(c))) || (c != ','))" />
    <mutant id="mutant_483" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(mime != null) &amp;&amp; ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="(mime != null) || ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" />
    <mutant id="mutant_257" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)" from="previousWasSlashR || (!(ensureLineFeedAtEndOfFile))" to="previousWasSlashR" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" from="(len &gt; 0) &amp;&amp; (b &gt;= 0)" to="b &gt;= 0" />
    <mutant id="mutant_258" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0)) || ((off + len) &gt; (b.length))" to="((len &lt; 0) || (off &lt; 0)) &amp;&amp; ((off + len) &gt; (b.length))" />
    <mutant id="mutant_259" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" from="((tok.countTokens()) == 1) &amp;&amp; ((lines.size()) &gt;= 3)" to="((tok.countTokens()) == 1) || ((lines.size()) &gt;= 3)" />
    <mutant id="mutant_490" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" to="((xmlEnc != null) || (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" from="(fileToDelete.exists()) &amp;&amp; ((doDelete(fileToDelete)) == false)" to="true" />
    <mutant id="mutant_495" viable="true" in="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)" from="(files == null) || ((files.length) == 0)" to="false" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" from="(!(thresholdExceeded)) &amp;&amp; (((written) + count) &gt; (threshold))" to="true" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" from="(charset == (Charsets.UTF_16BE)) || (charset == (Charsets.UTF_16LE))" to="charset == (Charsets.UTF_16LE)" />
    <mutant id="mutant_255" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(!(endOfInput)) &amp;&amp; (((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="true" />
    <mutant id="mutant_497" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="true" />
    <mutant id="mutant_256" viable="false" in="org.apache.commons.io.input.BoundedInputStream.available()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="true" />
    <mutant id="mutant_498" viable="true" in="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" from="((depthLimit) &lt; 0) || (childDepth &lt;= (depthLimit))" to="(depthLimit) &lt; 0" />
    <mutant id="mutant_491" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc == null) || (xmlEnc == null)" to="xmlGuessEnc == null" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1)))" to="false" />
    <mutant id="mutant_492" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" to="false" />
    <mutant id="mutant_251" viable="false" in="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)" from="(offset &lt; size) &amp;&amp; ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" to="true" />
    <mutant id="mutant_493" viable="false" in="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)" from="(offset &lt; size) &amp;&amp; ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" to="(offset &lt; size) || ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" from="((depthLimit) &lt; 0) || (childDepth &lt;= (depthLimit))" to="false" />
    <mutant id="mutant_494" viable="false" in="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" from="(file1.isDirectory()) || (file2.isDirectory())" to="false" />
    <mutant id="mutant_268" viable="false" in="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" from="(srcFiles != null) &amp;&amp; ((srcFiles.length) &gt; 0)" to="srcFiles != null" />
    <mutant id="mutant_269" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory))" to="(((exists) != origExists) || ((lastModified) != origLastModified))" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" from="(extensions == null) || ((extensions.length) == 0)" to="true" />
    <mutant id="mutant_265" viable="false" in="?" from="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_266" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))" to="posUnix == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_267" viable="false" in="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)" from="(!(directory.exists())) || (!(child.exists()))" to="true" />
    <mutant id="mutant_260" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="false" />
    <mutant id="mutant_261" viable="false" in="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" from="((length &lt; 0) || (offset &lt; 0)) || ((offset + length) &gt; (array.length))" to="(offset + length) &gt; (array.length)" />
    <mutant id="mutant_262" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="(off + len) &lt; 0" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)" from="(files == null) || ((files.length) == 0)" to="(files.length) == 0" />
    <mutant id="mutant_279" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) &amp;&amp; (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" to="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) || (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" />
    <mutant id="mutant_270" viable="true" in="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="false" />
    <mutant id="mutant_275" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="false" />
    <mutant id="mutant_276" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="filename1 == null" />
    <mutant id="mutant_277" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) || ((osName.indexOf(&quot;solaris&quot;)) != (-1))" to="true" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.read()" from="previousWasSlashR &amp;&amp; (slashNSeen)" to="previousWasSlashR || (slashNSeen)" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) || (posWin == 2)" to="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) &amp;&amp; (posWin == 2)" />
    <mutant id="mutant_272" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="false" />
    <mutant id="mutant_273" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="false" />
    <mutant id="mutant_274" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((available()) &gt; 0)" to="false" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" from="(line != null) &amp;&amp; ((lines.size()) &lt; max)" to="(lines.size()) &lt; max" />
    <mutant id="mutant_281" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="(index &lt; 0) || (index &gt;= (data.length))" to="index &lt; 0" />
    <mutant id="mutant_286" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read()" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="false" />
    <mutant id="mutant_287" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_288" viable="false" in="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)" from="(offset &lt; size) &amp;&amp; ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" to="offset &lt; size" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="(filter1 == null) &amp;&amp; (filter2 == null)" />
    <mutant id="mutant_282" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" to="(mime.equals(&quot;application/xml-external-parsed-entity&quot;))" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="true" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16))))" to="true" />
    <mutant id="mutant_285" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(exclusionList == null) || (!(exclusionList.contains(srcFile.getCanonicalPath())))" to="true" />
    <mutant id="mutant_290" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8))" />
    <mutant id="mutant_291" viable="false" in="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" from="(boms == null) || ((boms.length) == 0)" to="false" />
    <mutant id="mutant_292" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="(bytesToRead &gt; 0) || ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" />
    <mutant id="mutant_297" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == separator)" to="(array[i]) == separator" />
    <mutant id="mutant_298" viable="false" in="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" from="(boms == null) || ((boms.length) == 0)" to="boms == null" />
    <mutant id="mutant_299" viable="false" in="org.apache.commons.io.input.BOMInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((readFirstBytes()) &gt;= 0)" to="n &gt; 0" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(!appXml) &amp;&amp; (!textXml)" to="true" />
    <mutant id="mutant_294" viable="false" in="org.apache.commons.io.input.BOMInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((readFirstBytes()) &gt;= 0)" to="true" />
    <mutant id="mutant_295" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(charsetName == null) || (charsetName.isEmpty())" to="false" />
    <mutant id="mutant_296" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(exclusionList == null) || (!(exclusionList.contains(srcFile.getCanonicalPath())))" to="false" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" to="true" />
    <mutant id="mutant_26" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; ((destFile.canWrite()) == false)" to="destFile.exists()" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)" from="previousWasSlashR || (!(ensureLineFeedAtEndOfFile))" to="false" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" to="len == 2" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(charsetName == null) || (charsetName.isEmpty())" to="charsetName == null" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) || (!(xmlEnc.equals(bomEnc)))" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" from="((path.length()) &gt; 0) &amp;&amp; ((path.charAt(0)) != '\&quot;')" to="(path.length()) &gt; 0" />
    <mutant id="mutant_22" viable="true" in="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" from="(directoryFilter == null) &amp;&amp; (fileFilter == null)" to="(directoryFilter == null) || (fileFilter == null)" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" from="((path.length()) &gt; 0) &amp;&amp; ((path.charAt(0)) != '\&quot;')" to="false" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) &amp;&amp; ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" to="false" />
    <mutant id="mutant_16" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" from="(&quot;&quot;.equals(line)) &amp;&amp; (!(trailingNewlineOfFileSkipped))" to="!(trailingNewlineOfFileSkipped)" />
    <mutant id="mutant_15" viable="false" in="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" from="(getRun()) &amp;&amp; ((num = reader.read(inbuf)) != (IOUtils.EOF))" to="(getRun()) || ((num = reader.read(inbuf)) != (IOUtils.EOF))" />
    <mutant id="mutant_18" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')" to="(buf.charAt(k)) == ','" />
    <mutant id="mutant_17" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length)))" to="true" />
    <mutant id="mutant_19" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc == null) || (xmlEnc == null)" to="xmlEnc == null" />
    <mutant id="mutant_10" viable="false" in="org.apache.commons.io.input.BOMInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((readFirstBytes()) &gt;= 0)" to="false" />
    <mutant id="mutant_12" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="false" />
    <mutant id="mutant_11" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" from="(extensions == null) || (extensions.isEmpty())" to="extensions == null" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="(i == (prefix + 2))" />
    <mutant id="mutant_13" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="(path == null) &amp;&amp; ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" to="false" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" from="(extensions == null) || ((extensions.length) == 0)" to="false" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="lastIsDirectory &amp;&amp; keepSeparator" to="lastIsDirectory || keepSeparator" />
    <mutant id="mutant_40" viable="false" in="org.apache.commons.io.input.BoundedInputStream.available()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="false" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" from="((depthLimit) &lt; 0) || (childDepth &lt;= (depthLimit))" to="((depthLimit) &lt; 0) &amp;&amp; (childDepth &lt;= (depthLimit))" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) &amp;&amp; ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="true" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="false" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="true" />
    <mutant id="mutant_47" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(mime != null) &amp;&amp; ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="true" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))" />
    <mutant id="mutant_50" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(max) &gt;= 0" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" to="(comparator.compare(entry.getFile(), files[c])) &gt; 0" />
    <mutant id="mutant_37" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1))) || ((osName.indexOf(&quot;mac os x&quot;)) != (-1))" to="false" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.io.FilenameUtils.isSeparator(char)" from="(ch == (FilenameUtils.UNIX_SEPARATOR)) || (ch == (FilenameUtils.WINDOWS_SEPARATOR))" to="true" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) || ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(wcsIdx == (wcs.length)) &amp;&amp; (textIdx == (filename.length()))" to="true" />
    <mutant id="mutant_31" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) || ((length) != origLength)" to="(length) != origLength" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(!appXml) &amp;&amp; (!textXml)" to="(!appXml) || (!textXml)" />
    <mutant id="mutant_33" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(bytesRead == 0) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="bytesRead == 0" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) || ((length) != origLength)" to="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory)) &amp;&amp; ((length) != origLength)" />
    <mutant id="mutant_35" viable="false" in="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; (destFile.isDirectory())" to="destFile.exists()" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)" from="(files == null) || ((files.length) == 0)" to="(files == null) &amp;&amp; ((files.length) == 0)" />
    <mutant id="mutant_62" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)" from="previousWasSlashR || (!(ensureLineFeedAtEndOfFile))" to="true" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" from="((path.length()) &gt; 0) &amp;&amp; ((path.charAt(0)) != '\&quot;')" to="((path.length()) &gt; 0) || ((path.charAt(0)) != '\&quot;')" />
    <mutant id="mutant_64" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="true" />
    <mutant id="mutant_67" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reader == null)" to="getRun()" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(charsetName == null) || (charsetName.isEmpty())" to="charsetName.isEmpty()" />
    <mutant id="mutant_69" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(url != null) &amp;&amp; ((url.indexOf('%')) &gt;= 0)" to="true" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="(i == (prefix + 1)) || ((array[(i - 2)]) == separator)" />
    <mutant id="mutant_70" viable="false" in="org.apache.commons.io.input.BOMInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((readFirstBytes()) &gt;= 0)" to="(n &gt; 0) || ((readFirstBytes()) &gt;= 0)" />
    <mutant id="mutant_72" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="true" />
    <mutant id="mutant_71" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="filename1 == null" />
    <mutant id="mutant_59" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) || ((osName.indexOf(&quot;solaris&quot;)) != (-1))" to="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;solaris&quot;)) != (-1))" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" from="(fileToDelete.exists()) &amp;&amp; ((doDelete(fileToDelete)) == false)" to="fileToDelete.exists()" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory))" to="((directory) != origDirectory)" />
    <mutant id="mutant_54" viable="false" in="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" from="(urls == null) || ((urls.length) == 0)" to="(urls.length) == 0" />
    <mutant id="mutant_53" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length)))" to="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(mime != null) &amp;&amp; ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="mime != null" />
    <mutant id="mutant_55" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" to="bomEnc != null" />
    <mutant id="mutant_58" viable="false" in="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" from="(file1.isDirectory()) || (file2.isDirectory())" to="true" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) &amp;&amp; ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" to="(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) || ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))" />
    <mutant id="mutant_61" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()" from="(!(slashNSeen)) &amp;&amp; (!(slashRSeen))" to="false" />
    <mutant id="mutant_800" viable="false" in="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" from="((byteOrderMark) != null) &amp;&amp; (getBOM().equals(bom))" to="true" />
    <mutant id="mutant_801" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_802" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(length &gt; 0) &amp;&amp; (length &lt; (buffer.length))" to="false" />
    <mutant id="mutant_803" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0)) || (prefix &gt;= endIndex)" to="false" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))" to="bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32)" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="lastIsDirectory &amp;&amp; keepSeparator" to="true" />
    <mutant id="mutant_804" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1))) &amp;&amp; (offset &lt; (XmlStreamReader.BUFFER_SIZE))" to="((c != (-1)) &amp;&amp; (firstGT == (-1))) || (offset &lt; (XmlStreamReader.BUFFER_SIZE))" />
    <mutant id="mutant_805" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0))" to="(len &lt; 0)" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile())) &amp;&amp; (file.canRead())" to="((file != null) &amp;&amp; (file.isFile())) || (file.canRead())" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="(mime.startsWith(&quot;application/&quot;))" />
    <mutant id="mutant_811" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_812" viable="false" in="?" from="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_813" viable="false" in="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="!(destDir.exists())" />
    <mutant id="mutant_814" viable="false" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) &gt; 0)" to="false" />
    <mutant id="mutant_810" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == separator)" to="((array[i]) == separator) || ((array[(i - 1)]) == separator)" />
    <mutant id="mutant_819" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reOpen)" to="getRun()" />
    <mutant id="mutant_815" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" to="(len &lt; 0)" />
    <mutant id="mutant_816" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.WINDOWS_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="path == null" />
    <mutant id="mutant_817" viable="true" in="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="str1 == null" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()" from="(!(slashNSeen)) &amp;&amp; (!(slashRSeen))" to="!(slashRSeen)" />
    <mutant id="mutant_822" viable="false" in="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)" from="(offset &lt; size) &amp;&amp; ((readed = input.read(data, offset, (size - offset))) != (IOUtils.EOF))" to="false" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.io.input.BoundedReader.read()" from="((markedAt) &gt;= 0) &amp;&amp; (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" to="(markedAt) &gt;= 0" />
    <mutant id="mutant_824" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="(destDir.exists()) || ((destDir.isDirectory()) == false)" />
    <mutant id="mutant_825" viable="true" in="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" from="(directoryFilter == null) &amp;&amp; (fileFilter == null)" to="true" />
    <mutant id="mutant_820" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0)) || ((off + len) &gt; (b.length))" to="(off + len) &gt; (b.length)" />
    <mutant id="mutant_821" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(!appXml) &amp;&amp; (!textXml)" to="!appXml" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="lenient &amp;&amp; (xmlEnc != null)" to="xmlEnc != null" />
    <mutant id="mutant_827" viable="true" in="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" from="(conn instanceof java.net.HttpURLConnection) || (contentType != null)" to="true" />
    <mutant id="mutant_828" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null))" to="((line1 != null) || (line2 != null))" />
    <mutant id="mutant_829" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;)))" to="(mime.equals(&quot;application/xml-dtd&quot;))" />
    <mutant id="mutant_833" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((available()) &gt; 0)" to="(n &gt; 0) || ((available()) &gt; 0)" />
    <mutant id="mutant_834" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" from="(&quot;&quot;.equals(line)) &amp;&amp; (!(trailingNewlineOfFileSkipped))" to="true" />
    <mutant id="mutant_835" viable="true" in="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="true" />
    <mutant id="mutant_836" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) &amp;&amp; (wildcardMatcher == null)" to="true" />
    <mutant id="mutant_830" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(length &gt; 0) &amp;&amp; (length &lt; (buffer.length))" to="length &gt; 0" />
    <mutant id="mutant_831" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))" to="posWin == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_832" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="true" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="lenient &amp;&amp; (xmlEnc != null)" to="true" />
    <mutant id="mutant_838" viable="false" in="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" from="(file1.isDirectory()) || (file2.isDirectory())" to="(file1.isDirectory()) &amp;&amp; (file2.isDirectory())" />
    <mutant id="mutant_839" viable="true" in="org.apache.commons.io.input.BoundedReader.read()" from="((markedAt) &gt;= 0) &amp;&amp; (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" to="((markedAt) &gt;= 0) || (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" />
    <mutant id="mutant_602" viable="true" in="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" from="(httpContentType != null) &amp;&amp; (httpContentType.startsWith(&quot;text/html&quot;))" to="true" />
    <mutant id="mutant_844" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read()" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="(!(this.bbuf.hasRemaining())) || (!(this.cbuf.hasRemaining()))" />
    <mutant id="mutant_603" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(i &lt; n) &amp;&amp; ((url.charAt(i)) == '%')" to="(url.charAt(i)) == '%'" />
    <mutant id="mutant_845" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="true" />
    <mutant id="mutant_604" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(srcDir.exists()) &amp;&amp; ((srcDir.isDirectory()) == false)" to="false" />
    <mutant id="mutant_846" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(srcDir.exists()) &amp;&amp; ((srcDir.isDirectory()) == false)" to="true" />
    <mutant id="mutant_605" viable="true" in="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" from="(!(thresholdExceeded)) &amp;&amp; (((written) + count) &gt; (threshold))" to="!(thresholdExceeded)" />
    <mutant id="mutant_847" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" from="(length &gt; 0) &amp;&amp; (length &lt; (buffer.length))" to="(length &gt; 0) || (length &lt; (buffer.length))" />
    <mutant id="mutant_840" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" from="(&quot;&quot;.equals(line)) &amp;&amp; (!(trailingNewlineOfFileSkipped))" to="(&quot;&quot;.equals(line)) || (!(trailingNewlineOfFileSkipped))" />
    <mutant id="mutant_841" viable="false" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1))) &amp;&amp; (offset &lt; (XmlStreamReader.BUFFER_SIZE))" to="true" />
    <mutant id="mutant_600" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read()" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="!(encoderOut.hasRemaining())" />
    <mutant id="mutant_842" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(length &gt; 0) &amp;&amp; (length &lt; bufferLength)" to="length &gt; 0" />
    <mutant id="mutant_601" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) &amp;&amp; (wildcardMatcher == null)" to="false" />
    <mutant id="mutant_843" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(url != null) &amp;&amp; ((url.indexOf('%')) &gt;= 0)" to="url != null" />
    <mutant id="mutant_606" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="true" />
    <mutant id="mutant_848" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="((array[i]) == separator)" />
    <mutant id="mutant_607" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="((max) &gt;= 0) || ((pos) &gt;= (max))" />
    <mutant id="mutant_849" viable="false" in="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" from="(line != null) &amp;&amp; ((lines.size()) &lt; max)" to="true" />
    <mutant id="mutant_608" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="(xmlEnc != null) || (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" />
    <mutant id="mutant_609" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(!(parentFile.mkdirs())) &amp;&amp; (!(parentFile.isDirectory()))" to="(!(parentFile.mkdirs())) || (!(parentFile.isDirectory()))" />
    <mutant id="mutant_613" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(bomEnc)))" to="(xmlGuessEnc != null) || (!(xmlGuessEnc.equals(bomEnc)))" />
    <mutant id="mutant_855" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="(mime.startsWith(&quot;text/&quot;))" />
    <mutant id="mutant_614" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32))))" to="false" />
    <mutant id="mutant_856" viable="false" in="?" from="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) || ((osName.indexOf(&quot;aix&quot;)) != (-1))" to="(osName.indexOf(&quot;hp-ux&quot;)) != (-1)" />
    <mutant id="mutant_615" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(i &lt; n) &amp;&amp; ((url.charAt(i)) == '%')" to="i &lt; n" />
    <mutant id="mutant_857" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="((i == (prefix + 1)) &amp;&amp; ((array[(i - 2)]) == separator))" />
    <mutant id="mutant_616" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) &amp;&amp; (wildcardMatcher == null)" to="filename == null" />
    <mutant id="mutant_858" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) || (wildcardMatcher == null)" to="wildcardMatcher == null" />
    <mutant id="mutant_851" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND))) || (posUnix == 2)) || (posWin == 2)" to="false" />
    <mutant id="mutant_610" viable="false" in="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" from="(srcFiles != null) &amp;&amp; ((srcFiles.length) &gt; 0)" to="(srcFiles != null) || ((srcFiles.length) &gt; 0)" />
    <mutant id="mutant_852" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="false" />
    <mutant id="mutant_611" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="((((exists) != origExists) || ((lastModified) != origLastModified)) || ((directory) != origDirectory))" to="true" />
    <mutant id="mutant_853" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(len &lt; 0) || ((off + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_612" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="(len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)" to="true" />
    <mutant id="mutant_854" viable="true" in="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="(filter1 == null) &amp;&amp; (filter2 == null)" />
    <mutant id="mutant_617" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(mime != null) &amp;&amp; (((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_859" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ','))" to="(!(Character.isDigit(c)))" />
    <mutant id="mutant_618" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0))" to="((len &lt; 0) &amp;&amp; (off &lt; 0))" />
    <mutant id="mutant_619" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="(max) &gt;= 0" />
    <mutant id="mutant_850" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) &amp;&amp; (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" />
    <mutant id="mutant_624" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.'))" to="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) || ((array[(i - 2)]) == '.'))" />
    <mutant id="mutant_625" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" from="((tok.countTokens()) == 1) &amp;&amp; ((lines.size()) &gt;= 3)" to="(tok.countTokens()) == 1" />
    <mutant id="mutant_626" viable="false" in="?" from="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" to="((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) &amp;&amp; ((osName.indexOf(&quot;digital unix&quot;)) != (-1)))" />
    <mutant id="mutant_627" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="(mime.endsWith(&quot;+xml&quot;))" />
    <mutant id="mutant_620" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException))" to="(tag != null)" />
    <mutant id="mutant_862" viable="false" in="?" from="(((osName.indexOf(&quot;sun os&quot;)) != (-1)) || ((osName.indexOf(&quot;sunos&quot;)) != (-1)))" to="((osName.indexOf(&quot;sunos&quot;)) != (-1))" />
    <mutant id="mutant_621" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.'))" to="false" />
    <mutant id="mutant_863" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" from="(charset == (Charsets.UTF_16BE)) || (charset == (Charsets.UTF_16LE))" to="false" />
    <mutant id="mutant_622" viable="false" in="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" from="((byteOrderMark) != null) &amp;&amp; (getBOM().equals(bom))" to="((byteOrderMark) != null) || (getBOM().equals(bom))" />
    <mutant id="mutant_623" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(((exists) != origExists) || ((lastModified) != origLastModified))" to="false" />
    <mutant id="mutant_628" viable="true" in="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" from="(fileToDelete == null) || ((fileToDelete.exists()) == false)" to="(fileToDelete.exists()) == false" />
    <mutant id="mutant_629" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="true" />
    <mutant id="mutant_860" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="true" />
    <mutant id="mutant_861" viable="false" in="?" from="(((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_635" viable="false" in="?" from="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" to="true" />
    <mutant id="mutant_636" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" from="(!isLastFilePart) &amp;&amp; (i &lt; (avoidNewlineSplitBufferSize))" to="!isLastFilePart" />
    <mutant id="mutant_637" viable="true" in="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" from="(httpContentType != null) &amp;&amp; (httpContentType.startsWith(&quot;text/html&quot;))" to="httpContentType != null" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) &amp;&amp; (c != '.')" to="true" />
    <mutant id="mutant_631" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((available()) &gt; 0)" to="true" />
    <mutant id="mutant_632" viable="true" in="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)" from="(path == null) || ((path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND))" to="(path.indexOf(FilenameUtils.UNIX_SEPARATOR)) == (FilenameUtils.NOT_FOUND)" />
    <mutant id="mutant_633" viable="true" in="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="(str1 == null) &amp;&amp; (str2 == null)" />
    <mutant id="mutant_634" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="((len &lt; 0) || (off &lt; 0))" to="false" />
    <mutant id="mutant_639" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="((array[(i - 3)]) == separator)" />
    <mutant id="mutant_630" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile()))" to="false" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="true" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" from="((tok.countTokens()) == 1) &amp;&amp; ((lines.size()) &gt;= 3)" to="true" />
    <mutant id="mutant_405" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(endOfInput) &amp;&amp; (!(encoderOut.hasRemaining()))" to="true" />
    <mutant id="mutant_647" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 2)) || ((array[(i - 3)]) == separator))" to="((i == (prefix + 2)) &amp;&amp; ((array[(i - 3)]) == separator))" />
    <mutant id="mutant_406" viable="false" in="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" from="(!(destDir.exists())) &amp;&amp; createDestDir" to="false" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file2.exists())" to="file2.exists()" />
    <mutant id="mutant_407" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" from="(c &lt; (files.length)) &amp;&amp; ((comparator.compare(entry.getFile(), files[c])) == 0)" to="(c &lt; (files.length)) || ((comparator.compare(entry.getFile(), files[c])) == 0)" />
    <mutant id="mutant_649" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) || (filename2 == null)" to="filename2 == null" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.')) &amp;&amp; ((array[(i - 2)]) == '.'))" to="((array[(i - 2)]) == '.')" />
    <mutant id="mutant_642" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))" to="cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)" />
    <mutant id="mutant_401" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(!(parentFile.mkdirs())) &amp;&amp; (!(parentFile.isDirectory()))" to="true" />
    <mutant id="mutant_643" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')" to="(buf.charAt(k)) == '.'" />
    <mutant id="mutant_402" viable="false" in="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" from="(bytesToRead &gt; 0) &amp;&amp; ((IOUtils.EOF) != (read = input.read(buffer, 0, bytesToRead)))" to="true" />
    <mutant id="mutant_644" viable="true" in="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" from="(caseSensitivity == null) || (caseSensitivity.equals(IOCase.SYSTEM))" to="false" />
    <mutant id="mutant_403" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((available()) &gt; 0)" to="(available()) &gt; 0" />
    <mutant id="mutant_645" viable="true" in="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" from="(dir != null) &amp;&amp; (new File(dir , name).isDirectory())" to="new File(dir , name).isDirectory()" />
    <mutant id="mutant_408" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file2.exists())" to="true" />
    <mutant id="mutant_409" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;)))" to="((mime.startsWith(&quot;application/&quot;)) || (mime.endsWith(&quot;+xml&quot;)))" />
    <mutant id="mutant_640" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)" />
    <mutant id="mutant_641" viable="false" in="org.apache.commons.io.input.ReaderInputStream.fillBuffer()" from="(((lastCoderResult) == null) || (lastCoderResult.isUnderflow()))" to="false" />
    <mutant id="mutant_415" viable="false" in="org.apache.commons.io.input.BoundedInputStream.available()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="((max) &gt;= 0) || ((pos) &gt;= (max))" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)" from="(str1 == null) || (str2 == null)" to="str1 == null" />
    <mutant id="mutant_416" viable="true" in="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" from="(filter1 == null) || (filter2 == null)" to="false" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" from="((posUnix == (FilenameUtils.NOT_FOUND)) &amp;&amp; (posWin == (FilenameUtils.NOT_FOUND)))" to="true" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="(((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;))) &amp;&amp; ((mime.startsWith(&quot;text/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" />
    <mutant id="mutant_659" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="((text.indexOf('?')) == (FilenameUtils.NOT_FOUND)) &amp;&amp; ((text.indexOf('*')) == (FilenameUtils.NOT_FOUND))" to="true" />
    <mutant id="mutant_418" viable="false" in="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" from="((line1 != null) &amp;&amp; (line2 != null))" to="false" />
    <mutant id="mutant_411" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="(((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0))" to="false" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)" from="((tag != null) &amp;&amp; (throwable instanceof org.apache.commons.io.TaggedIOException)) &amp;&amp; (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag))" to="tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).tag)" />
    <mutant id="mutant_412" viable="true" in="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" from="((prefix &gt;= (filename.length())) || (index &lt; 0)) || (prefix &gt;= endIndex)" to="(prefix &gt;= (filename.length())) || (index &lt; 0)" />
    <mutant id="mutant_654" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.read()" from="previousWasSlashR &amp;&amp; (slashNSeen)" to="true" />
    <mutant id="mutant_413" viable="true" in="org.apache.commons.io.input.BoundedReader.read()" from="((markedAt) &gt;= 0) &amp;&amp; (((charsRead) - (markedAt)) &gt;= (readAheadLimit))" to="false" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" from="(extensions == null) || ((extensions.length) == 0)" to="(extensions.length) == 0" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="((xmlEnc != null) &amp;&amp; (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)))) &amp;&amp; (!(xmlEnc.equals(bomEnc)))" to="false" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" from="(index &lt; 0) || (index &gt;= (data.length))" to="(index &lt; 0) &amp;&amp; (index &gt;= (data.length))" />
    <mutant id="mutant_419" viable="true" in="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" from="(fileToDelete.exists()) &amp;&amp; ((doDelete(fileToDelete)) == false)" to="(doDelete(fileToDelete)) == false" />
    <mutant id="mutant_650" viable="false" in="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" from="(file1.isDirectory()) || (file2.isDirectory())" to="false" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="false" />
    <mutant id="mutant_410" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)" from="((mime.equals(&quot;text/xml&quot;)) || (mime.equals(&quot;text/xml-external-parsed-entity&quot;)))" to="true" />
    <mutant id="mutant_652" viable="false" in="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" from="(destFile.exists()) &amp;&amp; ((destFile.canWrite()) == false)" to="false" />
    <mutant id="mutant_426" viable="true" in="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" from="((file != null) &amp;&amp; (file.isFile()))" to="true" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" from="(&quot;&quot;.equals(line)) &amp;&amp; (!(trailingNewlineOfFileSkipped))" to="false" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(mime != null) &amp;&amp; ((((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;))) || ((mime.startsWith(&quot;application/&quot;)) &amp;&amp; (mime.endsWith(&quot;+xml&quot;))))" to="false" />
    <mutant id="mutant_669" viable="false" in="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" from="((((off &lt; 0) || (off &gt; (b.length))) || (len &lt; 0)) || ((off + len) &gt; (b.length)))" to="false" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" from="(filename1 == null) &amp;&amp; (filename2 == null)" to="true" />
    <mutant id="mutant_429" viable="true" in="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)" from="(((exists) != origExists) || ((lastModified) != origLastModified))" to="((lastModified) != origLastModified)" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(wcsIdx == (wcs.length)) &amp;&amp; (textIdx == (filename.length()))" to="wcsIdx == (wcs.length)" />
    <mutant id="mutant_664" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(charsetName == null) || (charsetName.isEmpty())" to="(charsetName == null) &amp;&amp; (charsetName.isEmpty())" />
    <mutant id="mutant_423" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(read == 0) &amp;&amp; (endOfInput)" to="true" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])" from="(charsetName == null) || (charsetName.isEmpty())" to="true" />
    <mutant id="mutant_424" viable="false" in="org.apache.commons.io.input.BoundedInputStream.read()" from="((max) &gt;= 0) &amp;&amp; ((pos) &gt;= (max))" to="((max) &gt;= 0) || ((pos) &gt;= (max))" />
    <mutant id="mutant_666" viable="false" in="?" from="(((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1)))" to="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" />
    <mutant id="mutant_425" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) &amp;&amp; (c != '.')" to="(!(Character.isDigit(c))) &amp;&amp; (c != ',')" />
    <mutant id="mutant_667" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" from="(!(this.bbuf.hasRemaining())) &amp;&amp; (!(this.cbuf.hasRemaining()))" to="false" />
    <mutant id="mutant_660" viable="true" in="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" from="(filename == null) || (wildcardMatcher == null)" to="(filename == null) &amp;&amp; (wildcardMatcher == null)" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)" from="((c != (-1)) &amp;&amp; (firstGT == (-1)))" to="(firstGT == (-1))" />
    <mutant id="mutant_420" viable="true" in="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" from="(&quot;&quot;.equals(line)) &amp;&amp; (!(trailingNewlineOfFileSkipped))" to="&quot;&quot;.equals(line)" />
    <mutant id="mutant_662" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" to="(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) &amp;&amp; (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="(((array[i]) == separator) &amp;&amp; ((array[(i - 1)]) == '.'))" to="((array[(i - 1)]) == '.')" />
    <mutant id="mutant_663" viable="false" in="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" from="(!(destDir.mkdirs())) &amp;&amp; (!(destDir.isDirectory()))" to="(!(destDir.mkdirs())) || (!(destDir.isDirectory()))" />
    <mutant id="mutant_437" viable="true" in="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" from="(extensions == null) || (extensions.isEmpty())" to="false" />
    <mutant id="mutant_679" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reOpen)" to="reOpen" />
    <mutant id="mutant_438" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" from="(xmlGuessEnc != null) &amp;&amp; (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" to="(xmlGuessEnc != null) || (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))" />
    <mutant id="mutant_439" viable="true" in="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" from="(bomEnc != null) &amp;&amp; (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" to="(bomEnc != null) || (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_16))" />
    <mutant id="mutant_433" viable="true" in="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" from="(sumDirectoryContents) &amp;&amp; (file2.exists())" to="false" />
    <mutant id="mutant_675" viable="false" in="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)" from="(i &lt; n) &amp;&amp; ((url.charAt(i)) == '%')" to="true" />
    <mutant id="mutant_434" viable="false" in="?" from="(((((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1))) || ((osName.indexOf(&quot;irix&quot;)) != (-1))) || ((osName.indexOf(&quot;digital unix&quot;)) != (-1))) || ((osName.indexOf(&quot;unix&quot;)) != (-1)))" to="((osName.indexOf(&quot;unix&quot;)) != (-1))" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.io.FilenameUtils.isSeparator(char)" from="(ch == (FilenameUtils.UNIX_SEPARATOR)) || (ch == (FilenameUtils.WINDOWS_SEPARATOR))" to="(ch == (FilenameUtils.UNIX_SEPARATOR)) &amp;&amp; (ch == (FilenameUtils.WINDOWS_SEPARATOR))" />
    <mutant id="mutant_435" viable="false" in="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" from="(read == 0) &amp;&amp; (endOfInput)" to="endOfInput" />
    <mutant id="mutant_677" viable="true" in="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" from="((!(Character.isDigit(c))) &amp;&amp; (c != ',')) &amp;&amp; (c != '.')" to="c != '.'" />
    <mutant id="mutant_436" viable="false" in="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" from="(destDir.exists()) &amp;&amp; ((destDir.isDirectory()) == false)" to="true" />
    <mutant id="mutant_678" viable="false" in="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" from="(n &gt; 0) &amp;&amp; ((available()) &gt; 0)" to="n &gt; 0" />
    <mutant id="mutant_671" viable="false" in="org.apache.commons.io.input.Tailer.run()" from="(getRun()) &amp;&amp; (reader == null)" to="(getRun()) || (reader == null)" />
    <mutant id="mutant_430" viable="true" in="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)" from="(ch == '?') || (ch == '*')" to="(ch == '?') &amp;&amp; (ch == '*')" />
    <mutant id="mutant_672" viable="false" in="?" from="((((osName.indexOf(&quot;linux&quot;)) != (-1)) || ((osName.indexOf(&quot;mpe/ix&quot;)) != (-1))) || ((osName.indexOf(&quot;freebsd&quot;)) != (-1)))" to="false" />
    <mutant id="mutant_431" viable="true" in="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)" from="previousWasSlashR || (!(ensureLineFeedAtEndOfFile))" to="previousWasSlashR &amp;&amp; (!(ensureLineFeedAtEndOfFile))" />
    <mutant id="mutant_673" viable="false" in="?" from="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) || ((osName.indexOf(&quot;aix&quot;)) != (-1))" to="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) &amp;&amp; ((osName.indexOf(&quot;aix&quot;)) != (-1))" />
    <mutant id="mutant_432" viable="true" in="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)" from="(((mime.equals(&quot;application/xml&quot;)) || (mime.equals(&quot;application/xml-dtd&quot;))) || (mime.equals(&quot;application/xml-external-parsed-entity&quot;)))" to="false" />
    <mutant id="mutant_674" viable="false" in="?" from="((osName.indexOf(&quot;hp-ux&quot;)) != (-1)) || ((osName.indexOf(&quot;aix&quot;)) != (-1))" to="(osName.indexOf(&quot;aix&quot;)) != (-1)" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" from="((i == (prefix + 1)) || ((array[(i - 2)]) == separator))" to="true" />
  </mutants>
</mutation>
